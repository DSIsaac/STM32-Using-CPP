
STM32 Using CPP.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00012e3c  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000016b4  08012fd0  08012fd0  00022fd0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    000000f0  08014684  08014684  00024684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          00000190  08014774  08014774  00024774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08014904  08014904  000309c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   0000000c  08014904  08014904  00024904  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08014910  08014910  00024910  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000009c0  20000000  08014914  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000309c0  2**0
                  CONTENTS
 10 .bss          000002d4  200009c0  200009c0  000309c0  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000c94  20000c94  000309c0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000309c0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00016ae7  00000000  00000000  000309f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000324e  00000000  00000000  000474d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000eb0  00000000  00000000  0004a728  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000d98  00000000  00000000  0004b5d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000255da  00000000  00000000  0004c370  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001328e  00000000  00000000  0007194a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d0086  00000000  00000000  00084bd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  00154c5e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000064d8  00000000  00000000  00154cb4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200009c0 	.word	0x200009c0
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08012fb4 	.word	0x08012fb4

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200009c4 	.word	0x200009c4
 80001cc:	08012fb4 	.word	0x08012fb4

080001d0 <d_make_comp>:
 80001d0:	b4f0      	push	{r4, r5, r6, r7}
 80001d2:	1e4c      	subs	r4, r1, #1
 80001d4:	2c4f      	cmp	r4, #79	; 0x4f
 80001d6:	d841      	bhi.n	800025c <d_make_comp+0x8c>
 80001d8:	e8df f004 	tbb	[pc, r4]
 80001dc:	28282828 	.word	0x28282828
 80001e0:	40404040 	.word	0x40404040
 80001e4:	3e283e3e 	.word	0x3e283e3e
 80001e8:	3e3e3e3e 	.word	0x3e3e3e3e
 80001ec:	3e3e3e3e 	.word	0x3e3e3e3e
 80001f0:	403e3e3e 	.word	0x403e3e3e
 80001f4:	2a2a2a2a 	.word	0x2a2a2a2a
 80001f8:	2a2a2a2a 	.word	0x2a2a2a2a
 80001fc:	3e3e3e28 	.word	0x3e3e3e28
 8000200:	3e403e3e 	.word	0x3e403e3e
 8000204:	4028292a 	.word	0x4028292a
 8000208:	3e2a2a28 	.word	0x3e2a2a28
 800020c:	3e404029 	.word	0x3e404029
 8000210:	28283e3e 	.word	0x28283e3e
 8000214:	3e282828 	.word	0x3e282828
 8000218:	283e2828 	.word	0x283e2828
 800021c:	3e3e4040 	.word	0x3e3e4040
 8000220:	4040403e 	.word	0x4040403e
 8000224:	283e3e3e 	.word	0x283e3e3e
 8000228:	2a2a282a 	.word	0x2a2a282a
 800022c:	b1b2      	cbz	r2, 800025c <d_make_comp+0x8c>
 800022e:	b1ab      	cbz	r3, 800025c <d_make_comp+0x8c>
 8000230:	e9d0 4505 	ldrd	r4, r5, [r0, #20]
 8000234:	42ac      	cmp	r4, r5
 8000236:	da11      	bge.n	800025c <d_make_comp+0x8c>
 8000238:	6906      	ldr	r6, [r0, #16]
 800023a:	0127      	lsls	r7, r4, #4
 800023c:	eb06 1504 	add.w	r5, r6, r4, lsl #4
 8000240:	f04f 0c00 	mov.w	ip, #0
 8000244:	3401      	adds	r4, #1
 8000246:	f8c5 c004 	str.w	ip, [r5, #4]
 800024a:	6144      	str	r4, [r0, #20]
 800024c:	55f1      	strb	r1, [r6, r7]
 800024e:	4628      	mov	r0, r5
 8000250:	e9c5 2302 	strd	r2, r3, [r5, #8]
 8000254:	bcf0      	pop	{r4, r5, r6, r7}
 8000256:	4770      	bx	lr
 8000258:	2a00      	cmp	r2, #0
 800025a:	d1e9      	bne.n	8000230 <d_make_comp+0x60>
 800025c:	2500      	movs	r5, #0
 800025e:	4628      	mov	r0, r5
 8000260:	bcf0      	pop	{r4, r5, r6, r7}
 8000262:	4770      	bx	lr

08000264 <d_ref_qualifier>:
 8000264:	b410      	push	{r4}
 8000266:	68c3      	ldr	r3, [r0, #12]
 8000268:	781c      	ldrb	r4, [r3, #0]
 800026a:	2c52      	cmp	r4, #82	; 0x52
 800026c:	460a      	mov	r2, r1
 800026e:	d00f      	beq.n	8000290 <d_ref_qualifier+0x2c>
 8000270:	2c4f      	cmp	r4, #79	; 0x4f
 8000272:	d003      	beq.n	800027c <d_ref_qualifier+0x18>
 8000274:	4608      	mov	r0, r1
 8000276:	f85d 4b04 	ldr.w	r4, [sp], #4
 800027a:	4770      	bx	lr
 800027c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800027e:	3103      	adds	r1, #3
 8000280:	62c1      	str	r1, [r0, #44]	; 0x2c
 8000282:	2120      	movs	r1, #32
 8000284:	3301      	adds	r3, #1
 8000286:	60c3      	str	r3, [r0, #12]
 8000288:	f85d 4b04 	ldr.w	r4, [sp], #4
 800028c:	2300      	movs	r3, #0
 800028e:	e79f      	b.n	80001d0 <d_make_comp>
 8000290:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8000292:	3102      	adds	r1, #2
 8000294:	62c1      	str	r1, [r0, #44]	; 0x2c
 8000296:	211f      	movs	r1, #31
 8000298:	e7f4      	b.n	8000284 <d_ref_qualifier+0x20>
 800029a:	bf00      	nop

0800029c <d_count_templates_scopes>:
 800029c:	2900      	cmp	r1, #0
 800029e:	d063      	beq.n	8000368 <d_count_templates_scopes+0xcc>
 80002a0:	b538      	push	{r3, r4, r5, lr}
 80002a2:	4605      	mov	r5, r0
 80002a4:	460c      	mov	r4, r1
 80002a6:	7823      	ldrb	r3, [r4, #0]
 80002a8:	3b01      	subs	r3, #1
 80002aa:	2b4f      	cmp	r3, #79	; 0x4f
 80002ac:	d837      	bhi.n	800031e <d_count_templates_scopes+0x82>
 80002ae:	e8df f003 	tbb	[pc, r3]
 80002b2:	3131      	.short	0x3131
 80002b4:	36365031 	.word	0x36365031
 80002b8:	31313b3b 	.word	0x31313b3b
 80002bc:	31313131 	.word	0x31313131
 80002c0:	31313131 	.word	0x31313131
 80002c4:	31313131 	.word	0x31313131
 80002c8:	31313631 	.word	0x31313631
 80002cc:	31313131 	.word	0x31313131
 80002d0:	31313131 	.word	0x31313131
 80002d4:	31312828 	.word	0x31312828
 80002d8:	31313136 	.word	0x31313136
 80002dc:	31313731 	.word	0x31313731
 80002e0:	36313131 	.word	0x36313131
 80002e4:	3131313b 	.word	0x3131313b
 80002e8:	31313131 	.word	0x31313131
 80002ec:	31313131 	.word	0x31313131
 80002f0:	36363131 	.word	0x36363131
 80002f4:	37373731 	.word	0x37373731
 80002f8:	31313637 	.word	0x31313637
 80002fc:	31313131 	.word	0x31313131
 8000300:	3131      	.short	0x3131
 8000302:	68a3      	ldr	r3, [r4, #8]
 8000304:	781b      	ldrb	r3, [r3, #0]
 8000306:	2b05      	cmp	r3, #5
 8000308:	d104      	bne.n	8000314 <d_count_templates_scopes+0x78>
 800030a:	f8d5 3138 	ldr.w	r3, [r5, #312]	; 0x138
 800030e:	3301      	adds	r3, #1
 8000310:	f8c5 3138 	str.w	r3, [r5, #312]	; 0x138
 8000314:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
 8000318:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800031c:	dd08      	ble.n	8000330 <d_count_templates_scopes+0x94>
 800031e:	bd38      	pop	{r3, r4, r5, pc}
 8000320:	68a4      	ldr	r4, [r4, #8]
 8000322:	2c00      	cmp	r4, #0
 8000324:	d1bf      	bne.n	80002a6 <d_count_templates_scopes+0xa>
 8000326:	bd38      	pop	{r3, r4, r5, pc}
 8000328:	68e4      	ldr	r4, [r4, #12]
 800032a:	2c00      	cmp	r4, #0
 800032c:	d1bb      	bne.n	80002a6 <d_count_templates_scopes+0xa>
 800032e:	e7fa      	b.n	8000326 <d_count_templates_scopes+0x8a>
 8000330:	3301      	adds	r3, #1
 8000332:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
 8000336:	68a1      	ldr	r1, [r4, #8]
 8000338:	4628      	mov	r0, r5
 800033a:	f7ff ffaf 	bl	800029c <d_count_templates_scopes>
 800033e:	68e1      	ldr	r1, [r4, #12]
 8000340:	4628      	mov	r0, r5
 8000342:	f7ff ffab 	bl	800029c <d_count_templates_scopes>
 8000346:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
 800034a:	3b01      	subs	r3, #1
 800034c:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
 8000350:	bd38      	pop	{r3, r4, r5, pc}
 8000352:	f8d5 3144 	ldr.w	r3, [r5, #324]	; 0x144
 8000356:	3301      	adds	r3, #1
 8000358:	f8c5 3144 	str.w	r3, [r5, #324]	; 0x144
 800035c:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
 8000360:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8000364:	dcdb      	bgt.n	800031e <d_count_templates_scopes+0x82>
 8000366:	e7e3      	b.n	8000330 <d_count_templates_scopes+0x94>
 8000368:	4770      	bx	lr
 800036a:	bf00      	nop

0800036c <d_append_buffer>:
 800036c:	b37a      	cbz	r2, 80003ce <d_append_buffer+0x62>
 800036e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000372:	440a      	add	r2, r1
 8000374:	460d      	mov	r5, r1
 8000376:	4604      	mov	r4, r0
 8000378:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800037c:	1e57      	subs	r7, r2, #1
 800037e:	3d01      	subs	r5, #1
 8000380:	f04f 0800 	mov.w	r8, #0
 8000384:	e009      	b.n	800039a <d_append_buffer+0x2e>
 8000386:	460b      	mov	r3, r1
 8000388:	42bd      	cmp	r5, r7
 800038a:	f101 0101 	add.w	r1, r1, #1
 800038e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000392:	54e6      	strb	r6, [r4, r3]
 8000394:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8000398:	d017      	beq.n	80003ca <d_append_buffer+0x5e>
 800039a:	29ff      	cmp	r1, #255	; 0xff
 800039c:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 80003a0:	d1f1      	bne.n	8000386 <d_append_buffer+0x1a>
 80003a2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80003a6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80003aa:	4620      	mov	r0, r4
 80003ac:	4798      	blx	r3
 80003ae:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80003b2:	3301      	adds	r3, #1
 80003b4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80003b8:	2300      	movs	r3, #0
 80003ba:	2101      	movs	r1, #1
 80003bc:	42bd      	cmp	r5, r7
 80003be:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80003c2:	54e6      	strb	r6, [r4, r3]
 80003c4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80003c8:	d1e7      	bne.n	800039a <d_append_buffer+0x2e>
 80003ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80003ce:	4770      	bx	lr

080003d0 <d_number.isra.0>:
 80003d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80003d4:	6802      	ldr	r2, [r0, #0]
 80003d6:	7815      	ldrb	r5, [r2, #0]
 80003d8:	2d6e      	cmp	r5, #110	; 0x6e
 80003da:	4607      	mov	r7, r0
 80003dc:	d02c      	beq.n	8000438 <d_number.isra.0+0x68>
 80003de:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 80003e2:	2b09      	cmp	r3, #9
 80003e4:	d833      	bhi.n	800044e <d_number.isra.0+0x7e>
 80003e6:	f04f 0e00 	mov.w	lr, #0
 80003ea:	f8df c068 	ldr.w	ip, [pc, #104]	; 8000454 <d_number.isra.0+0x84>
 80003ee:	2000      	movs	r0, #0
 80003f0:	f06f 4800 	mvn.w	r8, #2147483648	; 0x80000000
 80003f4:	e002      	b.n	80003fc <d_number.isra.0+0x2c>
 80003f6:	ebb0 0fd1 	cmp.w	r0, r1, lsr #3
 80003fa:	dc19      	bgt.n	8000430 <d_number.isra.0+0x60>
 80003fc:	3201      	adds	r2, #1
 80003fe:	603a      	str	r2, [r7, #0]
 8000400:	7814      	ldrb	r4, [r2, #0]
 8000402:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8000406:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800040a:	eba8 0103 	sub.w	r1, r8, r3
 800040e:	b2db      	uxtb	r3, r3
 8000410:	eb05 0640 	add.w	r6, r5, r0, lsl #1
 8000414:	2b09      	cmp	r3, #9
 8000416:	fbac 0101 	umull	r0, r1, ip, r1
 800041a:	4625      	mov	r5, r4
 800041c:	f1a6 0030 	sub.w	r0, r6, #48	; 0x30
 8000420:	d9e9      	bls.n	80003f6 <d_number.isra.0+0x26>
 8000422:	f1be 0f00 	cmp.w	lr, #0
 8000426:	d001      	beq.n	800042c <d_number.isra.0+0x5c>
 8000428:	f1c6 0030 	rsb	r0, r6, #48	; 0x30
 800042c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000430:	f04f 30ff 	mov.w	r0, #4294967295
 8000434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000438:	1c53      	adds	r3, r2, #1
 800043a:	6003      	str	r3, [r0, #0]
 800043c:	7855      	ldrb	r5, [r2, #1]
 800043e:	f1a5 0230 	sub.w	r2, r5, #48	; 0x30
 8000442:	2a09      	cmp	r2, #9
 8000444:	d803      	bhi.n	800044e <d_number.isra.0+0x7e>
 8000446:	461a      	mov	r2, r3
 8000448:	f04f 0e01 	mov.w	lr, #1
 800044c:	e7cd      	b.n	80003ea <d_number.isra.0+0x1a>
 800044e:	2000      	movs	r0, #0
 8000450:	e7ec      	b.n	800042c <d_number.isra.0+0x5c>
 8000452:	bf00      	nop
 8000454:	cccccccd 	.word	0xcccccccd

08000458 <d_number_component>:
 8000458:	b538      	push	{r3, r4, r5, lr}
 800045a:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 800045e:	4293      	cmp	r3, r2
 8000460:	da0f      	bge.n	8000482 <d_number_component+0x2a>
 8000462:	6902      	ldr	r2, [r0, #16]
 8000464:	eb02 1403 	add.w	r4, r2, r3, lsl #4
 8000468:	0119      	lsls	r1, r3, #4
 800046a:	2500      	movs	r5, #0
 800046c:	6065      	str	r5, [r4, #4]
 800046e:	3301      	adds	r3, #1
 8000470:	2542      	movs	r5, #66	; 0x42
 8000472:	6143      	str	r3, [r0, #20]
 8000474:	5455      	strb	r5, [r2, r1]
 8000476:	300c      	adds	r0, #12
 8000478:	f7ff ffaa 	bl	80003d0 <d_number.isra.0>
 800047c:	60a0      	str	r0, [r4, #8]
 800047e:	4620      	mov	r0, r4
 8000480:	bd38      	pop	{r3, r4, r5, pc}
 8000482:	2400      	movs	r4, #0
 8000484:	4620      	mov	r0, r4
 8000486:	bd38      	pop	{r3, r4, r5, pc}

08000488 <d_compact_number>:
 8000488:	b510      	push	{r4, lr}
 800048a:	68c3      	ldr	r3, [r0, #12]
 800048c:	781a      	ldrb	r2, [r3, #0]
 800048e:	2a5f      	cmp	r2, #95	; 0x5f
 8000490:	4604      	mov	r4, r0
 8000492:	d00d      	beq.n	80004b0 <d_compact_number+0x28>
 8000494:	2a6e      	cmp	r2, #110	; 0x6e
 8000496:	d00d      	beq.n	80004b4 <d_compact_number+0x2c>
 8000498:	300c      	adds	r0, #12
 800049a:	f7ff ff99 	bl	80003d0 <d_number.isra.0>
 800049e:	3001      	adds	r0, #1
 80004a0:	d408      	bmi.n	80004b4 <d_compact_number+0x2c>
 80004a2:	68e3      	ldr	r3, [r4, #12]
 80004a4:	781a      	ldrb	r2, [r3, #0]
 80004a6:	2a5f      	cmp	r2, #95	; 0x5f
 80004a8:	d104      	bne.n	80004b4 <d_compact_number+0x2c>
 80004aa:	3301      	adds	r3, #1
 80004ac:	60e3      	str	r3, [r4, #12]
 80004ae:	bd10      	pop	{r4, pc}
 80004b0:	2000      	movs	r0, #0
 80004b2:	e7fa      	b.n	80004aa <d_compact_number+0x22>
 80004b4:	f04f 30ff 	mov.w	r0, #4294967295
 80004b8:	bd10      	pop	{r4, pc}
 80004ba:	bf00      	nop

080004bc <d_template_param>:
 80004bc:	68c3      	ldr	r3, [r0, #12]
 80004be:	781a      	ldrb	r2, [r3, #0]
 80004c0:	2a54      	cmp	r2, #84	; 0x54
 80004c2:	d119      	bne.n	80004f8 <d_template_param+0x3c>
 80004c4:	3301      	adds	r3, #1
 80004c6:	b570      	push	{r4, r5, r6, lr}
 80004c8:	60c3      	str	r3, [r0, #12]
 80004ca:	4604      	mov	r4, r0
 80004cc:	f7ff ffdc 	bl	8000488 <d_compact_number>
 80004d0:	1e02      	subs	r2, r0, #0
 80004d2:	db0f      	blt.n	80004f4 <d_template_param+0x38>
 80004d4:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 80004d8:	428b      	cmp	r3, r1
 80004da:	da0b      	bge.n	80004f4 <d_template_param+0x38>
 80004dc:	6921      	ldr	r1, [r4, #16]
 80004de:	eb01 1003 	add.w	r0, r1, r3, lsl #4
 80004e2:	011d      	lsls	r5, r3, #4
 80004e4:	2600      	movs	r6, #0
 80004e6:	6046      	str	r6, [r0, #4]
 80004e8:	3301      	adds	r3, #1
 80004ea:	2605      	movs	r6, #5
 80004ec:	6163      	str	r3, [r4, #20]
 80004ee:	554e      	strb	r6, [r1, r5]
 80004f0:	6082      	str	r2, [r0, #8]
 80004f2:	bd70      	pop	{r4, r5, r6, pc}
 80004f4:	2000      	movs	r0, #0
 80004f6:	bd70      	pop	{r4, r5, r6, pc}
 80004f8:	2000      	movs	r0, #0
 80004fa:	4770      	bx	lr

080004fc <d_source_name>:
 80004fc:	b570      	push	{r4, r5, r6, lr}
 80004fe:	4604      	mov	r4, r0
 8000500:	300c      	adds	r0, #12
 8000502:	f7ff ff65 	bl	80003d0 <d_number.isra.0>
 8000506:	1e05      	subs	r5, r0, #0
 8000508:	dd3e      	ble.n	8000588 <d_source_name+0x8c>
 800050a:	68e6      	ldr	r6, [r4, #12]
 800050c:	6863      	ldr	r3, [r4, #4]
 800050e:	1b9b      	subs	r3, r3, r6
 8000510:	429d      	cmp	r5, r3
 8000512:	dc37      	bgt.n	8000584 <d_source_name+0x88>
 8000514:	68a2      	ldr	r2, [r4, #8]
 8000516:	1973      	adds	r3, r6, r5
 8000518:	0752      	lsls	r2, r2, #29
 800051a:	60e3      	str	r3, [r4, #12]
 800051c:	d504      	bpl.n	8000528 <d_source_name+0x2c>
 800051e:	5d72      	ldrb	r2, [r6, r5]
 8000520:	2a24      	cmp	r2, #36	; 0x24
 8000522:	bf04      	itt	eq
 8000524:	3301      	addeq	r3, #1
 8000526:	60e3      	streq	r3, [r4, #12]
 8000528:	2d09      	cmp	r5, #9
 800052a:	dc12      	bgt.n	8000552 <d_source_name+0x56>
 800052c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000530:	4293      	cmp	r3, r2
 8000532:	da27      	bge.n	8000584 <d_source_name+0x88>
 8000534:	6920      	ldr	r0, [r4, #16]
 8000536:	eb00 1003 	add.w	r0, r0, r3, lsl #4
 800053a:	2200      	movs	r2, #0
 800053c:	3301      	adds	r3, #1
 800053e:	6042      	str	r2, [r0, #4]
 8000540:	6163      	str	r3, [r4, #20]
 8000542:	b1fe      	cbz	r6, 8000584 <d_source_name+0x88>
 8000544:	e9c0 6502 	strd	r6, r5, [r0, #8]
 8000548:	2300      	movs	r3, #0
 800054a:	6043      	str	r3, [r0, #4]
 800054c:	7003      	strb	r3, [r0, #0]
 800054e:	62a0      	str	r0, [r4, #40]	; 0x28
 8000550:	bd70      	pop	{r4, r5, r6, pc}
 8000552:	491b      	ldr	r1, [pc, #108]	; (80005c0 <d_source_name+0xc4>)
 8000554:	2208      	movs	r2, #8
 8000556:	4630      	mov	r0, r6
 8000558:	f00e fb60 	bl	800ec1c <memcmp>
 800055c:	b930      	cbnz	r0, 800056c <d_source_name+0x70>
 800055e:	7a33      	ldrb	r3, [r6, #8]
 8000560:	2b2e      	cmp	r3, #46	; 0x2e
 8000562:	d013      	beq.n	800058c <d_source_name+0x90>
 8000564:	2b5f      	cmp	r3, #95	; 0x5f
 8000566:	d011      	beq.n	800058c <d_source_name+0x90>
 8000568:	2b24      	cmp	r3, #36	; 0x24
 800056a:	d00f      	beq.n	800058c <d_source_name+0x90>
 800056c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000570:	429a      	cmp	r2, r3
 8000572:	dd07      	ble.n	8000584 <d_source_name+0x88>
 8000574:	6920      	ldr	r0, [r4, #16]
 8000576:	eb00 1003 	add.w	r0, r0, r3, lsl #4
 800057a:	2200      	movs	r2, #0
 800057c:	3301      	adds	r3, #1
 800057e:	6042      	str	r2, [r0, #4]
 8000580:	6163      	str	r3, [r4, #20]
 8000582:	e7df      	b.n	8000544 <d_source_name+0x48>
 8000584:	2000      	movs	r0, #0
 8000586:	e7e2      	b.n	800054e <d_source_name+0x52>
 8000588:	2000      	movs	r0, #0
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	7a73      	ldrb	r3, [r6, #9]
 800058e:	2b4e      	cmp	r3, #78	; 0x4e
 8000590:	d1ec      	bne.n	800056c <d_source_name+0x70>
 8000592:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8000594:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8000598:	3216      	adds	r2, #22
 800059a:	1b55      	subs	r5, r2, r5
 800059c:	428b      	cmp	r3, r1
 800059e:	62e5      	str	r5, [r4, #44]	; 0x2c
 80005a0:	daf0      	bge.n	8000584 <d_source_name+0x88>
 80005a2:	6922      	ldr	r2, [r4, #16]
 80005a4:	4d07      	ldr	r5, [pc, #28]	; (80005c4 <d_source_name+0xc8>)
 80005a6:	eb02 1003 	add.w	r0, r2, r3, lsl #4
 80005aa:	1c59      	adds	r1, r3, #1
 80005ac:	011b      	lsls	r3, r3, #4
 80005ae:	6161      	str	r1, [r4, #20]
 80005b0:	2100      	movs	r1, #0
 80005b2:	6041      	str	r1, [r0, #4]
 80005b4:	54d1      	strb	r1, [r2, r3]
 80005b6:	2315      	movs	r3, #21
 80005b8:	e9c0 5302 	strd	r5, r3, [r0, #8]
 80005bc:	e7c7      	b.n	800054e <d_source_name+0x52>
 80005be:	bf00      	nop
 80005c0:	08013a5c 	.word	0x08013a5c
 80005c4:	08013a68 	.word	0x08013a68

080005c8 <d_abi_tags>:
 80005c8:	b530      	push	{r4, r5, lr}
 80005ca:	68c3      	ldr	r3, [r0, #12]
 80005cc:	6a85      	ldr	r5, [r0, #40]	; 0x28
 80005ce:	4604      	mov	r4, r0
 80005d0:	7818      	ldrb	r0, [r3, #0]
 80005d2:	2842      	cmp	r0, #66	; 0x42
 80005d4:	b083      	sub	sp, #12
 80005d6:	460a      	mov	r2, r1
 80005d8:	d110      	bne.n	80005fc <d_abi_tags+0x34>
 80005da:	3301      	adds	r3, #1
 80005dc:	60e3      	str	r3, [r4, #12]
 80005de:	4620      	mov	r0, r4
 80005e0:	9201      	str	r2, [sp, #4]
 80005e2:	f7ff ff8b 	bl	80004fc <d_source_name>
 80005e6:	9a01      	ldr	r2, [sp, #4]
 80005e8:	4603      	mov	r3, r0
 80005ea:	214c      	movs	r1, #76	; 0x4c
 80005ec:	4620      	mov	r0, r4
 80005ee:	f7ff fdef 	bl	80001d0 <d_make_comp>
 80005f2:	68e3      	ldr	r3, [r4, #12]
 80005f4:	7819      	ldrb	r1, [r3, #0]
 80005f6:	2942      	cmp	r1, #66	; 0x42
 80005f8:	4602      	mov	r2, r0
 80005fa:	d0ee      	beq.n	80005da <d_abi_tags+0x12>
 80005fc:	4610      	mov	r0, r2
 80005fe:	62a5      	str	r5, [r4, #40]	; 0x28
 8000600:	b003      	add	sp, #12
 8000602:	bd30      	pop	{r4, r5, pc}

08000604 <d_substitution>:
 8000604:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000608:	68c3      	ldr	r3, [r0, #12]
 800060a:	781a      	ldrb	r2, [r3, #0]
 800060c:	2a53      	cmp	r2, #83	; 0x53
 800060e:	d130      	bne.n	8000672 <d_substitution+0x6e>
 8000610:	1c5a      	adds	r2, r3, #1
 8000612:	60c2      	str	r2, [r0, #12]
 8000614:	785a      	ldrb	r2, [r3, #1]
 8000616:	4604      	mov	r4, r0
 8000618:	b392      	cbz	r2, 8000680 <d_substitution+0x7c>
 800061a:	1c9a      	adds	r2, r3, #2
 800061c:	60c2      	str	r2, [r0, #12]
 800061e:	785a      	ldrb	r2, [r3, #1]
 8000620:	2a5f      	cmp	r2, #95	; 0x5f
 8000622:	d042      	beq.n	80006aa <d_substitution+0xa6>
 8000624:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8000628:	b2c3      	uxtb	r3, r0
 800062a:	2b09      	cmp	r3, #9
 800062c:	d824      	bhi.n	8000678 <d_substitution+0x74>
 800062e:	2100      	movs	r1, #0
 8000630:	e00d      	b.n	800064e <d_substitution+0x4a>
 8000632:	3b30      	subs	r3, #48	; 0x30
 8000634:	4299      	cmp	r1, r3
 8000636:	d81c      	bhi.n	8000672 <d_substitution+0x6e>
 8000638:	68e1      	ldr	r1, [r4, #12]
 800063a:	780a      	ldrb	r2, [r1, #0]
 800063c:	1c48      	adds	r0, r1, #1
 800063e:	b11a      	cbz	r2, 8000648 <d_substitution+0x44>
 8000640:	60e0      	str	r0, [r4, #12]
 8000642:	780a      	ldrb	r2, [r1, #0]
 8000644:	2a5f      	cmp	r2, #95	; 0x5f
 8000646:	d039      	beq.n	80006bc <d_substitution+0xb8>
 8000648:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 800064c:	4619      	mov	r1, r3
 800064e:	b2c0      	uxtb	r0, r0
 8000650:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8000654:	2809      	cmp	r0, #9
 8000656:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800065a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800065e:	d9e8      	bls.n	8000632 <d_substitution+0x2e>
 8000660:	2d19      	cmp	r5, #25
 8000662:	d806      	bhi.n	8000672 <d_substitution+0x6e>
 8000664:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8000668:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800066c:	3b37      	subs	r3, #55	; 0x37
 800066e:	4299      	cmp	r1, r3
 8000670:	d9e2      	bls.n	8000638 <d_substitution+0x34>
 8000672:	2000      	movs	r0, #0
 8000674:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000678:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800067c:	2b19      	cmp	r3, #25
 800067e:	d9d6      	bls.n	800062e <d_substitution+0x2a>
 8000680:	68a3      	ldr	r3, [r4, #8]
 8000682:	f003 0308 	and.w	r3, r3, #8
 8000686:	2b00      	cmp	r3, #0
 8000688:	bf14      	ite	ne
 800068a:	2501      	movne	r5, #1
 800068c:	2500      	moveq	r5, #0
 800068e:	d100      	bne.n	8000692 <d_substitution+0x8e>
 8000690:	b9b1      	cbnz	r1, 80006c0 <d_substitution+0xbc>
 8000692:	4b35      	ldr	r3, [pc, #212]	; (8000768 <d_substitution+0x164>)
 8000694:	2174      	movs	r1, #116	; 0x74
 8000696:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 800069a:	e001      	b.n	80006a0 <d_substitution+0x9c>
 800069c:	f813 1f1c 	ldrb.w	r1, [r3, #28]!
 80006a0:	4291      	cmp	r1, r2
 80006a2:	d014      	beq.n	80006ce <d_substitution+0xca>
 80006a4:	4283      	cmp	r3, r0
 80006a6:	d1f9      	bne.n	800069c <d_substitution+0x98>
 80006a8:	e7e3      	b.n	8000672 <d_substitution+0x6e>
 80006aa:	2300      	movs	r3, #0
 80006ac:	6a22      	ldr	r2, [r4, #32]
 80006ae:	429a      	cmp	r2, r3
 80006b0:	d9df      	bls.n	8000672 <d_substitution+0x6e>
 80006b2:	69e2      	ldr	r2, [r4, #28]
 80006b4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80006b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006bc:	3301      	adds	r3, #1
 80006be:	e7f5      	b.n	80006ac <d_substitution+0xa8>
 80006c0:	68e3      	ldr	r3, [r4, #12]
 80006c2:	781b      	ldrb	r3, [r3, #0]
 80006c4:	3b43      	subs	r3, #67	; 0x43
 80006c6:	2b01      	cmp	r3, #1
 80006c8:	bf98      	it	ls
 80006ca:	460d      	movls	r5, r1
 80006cc:	e7e1      	b.n	8000692 <d_substitution+0x8e>
 80006ce:	695e      	ldr	r6, [r3, #20]
 80006d0:	2e00      	cmp	r6, #0
 80006d2:	d042      	beq.n	800075a <d_substitution+0x156>
 80006d4:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
 80006d8:	4282      	cmp	r2, r0
 80006da:	f8d3 c018 	ldr.w	ip, [r3, #24]
 80006de:	da41      	bge.n	8000764 <d_substitution+0x160>
 80006e0:	6927      	ldr	r7, [r4, #16]
 80006e2:	ea4f 1e02 	mov.w	lr, r2, lsl #4
 80006e6:	eb07 1102 	add.w	r1, r7, r2, lsl #4
 80006ea:	f04f 0900 	mov.w	r9, #0
 80006ee:	3201      	adds	r2, #1
 80006f0:	f04f 0818 	mov.w	r8, #24
 80006f4:	f8c1 9004 	str.w	r9, [r1, #4]
 80006f8:	6162      	str	r2, [r4, #20]
 80006fa:	f807 800e 	strb.w	r8, [r7, lr]
 80006fe:	e9c1 6c02 	strd	r6, ip, [r1, #8]
 8000702:	62a1      	str	r1, [r4, #40]	; 0x28
 8000704:	b335      	cbz	r5, 8000754 <d_substitution+0x150>
 8000706:	e9d3 5103 	ldrd	r5, r1, [r3, #12]
 800070a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800070c:	4282      	cmp	r2, r0
 800070e:	440b      	add	r3, r1
 8000710:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000712:	da25      	bge.n	8000760 <d_substitution+0x15c>
 8000714:	6923      	ldr	r3, [r4, #16]
 8000716:	eb03 1002 	add.w	r0, r3, r2, lsl #4
 800071a:	0116      	lsls	r6, r2, #4
 800071c:	2700      	movs	r7, #0
 800071e:	6047      	str	r7, [r0, #4]
 8000720:	3201      	adds	r2, #1
 8000722:	2718      	movs	r7, #24
 8000724:	6162      	str	r2, [r4, #20]
 8000726:	559f      	strb	r7, [r3, r6]
 8000728:	e9c0 5102 	strd	r5, r1, [r0, #8]
 800072c:	68e3      	ldr	r3, [r4, #12]
 800072e:	781b      	ldrb	r3, [r3, #0]
 8000730:	2b42      	cmp	r3, #66	; 0x42
 8000732:	d19f      	bne.n	8000674 <d_substitution+0x70>
 8000734:	4601      	mov	r1, r0
 8000736:	4620      	mov	r0, r4
 8000738:	f7ff ff46 	bl	80005c8 <d_abi_tags>
 800073c:	2800      	cmp	r0, #0
 800073e:	d098      	beq.n	8000672 <d_substitution+0x6e>
 8000740:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8000744:	4293      	cmp	r3, r2
 8000746:	da94      	bge.n	8000672 <d_substitution+0x6e>
 8000748:	69e1      	ldr	r1, [r4, #28]
 800074a:	1c5a      	adds	r2, r3, #1
 800074c:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8000750:	6222      	str	r2, [r4, #32]
 8000752:	e78f      	b.n	8000674 <d_substitution+0x70>
 8000754:	e9d3 5101 	ldrd	r5, r1, [r3, #4]
 8000758:	e7d7      	b.n	800070a <d_substitution+0x106>
 800075a:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
 800075e:	e7d1      	b.n	8000704 <d_substitution+0x100>
 8000760:	2000      	movs	r0, #0
 8000762:	e7e3      	b.n	800072c <d_substitution+0x128>
 8000764:	2100      	movs	r1, #0
 8000766:	e7cc      	b.n	8000702 <d_substitution+0xfe>
 8000768:	08012fdc 	.word	0x08012fdc

0800076c <d_call_offset>:
 800076c:	b538      	push	{r3, r4, r5, lr}
 800076e:	4604      	mov	r4, r0
 8000770:	b929      	cbnz	r1, 800077e <d_call_offset+0x12>
 8000772:	68c3      	ldr	r3, [r0, #12]
 8000774:	781a      	ldrb	r2, [r3, #0]
 8000776:	b17a      	cbz	r2, 8000798 <d_call_offset+0x2c>
 8000778:	1c5a      	adds	r2, r3, #1
 800077a:	60c2      	str	r2, [r0, #12]
 800077c:	7819      	ldrb	r1, [r3, #0]
 800077e:	2968      	cmp	r1, #104	; 0x68
 8000780:	d019      	beq.n	80007b6 <d_call_offset+0x4a>
 8000782:	2976      	cmp	r1, #118	; 0x76
 8000784:	d108      	bne.n	8000798 <d_call_offset+0x2c>
 8000786:	f104 050c 	add.w	r5, r4, #12
 800078a:	4628      	mov	r0, r5
 800078c:	f7ff fe20 	bl	80003d0 <d_number.isra.0>
 8000790:	68e3      	ldr	r3, [r4, #12]
 8000792:	781a      	ldrb	r2, [r3, #0]
 8000794:	2a5f      	cmp	r2, #95	; 0x5f
 8000796:	d001      	beq.n	800079c <d_call_offset+0x30>
 8000798:	2000      	movs	r0, #0
 800079a:	bd38      	pop	{r3, r4, r5, pc}
 800079c:	3301      	adds	r3, #1
 800079e:	60e3      	str	r3, [r4, #12]
 80007a0:	4628      	mov	r0, r5
 80007a2:	f7ff fe15 	bl	80003d0 <d_number.isra.0>
 80007a6:	68e3      	ldr	r3, [r4, #12]
 80007a8:	781a      	ldrb	r2, [r3, #0]
 80007aa:	2a5f      	cmp	r2, #95	; 0x5f
 80007ac:	d1f4      	bne.n	8000798 <d_call_offset+0x2c>
 80007ae:	3301      	adds	r3, #1
 80007b0:	60e3      	str	r3, [r4, #12]
 80007b2:	2001      	movs	r0, #1
 80007b4:	bd38      	pop	{r3, r4, r5, pc}
 80007b6:	f104 000c 	add.w	r0, r4, #12
 80007ba:	f7ff fe09 	bl	80003d0 <d_number.isra.0>
 80007be:	e7f2      	b.n	80007a6 <d_call_offset+0x3a>

080007c0 <d_discriminator>:
 80007c0:	68c3      	ldr	r3, [r0, #12]
 80007c2:	781a      	ldrb	r2, [r3, #0]
 80007c4:	2a5f      	cmp	r2, #95	; 0x5f
 80007c6:	d001      	beq.n	80007cc <d_discriminator+0xc>
 80007c8:	2001      	movs	r0, #1
 80007ca:	4770      	bx	lr
 80007cc:	b510      	push	{r4, lr}
 80007ce:	1c5a      	adds	r2, r3, #1
 80007d0:	60c2      	str	r2, [r0, #12]
 80007d2:	785a      	ldrb	r2, [r3, #1]
 80007d4:	2a5f      	cmp	r2, #95	; 0x5f
 80007d6:	4604      	mov	r4, r0
 80007d8:	d005      	beq.n	80007e6 <d_discriminator+0x26>
 80007da:	300c      	adds	r0, #12
 80007dc:	f7ff fdf8 	bl	80003d0 <d_number.isra.0>
 80007e0:	43c0      	mvns	r0, r0
 80007e2:	0fc0      	lsrs	r0, r0, #31
 80007e4:	bd10      	pop	{r4, pc}
 80007e6:	3302      	adds	r3, #2
 80007e8:	f840 3f0c 	str.w	r3, [r0, #12]!
 80007ec:	f7ff fdf0 	bl	80003d0 <d_number.isra.0>
 80007f0:	2800      	cmp	r0, #0
 80007f2:	db09      	blt.n	8000808 <d_discriminator+0x48>
 80007f4:	2809      	cmp	r0, #9
 80007f6:	dd05      	ble.n	8000804 <d_discriminator+0x44>
 80007f8:	68e3      	ldr	r3, [r4, #12]
 80007fa:	781a      	ldrb	r2, [r3, #0]
 80007fc:	2a5f      	cmp	r2, #95	; 0x5f
 80007fe:	d103      	bne.n	8000808 <d_discriminator+0x48>
 8000800:	3301      	adds	r3, #1
 8000802:	60e3      	str	r3, [r4, #12]
 8000804:	2001      	movs	r0, #1
 8000806:	bd10      	pop	{r4, pc}
 8000808:	2000      	movs	r0, #0
 800080a:	bd10      	pop	{r4, pc}

0800080c <d_index_template_argument.part.0>:
 800080c:	b928      	cbnz	r0, 800081a <d_index_template_argument.part.0+0xe>
 800080e:	e009      	b.n	8000824 <d_index_template_argument.part.0+0x18>
 8000810:	2900      	cmp	r1, #0
 8000812:	dd08      	ble.n	8000826 <d_index_template_argument.part.0+0x1a>
 8000814:	68c0      	ldr	r0, [r0, #12]
 8000816:	3901      	subs	r1, #1
 8000818:	b140      	cbz	r0, 800082c <d_index_template_argument.part.0+0x20>
 800081a:	7803      	ldrb	r3, [r0, #0]
 800081c:	2b2f      	cmp	r3, #47	; 0x2f
 800081e:	d0f7      	beq.n	8000810 <d_index_template_argument.part.0+0x4>
 8000820:	2000      	movs	r0, #0
 8000822:	4770      	bx	lr
 8000824:	4770      	bx	lr
 8000826:	d1fb      	bne.n	8000820 <d_index_template_argument.part.0+0x14>
 8000828:	6880      	ldr	r0, [r0, #8]
 800082a:	4770      	bx	lr
 800082c:	4770      	bx	lr
 800082e:	bf00      	nop

08000830 <d_lookup_template_argument.isra.0>:
 8000830:	4603      	mov	r3, r0
 8000832:	f8d0 0110 	ldr.w	r0, [r0, #272]	; 0x110
 8000836:	b130      	cbz	r0, 8000846 <d_lookup_template_argument.isra.0+0x16>
 8000838:	6809      	ldr	r1, [r1, #0]
 800083a:	6843      	ldr	r3, [r0, #4]
 800083c:	2900      	cmp	r1, #0
 800083e:	68d8      	ldr	r0, [r3, #12]
 8000840:	db00      	blt.n	8000844 <d_lookup_template_argument.isra.0+0x14>
 8000842:	e7e3      	b.n	800080c <d_index_template_argument.part.0>
 8000844:	4770      	bx	lr
 8000846:	2201      	movs	r2, #1
 8000848:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop

08000850 <d_find_pack>:
 8000850:	2900      	cmp	r1, #0
 8000852:	d043      	beq.n	80008dc <d_find_pack+0x8c>
 8000854:	b538      	push	{r3, r4, r5, lr}
 8000856:	4605      	mov	r5, r0
 8000858:	460c      	mov	r4, r1
 800085a:	7823      	ldrb	r3, [r4, #0]
 800085c:	2b4c      	cmp	r3, #76	; 0x4c
 800085e:	d833      	bhi.n	80008c8 <d_find_pack+0x78>
 8000860:	e8df f003 	tbb	[pc, r3]
 8000864:	32323230 	.word	0x32323230
 8000868:	38302732 	.word	0x38302732
 800086c:	32323238 	.word	0x32323238
 8000870:	32323232 	.word	0x32323232
 8000874:	32323232 	.word	0x32323232
 8000878:	32323232 	.word	0x32323232
 800087c:	32323230 	.word	0x32323230
 8000880:	32323232 	.word	0x32323232
 8000884:	32323232 	.word	0x32323232
 8000888:	30323232 	.word	0x30323232
 800088c:	32323232 	.word	0x32323232
 8000890:	32323230 	.word	0x32323230
 8000894:	38303232 	.word	0x38303232
 8000898:	32323232 	.word	0x32323232
 800089c:	32323232 	.word	0x32323232
 80008a0:	32323232 	.word	0x32323232
 80008a4:	32303032 	.word	0x32303032
 80008a8:	30303232 	.word	0x30303232
 80008ac:	30323230 	.word	0x30323230
 80008b0:	30          	.byte	0x30
 80008b1:	00          	.byte	0x00
 80008b2:	f104 0108 	add.w	r1, r4, #8
 80008b6:	4628      	mov	r0, r5
 80008b8:	f7ff ffba 	bl	8000830 <d_lookup_template_argument.isra.0>
 80008bc:	b110      	cbz	r0, 80008c4 <d_find_pack+0x74>
 80008be:	7803      	ldrb	r3, [r0, #0]
 80008c0:	2b2f      	cmp	r3, #47	; 0x2f
 80008c2:	d000      	beq.n	80008c6 <d_find_pack+0x76>
 80008c4:	2000      	movs	r0, #0
 80008c6:	bd38      	pop	{r3, r4, r5, pc}
 80008c8:	68a1      	ldr	r1, [r4, #8]
 80008ca:	4628      	mov	r0, r5
 80008cc:	f7ff ffc0 	bl	8000850 <d_find_pack>
 80008d0:	2800      	cmp	r0, #0
 80008d2:	d1f8      	bne.n	80008c6 <d_find_pack+0x76>
 80008d4:	68e4      	ldr	r4, [r4, #12]
 80008d6:	2c00      	cmp	r4, #0
 80008d8:	d1bf      	bne.n	800085a <d_find_pack+0xa>
 80008da:	e7f3      	b.n	80008c4 <d_find_pack+0x74>
 80008dc:	2000      	movs	r0, #0
 80008de:	4770      	bx	lr

080008e0 <d_growable_string_callback_adapter>:
 80008e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80008e2:	4614      	mov	r4, r2
 80008e4:	6852      	ldr	r2, [r2, #4]
 80008e6:	68a5      	ldr	r5, [r4, #8]
 80008e8:	1c4b      	adds	r3, r1, #1
 80008ea:	4413      	add	r3, r2
 80008ec:	42ab      	cmp	r3, r5
 80008ee:	b083      	sub	sp, #12
 80008f0:	460e      	mov	r6, r1
 80008f2:	4607      	mov	r7, r0
 80008f4:	d811      	bhi.n	800091a <d_growable_string_callback_adapter+0x3a>
 80008f6:	68e5      	ldr	r5, [r4, #12]
 80008f8:	b96d      	cbnz	r5, 8000916 <d_growable_string_callback_adapter+0x36>
 80008fa:	e9d4 0300 	ldrd	r0, r3, [r4]
 80008fe:	4639      	mov	r1, r7
 8000900:	4418      	add	r0, r3
 8000902:	4632      	mov	r2, r6
 8000904:	f00e f998 	bl	800ec38 <memcpy>
 8000908:	e9d4 3200 	ldrd	r3, r2, [r4]
 800090c:	4433      	add	r3, r6
 800090e:	549d      	strb	r5, [r3, r2]
 8000910:	6861      	ldr	r1, [r4, #4]
 8000912:	4431      	add	r1, r6
 8000914:	6061      	str	r1, [r4, #4]
 8000916:	b003      	add	sp, #12
 8000918:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800091a:	68e2      	ldr	r2, [r4, #12]
 800091c:	2a00      	cmp	r2, #0
 800091e:	d1fa      	bne.n	8000916 <d_growable_string_callback_adapter+0x36>
 8000920:	b155      	cbz	r5, 8000938 <d_growable_string_callback_adapter+0x58>
 8000922:	006d      	lsls	r5, r5, #1
 8000924:	42ab      	cmp	r3, r5
 8000926:	d8fc      	bhi.n	8000922 <d_growable_string_callback_adapter+0x42>
 8000928:	6820      	ldr	r0, [r4, #0]
 800092a:	4629      	mov	r1, r5
 800092c:	f00e f9f4 	bl	800ed18 <realloc>
 8000930:	b138      	cbz	r0, 8000942 <d_growable_string_callback_adapter+0x62>
 8000932:	6020      	str	r0, [r4, #0]
 8000934:	60a5      	str	r5, [r4, #8]
 8000936:	e7de      	b.n	80008f6 <d_growable_string_callback_adapter+0x16>
 8000938:	2b02      	cmp	r3, #2
 800093a:	f04f 0502 	mov.w	r5, #2
 800093e:	d8f0      	bhi.n	8000922 <d_growable_string_callback_adapter+0x42>
 8000940:	e7f2      	b.n	8000928 <d_growable_string_callback_adapter+0x48>
 8000942:	9001      	str	r0, [sp, #4]
 8000944:	6820      	ldr	r0, [r4, #0]
 8000946:	f00d ff1f 	bl	800e788 <free>
 800094a:	9b01      	ldr	r3, [sp, #4]
 800094c:	2201      	movs	r2, #1
 800094e:	e9c4 3300 	strd	r3, r3, [r4]
 8000952:	e9c4 3202 	strd	r3, r2, [r4, #8]
 8000956:	e7de      	b.n	8000916 <d_growable_string_callback_adapter+0x36>

08000958 <d_exprlist>:
 8000958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800095c:	68c2      	ldr	r2, [r0, #12]
 800095e:	7815      	ldrb	r5, [r2, #0]
 8000960:	b085      	sub	sp, #20
 8000962:	2300      	movs	r3, #0
 8000964:	428d      	cmp	r5, r1
 8000966:	4604      	mov	r4, r0
 8000968:	9303      	str	r3, [sp, #12]
 800096a:	f000 8228 	beq.w	8000dbe <d_exprlist+0x466>
 800096e:	460f      	mov	r7, r1
 8000970:	4699      	mov	r9, r3
 8000972:	ae03      	add	r6, sp, #12
 8000974:	f04f 0801 	mov.w	r8, #1
 8000978:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
 800097c:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
 8000980:	7813      	ldrb	r3, [r2, #0]
 8000982:	2b4c      	cmp	r3, #76	; 0x4c
 8000984:	d07f      	beq.n	8000a86 <d_exprlist+0x12e>
 8000986:	2b54      	cmp	r3, #84	; 0x54
 8000988:	f000 809c 	beq.w	8000ac4 <d_exprlist+0x16c>
 800098c:	2b73      	cmp	r3, #115	; 0x73
 800098e:	d04d      	beq.n	8000a2c <d_exprlist+0xd4>
 8000990:	2b66      	cmp	r3, #102	; 0x66
 8000992:	d124      	bne.n	80009de <d_exprlist+0x86>
 8000994:	7853      	ldrb	r3, [r2, #1]
 8000996:	2b70      	cmp	r3, #112	; 0x70
 8000998:	f000 8099 	beq.w	8000ace <d_exprlist+0x176>
 800099c:	4620      	mov	r0, r4
 800099e:	f001 fcdb 	bl	8002358 <d_operator_name>
 80009a2:	4605      	mov	r5, r0
 80009a4:	2800      	cmp	r0, #0
 80009a6:	f000 8087 	beq.w	8000ab8 <d_exprlist+0x160>
 80009aa:	7803      	ldrb	r3, [r0, #0]
 80009ac:	2b32      	cmp	r3, #50	; 0x32
 80009ae:	f000 80b2 	beq.w	8000b16 <d_exprlist+0x1be>
 80009b2:	2b34      	cmp	r3, #52	; 0x34
 80009b4:	f000 8160 	beq.w	8000c78 <d_exprlist+0x320>
 80009b8:	d80a      	bhi.n	80009d0 <d_exprlist+0x78>
 80009ba:	2b33      	cmp	r3, #51	; 0x33
 80009bc:	d108      	bne.n	80009d0 <d_exprlist+0x78>
 80009be:	6883      	ldr	r3, [r0, #8]
 80009c0:	2b03      	cmp	r3, #3
 80009c2:	d805      	bhi.n	80009d0 <d_exprlist+0x78>
 80009c4:	e8df f013 	tbh	[pc, r3, lsl #1]
 80009c8:	015d0131 	.word	0x015d0131
 80009cc:	00040004 	.word	0x00040004
 80009d0:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 80009d4:	2500      	movs	r5, #0
 80009d6:	4628      	mov	r0, r5
 80009d8:	b005      	add	sp, #20
 80009da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009de:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80009e2:	2909      	cmp	r1, #9
 80009e4:	d835      	bhi.n	8000a52 <d_exprlist+0xfa>
 80009e6:	4620      	mov	r0, r4
 80009e8:	f001 fe8a 	bl	8002700 <d_unqualified_name>
 80009ec:	4605      	mov	r5, r0
 80009ee:	2800      	cmp	r0, #0
 80009f0:	d062      	beq.n	8000ab8 <d_exprlist+0x160>
 80009f2:	68e3      	ldr	r3, [r4, #12]
 80009f4:	781a      	ldrb	r2, [r3, #0]
 80009f6:	2a49      	cmp	r2, #73	; 0x49
 80009f8:	f000 80a1 	beq.w	8000b3e <d_exprlist+0x1e6>
 80009fc:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 8000a00:	462a      	mov	r2, r5
 8000a02:	2300      	movs	r3, #0
 8000a04:	212e      	movs	r1, #46	; 0x2e
 8000a06:	4620      	mov	r0, r4
 8000a08:	f7ff fbe2 	bl	80001d0 <d_make_comp>
 8000a0c:	6030      	str	r0, [r6, #0]
 8000a0e:	2800      	cmp	r0, #0
 8000a10:	d041      	beq.n	8000a96 <d_exprlist+0x13e>
 8000a12:	68e2      	ldr	r2, [r4, #12]
 8000a14:	7813      	ldrb	r3, [r2, #0]
 8000a16:	42bb      	cmp	r3, r7
 8000a18:	f100 060c 	add.w	r6, r0, #12
 8000a1c:	d1ac      	bne.n	8000978 <d_exprlist+0x20>
 8000a1e:	9d03      	ldr	r5, [sp, #12]
 8000a20:	3201      	adds	r2, #1
 8000a22:	4628      	mov	r0, r5
 8000a24:	60e2      	str	r2, [r4, #12]
 8000a26:	b005      	add	sp, #20
 8000a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a2c:	7853      	ldrb	r3, [r2, #1]
 8000a2e:	2b72      	cmp	r3, #114	; 0x72
 8000a30:	f000 80e5 	beq.w	8000bfe <d_exprlist+0x2a6>
 8000a34:	2b70      	cmp	r3, #112	; 0x70
 8000a36:	d1b1      	bne.n	800099c <d_exprlist+0x44>
 8000a38:	3202      	adds	r2, #2
 8000a3a:	60e2      	str	r2, [r4, #12]
 8000a3c:	4620      	mov	r0, r4
 8000a3e:	f000 fa0b 	bl	8000e58 <d_expression_1>
 8000a42:	2300      	movs	r3, #0
 8000a44:	4602      	mov	r2, r0
 8000a46:	214b      	movs	r1, #75	; 0x4b
 8000a48:	4620      	mov	r0, r4
 8000a4a:	f7ff fbc1 	bl	80001d0 <d_make_comp>
 8000a4e:	4605      	mov	r5, r0
 8000a50:	e01d      	b.n	8000a8e <d_exprlist+0x136>
 8000a52:	2b6f      	cmp	r3, #111	; 0x6f
 8000a54:	d024      	beq.n	8000aa0 <d_exprlist+0x148>
 8000a56:	2b69      	cmp	r3, #105	; 0x69
 8000a58:	d17e      	bne.n	8000b58 <d_exprlist+0x200>
 8000a5a:	7853      	ldrb	r3, [r2, #1]
 8000a5c:	2b6c      	cmp	r3, #108	; 0x6c
 8000a5e:	d19d      	bne.n	800099c <d_exprlist+0x44>
 8000a60:	3202      	adds	r2, #2
 8000a62:	60e2      	str	r2, [r4, #12]
 8000a64:	2500      	movs	r5, #0
 8000a66:	7850      	ldrb	r0, [r2, #1]
 8000a68:	2800      	cmp	r0, #0
 8000a6a:	f000 8196 	beq.w	8000d9a <d_exprlist+0x442>
 8000a6e:	2145      	movs	r1, #69	; 0x45
 8000a70:	4620      	mov	r0, r4
 8000a72:	f7ff ff71 	bl	8000958 <d_exprlist>
 8000a76:	462a      	mov	r2, r5
 8000a78:	4603      	mov	r3, r0
 8000a7a:	2131      	movs	r1, #49	; 0x31
 8000a7c:	4620      	mov	r0, r4
 8000a7e:	f7ff fba7 	bl	80001d0 <d_make_comp>
 8000a82:	4605      	mov	r5, r0
 8000a84:	e003      	b.n	8000a8e <d_exprlist+0x136>
 8000a86:	4620      	mov	r0, r4
 8000a88:	f001 ff88 	bl	800299c <d_expr_primary>
 8000a8c:	4605      	mov	r5, r0
 8000a8e:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 8000a92:	2d00      	cmp	r5, #0
 8000a94:	d1b4      	bne.n	8000a00 <d_exprlist+0xa8>
 8000a96:	2500      	movs	r5, #0
 8000a98:	4628      	mov	r0, r5
 8000a9a:	b005      	add	sp, #20
 8000a9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000aa0:	7853      	ldrb	r3, [r2, #1]
 8000aa2:	2b6e      	cmp	r3, #110	; 0x6e
 8000aa4:	f47f af7a 	bne.w	800099c <d_exprlist+0x44>
 8000aa8:	3202      	adds	r2, #2
 8000aaa:	60e2      	str	r2, [r4, #12]
 8000aac:	4620      	mov	r0, r4
 8000aae:	f001 fe27 	bl	8002700 <d_unqualified_name>
 8000ab2:	4605      	mov	r5, r0
 8000ab4:	2800      	cmp	r0, #0
 8000ab6:	d19c      	bne.n	80009f2 <d_exprlist+0x9a>
 8000ab8:	4628      	mov	r0, r5
 8000aba:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 8000abe:	b005      	add	sp, #20
 8000ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ac4:	4620      	mov	r0, r4
 8000ac6:	f7ff fcf9 	bl	80004bc <d_template_param>
 8000aca:	4605      	mov	r5, r0
 8000acc:	e7df      	b.n	8000a8e <d_exprlist+0x136>
 8000ace:	1c93      	adds	r3, r2, #2
 8000ad0:	60e3      	str	r3, [r4, #12]
 8000ad2:	7893      	ldrb	r3, [r2, #2]
 8000ad4:	2b54      	cmp	r3, #84	; 0x54
 8000ad6:	d05f      	beq.n	8000b98 <d_exprlist+0x240>
 8000ad8:	4620      	mov	r0, r4
 8000ada:	f7ff fcd5 	bl	8000488 <d_compact_number>
 8000ade:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8000ae2:	4298      	cmp	r0, r3
 8000ae4:	f43f af74 	beq.w	80009d0 <d_exprlist+0x78>
 8000ae8:	1c43      	adds	r3, r0, #1
 8000aea:	f43f af71 	beq.w	80009d0 <d_exprlist+0x78>
 8000aee:	3001      	adds	r0, #1
 8000af0:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000af4:	4293      	cmp	r3, r2
 8000af6:	f6bf af6b 	bge.w	80009d0 <d_exprlist+0x78>
 8000afa:	6922      	ldr	r2, [r4, #16]
 8000afc:	0119      	lsls	r1, r3, #4
 8000afe:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 8000b02:	f04f 0c06 	mov.w	ip, #6
 8000b06:	3301      	adds	r3, #1
 8000b08:	f8c5 9004 	str.w	r9, [r5, #4]
 8000b0c:	6163      	str	r3, [r4, #20]
 8000b0e:	f802 c001 	strb.w	ip, [r2, r1]
 8000b12:	60a8      	str	r0, [r5, #8]
 8000b14:	e772      	b.n	80009fc <d_exprlist+0xa4>
 8000b16:	6880      	ldr	r0, [r0, #8]
 8000b18:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8000b1a:	6881      	ldr	r1, [r0, #8]
 8000b1c:	6803      	ldr	r3, [r0, #0]
 8000b1e:	3902      	subs	r1, #2
 8000b20:	440a      	add	r2, r1
 8000b22:	62e2      	str	r2, [r4, #44]	; 0x2c
 8000b24:	781a      	ldrb	r2, [r3, #0]
 8000b26:	2a73      	cmp	r2, #115	; 0x73
 8000b28:	d025      	beq.n	8000b76 <d_exprlist+0x21e>
 8000b2a:	f8d0 b00c 	ldr.w	fp, [r0, #12]
 8000b2e:	f1bb 0f03 	cmp.w	fp, #3
 8000b32:	f63f af4d 	bhi.w	80009d0 <d_exprlist+0x78>
 8000b36:	e8df f00b 	tbb	[pc, fp]
 8000b3a:	3378      	.short	0x3378
 8000b3c:	af80      	.short	0xaf80
 8000b3e:	3301      	adds	r3, #1
 8000b40:	60e3      	str	r3, [r4, #12]
 8000b42:	4620      	mov	r0, r4
 8000b44:	f000 fba8 	bl	8001298 <d_template_args_1>
 8000b48:	462a      	mov	r2, r5
 8000b4a:	4603      	mov	r3, r0
 8000b4c:	2104      	movs	r1, #4
 8000b4e:	4620      	mov	r0, r4
 8000b50:	f7ff fb3e 	bl	80001d0 <d_make_comp>
 8000b54:	4605      	mov	r5, r0
 8000b56:	e79a      	b.n	8000a8e <d_exprlist+0x136>
 8000b58:	2b74      	cmp	r3, #116	; 0x74
 8000b5a:	f47f af1f 	bne.w	800099c <d_exprlist+0x44>
 8000b5e:	7853      	ldrb	r3, [r2, #1]
 8000b60:	2b6c      	cmp	r3, #108	; 0x6c
 8000b62:	f47f af1b 	bne.w	800099c <d_exprlist+0x44>
 8000b66:	3202      	adds	r2, #2
 8000b68:	60e2      	str	r2, [r4, #12]
 8000b6a:	4620      	mov	r0, r4
 8000b6c:	f000 fffc 	bl	8001b68 <d_type>
 8000b70:	68e2      	ldr	r2, [r4, #12]
 8000b72:	4605      	mov	r5, r0
 8000b74:	e777      	b.n	8000a66 <d_exprlist+0x10e>
 8000b76:	7859      	ldrb	r1, [r3, #1]
 8000b78:	2974      	cmp	r1, #116	; 0x74
 8000b7a:	d1d6      	bne.n	8000b2a <d_exprlist+0x1d2>
 8000b7c:	7899      	ldrb	r1, [r3, #2]
 8000b7e:	2900      	cmp	r1, #0
 8000b80:	d1d3      	bne.n	8000b2a <d_exprlist+0x1d2>
 8000b82:	4620      	mov	r0, r4
 8000b84:	f000 fff0 	bl	8001b68 <d_type>
 8000b88:	4603      	mov	r3, r0
 8000b8a:	462a      	mov	r2, r5
 8000b8c:	2137      	movs	r1, #55	; 0x37
 8000b8e:	4620      	mov	r0, r4
 8000b90:	f7ff fb1e 	bl	80001d0 <d_make_comp>
 8000b94:	4605      	mov	r5, r0
 8000b96:	e77a      	b.n	8000a8e <d_exprlist+0x136>
 8000b98:	3203      	adds	r2, #3
 8000b9a:	60e2      	str	r2, [r4, #12]
 8000b9c:	2000      	movs	r0, #0
 8000b9e:	e7a7      	b.n	8000af0 <d_exprlist+0x198>
 8000ba0:	7819      	ldrb	r1, [r3, #0]
 8000ba2:	2970      	cmp	r1, #112	; 0x70
 8000ba4:	d020      	beq.n	8000be8 <d_exprlist+0x290>
 8000ba6:	296d      	cmp	r1, #109	; 0x6d
 8000ba8:	d01e      	beq.n	8000be8 <d_exprlist+0x290>
 8000baa:	f04f 0b00 	mov.w	fp, #0
 8000bae:	2a73      	cmp	r2, #115	; 0x73
 8000bb0:	d112      	bne.n	8000bd8 <d_exprlist+0x280>
 8000bb2:	785a      	ldrb	r2, [r3, #1]
 8000bb4:	2a50      	cmp	r2, #80	; 0x50
 8000bb6:	d10f      	bne.n	8000bd8 <d_exprlist+0x280>
 8000bb8:	789b      	ldrb	r3, [r3, #2]
 8000bba:	b96b      	cbnz	r3, 8000bd8 <d_exprlist+0x280>
 8000bbc:	4620      	mov	r0, r4
 8000bbe:	f000 fb6b 	bl	8001298 <d_template_args_1>
 8000bc2:	4603      	mov	r3, r0
 8000bc4:	f1bb 0f00 	cmp.w	fp, #0
 8000bc8:	d0df      	beq.n	8000b8a <d_exprlist+0x232>
 8000bca:	461a      	mov	r2, r3
 8000bcc:	2139      	movs	r1, #57	; 0x39
 8000bce:	4620      	mov	r0, r4
 8000bd0:	f7ff fafe 	bl	80001d0 <d_make_comp>
 8000bd4:	4603      	mov	r3, r0
 8000bd6:	e7d8      	b.n	8000b8a <d_exprlist+0x232>
 8000bd8:	4620      	mov	r0, r4
 8000bda:	f000 f93d 	bl	8000e58 <d_expression_1>
 8000bde:	4603      	mov	r3, r0
 8000be0:	f1bb 0f00 	cmp.w	fp, #0
 8000be4:	d1f1      	bne.n	8000bca <d_exprlist+0x272>
 8000be6:	e7d0      	b.n	8000b8a <d_exprlist+0x232>
 8000be8:	7858      	ldrb	r0, [r3, #1]
 8000bea:	4288      	cmp	r0, r1
 8000bec:	d1dd      	bne.n	8000baa <d_exprlist+0x252>
 8000bee:	68e1      	ldr	r1, [r4, #12]
 8000bf0:	7808      	ldrb	r0, [r1, #0]
 8000bf2:	285f      	cmp	r0, #95	; 0x5f
 8000bf4:	d1db      	bne.n	8000bae <d_exprlist+0x256>
 8000bf6:	3101      	adds	r1, #1
 8000bf8:	60e1      	str	r1, [r4, #12]
 8000bfa:	781a      	ldrb	r2, [r3, #0]
 8000bfc:	e7d5      	b.n	8000baa <d_exprlist+0x252>
 8000bfe:	3202      	adds	r2, #2
 8000c00:	60e2      	str	r2, [r4, #12]
 8000c02:	4620      	mov	r0, r4
 8000c04:	f000 ffb0 	bl	8001b68 <d_type>
 8000c08:	4605      	mov	r5, r0
 8000c0a:	4620      	mov	r0, r4
 8000c0c:	f001 fd78 	bl	8002700 <d_unqualified_name>
 8000c10:	68e3      	ldr	r3, [r4, #12]
 8000c12:	7819      	ldrb	r1, [r3, #0]
 8000c14:	2949      	cmp	r1, #73	; 0x49
 8000c16:	f000 80c4 	beq.w	8000da2 <d_exprlist+0x44a>
 8000c1a:	4603      	mov	r3, r0
 8000c1c:	462a      	mov	r2, r5
 8000c1e:	2101      	movs	r1, #1
 8000c20:	4620      	mov	r0, r4
 8000c22:	f7ff fad5 	bl	80001d0 <d_make_comp>
 8000c26:	4605      	mov	r5, r0
 8000c28:	e731      	b.n	8000a8e <d_exprlist+0x136>
 8000c2a:	462a      	mov	r2, r5
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	2136      	movs	r1, #54	; 0x36
 8000c30:	4620      	mov	r0, r4
 8000c32:	f7ff facd 	bl	80001d0 <d_make_comp>
 8000c36:	4605      	mov	r5, r0
 8000c38:	e729      	b.n	8000a8e <d_exprlist+0x136>
 8000c3a:	68aa      	ldr	r2, [r5, #8]
 8000c3c:	6812      	ldr	r2, [r2, #0]
 8000c3e:	7851      	ldrb	r1, [r2, #1]
 8000c40:	2963      	cmp	r1, #99	; 0x63
 8000c42:	f000 80cd 	beq.w	8000de0 <d_exprlist+0x488>
 8000c46:	781a      	ldrb	r2, [r3, #0]
 8000c48:	2a66      	cmp	r2, #102	; 0x66
 8000c4a:	f000 80d9 	beq.w	8000e00 <d_exprlist+0x4a8>
 8000c4e:	4620      	mov	r0, r4
 8000c50:	9301      	str	r3, [sp, #4]
 8000c52:	f000 f901 	bl	8000e58 <d_expression_1>
 8000c56:	9b01      	ldr	r3, [sp, #4]
 8000c58:	4683      	mov	fp, r0
 8000c5a:	781a      	ldrb	r2, [r3, #0]
 8000c5c:	2a63      	cmp	r2, #99	; 0x63
 8000c5e:	d172      	bne.n	8000d46 <d_exprlist+0x3ee>
 8000c60:	7859      	ldrb	r1, [r3, #1]
 8000c62:	296c      	cmp	r1, #108	; 0x6c
 8000c64:	d16f      	bne.n	8000d46 <d_exprlist+0x3ee>
 8000c66:	7899      	ldrb	r1, [r3, #2]
 8000c68:	2900      	cmp	r1, #0
 8000c6a:	d16c      	bne.n	8000d46 <d_exprlist+0x3ee>
 8000c6c:	2145      	movs	r1, #69	; 0x45
 8000c6e:	4620      	mov	r0, r4
 8000c70:	f7ff fe72 	bl	8000958 <d_exprlist>
 8000c74:	4602      	mov	r2, r0
 8000c76:	e075      	b.n	8000d64 <d_exprlist+0x40c>
 8000c78:	68e3      	ldr	r3, [r4, #12]
 8000c7a:	781a      	ldrb	r2, [r3, #0]
 8000c7c:	2a5f      	cmp	r2, #95	; 0x5f
 8000c7e:	f000 80a7 	beq.w	8000dd0 <d_exprlist+0x478>
 8000c82:	4620      	mov	r0, r4
 8000c84:	f000 f8e8 	bl	8000e58 <d_expression_1>
 8000c88:	462a      	mov	r2, r5
 8000c8a:	4603      	mov	r3, r0
 8000c8c:	2137      	movs	r1, #55	; 0x37
 8000c8e:	4620      	mov	r0, r4
 8000c90:	f7ff fa9e 	bl	80001d0 <d_make_comp>
 8000c94:	4605      	mov	r5, r0
 8000c96:	e6fa      	b.n	8000a8e <d_exprlist+0x136>
 8000c98:	2a71      	cmp	r2, #113	; 0x71
 8000c9a:	d117      	bne.n	8000ccc <d_exprlist+0x374>
 8000c9c:	785a      	ldrb	r2, [r3, #1]
 8000c9e:	2a75      	cmp	r2, #117	; 0x75
 8000ca0:	d114      	bne.n	8000ccc <d_exprlist+0x374>
 8000ca2:	789a      	ldrb	r2, [r3, #2]
 8000ca4:	b992      	cbnz	r2, 8000ccc <d_exprlist+0x374>
 8000ca6:	4620      	mov	r0, r4
 8000ca8:	f000 f8d6 	bl	8000e58 <d_expression_1>
 8000cac:	4683      	mov	fp, r0
 8000cae:	4620      	mov	r0, r4
 8000cb0:	f000 f8d2 	bl	8000e58 <d_expression_1>
 8000cb4:	4602      	mov	r2, r0
 8000cb6:	4620      	mov	r0, r4
 8000cb8:	9201      	str	r2, [sp, #4]
 8000cba:	f000 f8cd 	bl	8000e58 <d_expression_1>
 8000cbe:	9a01      	ldr	r2, [sp, #4]
 8000cc0:	4603      	mov	r3, r0
 8000cc2:	bb70      	cbnz	r0, 8000d22 <d_exprlist+0x3ca>
 8000cc4:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 8000cc8:	4605      	mov	r5, r0
 8000cca:	e684      	b.n	80009d6 <d_exprlist+0x7e>
 8000ccc:	781a      	ldrb	r2, [r3, #0]
 8000cce:	2a66      	cmp	r2, #102	; 0x66
 8000cd0:	f000 809d 	beq.w	8000e0e <d_exprlist+0x4b6>
 8000cd4:	2a6e      	cmp	r2, #110	; 0x6e
 8000cd6:	f47f ae7b 	bne.w	80009d0 <d_exprlist+0x78>
 8000cda:	785b      	ldrb	r3, [r3, #1]
 8000cdc:	2b77      	cmp	r3, #119	; 0x77
 8000cde:	d002      	beq.n	8000ce6 <d_exprlist+0x38e>
 8000ce0:	2b61      	cmp	r3, #97	; 0x61
 8000ce2:	f47f ae75 	bne.w	80009d0 <d_exprlist+0x78>
 8000ce6:	215f      	movs	r1, #95	; 0x5f
 8000ce8:	4620      	mov	r0, r4
 8000cea:	f7ff fe35 	bl	8000958 <d_exprlist>
 8000cee:	4683      	mov	fp, r0
 8000cf0:	4620      	mov	r0, r4
 8000cf2:	f000 ff39 	bl	8001b68 <d_type>
 8000cf6:	68e3      	ldr	r3, [r4, #12]
 8000cf8:	7819      	ldrb	r1, [r3, #0]
 8000cfa:	2945      	cmp	r1, #69	; 0x45
 8000cfc:	4602      	mov	r2, r0
 8000cfe:	f000 80a6 	beq.w	8000e4e <d_exprlist+0x4f6>
 8000d02:	2970      	cmp	r1, #112	; 0x70
 8000d04:	f000 8095 	beq.w	8000e32 <d_exprlist+0x4da>
 8000d08:	2969      	cmp	r1, #105	; 0x69
 8000d0a:	f47f ae61 	bne.w	80009d0 <d_exprlist+0x78>
 8000d0e:	785b      	ldrb	r3, [r3, #1]
 8000d10:	2b6c      	cmp	r3, #108	; 0x6c
 8000d12:	f47f ae5d 	bne.w	80009d0 <d_exprlist+0x78>
 8000d16:	9001      	str	r0, [sp, #4]
 8000d18:	4620      	mov	r0, r4
 8000d1a:	f000 f89d 	bl	8000e58 <d_expression_1>
 8000d1e:	9a01      	ldr	r2, [sp, #4]
 8000d20:	4603      	mov	r3, r0
 8000d22:	213c      	movs	r1, #60	; 0x3c
 8000d24:	4620      	mov	r0, r4
 8000d26:	f7ff fa53 	bl	80001d0 <d_make_comp>
 8000d2a:	465a      	mov	r2, fp
 8000d2c:	4603      	mov	r3, r0
 8000d2e:	213b      	movs	r1, #59	; 0x3b
 8000d30:	4620      	mov	r0, r4
 8000d32:	f7ff fa4d 	bl	80001d0 <d_make_comp>
 8000d36:	462a      	mov	r2, r5
 8000d38:	4603      	mov	r3, r0
 8000d3a:	213a      	movs	r1, #58	; 0x3a
 8000d3c:	4620      	mov	r0, r4
 8000d3e:	f7ff fa47 	bl	80001d0 <d_make_comp>
 8000d42:	4605      	mov	r5, r0
 8000d44:	e6a3      	b.n	8000a8e <d_exprlist+0x136>
 8000d46:	2a64      	cmp	r2, #100	; 0x64
 8000d48:	d11a      	bne.n	8000d80 <d_exprlist+0x428>
 8000d4a:	7859      	ldrb	r1, [r3, #1]
 8000d4c:	2974      	cmp	r1, #116	; 0x74
 8000d4e:	d117      	bne.n	8000d80 <d_exprlist+0x428>
 8000d50:	7899      	ldrb	r1, [r3, #2]
 8000d52:	b9a9      	cbnz	r1, 8000d80 <d_exprlist+0x428>
 8000d54:	4620      	mov	r0, r4
 8000d56:	f001 fcd3 	bl	8002700 <d_unqualified_name>
 8000d5a:	68e3      	ldr	r3, [r4, #12]
 8000d5c:	7819      	ldrb	r1, [r3, #0]
 8000d5e:	2949      	cmp	r1, #73	; 0x49
 8000d60:	4602      	mov	r2, r0
 8000d62:	d058      	beq.n	8000e16 <d_exprlist+0x4be>
 8000d64:	4613      	mov	r3, r2
 8000d66:	2139      	movs	r1, #57	; 0x39
 8000d68:	465a      	mov	r2, fp
 8000d6a:	4620      	mov	r0, r4
 8000d6c:	f7ff fa30 	bl	80001d0 <d_make_comp>
 8000d70:	462a      	mov	r2, r5
 8000d72:	4603      	mov	r3, r0
 8000d74:	2138      	movs	r1, #56	; 0x38
 8000d76:	4620      	mov	r0, r4
 8000d78:	f7ff fa2a 	bl	80001d0 <d_make_comp>
 8000d7c:	4605      	mov	r5, r0
 8000d7e:	e686      	b.n	8000a8e <d_exprlist+0x136>
 8000d80:	2a70      	cmp	r2, #112	; 0x70
 8000d82:	d105      	bne.n	8000d90 <d_exprlist+0x438>
 8000d84:	785a      	ldrb	r2, [r3, #1]
 8000d86:	2a74      	cmp	r2, #116	; 0x74
 8000d88:	d102      	bne.n	8000d90 <d_exprlist+0x438>
 8000d8a:	789b      	ldrb	r3, [r3, #2]
 8000d8c:	2b00      	cmp	r3, #0
 8000d8e:	d0e1      	beq.n	8000d54 <d_exprlist+0x3fc>
 8000d90:	4620      	mov	r0, r4
 8000d92:	f000 f861 	bl	8000e58 <d_expression_1>
 8000d96:	4602      	mov	r2, r0
 8000d98:	e7e4      	b.n	8000d64 <d_exprlist+0x40c>
 8000d9a:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 8000d9e:	4605      	mov	r5, r0
 8000da0:	e619      	b.n	80009d6 <d_exprlist+0x7e>
 8000da2:	3301      	adds	r3, #1
 8000da4:	9001      	str	r0, [sp, #4]
 8000da6:	60e3      	str	r3, [r4, #12]
 8000da8:	4620      	mov	r0, r4
 8000daa:	f000 fa75 	bl	8001298 <d_template_args_1>
 8000dae:	9a01      	ldr	r2, [sp, #4]
 8000db0:	4603      	mov	r3, r0
 8000db2:	2104      	movs	r1, #4
 8000db4:	4620      	mov	r0, r4
 8000db6:	f7ff fa0b 	bl	80001d0 <d_make_comp>
 8000dba:	4603      	mov	r3, r0
 8000dbc:	e72e      	b.n	8000c1c <d_exprlist+0x2c4>
 8000dbe:	3201      	adds	r2, #1
 8000dc0:	60c2      	str	r2, [r0, #12]
 8000dc2:	212e      	movs	r1, #46	; 0x2e
 8000dc4:	461a      	mov	r2, r3
 8000dc6:	b005      	add	sp, #20
 8000dc8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000dcc:	f7ff ba00 	b.w	80001d0 <d_make_comp>
 8000dd0:	3301      	adds	r3, #1
 8000dd2:	60e3      	str	r3, [r4, #12]
 8000dd4:	2145      	movs	r1, #69	; 0x45
 8000dd6:	4620      	mov	r0, r4
 8000dd8:	f7ff fdbe 	bl	8000958 <d_exprlist>
 8000ddc:	4603      	mov	r3, r0
 8000dde:	e6d4      	b.n	8000b8a <d_exprlist+0x232>
 8000de0:	7812      	ldrb	r2, [r2, #0]
 8000de2:	f1a2 0163 	sub.w	r1, r2, #99	; 0x63
 8000de6:	2901      	cmp	r1, #1
 8000de8:	d903      	bls.n	8000df2 <d_exprlist+0x49a>
 8000dea:	3a72      	subs	r2, #114	; 0x72
 8000dec:	2a01      	cmp	r2, #1
 8000dee:	f63f af2a 	bhi.w	8000c46 <d_exprlist+0x2ee>
 8000df2:	4620      	mov	r0, r4
 8000df4:	9301      	str	r3, [sp, #4]
 8000df6:	f000 feb7 	bl	8001b68 <d_type>
 8000dfa:	9b01      	ldr	r3, [sp, #4]
 8000dfc:	4683      	mov	fp, r0
 8000dfe:	e72c      	b.n	8000c5a <d_exprlist+0x302>
 8000e00:	4620      	mov	r0, r4
 8000e02:	9301      	str	r3, [sp, #4]
 8000e04:	f001 faa8 	bl	8002358 <d_operator_name>
 8000e08:	9b01      	ldr	r3, [sp, #4]
 8000e0a:	4683      	mov	fp, r0
 8000e0c:	e725      	b.n	8000c5a <d_exprlist+0x302>
 8000e0e:	4620      	mov	r0, r4
 8000e10:	f001 faa2 	bl	8002358 <d_operator_name>
 8000e14:	e74a      	b.n	8000cac <d_exprlist+0x354>
 8000e16:	3301      	adds	r3, #1
 8000e18:	9001      	str	r0, [sp, #4]
 8000e1a:	60e3      	str	r3, [r4, #12]
 8000e1c:	4620      	mov	r0, r4
 8000e1e:	f000 fa3b 	bl	8001298 <d_template_args_1>
 8000e22:	9a01      	ldr	r2, [sp, #4]
 8000e24:	4603      	mov	r3, r0
 8000e26:	2104      	movs	r1, #4
 8000e28:	4620      	mov	r0, r4
 8000e2a:	f7ff f9d1 	bl	80001d0 <d_make_comp>
 8000e2e:	4602      	mov	r2, r0
 8000e30:	e798      	b.n	8000d64 <d_exprlist+0x40c>
 8000e32:	7859      	ldrb	r1, [r3, #1]
 8000e34:	2969      	cmp	r1, #105	; 0x69
 8000e36:	f47f adcb 	bne.w	80009d0 <d_exprlist+0x78>
 8000e3a:	3302      	adds	r3, #2
 8000e3c:	9001      	str	r0, [sp, #4]
 8000e3e:	60e3      	str	r3, [r4, #12]
 8000e40:	2145      	movs	r1, #69	; 0x45
 8000e42:	4620      	mov	r0, r4
 8000e44:	f7ff fd88 	bl	8000958 <d_exprlist>
 8000e48:	9a01      	ldr	r2, [sp, #4]
 8000e4a:	4603      	mov	r3, r0
 8000e4c:	e769      	b.n	8000d22 <d_exprlist+0x3ca>
 8000e4e:	3301      	adds	r3, #1
 8000e50:	60e3      	str	r3, [r4, #12]
 8000e52:	2300      	movs	r3, #0
 8000e54:	e765      	b.n	8000d22 <d_exprlist+0x3ca>
 8000e56:	bf00      	nop

08000e58 <d_expression_1>:
 8000e58:	68c2      	ldr	r2, [r0, #12]
 8000e5a:	7813      	ldrb	r3, [r2, #0]
 8000e5c:	2b4c      	cmp	r3, #76	; 0x4c
 8000e5e:	f000 808b 	beq.w	8000f78 <d_expression_1+0x120>
 8000e62:	2b54      	cmp	r3, #84	; 0x54
 8000e64:	f000 808a 	beq.w	8000f7c <d_expression_1+0x124>
 8000e68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e6a:	2b73      	cmp	r3, #115	; 0x73
 8000e6c:	b083      	sub	sp, #12
 8000e6e:	4604      	mov	r4, r0
 8000e70:	d052      	beq.n	8000f18 <d_expression_1+0xc0>
 8000e72:	2b66      	cmp	r3, #102	; 0x66
 8000e74:	d030      	beq.n	8000ed8 <d_expression_1+0x80>
 8000e76:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8000e7a:	2909      	cmp	r1, #9
 8000e7c:	d80c      	bhi.n	8000e98 <d_expression_1+0x40>
 8000e7e:	4620      	mov	r0, r4
 8000e80:	f001 fc3e 	bl	8002700 <d_unqualified_name>
 8000e84:	4605      	mov	r5, r0
 8000e86:	2800      	cmp	r0, #0
 8000e88:	d072      	beq.n	8000f70 <d_expression_1+0x118>
 8000e8a:	68e3      	ldr	r3, [r4, #12]
 8000e8c:	781a      	ldrb	r2, [r3, #0]
 8000e8e:	2a49      	cmp	r2, #73	; 0x49
 8000e90:	d076      	beq.n	8000f80 <d_expression_1+0x128>
 8000e92:	4628      	mov	r0, r5
 8000e94:	b003      	add	sp, #12
 8000e96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e98:	2b6f      	cmp	r3, #111	; 0x6f
 8000e9a:	d04b      	beq.n	8000f34 <d_expression_1+0xdc>
 8000e9c:	2b69      	cmp	r3, #105	; 0x69
 8000e9e:	d17d      	bne.n	8000f9c <d_expression_1+0x144>
 8000ea0:	7853      	ldrb	r3, [r2, #1]
 8000ea2:	2b6c      	cmp	r3, #108	; 0x6c
 8000ea4:	f000 8097 	beq.w	8000fd6 <d_expression_1+0x17e>
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	f001 fa55 	bl	8002358 <d_operator_name>
 8000eae:	4605      	mov	r5, r0
 8000eb0:	2800      	cmp	r0, #0
 8000eb2:	d05d      	beq.n	8000f70 <d_expression_1+0x118>
 8000eb4:	7803      	ldrb	r3, [r0, #0]
 8000eb6:	2b32      	cmp	r3, #50	; 0x32
 8000eb8:	d042      	beq.n	8000f40 <d_expression_1+0xe8>
 8000eba:	2b34      	cmp	r3, #52	; 0x34
 8000ebc:	f000 817f 	beq.w	80011be <d_expression_1+0x366>
 8000ec0:	d856      	bhi.n	8000f70 <d_expression_1+0x118>
 8000ec2:	2b33      	cmp	r3, #51	; 0x33
 8000ec4:	d154      	bne.n	8000f70 <d_expression_1+0x118>
 8000ec6:	6883      	ldr	r3, [r0, #8]
 8000ec8:	2b03      	cmp	r3, #3
 8000eca:	d851      	bhi.n	8000f70 <d_expression_1+0x118>
 8000ecc:	e8df f013 	tbh	[pc, r3, lsl #1]
 8000ed0:	00f300c7 	.word	0x00f300c7
 8000ed4:	00500050 	.word	0x00500050
 8000ed8:	7853      	ldrb	r3, [r2, #1]
 8000eda:	2b70      	cmp	r3, #112	; 0x70
 8000edc:	d1e4      	bne.n	8000ea8 <d_expression_1+0x50>
 8000ede:	1c93      	adds	r3, r2, #2
 8000ee0:	60c3      	str	r3, [r0, #12]
 8000ee2:	7893      	ldrb	r3, [r2, #2]
 8000ee4:	2b54      	cmp	r3, #84	; 0x54
 8000ee6:	f000 8111 	beq.w	800110c <d_expression_1+0x2b4>
 8000eea:	f7ff facd 	bl	8000488 <d_compact_number>
 8000eee:	43c3      	mvns	r3, r0
 8000ef0:	f033 4300 	bics.w	r3, r3, #2147483648	; 0x80000000
 8000ef4:	d03c      	beq.n	8000f70 <d_expression_1+0x118>
 8000ef6:	3001      	adds	r0, #1
 8000ef8:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000efc:	4293      	cmp	r3, r2
 8000efe:	da37      	bge.n	8000f70 <d_expression_1+0x118>
 8000f00:	6922      	ldr	r2, [r4, #16]
 8000f02:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 8000f06:	0119      	lsls	r1, r3, #4
 8000f08:	2600      	movs	r6, #0
 8000f0a:	606e      	str	r6, [r5, #4]
 8000f0c:	3301      	adds	r3, #1
 8000f0e:	2606      	movs	r6, #6
 8000f10:	6163      	str	r3, [r4, #20]
 8000f12:	5456      	strb	r6, [r2, r1]
 8000f14:	60a8      	str	r0, [r5, #8]
 8000f16:	e7bc      	b.n	8000e92 <d_expression_1+0x3a>
 8000f18:	7853      	ldrb	r3, [r2, #1]
 8000f1a:	2b72      	cmp	r3, #114	; 0x72
 8000f1c:	d04a      	beq.n	8000fb4 <d_expression_1+0x15c>
 8000f1e:	2b70      	cmp	r3, #112	; 0x70
 8000f20:	d1c2      	bne.n	8000ea8 <d_expression_1+0x50>
 8000f22:	3202      	adds	r2, #2
 8000f24:	60c2      	str	r2, [r0, #12]
 8000f26:	f7ff ff97 	bl	8000e58 <d_expression_1>
 8000f2a:	2300      	movs	r3, #0
 8000f2c:	4602      	mov	r2, r0
 8000f2e:	214b      	movs	r1, #75	; 0x4b
 8000f30:	4620      	mov	r0, r4
 8000f32:	e02e      	b.n	8000f92 <d_expression_1+0x13a>
 8000f34:	7853      	ldrb	r3, [r2, #1]
 8000f36:	2b6e      	cmp	r3, #110	; 0x6e
 8000f38:	d1b6      	bne.n	8000ea8 <d_expression_1+0x50>
 8000f3a:	3202      	adds	r2, #2
 8000f3c:	60c2      	str	r2, [r0, #12]
 8000f3e:	e79e      	b.n	8000e7e <d_expression_1+0x26>
 8000f40:	6881      	ldr	r1, [r0, #8]
 8000f42:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000f44:	688a      	ldr	r2, [r1, #8]
 8000f46:	680e      	ldr	r6, [r1, #0]
 8000f48:	3a02      	subs	r2, #2
 8000f4a:	4413      	add	r3, r2
 8000f4c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f4e:	7833      	ldrb	r3, [r6, #0]
 8000f50:	2b73      	cmp	r3, #115	; 0x73
 8000f52:	d14f      	bne.n	8000ff4 <d_expression_1+0x19c>
 8000f54:	7872      	ldrb	r2, [r6, #1]
 8000f56:	2a74      	cmp	r2, #116	; 0x74
 8000f58:	d14c      	bne.n	8000ff4 <d_expression_1+0x19c>
 8000f5a:	78b2      	ldrb	r2, [r6, #2]
 8000f5c:	2a00      	cmp	r2, #0
 8000f5e:	d149      	bne.n	8000ff4 <d_expression_1+0x19c>
 8000f60:	4620      	mov	r0, r4
 8000f62:	f000 fe01 	bl	8001b68 <d_type>
 8000f66:	462a      	mov	r2, r5
 8000f68:	4603      	mov	r3, r0
 8000f6a:	2137      	movs	r1, #55	; 0x37
 8000f6c:	4620      	mov	r0, r4
 8000f6e:	e010      	b.n	8000f92 <d_expression_1+0x13a>
 8000f70:	2500      	movs	r5, #0
 8000f72:	4628      	mov	r0, r5
 8000f74:	b003      	add	sp, #12
 8000f76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f78:	f001 bd10 	b.w	800299c <d_expr_primary>
 8000f7c:	f7ff ba9e 	b.w	80004bc <d_template_param>
 8000f80:	3301      	adds	r3, #1
 8000f82:	60e3      	str	r3, [r4, #12]
 8000f84:	4620      	mov	r0, r4
 8000f86:	f000 f987 	bl	8001298 <d_template_args_1>
 8000f8a:	462a      	mov	r2, r5
 8000f8c:	4603      	mov	r3, r0
 8000f8e:	2104      	movs	r1, #4
 8000f90:	4620      	mov	r0, r4
 8000f92:	b003      	add	sp, #12
 8000f94:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8000f98:	f7ff b91a 	b.w	80001d0 <d_make_comp>
 8000f9c:	2b74      	cmp	r3, #116	; 0x74
 8000f9e:	d183      	bne.n	8000ea8 <d_expression_1+0x50>
 8000fa0:	7853      	ldrb	r3, [r2, #1]
 8000fa2:	2b6c      	cmp	r3, #108	; 0x6c
 8000fa4:	d180      	bne.n	8000ea8 <d_expression_1+0x50>
 8000fa6:	3202      	adds	r2, #2
 8000fa8:	60e2      	str	r2, [r4, #12]
 8000faa:	f000 fddd 	bl	8001b68 <d_type>
 8000fae:	68e2      	ldr	r2, [r4, #12]
 8000fb0:	4605      	mov	r5, r0
 8000fb2:	e013      	b.n	8000fdc <d_expression_1+0x184>
 8000fb4:	3202      	adds	r2, #2
 8000fb6:	60c2      	str	r2, [r0, #12]
 8000fb8:	f000 fdd6 	bl	8001b68 <d_type>
 8000fbc:	4605      	mov	r5, r0
 8000fbe:	4620      	mov	r0, r4
 8000fc0:	f001 fb9e 	bl	8002700 <d_unqualified_name>
 8000fc4:	68e3      	ldr	r3, [r4, #12]
 8000fc6:	7819      	ldrb	r1, [r3, #0]
 8000fc8:	2949      	cmp	r1, #73	; 0x49
 8000fca:	d01a      	beq.n	8001002 <d_expression_1+0x1aa>
 8000fcc:	4603      	mov	r3, r0
 8000fce:	462a      	mov	r2, r5
 8000fd0:	4620      	mov	r0, r4
 8000fd2:	2101      	movs	r1, #1
 8000fd4:	e7dd      	b.n	8000f92 <d_expression_1+0x13a>
 8000fd6:	3202      	adds	r2, #2
 8000fd8:	60e2      	str	r2, [r4, #12]
 8000fda:	2500      	movs	r5, #0
 8000fdc:	7853      	ldrb	r3, [r2, #1]
 8000fde:	2b00      	cmp	r3, #0
 8000fe0:	d0c6      	beq.n	8000f70 <d_expression_1+0x118>
 8000fe2:	2145      	movs	r1, #69	; 0x45
 8000fe4:	4620      	mov	r0, r4
 8000fe6:	f7ff fcb7 	bl	8000958 <d_exprlist>
 8000fea:	462a      	mov	r2, r5
 8000fec:	4603      	mov	r3, r0
 8000fee:	2131      	movs	r1, #49	; 0x31
 8000ff0:	4620      	mov	r0, r4
 8000ff2:	e7ce      	b.n	8000f92 <d_expression_1+0x13a>
 8000ff4:	68cf      	ldr	r7, [r1, #12]
 8000ff6:	2f03      	cmp	r7, #3
 8000ff8:	d8ba      	bhi.n	8000f70 <d_expression_1+0x118>
 8000ffa:	e8df f007 	tbb	[pc, r7]
 8000ffe:	1330      	.short	0x1330
 8001000:	6135      	.short	0x6135
 8001002:	3301      	adds	r3, #1
 8001004:	9001      	str	r0, [sp, #4]
 8001006:	60e3      	str	r3, [r4, #12]
 8001008:	4620      	mov	r0, r4
 800100a:	f000 f945 	bl	8001298 <d_template_args_1>
 800100e:	9a01      	ldr	r2, [sp, #4]
 8001010:	4603      	mov	r3, r0
 8001012:	2104      	movs	r1, #4
 8001014:	4620      	mov	r0, r4
 8001016:	f7ff f8db 	bl	80001d0 <d_make_comp>
 800101a:	462a      	mov	r2, r5
 800101c:	4603      	mov	r3, r0
 800101e:	2101      	movs	r1, #1
 8001020:	4620      	mov	r0, r4
 8001022:	e7b6      	b.n	8000f92 <d_expression_1+0x13a>
 8001024:	7832      	ldrb	r2, [r6, #0]
 8001026:	2a70      	cmp	r2, #112	; 0x70
 8001028:	d079      	beq.n	800111e <d_expression_1+0x2c6>
 800102a:	2a6d      	cmp	r2, #109	; 0x6d
 800102c:	d077      	beq.n	800111e <d_expression_1+0x2c6>
 800102e:	2700      	movs	r7, #0
 8001030:	2b73      	cmp	r3, #115	; 0x73
 8001032:	d16f      	bne.n	8001114 <d_expression_1+0x2bc>
 8001034:	7873      	ldrb	r3, [r6, #1]
 8001036:	2b50      	cmp	r3, #80	; 0x50
 8001038:	d16c      	bne.n	8001114 <d_expression_1+0x2bc>
 800103a:	78b3      	ldrb	r3, [r6, #2]
 800103c:	2b00      	cmp	r3, #0
 800103e:	d169      	bne.n	8001114 <d_expression_1+0x2bc>
 8001040:	4620      	mov	r0, r4
 8001042:	f000 f929 	bl	8001298 <d_template_args_1>
 8001046:	4603      	mov	r3, r0
 8001048:	b12f      	cbz	r7, 8001056 <d_expression_1+0x1fe>
 800104a:	461a      	mov	r2, r3
 800104c:	2139      	movs	r1, #57	; 0x39
 800104e:	4620      	mov	r0, r4
 8001050:	f7ff f8be 	bl	80001d0 <d_make_comp>
 8001054:	4603      	mov	r3, r0
 8001056:	462a      	mov	r2, r5
 8001058:	4620      	mov	r0, r4
 800105a:	2137      	movs	r1, #55	; 0x37
 800105c:	e799      	b.n	8000f92 <d_expression_1+0x13a>
 800105e:	462a      	mov	r2, r5
 8001060:	4620      	mov	r0, r4
 8001062:	2300      	movs	r3, #0
 8001064:	2136      	movs	r1, #54	; 0x36
 8001066:	e794      	b.n	8000f92 <d_expression_1+0x13a>
 8001068:	68ab      	ldr	r3, [r5, #8]
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	785a      	ldrb	r2, [r3, #1]
 800106e:	2a63      	cmp	r2, #99	; 0x63
 8001070:	f000 80b9 	beq.w	80011e6 <d_expression_1+0x38e>
 8001074:	7833      	ldrb	r3, [r6, #0]
 8001076:	2b66      	cmp	r3, #102	; 0x66
 8001078:	f000 80c3 	beq.w	8001202 <d_expression_1+0x3aa>
 800107c:	4620      	mov	r0, r4
 800107e:	f7ff feeb 	bl	8000e58 <d_expression_1>
 8001082:	4607      	mov	r7, r0
 8001084:	7833      	ldrb	r3, [r6, #0]
 8001086:	2b63      	cmp	r3, #99	; 0x63
 8001088:	d17b      	bne.n	8001182 <d_expression_1+0x32a>
 800108a:	7872      	ldrb	r2, [r6, #1]
 800108c:	2a6c      	cmp	r2, #108	; 0x6c
 800108e:	d178      	bne.n	8001182 <d_expression_1+0x32a>
 8001090:	78b2      	ldrb	r2, [r6, #2]
 8001092:	2a00      	cmp	r2, #0
 8001094:	d175      	bne.n	8001182 <d_expression_1+0x32a>
 8001096:	2145      	movs	r1, #69	; 0x45
 8001098:	4620      	mov	r0, r4
 800109a:	f7ff fc5d 	bl	8000958 <d_exprlist>
 800109e:	4602      	mov	r2, r0
 80010a0:	4613      	mov	r3, r2
 80010a2:	2139      	movs	r1, #57	; 0x39
 80010a4:	463a      	mov	r2, r7
 80010a6:	4620      	mov	r0, r4
 80010a8:	f7ff f892 	bl	80001d0 <d_make_comp>
 80010ac:	462a      	mov	r2, r5
 80010ae:	4603      	mov	r3, r0
 80010b0:	2138      	movs	r1, #56	; 0x38
 80010b2:	4620      	mov	r0, r4
 80010b4:	e76d      	b.n	8000f92 <d_expression_1+0x13a>
 80010b6:	4620      	mov	r0, r4
 80010b8:	f7ff fece 	bl	8000e58 <d_expression_1>
 80010bc:	4603      	mov	r3, r0
 80010be:	e7ca      	b.n	8001056 <d_expression_1+0x1fe>
 80010c0:	2b71      	cmp	r3, #113	; 0x71
 80010c2:	d137      	bne.n	8001134 <d_expression_1+0x2dc>
 80010c4:	7873      	ldrb	r3, [r6, #1]
 80010c6:	2b75      	cmp	r3, #117	; 0x75
 80010c8:	d134      	bne.n	8001134 <d_expression_1+0x2dc>
 80010ca:	78b3      	ldrb	r3, [r6, #2]
 80010cc:	bb93      	cbnz	r3, 8001134 <d_expression_1+0x2dc>
 80010ce:	4620      	mov	r0, r4
 80010d0:	f7ff fec2 	bl	8000e58 <d_expression_1>
 80010d4:	4606      	mov	r6, r0
 80010d6:	4620      	mov	r0, r4
 80010d8:	f7ff febe 	bl	8000e58 <d_expression_1>
 80010dc:	4607      	mov	r7, r0
 80010de:	4620      	mov	r0, r4
 80010e0:	f7ff feba 	bl	8000e58 <d_expression_1>
 80010e4:	4603      	mov	r3, r0
 80010e6:	2800      	cmp	r0, #0
 80010e8:	f43f af42 	beq.w	8000f70 <d_expression_1+0x118>
 80010ec:	463a      	mov	r2, r7
 80010ee:	213c      	movs	r1, #60	; 0x3c
 80010f0:	4620      	mov	r0, r4
 80010f2:	f7ff f86d 	bl	80001d0 <d_make_comp>
 80010f6:	4632      	mov	r2, r6
 80010f8:	4603      	mov	r3, r0
 80010fa:	213b      	movs	r1, #59	; 0x3b
 80010fc:	4620      	mov	r0, r4
 80010fe:	f7ff f867 	bl	80001d0 <d_make_comp>
 8001102:	462a      	mov	r2, r5
 8001104:	4603      	mov	r3, r0
 8001106:	213a      	movs	r1, #58	; 0x3a
 8001108:	4620      	mov	r0, r4
 800110a:	e742      	b.n	8000f92 <d_expression_1+0x13a>
 800110c:	3203      	adds	r2, #3
 800110e:	60c2      	str	r2, [r0, #12]
 8001110:	2000      	movs	r0, #0
 8001112:	e6f1      	b.n	8000ef8 <d_expression_1+0xa0>
 8001114:	4620      	mov	r0, r4
 8001116:	f7ff fe9f 	bl	8000e58 <d_expression_1>
 800111a:	4603      	mov	r3, r0
 800111c:	e794      	b.n	8001048 <d_expression_1+0x1f0>
 800111e:	7871      	ldrb	r1, [r6, #1]
 8001120:	4291      	cmp	r1, r2
 8001122:	d184      	bne.n	800102e <d_expression_1+0x1d6>
 8001124:	68e2      	ldr	r2, [r4, #12]
 8001126:	7811      	ldrb	r1, [r2, #0]
 8001128:	295f      	cmp	r1, #95	; 0x5f
 800112a:	d181      	bne.n	8001030 <d_expression_1+0x1d8>
 800112c:	3201      	adds	r2, #1
 800112e:	60e2      	str	r2, [r4, #12]
 8001130:	7833      	ldrb	r3, [r6, #0]
 8001132:	e77c      	b.n	800102e <d_expression_1+0x1d6>
 8001134:	7833      	ldrb	r3, [r6, #0]
 8001136:	2b66      	cmp	r3, #102	; 0x66
 8001138:	d06f      	beq.n	800121a <d_expression_1+0x3c2>
 800113a:	2b6e      	cmp	r3, #110	; 0x6e
 800113c:	f47f af18 	bne.w	8000f70 <d_expression_1+0x118>
 8001140:	7873      	ldrb	r3, [r6, #1]
 8001142:	2b77      	cmp	r3, #119	; 0x77
 8001144:	d002      	beq.n	800114c <d_expression_1+0x2f4>
 8001146:	2b61      	cmp	r3, #97	; 0x61
 8001148:	f47f af12 	bne.w	8000f70 <d_expression_1+0x118>
 800114c:	215f      	movs	r1, #95	; 0x5f
 800114e:	4620      	mov	r0, r4
 8001150:	f7ff fc02 	bl	8000958 <d_exprlist>
 8001154:	4606      	mov	r6, r0
 8001156:	4620      	mov	r0, r4
 8001158:	f000 fd06 	bl	8001b68 <d_type>
 800115c:	68e3      	ldr	r3, [r4, #12]
 800115e:	7819      	ldrb	r1, [r3, #0]
 8001160:	2945      	cmp	r1, #69	; 0x45
 8001162:	4607      	mov	r7, r0
 8001164:	d069      	beq.n	800123a <d_expression_1+0x3e2>
 8001166:	2970      	cmp	r1, #112	; 0x70
 8001168:	d05b      	beq.n	8001222 <d_expression_1+0x3ca>
 800116a:	2969      	cmp	r1, #105	; 0x69
 800116c:	f47f af00 	bne.w	8000f70 <d_expression_1+0x118>
 8001170:	785b      	ldrb	r3, [r3, #1]
 8001172:	2b6c      	cmp	r3, #108	; 0x6c
 8001174:	f47f aefc 	bne.w	8000f70 <d_expression_1+0x118>
 8001178:	4620      	mov	r0, r4
 800117a:	f7ff fe6d 	bl	8000e58 <d_expression_1>
 800117e:	4603      	mov	r3, r0
 8001180:	e7b4      	b.n	80010ec <d_expression_1+0x294>
 8001182:	2b64      	cmp	r3, #100	; 0x64
 8001184:	d128      	bne.n	80011d8 <d_expression_1+0x380>
 8001186:	7872      	ldrb	r2, [r6, #1]
 8001188:	2a74      	cmp	r2, #116	; 0x74
 800118a:	d125      	bne.n	80011d8 <d_expression_1+0x380>
 800118c:	78b2      	ldrb	r2, [r6, #2]
 800118e:	bb1a      	cbnz	r2, 80011d8 <d_expression_1+0x380>
 8001190:	4620      	mov	r0, r4
 8001192:	f001 fab5 	bl	8002700 <d_unqualified_name>
 8001196:	68e3      	ldr	r3, [r4, #12]
 8001198:	7819      	ldrb	r1, [r3, #0]
 800119a:	2949      	cmp	r1, #73	; 0x49
 800119c:	4602      	mov	r2, r0
 800119e:	f47f af7f 	bne.w	80010a0 <d_expression_1+0x248>
 80011a2:	3301      	adds	r3, #1
 80011a4:	9001      	str	r0, [sp, #4]
 80011a6:	60e3      	str	r3, [r4, #12]
 80011a8:	4620      	mov	r0, r4
 80011aa:	f000 f875 	bl	8001298 <d_template_args_1>
 80011ae:	9a01      	ldr	r2, [sp, #4]
 80011b0:	4603      	mov	r3, r0
 80011b2:	2104      	movs	r1, #4
 80011b4:	4620      	mov	r0, r4
 80011b6:	f7ff f80b 	bl	80001d0 <d_make_comp>
 80011ba:	4602      	mov	r2, r0
 80011bc:	e770      	b.n	80010a0 <d_expression_1+0x248>
 80011be:	68e3      	ldr	r3, [r4, #12]
 80011c0:	781a      	ldrb	r2, [r3, #0]
 80011c2:	2a5f      	cmp	r2, #95	; 0x5f
 80011c4:	f47f af77 	bne.w	80010b6 <d_expression_1+0x25e>
 80011c8:	3301      	adds	r3, #1
 80011ca:	60e3      	str	r3, [r4, #12]
 80011cc:	2145      	movs	r1, #69	; 0x45
 80011ce:	4620      	mov	r0, r4
 80011d0:	f7ff fbc2 	bl	8000958 <d_exprlist>
 80011d4:	4603      	mov	r3, r0
 80011d6:	e73e      	b.n	8001056 <d_expression_1+0x1fe>
 80011d8:	2b70      	cmp	r3, #112	; 0x70
 80011da:	d017      	beq.n	800120c <d_expression_1+0x3b4>
 80011dc:	4620      	mov	r0, r4
 80011de:	f7ff fe3b 	bl	8000e58 <d_expression_1>
 80011e2:	4602      	mov	r2, r0
 80011e4:	e75c      	b.n	80010a0 <d_expression_1+0x248>
 80011e6:	781b      	ldrb	r3, [r3, #0]
 80011e8:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80011ec:	2a01      	cmp	r2, #1
 80011ee:	d903      	bls.n	80011f8 <d_expression_1+0x3a0>
 80011f0:	3b72      	subs	r3, #114	; 0x72
 80011f2:	2b01      	cmp	r3, #1
 80011f4:	f63f af3e 	bhi.w	8001074 <d_expression_1+0x21c>
 80011f8:	4620      	mov	r0, r4
 80011fa:	f000 fcb5 	bl	8001b68 <d_type>
 80011fe:	4607      	mov	r7, r0
 8001200:	e740      	b.n	8001084 <d_expression_1+0x22c>
 8001202:	4620      	mov	r0, r4
 8001204:	f001 f8a8 	bl	8002358 <d_operator_name>
 8001208:	4607      	mov	r7, r0
 800120a:	e73b      	b.n	8001084 <d_expression_1+0x22c>
 800120c:	7873      	ldrb	r3, [r6, #1]
 800120e:	2b74      	cmp	r3, #116	; 0x74
 8001210:	d1e4      	bne.n	80011dc <d_expression_1+0x384>
 8001212:	78b3      	ldrb	r3, [r6, #2]
 8001214:	2b00      	cmp	r3, #0
 8001216:	d0bb      	beq.n	8001190 <d_expression_1+0x338>
 8001218:	e7e0      	b.n	80011dc <d_expression_1+0x384>
 800121a:	4620      	mov	r0, r4
 800121c:	f001 f89c 	bl	8002358 <d_operator_name>
 8001220:	e758      	b.n	80010d4 <d_expression_1+0x27c>
 8001222:	785a      	ldrb	r2, [r3, #1]
 8001224:	2a69      	cmp	r2, #105	; 0x69
 8001226:	f47f aea3 	bne.w	8000f70 <d_expression_1+0x118>
 800122a:	3302      	adds	r3, #2
 800122c:	60e3      	str	r3, [r4, #12]
 800122e:	2145      	movs	r1, #69	; 0x45
 8001230:	4620      	mov	r0, r4
 8001232:	f7ff fb91 	bl	8000958 <d_exprlist>
 8001236:	4603      	mov	r3, r0
 8001238:	e758      	b.n	80010ec <d_expression_1+0x294>
 800123a:	3301      	adds	r3, #1
 800123c:	60e3      	str	r3, [r4, #12]
 800123e:	2300      	movs	r3, #0
 8001240:	e754      	b.n	80010ec <d_expression_1+0x294>
 8001242:	bf00      	nop

08001244 <d_template_arg>:
 8001244:	b538      	push	{r3, r4, r5, lr}
 8001246:	68c2      	ldr	r2, [r0, #12]
 8001248:	7813      	ldrb	r3, [r2, #0]
 800124a:	2b4c      	cmp	r3, #76	; 0x4c
 800124c:	d01d      	beq.n	800128a <d_template_arg+0x46>
 800124e:	4604      	mov	r4, r0
 8001250:	d805      	bhi.n	800125e <d_template_arg+0x1a>
 8001252:	3b49      	subs	r3, #73	; 0x49
 8001254:	2b01      	cmp	r3, #1
 8001256:	d813      	bhi.n	8001280 <d_template_arg+0x3c>
 8001258:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800125c:	e04e      	b.n	80012fc <d_template_args>
 800125e:	2b58      	cmp	r3, #88	; 0x58
 8001260:	d10e      	bne.n	8001280 <d_template_arg+0x3c>
 8001262:	3201      	adds	r2, #1
 8001264:	2301      	movs	r3, #1
 8001266:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8001268:	60c2      	str	r2, [r0, #12]
 800126a:	6303      	str	r3, [r0, #48]	; 0x30
 800126c:	f7ff fdf4 	bl	8000e58 <d_expression_1>
 8001270:	68e3      	ldr	r3, [r4, #12]
 8001272:	6325      	str	r5, [r4, #48]	; 0x30
 8001274:	781a      	ldrb	r2, [r3, #0]
 8001276:	2a45      	cmp	r2, #69	; 0x45
 8001278:	d10b      	bne.n	8001292 <d_template_arg+0x4e>
 800127a:	3301      	adds	r3, #1
 800127c:	60e3      	str	r3, [r4, #12]
 800127e:	bd38      	pop	{r3, r4, r5, pc}
 8001280:	4620      	mov	r0, r4
 8001282:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001286:	f000 bc6f 	b.w	8001b68 <d_type>
 800128a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800128e:	f001 bb85 	b.w	800299c <d_expr_primary>
 8001292:	2000      	movs	r0, #0
 8001294:	bd38      	pop	{r3, r4, r5, pc}
 8001296:	bf00      	nop

08001298 <d_template_args_1>:
 8001298:	b570      	push	{r4, r5, r6, lr}
 800129a:	68c3      	ldr	r3, [r0, #12]
 800129c:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800129e:	781a      	ldrb	r2, [r3, #0]
 80012a0:	2a45      	cmp	r2, #69	; 0x45
 80012a2:	b082      	sub	sp, #8
 80012a4:	4604      	mov	r4, r0
 80012a6:	d01f      	beq.n	80012e8 <d_template_args_1+0x50>
 80012a8:	2300      	movs	r3, #0
 80012aa:	9301      	str	r3, [sp, #4]
 80012ac:	ad01      	add	r5, sp, #4
 80012ae:	e009      	b.n	80012c4 <d_template_args_1+0x2c>
 80012b0:	f7fe ff8e 	bl	80001d0 <d_make_comp>
 80012b4:	6028      	str	r0, [r5, #0]
 80012b6:	f100 050c 	add.w	r5, r0, #12
 80012ba:	b160      	cbz	r0, 80012d6 <d_template_args_1+0x3e>
 80012bc:	68e3      	ldr	r3, [r4, #12]
 80012be:	781a      	ldrb	r2, [r3, #0]
 80012c0:	2a45      	cmp	r2, #69	; 0x45
 80012c2:	d00b      	beq.n	80012dc <d_template_args_1+0x44>
 80012c4:	4620      	mov	r0, r4
 80012c6:	f7ff ffbd 	bl	8001244 <d_template_arg>
 80012ca:	4602      	mov	r2, r0
 80012cc:	2300      	movs	r3, #0
 80012ce:	212f      	movs	r1, #47	; 0x2f
 80012d0:	4620      	mov	r0, r4
 80012d2:	2a00      	cmp	r2, #0
 80012d4:	d1ec      	bne.n	80012b0 <d_template_args_1+0x18>
 80012d6:	2000      	movs	r0, #0
 80012d8:	b002      	add	sp, #8
 80012da:	bd70      	pop	{r4, r5, r6, pc}
 80012dc:	9801      	ldr	r0, [sp, #4]
 80012de:	62a6      	str	r6, [r4, #40]	; 0x28
 80012e0:	3301      	adds	r3, #1
 80012e2:	60e3      	str	r3, [r4, #12]
 80012e4:	b002      	add	sp, #8
 80012e6:	bd70      	pop	{r4, r5, r6, pc}
 80012e8:	1c5a      	adds	r2, r3, #1
 80012ea:	2300      	movs	r3, #0
 80012ec:	60c2      	str	r2, [r0, #12]
 80012ee:	212f      	movs	r1, #47	; 0x2f
 80012f0:	461a      	mov	r2, r3
 80012f2:	b002      	add	sp, #8
 80012f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80012f8:	f7fe bf6a 	b.w	80001d0 <d_make_comp>

080012fc <d_template_args>:
 80012fc:	68c1      	ldr	r1, [r0, #12]
 80012fe:	780a      	ldrb	r2, [r1, #0]
 8001300:	3a49      	subs	r2, #73	; 0x49
 8001302:	2a01      	cmp	r2, #1
 8001304:	d802      	bhi.n	800130c <d_template_args+0x10>
 8001306:	3101      	adds	r1, #1
 8001308:	60c1      	str	r1, [r0, #12]
 800130a:	e7c5      	b.n	8001298 <d_template_args_1>
 800130c:	2000      	movs	r0, #0
 800130e:	4770      	bx	lr

08001310 <d_encoding>:
 8001310:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001314:	68c2      	ldr	r2, [r0, #12]
 8001316:	7813      	ldrb	r3, [r2, #0]
 8001318:	2b47      	cmp	r3, #71	; 0x47
 800131a:	b083      	sub	sp, #12
 800131c:	4604      	mov	r4, r0
 800131e:	d001      	beq.n	8001324 <d_encoding+0x14>
 8001320:	2b54      	cmp	r3, #84	; 0x54
 8001322:	d134      	bne.n	800138e <d_encoding+0x7e>
 8001324:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8001326:	f101 0314 	add.w	r3, r1, #20
 800132a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800132c:	7813      	ldrb	r3, [r2, #0]
 800132e:	2b54      	cmp	r3, #84	; 0x54
 8001330:	d05d      	beq.n	80013ee <d_encoding+0xde>
 8001332:	2b47      	cmp	r3, #71	; 0x47
 8001334:	f040 80a6 	bne.w	8001484 <d_encoding+0x174>
 8001338:	1c53      	adds	r3, r2, #1
 800133a:	60e3      	str	r3, [r4, #12]
 800133c:	7853      	ldrb	r3, [r2, #1]
 800133e:	2b00      	cmp	r3, #0
 8001340:	f000 80a0 	beq.w	8001484 <d_encoding+0x174>
 8001344:	1c93      	adds	r3, r2, #2
 8001346:	60e3      	str	r3, [r4, #12]
 8001348:	7853      	ldrb	r3, [r2, #1]
 800134a:	2b56      	cmp	r3, #86	; 0x56
 800134c:	f200 80b6 	bhi.w	80014bc <d_encoding+0x1ac>
 8001350:	2b40      	cmp	r3, #64	; 0x40
 8001352:	f240 8097 	bls.w	8001484 <d_encoding+0x174>
 8001356:	3b41      	subs	r3, #65	; 0x41
 8001358:	2b15      	cmp	r3, #21
 800135a:	f200 8093 	bhi.w	8001484 <d_encoding+0x174>
 800135e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8001362:	0117      	.short	0x0117
 8001364:	00910091 	.word	0x00910091
 8001368:	00910091 	.word	0x00910091
 800136c:	00910091 	.word	0x00910091
 8001370:	00910091 	.word	0x00910091
 8001374:	00910091 	.word	0x00910091
 8001378:	00910091 	.word	0x00910091
 800137c:	00910091 	.word	0x00910091
 8001380:	00910091 	.word	0x00910091
 8001384:	00910124 	.word	0x00910124
 8001388:	00910130 	.word	0x00910130
 800138c:	0141      	.short	0x0141
 800138e:	460e      	mov	r6, r1
 8001390:	f000 fa20 	bl	80017d4 <d_name>
 8001394:	4605      	mov	r5, r0
 8001396:	2800      	cmp	r0, #0
 8001398:	d074      	beq.n	8001484 <d_encoding+0x174>
 800139a:	2e00      	cmp	r6, #0
 800139c:	d077      	beq.n	800148e <d_encoding+0x17e>
 800139e:	68a3      	ldr	r3, [r4, #8]
 80013a0:	07db      	lsls	r3, r3, #31
 80013a2:	d474      	bmi.n	800148e <d_encoding+0x17e>
 80013a4:	782b      	ldrb	r3, [r5, #0]
 80013a6:	2b4d      	cmp	r3, #77	; 0x4d
 80013a8:	f1a3 011c 	sub.w	r1, r3, #28
 80013ac:	f1a3 024f 	sub.w	r2, r3, #79	; 0x4f
 80013b0:	f000 80d6 	beq.w	8001560 <d_encoding+0x250>
 80013b4:	f200 80d2 	bhi.w	800155c <d_encoding+0x24c>
 80013b8:	2904      	cmp	r1, #4
 80013ba:	f240 80d1 	bls.w	8001560 <d_encoding+0x250>
 80013be:	2b02      	cmp	r3, #2
 80013c0:	d161      	bne.n	8001486 <d_encoding+0x176>
 80013c2:	68ea      	ldr	r2, [r5, #12]
 80013c4:	7813      	ldrb	r3, [r2, #0]
 80013c6:	2b4d      	cmp	r3, #77	; 0x4d
 80013c8:	f1a3 001c 	sub.w	r0, r3, #28
 80013cc:	f1a3 014f 	sub.w	r1, r3, #79	; 0x4f
 80013d0:	d003      	beq.n	80013da <d_encoding+0xca>
 80013d2:	f200 81af 	bhi.w	8001734 <d_encoding+0x424>
 80013d6:	2804      	cmp	r0, #4
 80013d8:	d855      	bhi.n	8001486 <d_encoding+0x176>
 80013da:	6892      	ldr	r2, [r2, #8]
 80013dc:	60ea      	str	r2, [r5, #12]
 80013de:	7813      	ldrb	r3, [r2, #0]
 80013e0:	2b4d      	cmp	r3, #77	; 0x4d
 80013e2:	f1a3 001c 	sub.w	r0, r3, #28
 80013e6:	f1a3 014f 	sub.w	r1, r3, #79	; 0x4f
 80013ea:	d1f2      	bne.n	80013d2 <d_encoding+0xc2>
 80013ec:	e7f5      	b.n	80013da <d_encoding+0xca>
 80013ee:	1c53      	adds	r3, r2, #1
 80013f0:	60e3      	str	r3, [r4, #12]
 80013f2:	7853      	ldrb	r3, [r2, #1]
 80013f4:	2b00      	cmp	r3, #0
 80013f6:	d045      	beq.n	8001484 <d_encoding+0x174>
 80013f8:	1c93      	adds	r3, r2, #2
 80013fa:	60e3      	str	r3, [r4, #12]
 80013fc:	7853      	ldrb	r3, [r2, #1]
 80013fe:	3b41      	subs	r3, #65	; 0x41
 8001400:	2b35      	cmp	r3, #53	; 0x35
 8001402:	d83f      	bhi.n	8001484 <d_encoding+0x174>
 8001404:	e8df f013 	tbh	[pc, r3, lsl #1]
 8001408:	003e0133 	.word	0x003e0133
 800140c:	003e0116 	.word	0x003e0116
 8001410:	010e003e 	.word	0x010e003e
 8001414:	0106003e 	.word	0x0106003e
 8001418:	0186018e 	.word	0x0186018e
 800141c:	003e003e 	.word	0x003e003e
 8001420:	003e003e 	.word	0x003e003e
 8001424:	003e003e 	.word	0x003e003e
 8001428:	003e003e 	.word	0x003e003e
 800142c:	0174017e 	.word	0x0174017e
 8001430:	016a003e 	.word	0x016a003e
 8001434:	003e0162 	.word	0x003e0162
 8001438:	003e003e 	.word	0x003e003e
 800143c:	003e003e 	.word	0x003e003e
 8001440:	003e003e 	.word	0x003e003e
 8001444:	003e003e 	.word	0x003e003e
 8001448:	003e003e 	.word	0x003e003e
 800144c:	003e014b 	.word	0x003e014b
 8001450:	003e003e 	.word	0x003e003e
 8001454:	013b003e 	.word	0x013b003e
 8001458:	003e003e 	.word	0x003e003e
 800145c:	003e003e 	.word	0x003e003e
 8001460:	003e003e 	.word	0x003e003e
 8001464:	003e003e 	.word	0x003e003e
 8001468:	003e003e 	.word	0x003e003e
 800146c:	003e003e 	.word	0x003e003e
 8001470:	00f6003e 	.word	0x00f6003e
 8001474:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 8001478:	4298      	cmp	r0, r3
 800147a:	f2c0 8172 	blt.w	8001762 <d_encoding+0x452>
 800147e:	68e3      	ldr	r3, [r4, #12]
 8001480:	440b      	add	r3, r1
 8001482:	60e3      	str	r3, [r4, #12]
 8001484:	2500      	movs	r5, #0
 8001486:	4628      	mov	r0, r5
 8001488:	b003      	add	sp, #12
 800148a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800148e:	68e3      	ldr	r3, [r4, #12]
 8001490:	781b      	ldrb	r3, [r3, #0]
 8001492:	2b00      	cmp	r3, #0
 8001494:	d0f7      	beq.n	8001486 <d_encoding+0x176>
 8001496:	2b45      	cmp	r3, #69	; 0x45
 8001498:	d0f5      	beq.n	8001486 <d_encoding+0x176>
 800149a:	4629      	mov	r1, r5
 800149c:	780b      	ldrb	r3, [r1, #0]
 800149e:	2b04      	cmp	r3, #4
 80014a0:	f000 8173 	beq.w	800178a <d_encoding+0x47a>
 80014a4:	d954      	bls.n	8001550 <d_encoding+0x240>
 80014a6:	2b4d      	cmp	r3, #77	; 0x4d
 80014a8:	f1a3 024f 	sub.w	r2, r3, #79	; 0x4f
 80014ac:	d002      	beq.n	80014b4 <d_encoding+0x1a4>
 80014ae:	d959      	bls.n	8001564 <d_encoding+0x254>
 80014b0:	2a01      	cmp	r2, #1
 80014b2:	d85a      	bhi.n	800156a <d_encoding+0x25a>
 80014b4:	6889      	ldr	r1, [r1, #8]
 80014b6:	2900      	cmp	r1, #0
 80014b8:	d1f0      	bne.n	800149c <d_encoding+0x18c>
 80014ba:	e057      	b.n	800156c <d_encoding+0x25c>
 80014bc:	2b72      	cmp	r3, #114	; 0x72
 80014be:	d1e1      	bne.n	8001484 <d_encoding+0x174>
 80014c0:	f104 000c 	add.w	r0, r4, #12
 80014c4:	f7fe ff84 	bl	80003d0 <d_number.isra.0>
 80014c8:	2801      	cmp	r0, #1
 80014ca:	dddb      	ble.n	8001484 <d_encoding+0x174>
 80014cc:	68e3      	ldr	r3, [r4, #12]
 80014ce:	781a      	ldrb	r2, [r3, #0]
 80014d0:	2a00      	cmp	r2, #0
 80014d2:	d0d7      	beq.n	8001484 <d_encoding+0x174>
 80014d4:	1c5f      	adds	r7, r3, #1
 80014d6:	60e7      	str	r7, [r4, #12]
 80014d8:	781b      	ldrb	r3, [r3, #0]
 80014da:	2b5f      	cmp	r3, #95	; 0x5f
 80014dc:	d1d2      	bne.n	8001484 <d_encoding+0x174>
 80014de:	2200      	movs	r2, #0
 80014e0:	1e45      	subs	r5, r0, #1
 80014e2:	4690      	mov	r8, r2
 80014e4:	f04f 0941 	mov.w	r9, #65	; 0x41
 80014e8:	783b      	ldrb	r3, [r7, #0]
 80014ea:	2b00      	cmp	r3, #0
 80014ec:	d0ca      	beq.n	8001484 <d_encoding+0x174>
 80014ee:	2b24      	cmp	r3, #36	; 0x24
 80014f0:	f040 8124 	bne.w	800173c <d_encoding+0x42c>
 80014f4:	787b      	ldrb	r3, [r7, #1]
 80014f6:	2b53      	cmp	r3, #83	; 0x53
 80014f8:	f000 815e 	beq.w	80017b8 <d_encoding+0x4a8>
 80014fc:	2b5f      	cmp	r3, #95	; 0x5f
 80014fe:	f000 8159 	beq.w	80017b4 <d_encoding+0x4a4>
 8001502:	2b24      	cmp	r3, #36	; 0x24
 8001504:	d1be      	bne.n	8001484 <d_encoding+0x174>
 8001506:	4619      	mov	r1, r3
 8001508:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 800150c:	4298      	cmp	r0, r3
 800150e:	f280 8155 	bge.w	80017bc <d_encoding+0x4ac>
 8001512:	6926      	ldr	r6, [r4, #16]
 8001514:	0107      	lsls	r7, r0, #4
 8001516:	eb06 1300 	add.w	r3, r6, r0, lsl #4
 800151a:	3001      	adds	r0, #1
 800151c:	f8c3 8004 	str.w	r8, [r3, #4]
 8001520:	6160      	str	r0, [r4, #20]
 8001522:	f806 9007 	strb.w	r9, [r6, r7]
 8001526:	68e7      	ldr	r7, [r4, #12]
 8001528:	6099      	str	r1, [r3, #8]
 800152a:	3702      	adds	r7, #2
 800152c:	3d02      	subs	r5, #2
 800152e:	60e7      	str	r7, [r4, #12]
 8001530:	2a00      	cmp	r2, #0
 8001532:	f000 8128 	beq.w	8001786 <d_encoding+0x476>
 8001536:	2140      	movs	r1, #64	; 0x40
 8001538:	4620      	mov	r0, r4
 800153a:	f7fe fe49 	bl	80001d0 <d_make_comp>
 800153e:	4602      	mov	r2, r0
 8001540:	2800      	cmp	r0, #0
 8001542:	d09f      	beq.n	8001484 <d_encoding+0x174>
 8001544:	2d00      	cmp	r5, #0
 8001546:	dccf      	bgt.n	80014e8 <d_encoding+0x1d8>
 8001548:	4620      	mov	r0, r4
 800154a:	2300      	movs	r3, #0
 800154c:	213f      	movs	r1, #63	; 0x3f
 800154e:	e027      	b.n	80015a0 <d_encoding+0x290>
 8001550:	2b02      	cmp	r3, #2
 8001552:	d10a      	bne.n	800156a <d_encoding+0x25a>
 8001554:	68c9      	ldr	r1, [r1, #12]
 8001556:	2900      	cmp	r1, #0
 8001558:	d1a0      	bne.n	800149c <d_encoding+0x18c>
 800155a:	e007      	b.n	800156c <d_encoding+0x25c>
 800155c:	2a01      	cmp	r2, #1
 800155e:	d892      	bhi.n	8001486 <d_encoding+0x176>
 8001560:	68ad      	ldr	r5, [r5, #8]
 8001562:	e71f      	b.n	80013a4 <d_encoding+0x94>
 8001564:	3b1c      	subs	r3, #28
 8001566:	2b04      	cmp	r3, #4
 8001568:	d9a4      	bls.n	80014b4 <d_encoding+0x1a4>
 800156a:	2100      	movs	r1, #0
 800156c:	4620      	mov	r0, r4
 800156e:	f001 f86d 	bl	800264c <d_bare_function_type>
 8001572:	2800      	cmp	r0, #0
 8001574:	d086      	beq.n	8001484 <d_encoding+0x174>
 8001576:	b936      	cbnz	r6, 8001586 <d_encoding+0x276>
 8001578:	782b      	ldrb	r3, [r5, #0]
 800157a:	2b02      	cmp	r3, #2
 800157c:	d103      	bne.n	8001586 <d_encoding+0x276>
 800157e:	7803      	ldrb	r3, [r0, #0]
 8001580:	2b29      	cmp	r3, #41	; 0x29
 8001582:	bf08      	it	eq
 8001584:	6086      	streq	r6, [r0, #8]
 8001586:	4603      	mov	r3, r0
 8001588:	462a      	mov	r2, r5
 800158a:	4620      	mov	r0, r4
 800158c:	2103      	movs	r1, #3
 800158e:	e007      	b.n	80015a0 <d_encoding+0x290>
 8001590:	2100      	movs	r1, #0
 8001592:	4620      	mov	r0, r4
 8001594:	f7ff febc 	bl	8001310 <d_encoding>
 8001598:	2300      	movs	r3, #0
 800159a:	4602      	mov	r2, r0
 800159c:	2117      	movs	r1, #23
 800159e:	4620      	mov	r0, r4
 80015a0:	b003      	add	sp, #12
 80015a2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80015a6:	f7fe be13 	b.w	80001d0 <d_make_comp>
 80015aa:	4620      	mov	r0, r4
 80015ac:	f000 f912 	bl	80017d4 <d_name>
 80015b0:	9001      	str	r0, [sp, #4]
 80015b2:	4620      	mov	r0, r4
 80015b4:	f7fe ff50 	bl	8000458 <d_number_component>
 80015b8:	9a01      	ldr	r2, [sp, #4]
 80015ba:	4603      	mov	r3, r0
 80015bc:	2116      	movs	r1, #22
 80015be:	4620      	mov	r0, r4
 80015c0:	e7ee      	b.n	80015a0 <d_encoding+0x290>
 80015c2:	7893      	ldrb	r3, [r2, #2]
 80015c4:	2100      	movs	r1, #0
 80015c6:	4620      	mov	r0, r4
 80015c8:	b12b      	cbz	r3, 80015d6 <d_encoding+0x2c6>
 80015ca:	1cd3      	adds	r3, r2, #3
 80015cc:	60e3      	str	r3, [r4, #12]
 80015ce:	7893      	ldrb	r3, [r2, #2]
 80015d0:	2b6e      	cmp	r3, #110	; 0x6e
 80015d2:	f000 80f8 	beq.w	80017c6 <d_encoding+0x4b6>
 80015d6:	f7ff fe9b 	bl	8001310 <d_encoding>
 80015da:	2300      	movs	r3, #0
 80015dc:	4602      	mov	r2, r0
 80015de:	2149      	movs	r1, #73	; 0x49
 80015e0:	4620      	mov	r0, r4
 80015e2:	e7dd      	b.n	80015a0 <d_encoding+0x290>
 80015e4:	4620      	mov	r0, r4
 80015e6:	f000 f8f5 	bl	80017d4 <d_name>
 80015ea:	2300      	movs	r3, #0
 80015ec:	4602      	mov	r2, r0
 80015ee:	2113      	movs	r1, #19
 80015f0:	4620      	mov	r0, r4
 80015f2:	e7d5      	b.n	80015a0 <d_encoding+0x290>
 80015f4:	2176      	movs	r1, #118	; 0x76
 80015f6:	4620      	mov	r0, r4
 80015f8:	f7ff f8b8 	bl	800076c <d_call_offset>
 80015fc:	2800      	cmp	r0, #0
 80015fe:	f43f af41 	beq.w	8001484 <d_encoding+0x174>
 8001602:	2100      	movs	r1, #0
 8001604:	4620      	mov	r0, r4
 8001606:	f7ff fe83 	bl	8001310 <d_encoding>
 800160a:	2300      	movs	r3, #0
 800160c:	4602      	mov	r2, r0
 800160e:	2110      	movs	r1, #16
 8001610:	4620      	mov	r0, r4
 8001612:	e7c5      	b.n	80015a0 <d_encoding+0x290>
 8001614:	4620      	mov	r0, r4
 8001616:	f000 f8dd 	bl	80017d4 <d_name>
 800161a:	2300      	movs	r3, #0
 800161c:	4602      	mov	r2, r0
 800161e:	2114      	movs	r1, #20
 8001620:	4620      	mov	r0, r4
 8001622:	e7bd      	b.n	80015a0 <d_encoding+0x290>
 8001624:	4620      	mov	r0, r4
 8001626:	f000 fa9f 	bl	8001b68 <d_type>
 800162a:	2300      	movs	r3, #0
 800162c:	4602      	mov	r2, r0
 800162e:	210e      	movs	r1, #14
 8001630:	4620      	mov	r0, r4
 8001632:	e7b5      	b.n	80015a0 <d_encoding+0x290>
 8001634:	4620      	mov	r0, r4
 8001636:	f000 fa97 	bl	8001b68 <d_type>
 800163a:	4605      	mov	r5, r0
 800163c:	f104 000c 	add.w	r0, r4, #12
 8001640:	f7fe fec6 	bl	80003d0 <d_number.isra.0>
 8001644:	2800      	cmp	r0, #0
 8001646:	f6ff af1d 	blt.w	8001484 <d_encoding+0x174>
 800164a:	68e3      	ldr	r3, [r4, #12]
 800164c:	781a      	ldrb	r2, [r3, #0]
 800164e:	2a5f      	cmp	r2, #95	; 0x5f
 8001650:	f47f af18 	bne.w	8001484 <d_encoding+0x174>
 8001654:	3301      	adds	r3, #1
 8001656:	60e3      	str	r3, [r4, #12]
 8001658:	4620      	mov	r0, r4
 800165a:	f000 fa85 	bl	8001b68 <d_type>
 800165e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001660:	1d59      	adds	r1, r3, #5
 8001662:	4602      	mov	r2, r0
 8001664:	62e1      	str	r1, [r4, #44]	; 0x2c
 8001666:	462b      	mov	r3, r5
 8001668:	4620      	mov	r0, r4
 800166a:	210b      	movs	r1, #11
 800166c:	e798      	b.n	80015a0 <d_encoding+0x290>
 800166e:	4620      	mov	r0, r4
 8001670:	f7ff fde8 	bl	8001244 <d_template_arg>
 8001674:	2300      	movs	r3, #0
 8001676:	4602      	mov	r2, r0
 8001678:	2130      	movs	r1, #48	; 0x30
 800167a:	4620      	mov	r0, r4
 800167c:	e790      	b.n	80015a0 <d_encoding+0x290>
 800167e:	2168      	movs	r1, #104	; 0x68
 8001680:	4620      	mov	r0, r4
 8001682:	f7ff f873 	bl	800076c <d_call_offset>
 8001686:	2800      	cmp	r0, #0
 8001688:	f43f aefc 	beq.w	8001484 <d_encoding+0x174>
 800168c:	2100      	movs	r1, #0
 800168e:	4620      	mov	r0, r4
 8001690:	f7ff fe3e 	bl	8001310 <d_encoding>
 8001694:	2300      	movs	r3, #0
 8001696:	4602      	mov	r2, r0
 8001698:	210f      	movs	r1, #15
 800169a:	4620      	mov	r0, r4
 800169c:	e780      	b.n	80015a0 <d_encoding+0x290>
 800169e:	2100      	movs	r1, #0
 80016a0:	4620      	mov	r0, r4
 80016a2:	f7ff f863 	bl	800076c <d_call_offset>
 80016a6:	2800      	cmp	r0, #0
 80016a8:	f43f aeec 	beq.w	8001484 <d_encoding+0x174>
 80016ac:	2100      	movs	r1, #0
 80016ae:	4620      	mov	r0, r4
 80016b0:	f7ff f85c 	bl	800076c <d_call_offset>
 80016b4:	2800      	cmp	r0, #0
 80016b6:	f43f aee5 	beq.w	8001484 <d_encoding+0x174>
 80016ba:	2100      	movs	r1, #0
 80016bc:	4620      	mov	r0, r4
 80016be:	f7ff fe27 	bl	8001310 <d_encoding>
 80016c2:	2300      	movs	r3, #0
 80016c4:	4602      	mov	r2, r0
 80016c6:	2111      	movs	r1, #17
 80016c8:	4620      	mov	r0, r4
 80016ca:	e769      	b.n	80015a0 <d_encoding+0x290>
 80016cc:	4620      	mov	r0, r4
 80016ce:	f000 f881 	bl	80017d4 <d_name>
 80016d2:	2300      	movs	r3, #0
 80016d4:	4602      	mov	r2, r0
 80016d6:	2115      	movs	r1, #21
 80016d8:	4620      	mov	r0, r4
 80016da:	e761      	b.n	80015a0 <d_encoding+0x290>
 80016dc:	310f      	adds	r1, #15
 80016de:	62e1      	str	r1, [r4, #44]	; 0x2c
 80016e0:	4620      	mov	r0, r4
 80016e2:	f000 fa41 	bl	8001b68 <d_type>
 80016e6:	2300      	movs	r3, #0
 80016e8:	4602      	mov	r2, r0
 80016ea:	2109      	movs	r1, #9
 80016ec:	4620      	mov	r0, r4
 80016ee:	e757      	b.n	80015a0 <d_encoding+0x290>
 80016f0:	310a      	adds	r1, #10
 80016f2:	62e1      	str	r1, [r4, #44]	; 0x2c
 80016f4:	4620      	mov	r0, r4
 80016f6:	f000 fa37 	bl	8001b68 <d_type>
 80016fa:	2300      	movs	r3, #0
 80016fc:	4602      	mov	r2, r0
 80016fe:	210a      	movs	r1, #10
 8001700:	4620      	mov	r0, r4
 8001702:	e74d      	b.n	80015a0 <d_encoding+0x290>
 8001704:	4620      	mov	r0, r4
 8001706:	f000 fa2f 	bl	8001b68 <d_type>
 800170a:	2300      	movs	r3, #0
 800170c:	4602      	mov	r2, r0
 800170e:	210d      	movs	r1, #13
 8001710:	4620      	mov	r0, r4
 8001712:	e745      	b.n	80015a0 <d_encoding+0x290>
 8001714:	4620      	mov	r0, r4
 8001716:	f000 fa27 	bl	8001b68 <d_type>
 800171a:	2300      	movs	r3, #0
 800171c:	4602      	mov	r2, r0
 800171e:	2112      	movs	r1, #18
 8001720:	4620      	mov	r0, r4
 8001722:	e73d      	b.n	80015a0 <d_encoding+0x290>
 8001724:	4620      	mov	r0, r4
 8001726:	f000 fa1f 	bl	8001b68 <d_type>
 800172a:	2300      	movs	r3, #0
 800172c:	4602      	mov	r2, r0
 800172e:	210c      	movs	r1, #12
 8001730:	4620      	mov	r0, r4
 8001732:	e735      	b.n	80015a0 <d_encoding+0x290>
 8001734:	2901      	cmp	r1, #1
 8001736:	f63f aea6 	bhi.w	8001486 <d_encoding+0x176>
 800173a:	e64e      	b.n	80013da <d_encoding+0xca>
 800173c:	463e      	mov	r6, r7
 800173e:	2100      	movs	r1, #0
 8001740:	e007      	b.n	8001752 <d_encoding+0x442>
 8001742:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 8001746:	2b00      	cmp	r3, #0
 8001748:	f43f ae94 	beq.w	8001474 <d_encoding+0x164>
 800174c:	2b24      	cmp	r3, #36	; 0x24
 800174e:	f43f ae91 	beq.w	8001474 <d_encoding+0x164>
 8001752:	3101      	adds	r1, #1
 8001754:	42a9      	cmp	r1, r5
 8001756:	dbf4      	blt.n	8001742 <d_encoding+0x432>
 8001758:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 800175c:	4283      	cmp	r3, r0
 800175e:	f77f ae8e 	ble.w	800147e <d_encoding+0x16e>
 8001762:	6923      	ldr	r3, [r4, #16]
 8001764:	eb03 1300 	add.w	r3, r3, r0, lsl #4
 8001768:	3001      	adds	r0, #1
 800176a:	f8c3 8004 	str.w	r8, [r3, #4]
 800176e:	6160      	str	r0, [r4, #20]
 8001770:	f883 8000 	strb.w	r8, [r3]
 8001774:	68e0      	ldr	r0, [r4, #12]
 8001776:	609f      	str	r7, [r3, #8]
 8001778:	1847      	adds	r7, r0, r1
 800177a:	f8c3 8004 	str.w	r8, [r3, #4]
 800177e:	60d9      	str	r1, [r3, #12]
 8001780:	1a6d      	subs	r5, r5, r1
 8001782:	60e7      	str	r7, [r4, #12]
 8001784:	e6d4      	b.n	8001530 <d_encoding+0x220>
 8001786:	461a      	mov	r2, r3
 8001788:	e6dc      	b.n	8001544 <d_encoding+0x234>
 800178a:	688b      	ldr	r3, [r1, #8]
 800178c:	b163      	cbz	r3, 80017a8 <d_encoding+0x498>
 800178e:	7819      	ldrb	r1, [r3, #0]
 8001790:	2908      	cmp	r1, #8
 8001792:	f101 32ff 	add.w	r2, r1, #4294967295
 8001796:	d809      	bhi.n	80017ac <d_encoding+0x49c>
 8001798:	2906      	cmp	r1, #6
 800179a:	f63f aee6 	bhi.w	800156a <d_encoding+0x25a>
 800179e:	2a01      	cmp	r2, #1
 80017a0:	d802      	bhi.n	80017a8 <d_encoding+0x498>
 80017a2:	68db      	ldr	r3, [r3, #12]
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	d1f2      	bne.n	800178e <d_encoding+0x47e>
 80017a8:	2101      	movs	r1, #1
 80017aa:	e6df      	b.n	800156c <d_encoding+0x25c>
 80017ac:	3935      	subs	r1, #53	; 0x35
 80017ae:	bf18      	it	ne
 80017b0:	2101      	movne	r1, #1
 80017b2:	e6db      	b.n	800156c <d_encoding+0x25c>
 80017b4:	212e      	movs	r1, #46	; 0x2e
 80017b6:	e6a7      	b.n	8001508 <d_encoding+0x1f8>
 80017b8:	212f      	movs	r1, #47	; 0x2f
 80017ba:	e6a5      	b.n	8001508 <d_encoding+0x1f8>
 80017bc:	68e3      	ldr	r3, [r4, #12]
 80017be:	3302      	adds	r3, #2
 80017c0:	60e3      	str	r3, [r4, #12]
 80017c2:	2500      	movs	r5, #0
 80017c4:	e65f      	b.n	8001486 <d_encoding+0x176>
 80017c6:	f7ff fda3 	bl	8001310 <d_encoding>
 80017ca:	2300      	movs	r3, #0
 80017cc:	4602      	mov	r2, r0
 80017ce:	214a      	movs	r1, #74	; 0x4a
 80017d0:	4620      	mov	r0, r4
 80017d2:	e6e5      	b.n	80015a0 <d_encoding+0x290>

080017d4 <d_name>:
 80017d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80017d8:	68c2      	ldr	r2, [r0, #12]
 80017da:	7813      	ldrb	r3, [r2, #0]
 80017dc:	3b4e      	subs	r3, #78	; 0x4e
 80017de:	b084      	sub	sp, #16
 80017e0:	4604      	mov	r4, r0
 80017e2:	2b0c      	cmp	r3, #12
 80017e4:	d808      	bhi.n	80017f8 <d_name+0x24>
 80017e6:	e8df f003 	tbb	[pc, r3]
 80017ea:	0728      	.short	0x0728
 80017ec:	13070707 	.word	0x13070707
 80017f0:	07072107 	.word	0x07072107
 80017f4:	0707      	.short	0x0707
 80017f6:	76          	.byte	0x76
 80017f7:	00          	.byte	0x00
 80017f8:	f000 ff82 	bl	8002700 <d_unqualified_name>
 80017fc:	68e3      	ldr	r3, [r4, #12]
 80017fe:	781b      	ldrb	r3, [r3, #0]
 8001800:	2b49      	cmp	r3, #73	; 0x49
 8001802:	4605      	mov	r5, r0
 8001804:	f000 80a9 	beq.w	800195a <d_name+0x186>
 8001808:	4628      	mov	r0, r5
 800180a:	b004      	add	sp, #16
 800180c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001810:	7853      	ldrb	r3, [r2, #1]
 8001812:	2b74      	cmp	r3, #116	; 0x74
 8001814:	f000 80ab 	beq.w	800196e <d_name+0x19a>
 8001818:	2100      	movs	r1, #0
 800181a:	f7fe fef3 	bl	8000604 <d_substitution>
 800181e:	68e3      	ldr	r3, [r4, #12]
 8001820:	781b      	ldrb	r3, [r3, #0]
 8001822:	2b49      	cmp	r3, #73	; 0x49
 8001824:	4605      	mov	r5, r0
 8001826:	d1ef      	bne.n	8001808 <d_name+0x34>
 8001828:	4620      	mov	r0, r4
 800182a:	e0f0      	b.n	8001a0e <d_name+0x23a>
 800182c:	f000 ff68 	bl	8002700 <d_unqualified_name>
 8001830:	4605      	mov	r5, r0
 8001832:	4628      	mov	r0, r5
 8001834:	b004      	add	sp, #16
 8001836:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800183a:	3201      	adds	r2, #1
 800183c:	60c2      	str	r2, [r0, #12]
 800183e:	a903      	add	r1, sp, #12
 8001840:	2201      	movs	r2, #1
 8001842:	f000 fe43 	bl	80024cc <d_cv_qualifiers>
 8001846:	4607      	mov	r7, r0
 8001848:	2800      	cmp	r0, #0
 800184a:	f000 808b 	beq.w	8001964 <d_name+0x190>
 800184e:	2100      	movs	r1, #0
 8001850:	4620      	mov	r0, r4
 8001852:	f7fe fd07 	bl	8000264 <d_ref_qualifier>
 8001856:	68e1      	ldr	r1, [r4, #12]
 8001858:	780e      	ldrb	r6, [r1, #0]
 800185a:	4680      	mov	r8, r0
 800185c:	b32e      	cbz	r6, 80018aa <d_name+0xd6>
 800185e:	f8df 9304 	ldr.w	r9, [pc, #772]	; 8001b64 <d_name+0x390>
 8001862:	f04f 0a00 	mov.w	sl, #0
 8001866:	2e44      	cmp	r6, #68	; 0x44
 8001868:	d06a      	beq.n	8001940 <d_name+0x16c>
 800186a:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 800186e:	b2db      	uxtb	r3, r3
 8001870:	2b1c      	cmp	r3, #28
 8001872:	f240 80fd 	bls.w	8001a70 <d_name+0x29c>
 8001876:	f1a6 0361 	sub.w	r3, r6, #97	; 0x61
 800187a:	2b19      	cmp	r3, #25
 800187c:	f200 80fa 	bhi.w	8001a74 <d_name+0x2a0>
 8001880:	4620      	mov	r0, r4
 8001882:	f000 ff3d 	bl	8002700 <d_unqualified_name>
 8001886:	4605      	mov	r5, r0
 8001888:	f1ba 0f00 	cmp.w	sl, #0
 800188c:	d006      	beq.n	800189c <d_name+0xc8>
 800188e:	2101      	movs	r1, #1
 8001890:	462b      	mov	r3, r5
 8001892:	4652      	mov	r2, sl
 8001894:	4620      	mov	r0, r4
 8001896:	f7fe fc9b 	bl	80001d0 <d_make_comp>
 800189a:	4605      	mov	r5, r0
 800189c:	2e53      	cmp	r6, #83	; 0x53
 800189e:	d108      	bne.n	80018b2 <d_name+0xde>
 80018a0:	68e1      	ldr	r1, [r4, #12]
 80018a2:	46aa      	mov	sl, r5
 80018a4:	780e      	ldrb	r6, [r1, #0]
 80018a6:	2e00      	cmp	r6, #0
 80018a8:	d1dd      	bne.n	8001866 <d_name+0x92>
 80018aa:	2500      	movs	r5, #0
 80018ac:	603d      	str	r5, [r7, #0]
 80018ae:	e7ab      	b.n	8001808 <d_name+0x34>
 80018b0:	4605      	mov	r5, r0
 80018b2:	68e1      	ldr	r1, [r4, #12]
 80018b4:	780e      	ldrb	r6, [r1, #0]
 80018b6:	2e45      	cmp	r6, #69	; 0x45
 80018b8:	f000 808c 	beq.w	80019d4 <d_name+0x200>
 80018bc:	2d00      	cmp	r5, #0
 80018be:	d0f4      	beq.n	80018aa <d_name+0xd6>
 80018c0:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 80018c4:	4293      	cmp	r3, r2
 80018c6:	daf0      	bge.n	80018aa <d_name+0xd6>
 80018c8:	69e2      	ldr	r2, [r4, #28]
 80018ca:	1c58      	adds	r0, r3, #1
 80018cc:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 80018d0:	46aa      	mov	sl, r5
 80018d2:	6220      	str	r0, [r4, #32]
 80018d4:	e7e6      	b.n	80018a4 <d_name+0xd0>
 80018d6:	3201      	adds	r2, #1
 80018d8:	60c2      	str	r2, [r0, #12]
 80018da:	2100      	movs	r1, #0
 80018dc:	f7ff fd18 	bl	8001310 <d_encoding>
 80018e0:	4605      	mov	r5, r0
 80018e2:	2800      	cmp	r0, #0
 80018e4:	d03e      	beq.n	8001964 <d_name+0x190>
 80018e6:	68e3      	ldr	r3, [r4, #12]
 80018e8:	7819      	ldrb	r1, [r3, #0]
 80018ea:	2945      	cmp	r1, #69	; 0x45
 80018ec:	d13a      	bne.n	8001964 <d_name+0x190>
 80018ee:	1c5a      	adds	r2, r3, #1
 80018f0:	60e2      	str	r2, [r4, #12]
 80018f2:	7859      	ldrb	r1, [r3, #1]
 80018f4:	2973      	cmp	r1, #115	; 0x73
 80018f6:	f000 80f6 	beq.w	8001ae6 <d_name+0x312>
 80018fa:	2964      	cmp	r1, #100	; 0x64
 80018fc:	f000 8091 	beq.w	8001a22 <d_name+0x24e>
 8001900:	4620      	mov	r0, r4
 8001902:	f7ff ff67 	bl	80017d4 <d_name>
 8001906:	4603      	mov	r3, r0
 8001908:	b150      	cbz	r0, 8001920 <d_name+0x14c>
 800190a:	7802      	ldrb	r2, [r0, #0]
 800190c:	2a46      	cmp	r2, #70	; 0x46
 800190e:	d007      	beq.n	8001920 <d_name+0x14c>
 8001910:	2a48      	cmp	r2, #72	; 0x48
 8001912:	d005      	beq.n	8001920 <d_name+0x14c>
 8001914:	9001      	str	r0, [sp, #4]
 8001916:	4620      	mov	r0, r4
 8001918:	f7fe ff52 	bl	80007c0 <d_discriminator>
 800191c:	9b01      	ldr	r3, [sp, #4]
 800191e:	b308      	cbz	r0, 8001964 <d_name+0x190>
 8001920:	782a      	ldrb	r2, [r5, #0]
 8001922:	2a03      	cmp	r2, #3
 8001924:	d105      	bne.n	8001932 <d_name+0x15e>
 8001926:	68ea      	ldr	r2, [r5, #12]
 8001928:	7811      	ldrb	r1, [r2, #0]
 800192a:	2929      	cmp	r1, #41	; 0x29
 800192c:	bf04      	itt	eq
 800192e:	2100      	moveq	r1, #0
 8001930:	6091      	streq	r1, [r2, #8]
 8001932:	462a      	mov	r2, r5
 8001934:	4620      	mov	r0, r4
 8001936:	2102      	movs	r1, #2
 8001938:	f7fe fc4a 	bl	80001d0 <d_make_comp>
 800193c:	4605      	mov	r5, r0
 800193e:	e763      	b.n	8001808 <d_name+0x34>
 8001940:	784b      	ldrb	r3, [r1, #1]
 8001942:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8001946:	2b54      	cmp	r3, #84	; 0x54
 8001948:	4620      	mov	r0, r4
 800194a:	d052      	beq.n	80019f2 <d_name+0x21e>
 800194c:	f000 fed8 	bl	8002700 <d_unqualified_name>
 8001950:	4605      	mov	r5, r0
 8001952:	f1ba 0f00 	cmp.w	sl, #0
 8001956:	d19a      	bne.n	800188e <d_name+0xba>
 8001958:	e7ab      	b.n	80018b2 <d_name+0xde>
 800195a:	b118      	cbz	r0, 8001964 <d_name+0x190>
 800195c:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8001960:	4293      	cmp	r3, r2
 8001962:	db4e      	blt.n	8001a02 <d_name+0x22e>
 8001964:	2500      	movs	r5, #0
 8001966:	4628      	mov	r0, r5
 8001968:	b004      	add	sp, #16
 800196a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800196e:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
 8001972:	3202      	adds	r2, #2
 8001974:	428b      	cmp	r3, r1
 8001976:	60c2      	str	r2, [r0, #12]
 8001978:	f280 80b3 	bge.w	8001ae2 <d_name+0x30e>
 800197c:	6902      	ldr	r2, [r0, #16]
 800197e:	4877      	ldr	r0, [pc, #476]	; (8001b5c <d_name+0x388>)
 8001980:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 8001984:	1c59      	adds	r1, r3, #1
 8001986:	011b      	lsls	r3, r3, #4
 8001988:	6161      	str	r1, [r4, #20]
 800198a:	2100      	movs	r1, #0
 800198c:	6069      	str	r1, [r5, #4]
 800198e:	54d1      	strb	r1, [r2, r3]
 8001990:	2303      	movs	r3, #3
 8001992:	e9c5 0302 	strd	r0, r3, [r5, #8]
 8001996:	4620      	mov	r0, r4
 8001998:	f000 feb2 	bl	8002700 <d_unqualified_name>
 800199c:	462a      	mov	r2, r5
 800199e:	4603      	mov	r3, r0
 80019a0:	2101      	movs	r1, #1
 80019a2:	4620      	mov	r0, r4
 80019a4:	f7fe fc14 	bl	80001d0 <d_make_comp>
 80019a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80019aa:	68e2      	ldr	r2, [r4, #12]
 80019ac:	3303      	adds	r3, #3
 80019ae:	62e3      	str	r3, [r4, #44]	; 0x2c
 80019b0:	7813      	ldrb	r3, [r2, #0]
 80019b2:	2b49      	cmp	r3, #73	; 0x49
 80019b4:	4605      	mov	r5, r0
 80019b6:	f47f af27 	bne.w	8001808 <d_name+0x34>
 80019ba:	2800      	cmp	r0, #0
 80019bc:	d0d2      	beq.n	8001964 <d_name+0x190>
 80019be:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 80019c2:	4293      	cmp	r3, r2
 80019c4:	dace      	bge.n	8001964 <d_name+0x190>
 80019c6:	69e1      	ldr	r1, [r4, #28]
 80019c8:	1c5a      	adds	r2, r3, #1
 80019ca:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80019ce:	6222      	str	r2, [r4, #32]
 80019d0:	4620      	mov	r0, r4
 80019d2:	e01c      	b.n	8001a0e <d_name+0x23a>
 80019d4:	2315      	movs	r3, #21
 80019d6:	fa29 f303 	lsr.w	r3, r9, r3
 80019da:	07db      	lsls	r3, r3, #31
 80019dc:	d55a      	bpl.n	8001a94 <d_name+0x2c0>
 80019de:	4620      	mov	r0, r4
 80019e0:	f000 fe8e 	bl	8002700 <d_unqualified_name>
 80019e4:	2d00      	cmp	r5, #0
 80019e6:	f43f af63 	beq.w	80018b0 <d_name+0xdc>
 80019ea:	46aa      	mov	sl, r5
 80019ec:	2101      	movs	r1, #1
 80019ee:	4605      	mov	r5, r0
 80019f0:	e74e      	b.n	8001890 <d_name+0xbc>
 80019f2:	f000 f8b9 	bl	8001b68 <d_type>
 80019f6:	4605      	mov	r5, r0
 80019f8:	f1ba 0f00 	cmp.w	sl, #0
 80019fc:	f47f af47 	bne.w	800188e <d_name+0xba>
 8001a00:	e757      	b.n	80018b2 <d_name+0xde>
 8001a02:	69e1      	ldr	r1, [r4, #28]
 8001a04:	1c5a      	adds	r2, r3, #1
 8001a06:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8001a0a:	4620      	mov	r0, r4
 8001a0c:	6222      	str	r2, [r4, #32]
 8001a0e:	f7ff fc75 	bl	80012fc <d_template_args>
 8001a12:	462a      	mov	r2, r5
 8001a14:	4603      	mov	r3, r0
 8001a16:	2104      	movs	r1, #4
 8001a18:	4620      	mov	r0, r4
 8001a1a:	f7fe fbd9 	bl	80001d0 <d_make_comp>
 8001a1e:	4605      	mov	r5, r0
 8001a20:	e6f2      	b.n	8001808 <d_name+0x34>
 8001a22:	3302      	adds	r3, #2
 8001a24:	60e3      	str	r3, [r4, #12]
 8001a26:	4620      	mov	r0, r4
 8001a28:	f7fe fd2e 	bl	8000488 <d_compact_number>
 8001a2c:	1e07      	subs	r7, r0, #0
 8001a2e:	db99      	blt.n	8001964 <d_name+0x190>
 8001a30:	4620      	mov	r0, r4
 8001a32:	f7ff fecf 	bl	80017d4 <d_name>
 8001a36:	4606      	mov	r6, r0
 8001a38:	b128      	cbz	r0, 8001a46 <d_name+0x272>
 8001a3a:	7803      	ldrb	r3, [r0, #0]
 8001a3c:	2b46      	cmp	r3, #70	; 0x46
 8001a3e:	d002      	beq.n	8001a46 <d_name+0x272>
 8001a40:	2b48      	cmp	r3, #72	; 0x48
 8001a42:	f040 8084 	bne.w	8001b4e <d_name+0x37a>
 8001a46:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 8001a4a:	429a      	cmp	r2, r3
 8001a4c:	da65      	bge.n	8001b1a <d_name+0x346>
 8001a4e:	6921      	ldr	r1, [r4, #16]
 8001a50:	eb01 1302 	add.w	r3, r1, r2, lsl #4
 8001a54:	0110      	lsls	r0, r2, #4
 8001a56:	f04f 0c00 	mov.w	ip, #0
 8001a5a:	f8c3 c004 	str.w	ip, [r3, #4]
 8001a5e:	3201      	adds	r2, #1
 8001a60:	f04f 0c47 	mov.w	ip, #71	; 0x47
 8001a64:	6162      	str	r2, [r4, #20]
 8001a66:	f801 c000 	strb.w	ip, [r1, r0]
 8001a6a:	e9c3 6702 	strd	r6, r7, [r3, #8]
 8001a6e:	e757      	b.n	8001920 <d_name+0x14c>
 8001a70:	4655      	mov	r5, sl
 8001a72:	e7b0      	b.n	80019d6 <d_name+0x202>
 8001a74:	2e55      	cmp	r6, #85	; 0x55
 8001a76:	d032      	beq.n	8001ade <d_name+0x30a>
 8001a78:	2e53      	cmp	r6, #83	; 0x53
 8001a7a:	d166      	bne.n	8001b4a <d_name+0x376>
 8001a7c:	2101      	movs	r1, #1
 8001a7e:	4620      	mov	r0, r4
 8001a80:	f7fe fdc0 	bl	8000604 <d_substitution>
 8001a84:	4605      	mov	r5, r0
 8001a86:	f1ba 0f00 	cmp.w	sl, #0
 8001a8a:	f47f af00 	bne.w	800188e <d_name+0xba>
 8001a8e:	68e1      	ldr	r1, [r4, #12]
 8001a90:	46aa      	mov	sl, r5
 8001a92:	e707      	b.n	80018a4 <d_name+0xd0>
 8001a94:	2e49      	cmp	r6, #73	; 0x49
 8001a96:	d042      	beq.n	8001b1e <d_name+0x34a>
 8001a98:	2e54      	cmp	r6, #84	; 0x54
 8001a9a:	d04c      	beq.n	8001b36 <d_name+0x362>
 8001a9c:	2e45      	cmp	r6, #69	; 0x45
 8001a9e:	d009      	beq.n	8001ab4 <d_name+0x2e0>
 8001aa0:	2e4d      	cmp	r6, #77	; 0x4d
 8001aa2:	f47f af02 	bne.w	80018aa <d_name+0xd6>
 8001aa6:	2d00      	cmp	r5, #0
 8001aa8:	f43f aeff 	beq.w	80018aa <d_name+0xd6>
 8001aac:	3101      	adds	r1, #1
 8001aae:	60e1      	str	r1, [r4, #12]
 8001ab0:	46aa      	mov	sl, r5
 8001ab2:	e6f7      	b.n	80018a4 <d_name+0xd0>
 8001ab4:	603d      	str	r5, [r7, #0]
 8001ab6:	2d00      	cmp	r5, #0
 8001ab8:	f43f af54 	beq.w	8001964 <d_name+0x190>
 8001abc:	f1b8 0f00 	cmp.w	r8, #0
 8001ac0:	d004      	beq.n	8001acc <d_name+0x2f8>
 8001ac2:	9b03      	ldr	r3, [sp, #12]
 8001ac4:	f8c8 3008 	str.w	r3, [r8, #8]
 8001ac8:	f8cd 800c 	str.w	r8, [sp, #12]
 8001acc:	68e3      	ldr	r3, [r4, #12]
 8001ace:	781a      	ldrb	r2, [r3, #0]
 8001ad0:	2a45      	cmp	r2, #69	; 0x45
 8001ad2:	f47f af47 	bne.w	8001964 <d_name+0x190>
 8001ad6:	3301      	adds	r3, #1
 8001ad8:	9d03      	ldr	r5, [sp, #12]
 8001ada:	60e3      	str	r3, [r4, #12]
 8001adc:	e694      	b.n	8001808 <d_name+0x34>
 8001ade:	4655      	mov	r5, sl
 8001ae0:	e77d      	b.n	80019de <d_name+0x20a>
 8001ae2:	2500      	movs	r5, #0
 8001ae4:	e757      	b.n	8001996 <d_name+0x1c2>
 8001ae6:	3302      	adds	r3, #2
 8001ae8:	60e3      	str	r3, [r4, #12]
 8001aea:	4620      	mov	r0, r4
 8001aec:	f7fe fe68 	bl	80007c0 <d_discriminator>
 8001af0:	2800      	cmp	r0, #0
 8001af2:	f43f af37 	beq.w	8001964 <d_name+0x190>
 8001af6:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 8001afa:	429a      	cmp	r2, r3
 8001afc:	da0d      	bge.n	8001b1a <d_name+0x346>
 8001afe:	6921      	ldr	r1, [r4, #16]
 8001b00:	4e17      	ldr	r6, [pc, #92]	; (8001b60 <d_name+0x38c>)
 8001b02:	eb01 1302 	add.w	r3, r1, r2, lsl #4
 8001b06:	1c50      	adds	r0, r2, #1
 8001b08:	0112      	lsls	r2, r2, #4
 8001b0a:	6160      	str	r0, [r4, #20]
 8001b0c:	2000      	movs	r0, #0
 8001b0e:	6058      	str	r0, [r3, #4]
 8001b10:	5488      	strb	r0, [r1, r2]
 8001b12:	220e      	movs	r2, #14
 8001b14:	e9c3 6202 	strd	r6, r2, [r3, #8]
 8001b18:	e702      	b.n	8001920 <d_name+0x14c>
 8001b1a:	2300      	movs	r3, #0
 8001b1c:	e700      	b.n	8001920 <d_name+0x14c>
 8001b1e:	2d00      	cmp	r5, #0
 8001b20:	f43f aec3 	beq.w	80018aa <d_name+0xd6>
 8001b24:	3101      	adds	r1, #1
 8001b26:	60e1      	str	r1, [r4, #12]
 8001b28:	4620      	mov	r0, r4
 8001b2a:	f7ff fbb5 	bl	8001298 <d_template_args_1>
 8001b2e:	46aa      	mov	sl, r5
 8001b30:	2104      	movs	r1, #4
 8001b32:	4605      	mov	r5, r0
 8001b34:	e6ac      	b.n	8001890 <d_name+0xbc>
 8001b36:	4620      	mov	r0, r4
 8001b38:	f7fe fcc0 	bl	80004bc <d_template_param>
 8001b3c:	46aa      	mov	sl, r5
 8001b3e:	4605      	mov	r5, r0
 8001b40:	f1ba 0f00 	cmp.w	sl, #0
 8001b44:	f47f aea3 	bne.w	800188e <d_name+0xba>
 8001b48:	e6b3      	b.n	80018b2 <d_name+0xde>
 8001b4a:	4655      	mov	r5, sl
 8001b4c:	e7a4      	b.n	8001a98 <d_name+0x2c4>
 8001b4e:	4620      	mov	r0, r4
 8001b50:	f7fe fe36 	bl	80007c0 <d_discriminator>
 8001b54:	2800      	cmp	r0, #0
 8001b56:	f47f af76 	bne.w	8001a46 <d_name+0x272>
 8001b5a:	e703      	b.n	8001964 <d_name+0x190>
 8001b5c:	08013a90 	.word	0x08013a90
 8001b60:	08013a80 	.word	0x08013a80
 8001b64:	100803ff 	.word	0x100803ff

08001b68 <d_type>:
 8001b68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001b6c:	68c1      	ldr	r1, [r0, #12]
 8001b6e:	780b      	ldrb	r3, [r1, #0]
 8001b70:	2b72      	cmp	r3, #114	; 0x72
 8001b72:	b082      	sub	sp, #8
 8001b74:	4604      	mov	r4, r0
 8001b76:	d058      	beq.n	8001c2a <d_type+0xc2>
 8001b78:	2b56      	cmp	r3, #86	; 0x56
 8001b7a:	d056      	beq.n	8001c2a <d_type+0xc2>
 8001b7c:	2b4b      	cmp	r3, #75	; 0x4b
 8001b7e:	d054      	beq.n	8001c2a <d_type+0xc2>
 8001b80:	2b44      	cmp	r3, #68	; 0x44
 8001b82:	f000 809e 	beq.w	8001cc2 <d_type+0x15a>
 8001b86:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8001b8a:	2a4a      	cmp	r2, #74	; 0x4a
 8001b8c:	f200 8090 	bhi.w	8001cb0 <d_type+0x148>
 8001b90:	e8df f012 	tbh	[pc, r2, lsl #1]
 8001b94:	012d012d 	.word	0x012d012d
 8001b98:	012d012d 	.word	0x012d012d
 8001b9c:	012d012d 	.word	0x012d012d
 8001ba0:	012d012d 	.word	0x012d012d
 8001ba4:	012d012d 	.word	0x012d012d
 8001ba8:	008e008e 	.word	0x008e008e
 8001bac:	008e008e 	.word	0x008e008e
 8001bb0:	008e008e 	.word	0x008e008e
 8001bb4:	0201008e 	.word	0x0201008e
 8001bb8:	0144008e 	.word	0x0144008e
 8001bbc:	008e008e 	.word	0x008e008e
 8001bc0:	01660160 	.word	0x01660160
 8001bc4:	008e008e 	.word	0x008e008e
 8001bc8:	008e008e 	.word	0x008e008e
 8001bcc:	0241008e 	.word	0x0241008e
 8001bd0:	0174012d 	.word	0x0174012d
 8001bd4:	008e0182 	.word	0x008e0182
 8001bd8:	019e0190 	.word	0x019e0190
 8001bdc:	01e901c2 	.word	0x01e901c2
 8001be0:	008e008e 	.word	0x008e008e
 8001be4:	008e008e 	.word	0x008e008e
 8001be8:	008e012d 	.word	0x008e012d
 8001bec:	008e008e 	.word	0x008e008e
 8001bf0:	008e008e 	.word	0x008e008e
 8001bf4:	0110008e 	.word	0x0110008e
 8001bf8:	01100110 	.word	0x01100110
 8001bfc:	01100110 	.word	0x01100110
 8001c00:	01100110 	.word	0x01100110
 8001c04:	01100110 	.word	0x01100110
 8001c08:	008e0110 	.word	0x008e0110
 8001c0c:	01100110 	.word	0x01100110
 8001c10:	01100110 	.word	0x01100110
 8001c14:	008e008e 	.word	0x008e008e
 8001c18:	0110008e 	.word	0x0110008e
 8001c1c:	01520110 	.word	0x01520110
 8001c20:	01100110 	.word	0x01100110
 8001c24:	01100110 	.word	0x01100110
 8001c28:	0110      	.short	0x0110
 8001c2a:	2200      	movs	r2, #0
 8001c2c:	a901      	add	r1, sp, #4
 8001c2e:	4620      	mov	r0, r4
 8001c30:	f000 fc4c 	bl	80024cc <d_cv_qualifiers>
 8001c34:	4605      	mov	r5, r0
 8001c36:	2800      	cmp	r0, #0
 8001c38:	d03a      	beq.n	8001cb0 <d_type+0x148>
 8001c3a:	68e3      	ldr	r3, [r4, #12]
 8001c3c:	781b      	ldrb	r3, [r3, #0]
 8001c3e:	2b46      	cmp	r3, #70	; 0x46
 8001c40:	4620      	mov	r0, r4
 8001c42:	d03a      	beq.n	8001cba <d_type+0x152>
 8001c44:	f7ff ff90 	bl	8001b68 <d_type>
 8001c48:	6028      	str	r0, [r5, #0]
 8001c4a:	2800      	cmp	r0, #0
 8001c4c:	d030      	beq.n	8001cb0 <d_type+0x148>
 8001c4e:	7803      	ldrb	r3, [r0, #0]
 8001c50:	3b1f      	subs	r3, #31
 8001c52:	2b01      	cmp	r3, #1
 8001c54:	d805      	bhi.n	8001c62 <d_type+0xfa>
 8001c56:	9a01      	ldr	r2, [sp, #4]
 8001c58:	6883      	ldr	r3, [r0, #8]
 8001c5a:	6082      	str	r2, [r0, #8]
 8001c5c:	682a      	ldr	r2, [r5, #0]
 8001c5e:	9201      	str	r2, [sp, #4]
 8001c60:	602b      	str	r3, [r5, #0]
 8001c62:	9d01      	ldr	r5, [sp, #4]
 8001c64:	b325      	cbz	r5, 8001cb0 <d_type+0x148>
 8001c66:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8001c6a:	4293      	cmp	r3, r2
 8001c6c:	da20      	bge.n	8001cb0 <d_type+0x148>
 8001c6e:	69e1      	ldr	r1, [r4, #28]
 8001c70:	1c5a      	adds	r2, r3, #1
 8001c72:	4628      	mov	r0, r5
 8001c74:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 8001c78:	6222      	str	r2, [r4, #32]
 8001c7a:	b002      	add	sp, #8
 8001c7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001c80:	2301      	movs	r3, #1
 8001c82:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8001c84:	6303      	str	r3, [r0, #48]	; 0x30
 8001c86:	f7ff f8e7 	bl	8000e58 <d_expression_1>
 8001c8a:	6325      	str	r5, [r4, #48]	; 0x30
 8001c8c:	4602      	mov	r2, r0
 8001c8e:	2300      	movs	r3, #0
 8001c90:	2143      	movs	r1, #67	; 0x43
 8001c92:	4620      	mov	r0, r4
 8001c94:	f7fe fa9c 	bl	80001d0 <d_make_comp>
 8001c98:	4605      	mov	r5, r0
 8001c9a:	9001      	str	r0, [sp, #4]
 8001c9c:	b140      	cbz	r0, 8001cb0 <d_type+0x148>
 8001c9e:	68e3      	ldr	r3, [r4, #12]
 8001ca0:	781a      	ldrb	r2, [r3, #0]
 8001ca2:	b12a      	cbz	r2, 8001cb0 <d_type+0x148>
 8001ca4:	1c5a      	adds	r2, r3, #1
 8001ca6:	60e2      	str	r2, [r4, #12]
 8001ca8:	781b      	ldrb	r3, [r3, #0]
 8001caa:	2b45      	cmp	r3, #69	; 0x45
 8001cac:	f000 80a7 	beq.w	8001dfe <d_type+0x296>
 8001cb0:	2500      	movs	r5, #0
 8001cb2:	4628      	mov	r0, r5
 8001cb4:	b002      	add	sp, #8
 8001cb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001cba:	f000 fceb 	bl	8002694 <d_function_type>
 8001cbe:	6028      	str	r0, [r5, #0]
 8001cc0:	e7c3      	b.n	8001c4a <d_type+0xe2>
 8001cc2:	784b      	ldrb	r3, [r1, #1]
 8001cc4:	f003 02df 	and.w	r2, r3, #223	; 0xdf
 8001cc8:	2a4f      	cmp	r2, #79	; 0x4f
 8001cca:	d0ae      	beq.n	8001c2a <d_type+0xc2>
 8001ccc:	3b77      	subs	r3, #119	; 0x77
 8001cce:	2b01      	cmp	r3, #1
 8001cd0:	d9ab      	bls.n	8001c2a <d_type+0xc2>
 8001cd2:	1c4b      	adds	r3, r1, #1
 8001cd4:	60c3      	str	r3, [r0, #12]
 8001cd6:	784b      	ldrb	r3, [r1, #1]
 8001cd8:	2b00      	cmp	r3, #0
 8001cda:	d0e9      	beq.n	8001cb0 <d_type+0x148>
 8001cdc:	1c8b      	adds	r3, r1, #2
 8001cde:	60c3      	str	r3, [r0, #12]
 8001ce0:	784b      	ldrb	r3, [r1, #1]
 8001ce2:	3b46      	subs	r3, #70	; 0x46
 8001ce4:	2b30      	cmp	r3, #48	; 0x30
 8001ce6:	d8e3      	bhi.n	8001cb0 <d_type+0x148>
 8001ce8:	a201      	add	r2, pc, #4	; (adr r2, 8001cf0 <d_type+0x188>)
 8001cea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001cee:	bf00      	nop
 8001cf0:	08002047 	.word	0x08002047
 8001cf4:	08001cb1 	.word	0x08001cb1
 8001cf8:	08001cb1 	.word	0x08001cb1
 8001cfc:	08001cb1 	.word	0x08001cb1
 8001d00:	08001cb1 	.word	0x08001cb1
 8001d04:	08001cb1 	.word	0x08001cb1
 8001d08:	08001cb1 	.word	0x08001cb1
 8001d0c:	08001cb1 	.word	0x08001cb1
 8001d10:	08001cb1 	.word	0x08001cb1
 8001d14:	08001cb1 	.word	0x08001cb1
 8001d18:	08001cb1 	.word	0x08001cb1
 8001d1c:	08001cb1 	.word	0x08001cb1
 8001d20:	08001cb1 	.word	0x08001cb1
 8001d24:	08001cb1 	.word	0x08001cb1
 8001d28:	08001c81 	.word	0x08001c81
 8001d2c:	08001cb1 	.word	0x08001cb1
 8001d30:	08001cb1 	.word	0x08001cb1
 8001d34:	08001cb1 	.word	0x08001cb1
 8001d38:	08001cb1 	.word	0x08001cb1
 8001d3c:	08001cb1 	.word	0x08001cb1
 8001d40:	08001cb1 	.word	0x08001cb1
 8001d44:	08001cb1 	.word	0x08001cb1
 8001d48:	08001cb1 	.word	0x08001cb1
 8001d4c:	08001cb1 	.word	0x08001cb1
 8001d50:	08001cb1 	.word	0x08001cb1
 8001d54:	08001cb1 	.word	0x08001cb1
 8001d58:	08001cb1 	.word	0x08001cb1
 8001d5c:	080020e3 	.word	0x080020e3
 8001d60:	08001cb1 	.word	0x08001cb1
 8001d64:	080020bd 	.word	0x080020bd
 8001d68:	08002187 	.word	0x08002187
 8001d6c:	0800215d 	.word	0x0800215d
 8001d70:	08002133 	.word	0x08002133
 8001d74:	08001cb1 	.word	0x08001cb1
 8001d78:	08002109 	.word	0x08002109
 8001d7c:	08002263 	.word	0x08002263
 8001d80:	08001cb1 	.word	0x08001cb1
 8001d84:	08001cb1 	.word	0x08001cb1
 8001d88:	08001cb1 	.word	0x08001cb1
 8001d8c:	08001cb1 	.word	0x08001cb1
 8001d90:	0800223b 	.word	0x0800223b
 8001d94:	08001cb1 	.word	0x08001cb1
 8001d98:	08002225 	.word	0x08002225
 8001d9c:	08001cb1 	.word	0x08001cb1
 8001da0:	08001cb1 	.word	0x08001cb1
 8001da4:	080021fb 	.word	0x080021fb
 8001da8:	08001c81 	.word	0x08001c81
 8001dac:	080021d1 	.word	0x080021d1
 8001db0:	08002197 	.word	0x08002197
 8001db4:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
 8001db8:	48bf      	ldr	r0, [pc, #764]	; (80020b8 <d_type+0x550>)
 8001dba:	3b61      	subs	r3, #97	; 0x61
 8001dbc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001dc0:	42aa      	cmp	r2, r5
 8001dc2:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8001dc6:	f280 82ab 	bge.w	8002320 <d_type+0x7b8>
 8001dca:	6920      	ldr	r0, [r4, #16]
 8001dcc:	eb00 1502 	add.w	r5, r0, r2, lsl #4
 8001dd0:	0116      	lsls	r6, r2, #4
 8001dd2:	2700      	movs	r7, #0
 8001dd4:	606f      	str	r7, [r5, #4]
 8001dd6:	3201      	adds	r2, #1
 8001dd8:	2727      	movs	r7, #39	; 0x27
 8001dda:	6162      	str	r2, [r4, #20]
 8001ddc:	5587      	strb	r7, [r0, r6]
 8001dde:	6858      	ldr	r0, [r3, #4]
 8001de0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8001de2:	60ab      	str	r3, [r5, #8]
 8001de4:	3101      	adds	r1, #1
 8001de6:	4402      	add	r2, r0
 8001de8:	60e1      	str	r1, [r4, #12]
 8001dea:	62e2      	str	r2, [r4, #44]	; 0x2c
 8001dec:	e761      	b.n	8001cb2 <d_type+0x14a>
 8001dee:	4620      	mov	r0, r4
 8001df0:	f7ff fcf0 	bl	80017d4 <d_name>
 8001df4:	4605      	mov	r5, r0
 8001df6:	9001      	str	r0, [sp, #4]
 8001df8:	2d00      	cmp	r5, #0
 8001dfa:	f43f af59 	beq.w	8001cb0 <d_type+0x148>
 8001dfe:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8001e02:	4293      	cmp	r3, r2
 8001e04:	f6bf af54 	bge.w	8001cb0 <d_type+0x148>
 8001e08:	69e1      	ldr	r1, [r4, #28]
 8001e0a:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 8001e0e:	9d01      	ldr	r5, [sp, #4]
 8001e10:	1c5a      	adds	r2, r3, #1
 8001e12:	4628      	mov	r0, r5
 8001e14:	6222      	str	r2, [r4, #32]
 8001e16:	b002      	add	sp, #8
 8001e18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e1c:	3101      	adds	r1, #1
 8001e1e:	60e1      	str	r1, [r4, #12]
 8001e20:	4620      	mov	r0, r4
 8001e22:	f7ff fea1 	bl	8001b68 <d_type>
 8001e26:	2300      	movs	r3, #0
 8001e28:	4602      	mov	r2, r0
 8001e2a:	2125      	movs	r1, #37	; 0x25
 8001e2c:	4620      	mov	r0, r4
 8001e2e:	f7fe f9cf 	bl	80001d0 <d_make_comp>
 8001e32:	4605      	mov	r5, r0
 8001e34:	9001      	str	r0, [sp, #4]
 8001e36:	e7df      	b.n	8001df8 <d_type+0x290>
 8001e38:	3101      	adds	r1, #1
 8001e3a:	60e1      	str	r1, [r4, #12]
 8001e3c:	4620      	mov	r0, r4
 8001e3e:	f7fe fb5d 	bl	80004fc <d_source_name>
 8001e42:	2300      	movs	r3, #0
 8001e44:	4602      	mov	r2, r0
 8001e46:	2128      	movs	r1, #40	; 0x28
 8001e48:	4620      	mov	r0, r4
 8001e4a:	f7fe f9c1 	bl	80001d0 <d_make_comp>
 8001e4e:	4605      	mov	r5, r0
 8001e50:	9001      	str	r0, [sp, #4]
 8001e52:	e7d1      	b.n	8001df8 <d_type+0x290>
 8001e54:	4620      	mov	r0, r4
 8001e56:	f000 fc1d 	bl	8002694 <d_function_type>
 8001e5a:	4605      	mov	r5, r0
 8001e5c:	9001      	str	r0, [sp, #4]
 8001e5e:	e7cb      	b.n	8001df8 <d_type+0x290>
 8001e60:	3101      	adds	r1, #1
 8001e62:	60e1      	str	r1, [r4, #12]
 8001e64:	4620      	mov	r0, r4
 8001e66:	f7ff fe7f 	bl	8001b68 <d_type>
 8001e6a:	2300      	movs	r3, #0
 8001e6c:	4602      	mov	r2, r0
 8001e6e:	2126      	movs	r1, #38	; 0x26
 8001e70:	4620      	mov	r0, r4
 8001e72:	f7fe f9ad 	bl	80001d0 <d_make_comp>
 8001e76:	4605      	mov	r5, r0
 8001e78:	9001      	str	r0, [sp, #4]
 8001e7a:	e7bd      	b.n	8001df8 <d_type+0x290>
 8001e7c:	3101      	adds	r1, #1
 8001e7e:	60e1      	str	r1, [r4, #12]
 8001e80:	4620      	mov	r0, r4
 8001e82:	f7ff fe71 	bl	8001b68 <d_type>
 8001e86:	2300      	movs	r3, #0
 8001e88:	4602      	mov	r2, r0
 8001e8a:	2124      	movs	r1, #36	; 0x24
 8001e8c:	4620      	mov	r0, r4
 8001e8e:	f7fe f99f 	bl	80001d0 <d_make_comp>
 8001e92:	4605      	mov	r5, r0
 8001e94:	9001      	str	r0, [sp, #4]
 8001e96:	e7af      	b.n	8001df8 <d_type+0x290>
 8001e98:	3101      	adds	r1, #1
 8001e9a:	60e1      	str	r1, [r4, #12]
 8001e9c:	4620      	mov	r0, r4
 8001e9e:	f7ff fe63 	bl	8001b68 <d_type>
 8001ea2:	2300      	movs	r3, #0
 8001ea4:	4602      	mov	r2, r0
 8001ea6:	2122      	movs	r1, #34	; 0x22
 8001ea8:	4620      	mov	r0, r4
 8001eaa:	f7fe f991 	bl	80001d0 <d_make_comp>
 8001eae:	4605      	mov	r5, r0
 8001eb0:	9001      	str	r0, [sp, #4]
 8001eb2:	e7a1      	b.n	8001df8 <d_type+0x290>
 8001eb4:	3101      	adds	r1, #1
 8001eb6:	60e1      	str	r1, [r4, #12]
 8001eb8:	4620      	mov	r0, r4
 8001eba:	f7ff fe55 	bl	8001b68 <d_type>
 8001ebe:	2300      	movs	r3, #0
 8001ec0:	4602      	mov	r2, r0
 8001ec2:	2123      	movs	r1, #35	; 0x23
 8001ec4:	4620      	mov	r0, r4
 8001ec6:	f7fe f983 	bl	80001d0 <d_make_comp>
 8001eca:	4605      	mov	r5, r0
 8001ecc:	9001      	str	r0, [sp, #4]
 8001ece:	e793      	b.n	8001df8 <d_type+0x290>
 8001ed0:	784b      	ldrb	r3, [r1, #1]
 8001ed2:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8001ed6:	2a09      	cmp	r2, #9
 8001ed8:	d905      	bls.n	8001ee6 <d_type+0x37e>
 8001eda:	2b5f      	cmp	r3, #95	; 0x5f
 8001edc:	d003      	beq.n	8001ee6 <d_type+0x37e>
 8001ede:	3b41      	subs	r3, #65	; 0x41
 8001ee0:	2b19      	cmp	r3, #25
 8001ee2:	f200 81e2 	bhi.w	80022aa <d_type+0x742>
 8001ee6:	2100      	movs	r1, #0
 8001ee8:	4620      	mov	r0, r4
 8001eea:	f7fe fb8b 	bl	8000604 <d_substitution>
 8001eee:	68e3      	ldr	r3, [r4, #12]
 8001ef0:	9001      	str	r0, [sp, #4]
 8001ef2:	781a      	ldrb	r2, [r3, #0]
 8001ef4:	2a49      	cmp	r2, #73	; 0x49
 8001ef6:	4605      	mov	r5, r0
 8001ef8:	f47f aedb 	bne.w	8001cb2 <d_type+0x14a>
 8001efc:	3301      	adds	r3, #1
 8001efe:	60e3      	str	r3, [r4, #12]
 8001f00:	4620      	mov	r0, r4
 8001f02:	f7ff f9c9 	bl	8001298 <d_template_args_1>
 8001f06:	462a      	mov	r2, r5
 8001f08:	4603      	mov	r3, r0
 8001f0a:	2104      	movs	r1, #4
 8001f0c:	4620      	mov	r0, r4
 8001f0e:	f7fe f95f 	bl	80001d0 <d_make_comp>
 8001f12:	4605      	mov	r5, r0
 8001f14:	9001      	str	r0, [sp, #4]
 8001f16:	e76f      	b.n	8001df8 <d_type+0x290>
 8001f18:	4620      	mov	r0, r4
 8001f1a:	f7fe facf 	bl	80004bc <d_template_param>
 8001f1e:	68e6      	ldr	r6, [r4, #12]
 8001f20:	9001      	str	r0, [sp, #4]
 8001f22:	7833      	ldrb	r3, [r6, #0]
 8001f24:	2b49      	cmp	r3, #73	; 0x49
 8001f26:	4605      	mov	r5, r0
 8001f28:	f47f af66 	bne.w	8001df8 <d_type+0x290>
 8001f2c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001f2e:	2b00      	cmp	r3, #0
 8001f30:	f040 81c8 	bne.w	80022c4 <d_type+0x75c>
 8001f34:	2800      	cmp	r0, #0
 8001f36:	f43f aebb 	beq.w	8001cb0 <d_type+0x148>
 8001f3a:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
 8001f3e:	428a      	cmp	r2, r1
 8001f40:	f6bf aeb6 	bge.w	8001cb0 <d_type+0x148>
 8001f44:	69e1      	ldr	r1, [r4, #28]
 8001f46:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 8001f4a:	3201      	adds	r2, #1
 8001f4c:	6222      	str	r2, [r4, #32]
 8001f4e:	7832      	ldrb	r2, [r6, #0]
 8001f50:	3a49      	subs	r2, #73	; 0x49
 8001f52:	2a01      	cmp	r2, #1
 8001f54:	d805      	bhi.n	8001f62 <d_type+0x3fa>
 8001f56:	3601      	adds	r6, #1
 8001f58:	60e6      	str	r6, [r4, #12]
 8001f5a:	4620      	mov	r0, r4
 8001f5c:	f7ff f99c 	bl	8001298 <d_template_args_1>
 8001f60:	4603      	mov	r3, r0
 8001f62:	462a      	mov	r2, r5
 8001f64:	e7d1      	b.n	8001f0a <d_type+0x3a2>
 8001f66:	3101      	adds	r1, #1
 8001f68:	60e1      	str	r1, [r4, #12]
 8001f6a:	4620      	mov	r0, r4
 8001f6c:	f7fe fac6 	bl	80004fc <d_source_name>
 8001f70:	68e3      	ldr	r3, [r4, #12]
 8001f72:	9001      	str	r0, [sp, #4]
 8001f74:	781a      	ldrb	r2, [r3, #0]
 8001f76:	2a49      	cmp	r2, #73	; 0x49
 8001f78:	4605      	mov	r5, r0
 8001f7a:	f000 817b 	beq.w	8002274 <d_type+0x70c>
 8001f7e:	4620      	mov	r0, r4
 8001f80:	f7ff fdf2 	bl	8001b68 <d_type>
 8001f84:	9b01      	ldr	r3, [sp, #4]
 8001f86:	4602      	mov	r2, r0
 8001f88:	2121      	movs	r1, #33	; 0x21
 8001f8a:	4620      	mov	r0, r4
 8001f8c:	f7fe f920 	bl	80001d0 <d_make_comp>
 8001f90:	4605      	mov	r5, r0
 8001f92:	9001      	str	r0, [sp, #4]
 8001f94:	e730      	b.n	8001df8 <d_type+0x290>
 8001f96:	1c4d      	adds	r5, r1, #1
 8001f98:	60e5      	str	r5, [r4, #12]
 8001f9a:	784b      	ldrb	r3, [r1, #1]
 8001f9c:	2b5f      	cmp	r3, #95	; 0x5f
 8001f9e:	f000 8167 	beq.w	8002270 <d_type+0x708>
 8001fa2:	3b30      	subs	r3, #48	; 0x30
 8001fa4:	2b09      	cmp	r3, #9
 8001fa6:	f200 8172 	bhi.w	800228e <d_type+0x726>
 8001faa:	462b      	mov	r3, r5
 8001fac:	4619      	mov	r1, r3
 8001fae:	3301      	adds	r3, #1
 8001fb0:	60e3      	str	r3, [r4, #12]
 8001fb2:	781a      	ldrb	r2, [r3, #0]
 8001fb4:	3a30      	subs	r2, #48	; 0x30
 8001fb6:	2a09      	cmp	r2, #9
 8001fb8:	d9f8      	bls.n	8001fac <d_type+0x444>
 8001fba:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
 8001fbe:	4282      	cmp	r2, r0
 8001fc0:	eba3 0705 	sub.w	r7, r3, r5
 8001fc4:	f6bf ae74 	bge.w	8001cb0 <d_type+0x148>
 8001fc8:	f8d4 c010 	ldr.w	ip, [r4, #16]
 8001fcc:	2000      	movs	r0, #0
 8001fce:	eb0c 1602 	add.w	r6, ip, r2, lsl #4
 8001fd2:	f102 0e01 	add.w	lr, r2, #1
 8001fd6:	4287      	cmp	r7, r0
 8001fd8:	6070      	str	r0, [r6, #4]
 8001fda:	ea4f 1202 	mov.w	r2, r2, lsl #4
 8001fde:	f8c4 e014 	str.w	lr, [r4, #20]
 8001fe2:	f77f ae65 	ble.w	8001cb0 <d_type+0x148>
 8001fe6:	6070      	str	r0, [r6, #4]
 8001fe8:	f80c 0002 	strb.w	r0, [ip, r2]
 8001fec:	e9c6 5702 	strd	r5, r7, [r6, #8]
 8001ff0:	784a      	ldrb	r2, [r1, #1]
 8001ff2:	2a5f      	cmp	r2, #95	; 0x5f
 8001ff4:	f47f ae5c 	bne.w	8001cb0 <d_type+0x148>
 8001ff8:	461d      	mov	r5, r3
 8001ffa:	3501      	adds	r5, #1
 8001ffc:	60e5      	str	r5, [r4, #12]
 8001ffe:	4620      	mov	r0, r4
 8002000:	f7ff fdb2 	bl	8001b68 <d_type>
 8002004:	4632      	mov	r2, r6
 8002006:	4603      	mov	r3, r0
 8002008:	212a      	movs	r1, #42	; 0x2a
 800200a:	4620      	mov	r0, r4
 800200c:	f7fe f8e0 	bl	80001d0 <d_make_comp>
 8002010:	4605      	mov	r5, r0
 8002012:	9001      	str	r0, [sp, #4]
 8002014:	e6f0      	b.n	8001df8 <d_type+0x290>
 8002016:	3101      	adds	r1, #1
 8002018:	60e1      	str	r1, [r4, #12]
 800201a:	4620      	mov	r0, r4
 800201c:	f7ff fda4 	bl	8001b68 <d_type>
 8002020:	4605      	mov	r5, r0
 8002022:	2800      	cmp	r0, #0
 8002024:	f43f ae44 	beq.w	8001cb0 <d_type+0x148>
 8002028:	4620      	mov	r0, r4
 800202a:	f7ff fd9d 	bl	8001b68 <d_type>
 800202e:	4603      	mov	r3, r0
 8002030:	2800      	cmp	r0, #0
 8002032:	f43f ae3d 	beq.w	8001cb0 <d_type+0x148>
 8002036:	462a      	mov	r2, r5
 8002038:	212b      	movs	r1, #43	; 0x2b
 800203a:	4620      	mov	r0, r4
 800203c:	f7fe f8c8 	bl	80001d0 <d_make_comp>
 8002040:	4605      	mov	r5, r0
 8002042:	9001      	str	r0, [sp, #4]
 8002044:	e6d8      	b.n	8001df8 <d_type+0x290>
 8002046:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 800204a:	4293      	cmp	r3, r2
 800204c:	f280 816c 	bge.w	8002328 <d_type+0x7c0>
 8002050:	6900      	ldr	r0, [r0, #16]
 8002052:	eb00 1203 	add.w	r2, r0, r3, lsl #4
 8002056:	011d      	lsls	r5, r3, #4
 8002058:	2600      	movs	r6, #0
 800205a:	6056      	str	r6, [r2, #4]
 800205c:	3301      	adds	r3, #1
 800205e:	262c      	movs	r6, #44	; 0x2c
 8002060:	6163      	str	r3, [r4, #20]
 8002062:	9201      	str	r2, [sp, #4]
 8002064:	5546      	strb	r6, [r0, r5]
 8002066:	788b      	ldrb	r3, [r1, #2]
 8002068:	3b30      	subs	r3, #48	; 0x30
 800206a:	b2db      	uxtb	r3, r3
 800206c:	2b09      	cmp	r3, #9
 800206e:	bf94      	ite	ls
 8002070:	2301      	movls	r3, #1
 8002072:	2300      	movhi	r3, #0
 8002074:	8193      	strh	r3, [r2, #12]
 8002076:	d803      	bhi.n	8002080 <d_type+0x518>
 8002078:	f104 000c 	add.w	r0, r4, #12
 800207c:	f7fe f9a8 	bl	80003d0 <d_number.isra.0>
 8002080:	4620      	mov	r0, r4
 8002082:	9d01      	ldr	r5, [sp, #4]
 8002084:	f7ff fd70 	bl	8001b68 <d_type>
 8002088:	9b01      	ldr	r3, [sp, #4]
 800208a:	60a8      	str	r0, [r5, #8]
 800208c:	689b      	ldr	r3, [r3, #8]
 800208e:	2b00      	cmp	r3, #0
 8002090:	f43f ae0e 	beq.w	8001cb0 <d_type+0x148>
 8002094:	f104 000c 	add.w	r0, r4, #12
 8002098:	f7fe f99a 	bl	80003d0 <d_number.isra.0>
 800209c:	68e2      	ldr	r2, [r4, #12]
 800209e:	7813      	ldrb	r3, [r2, #0]
 80020a0:	b113      	cbz	r3, 80020a8 <d_type+0x540>
 80020a2:	1c53      	adds	r3, r2, #1
 80020a4:	60e3      	str	r3, [r4, #12]
 80020a6:	7813      	ldrb	r3, [r2, #0]
 80020a8:	9d01      	ldr	r5, [sp, #4]
 80020aa:	f1a3 0273 	sub.w	r2, r3, #115	; 0x73
 80020ae:	4253      	negs	r3, r2
 80020b0:	4153      	adcs	r3, r2
 80020b2:	81eb      	strh	r3, [r5, #14]
 80020b4:	e5fd      	b.n	8001cb2 <d_type+0x14a>
 80020b6:	bf00      	nop
 80020b8:	080130a0 	.word	0x080130a0
 80020bc:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 80020c0:	4293      	cmp	r3, r2
 80020c2:	f6bf adf5 	bge.w	8001cb0 <d_type+0x148>
 80020c6:	6902      	ldr	r2, [r0, #16]
 80020c8:	4e99      	ldr	r6, [pc, #612]	; (8002330 <d_type+0x7c8>)
 80020ca:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 80020ce:	1c59      	adds	r1, r3, #1
 80020d0:	011b      	lsls	r3, r3, #4
 80020d2:	6141      	str	r1, [r0, #20]
 80020d4:	2100      	movs	r1, #0
 80020d6:	200e      	movs	r0, #14
 80020d8:	6069      	str	r1, [r5, #4]
 80020da:	54d1      	strb	r1, [r2, r3]
 80020dc:	e9c5 6002 	strd	r6, r0, [r5, #8]
 80020e0:	e5e7      	b.n	8001cb2 <d_type+0x14a>
 80020e2:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 80020e6:	4293      	cmp	r3, r2
 80020e8:	f6bf ade2 	bge.w	8001cb0 <d_type+0x148>
 80020ec:	6902      	ldr	r2, [r0, #16]
 80020ee:	4e91      	ldr	r6, [pc, #580]	; (8002334 <d_type+0x7cc>)
 80020f0:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 80020f4:	1c59      	adds	r1, r3, #1
 80020f6:	011b      	lsls	r3, r3, #4
 80020f8:	6141      	str	r1, [r0, #20]
 80020fa:	2100      	movs	r1, #0
 80020fc:	2004      	movs	r0, #4
 80020fe:	6069      	str	r1, [r5, #4]
 8002100:	54d1      	strb	r1, [r2, r3]
 8002102:	e9c5 6002 	strd	r6, r0, [r5, #8]
 8002106:	e5d4      	b.n	8001cb2 <d_type+0x14a>
 8002108:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 800210c:	4293      	cmp	r3, r2
 800210e:	f280 8107 	bge.w	8002320 <d_type+0x7b8>
 8002112:	6902      	ldr	r2, [r0, #16]
 8002114:	4988      	ldr	r1, [pc, #544]	; (8002338 <d_type+0x7d0>)
 8002116:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 800211a:	2000      	movs	r0, #0
 800211c:	6068      	str	r0, [r5, #4]
 800211e:	1c58      	adds	r0, r3, #1
 8002120:	011b      	lsls	r3, r3, #4
 8002122:	6160      	str	r0, [r4, #20]
 8002124:	2027      	movs	r0, #39	; 0x27
 8002126:	54d0      	strb	r0, [r2, r3]
 8002128:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800212a:	60a9      	str	r1, [r5, #8]
 800212c:	3304      	adds	r3, #4
 800212e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002130:	e5bf      	b.n	8001cb2 <d_type+0x14a>
 8002132:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8002136:	4293      	cmp	r3, r2
 8002138:	f280 80f2 	bge.w	8002320 <d_type+0x7b8>
 800213c:	6902      	ldr	r2, [r0, #16]
 800213e:	497f      	ldr	r1, [pc, #508]	; (800233c <d_type+0x7d4>)
 8002140:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 8002144:	2000      	movs	r0, #0
 8002146:	6068      	str	r0, [r5, #4]
 8002148:	1c58      	adds	r0, r3, #1
 800214a:	011b      	lsls	r3, r3, #4
 800214c:	6160      	str	r0, [r4, #20]
 800214e:	2027      	movs	r0, #39	; 0x27
 8002150:	54d0      	strb	r0, [r2, r3]
 8002152:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002154:	60a9      	str	r1, [r5, #8]
 8002156:	3309      	adds	r3, #9
 8002158:	62e3      	str	r3, [r4, #44]	; 0x2c
 800215a:	e5aa      	b.n	8001cb2 <d_type+0x14a>
 800215c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8002160:	4293      	cmp	r3, r2
 8002162:	f280 80dd 	bge.w	8002320 <d_type+0x7b8>
 8002166:	6902      	ldr	r2, [r0, #16]
 8002168:	4975      	ldr	r1, [pc, #468]	; (8002340 <d_type+0x7d8>)
 800216a:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 800216e:	2000      	movs	r0, #0
 8002170:	6068      	str	r0, [r5, #4]
 8002172:	1c58      	adds	r0, r3, #1
 8002174:	011b      	lsls	r3, r3, #4
 8002176:	6160      	str	r0, [r4, #20]
 8002178:	2027      	movs	r0, #39	; 0x27
 800217a:	54d0      	strb	r0, [r2, r3]
 800217c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800217e:	60a9      	str	r1, [r5, #8]
 8002180:	330a      	adds	r3, #10
 8002182:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002184:	e595      	b.n	8001cb2 <d_type+0x14a>
 8002186:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 800218a:	4293      	cmp	r3, r2
 800218c:	f280 80c8 	bge.w	8002320 <d_type+0x7b8>
 8002190:	6902      	ldr	r2, [r0, #16]
 8002192:	496c      	ldr	r1, [pc, #432]	; (8002344 <d_type+0x7dc>)
 8002194:	e7d4      	b.n	8002140 <d_type+0x5d8>
 8002196:	788b      	ldrb	r3, [r1, #2]
 8002198:	2b5f      	cmp	r3, #95	; 0x5f
 800219a:	f000 80b7 	beq.w	800230c <d_type+0x7a4>
 800219e:	f7fe f95b 	bl	8000458 <d_number_component>
 80021a2:	4605      	mov	r5, r0
 80021a4:	2d00      	cmp	r5, #0
 80021a6:	f43f ad83 	beq.w	8001cb0 <d_type+0x148>
 80021aa:	68e3      	ldr	r3, [r4, #12]
 80021ac:	781a      	ldrb	r2, [r3, #0]
 80021ae:	2a5f      	cmp	r2, #95	; 0x5f
 80021b0:	f47f ad7e 	bne.w	8001cb0 <d_type+0x148>
 80021b4:	3301      	adds	r3, #1
 80021b6:	60e3      	str	r3, [r4, #12]
 80021b8:	4620      	mov	r0, r4
 80021ba:	f7ff fcd5 	bl	8001b68 <d_type>
 80021be:	462a      	mov	r2, r5
 80021c0:	4603      	mov	r3, r0
 80021c2:	212d      	movs	r1, #45	; 0x2d
 80021c4:	4620      	mov	r0, r4
 80021c6:	f7fe f803 	bl	80001d0 <d_make_comp>
 80021ca:	4605      	mov	r5, r0
 80021cc:	9001      	str	r0, [sp, #4]
 80021ce:	e613      	b.n	8001df8 <d_type+0x290>
 80021d0:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 80021d4:	4293      	cmp	r3, r2
 80021d6:	f280 80a3 	bge.w	8002320 <d_type+0x7b8>
 80021da:	6902      	ldr	r2, [r0, #16]
 80021dc:	495a      	ldr	r1, [pc, #360]	; (8002348 <d_type+0x7e0>)
 80021de:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 80021e2:	2000      	movs	r0, #0
 80021e4:	6068      	str	r0, [r5, #4]
 80021e6:	1c58      	adds	r0, r3, #1
 80021e8:	011b      	lsls	r3, r3, #4
 80021ea:	6160      	str	r0, [r4, #20]
 80021ec:	2027      	movs	r0, #39	; 0x27
 80021ee:	54d0      	strb	r0, [r2, r3]
 80021f0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80021f2:	60a9      	str	r1, [r5, #8]
 80021f4:	3307      	adds	r3, #7
 80021f6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80021f8:	e55b      	b.n	8001cb2 <d_type+0x14a>
 80021fa:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 80021fe:	4293      	cmp	r3, r2
 8002200:	f280 808e 	bge.w	8002320 <d_type+0x7b8>
 8002204:	6902      	ldr	r2, [r0, #16]
 8002206:	4951      	ldr	r1, [pc, #324]	; (800234c <d_type+0x7e4>)
 8002208:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 800220c:	2000      	movs	r0, #0
 800220e:	6068      	str	r0, [r5, #4]
 8002210:	1c58      	adds	r0, r3, #1
 8002212:	011b      	lsls	r3, r3, #4
 8002214:	6160      	str	r0, [r4, #20]
 8002216:	2027      	movs	r0, #39	; 0x27
 8002218:	54d0      	strb	r0, [r2, r3]
 800221a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800221c:	60a9      	str	r1, [r5, #8]
 800221e:	3308      	adds	r3, #8
 8002220:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002222:	e546      	b.n	8001cb2 <d_type+0x14a>
 8002224:	f7ff fca0 	bl	8001b68 <d_type>
 8002228:	2300      	movs	r3, #0
 800222a:	4602      	mov	r2, r0
 800222c:	214b      	movs	r1, #75	; 0x4b
 800222e:	4620      	mov	r0, r4
 8002230:	f7fd ffce 	bl	80001d0 <d_make_comp>
 8002234:	4605      	mov	r5, r0
 8002236:	9001      	str	r0, [sp, #4]
 8002238:	e5de      	b.n	8001df8 <d_type+0x290>
 800223a:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 800223e:	4293      	cmp	r3, r2
 8002240:	da6e      	bge.n	8002320 <d_type+0x7b8>
 8002242:	6902      	ldr	r2, [r0, #16]
 8002244:	4942      	ldr	r1, [pc, #264]	; (8002350 <d_type+0x7e8>)
 8002246:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 800224a:	2000      	movs	r0, #0
 800224c:	6068      	str	r0, [r5, #4]
 800224e:	1c58      	adds	r0, r3, #1
 8002250:	011b      	lsls	r3, r3, #4
 8002252:	6160      	str	r0, [r4, #20]
 8002254:	2027      	movs	r0, #39	; 0x27
 8002256:	54d0      	strb	r0, [r2, r3]
 8002258:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800225a:	60a9      	str	r1, [r5, #8]
 800225c:	3311      	adds	r3, #17
 800225e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002260:	e527      	b.n	8001cb2 <d_type+0x14a>
 8002262:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8002266:	4293      	cmp	r3, r2
 8002268:	da5a      	bge.n	8002320 <d_type+0x7b8>
 800226a:	6902      	ldr	r2, [r0, #16]
 800226c:	4939      	ldr	r1, [pc, #228]	; (8002354 <d_type+0x7ec>)
 800226e:	e7cb      	b.n	8002208 <d_type+0x6a0>
 8002270:	2600      	movs	r6, #0
 8002272:	e6c2      	b.n	8001ffa <d_type+0x492>
 8002274:	3301      	adds	r3, #1
 8002276:	60e3      	str	r3, [r4, #12]
 8002278:	4620      	mov	r0, r4
 800227a:	f7ff f80d 	bl	8001298 <d_template_args_1>
 800227e:	462a      	mov	r2, r5
 8002280:	4603      	mov	r3, r0
 8002282:	2104      	movs	r1, #4
 8002284:	4620      	mov	r0, r4
 8002286:	f7fd ffa3 	bl	80001d0 <d_make_comp>
 800228a:	9001      	str	r0, [sp, #4]
 800228c:	e677      	b.n	8001f7e <d_type+0x416>
 800228e:	2301      	movs	r3, #1
 8002290:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8002292:	6323      	str	r3, [r4, #48]	; 0x30
 8002294:	4620      	mov	r0, r4
 8002296:	f7fe fddf 	bl	8000e58 <d_expression_1>
 800229a:	6325      	str	r5, [r4, #48]	; 0x30
 800229c:	4606      	mov	r6, r0
 800229e:	2800      	cmp	r0, #0
 80022a0:	f43f ad06 	beq.w	8001cb0 <d_type+0x148>
 80022a4:	68e3      	ldr	r3, [r4, #12]
 80022a6:	781a      	ldrb	r2, [r3, #0]
 80022a8:	e6a3      	b.n	8001ff2 <d_type+0x48a>
 80022aa:	4620      	mov	r0, r4
 80022ac:	f7ff fa92 	bl	80017d4 <d_name>
 80022b0:	4605      	mov	r5, r0
 80022b2:	9001      	str	r0, [sp, #4]
 80022b4:	2800      	cmp	r0, #0
 80022b6:	f43f acfb 	beq.w	8001cb0 <d_type+0x148>
 80022ba:	7803      	ldrb	r3, [r0, #0]
 80022bc:	2b18      	cmp	r3, #24
 80022be:	f47f ad9e 	bne.w	8001dfe <d_type+0x296>
 80022c2:	e4f6      	b.n	8001cb2 <d_type+0x14a>
 80022c4:	1c73      	adds	r3, r6, #1
 80022c6:	60e3      	str	r3, [r4, #12]
 80022c8:	4620      	mov	r0, r4
 80022ca:	f8d4 8014 	ldr.w	r8, [r4, #20]
 80022ce:	6a27      	ldr	r7, [r4, #32]
 80022d0:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 80022d2:	f7fe ffe1 	bl	8001298 <d_template_args_1>
 80022d6:	68e3      	ldr	r3, [r4, #12]
 80022d8:	781a      	ldrb	r2, [r3, #0]
 80022da:	2a49      	cmp	r2, #73	; 0x49
 80022dc:	4603      	mov	r3, r0
 80022de:	d006      	beq.n	80022ee <d_type+0x786>
 80022e0:	62e5      	str	r5, [r4, #44]	; 0x2c
 80022e2:	60e6      	str	r6, [r4, #12]
 80022e4:	9d01      	ldr	r5, [sp, #4]
 80022e6:	f8c4 8014 	str.w	r8, [r4, #20]
 80022ea:	6227      	str	r7, [r4, #32]
 80022ec:	e584      	b.n	8001df8 <d_type+0x290>
 80022ee:	9a01      	ldr	r2, [sp, #4]
 80022f0:	2a00      	cmp	r2, #0
 80022f2:	f43f acdd 	beq.w	8001cb0 <d_type+0x148>
 80022f6:	e9d4 1008 	ldrd	r1, r0, [r4, #32]
 80022fa:	4281      	cmp	r1, r0
 80022fc:	f6bf acd8 	bge.w	8001cb0 <d_type+0x148>
 8002300:	69e5      	ldr	r5, [r4, #28]
 8002302:	1c48      	adds	r0, r1, #1
 8002304:	f845 2021 	str.w	r2, [r5, r1, lsl #2]
 8002308:	6220      	str	r0, [r4, #32]
 800230a:	e5fe      	b.n	8001f0a <d_type+0x3a2>
 800230c:	3103      	adds	r1, #3
 800230e:	2301      	movs	r3, #1
 8002310:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8002312:	60c1      	str	r1, [r0, #12]
 8002314:	6303      	str	r3, [r0, #48]	; 0x30
 8002316:	f7fe fd9f 	bl	8000e58 <d_expression_1>
 800231a:	6325      	str	r5, [r4, #48]	; 0x30
 800231c:	4605      	mov	r5, r0
 800231e:	e741      	b.n	80021a4 <d_type+0x63c>
 8002320:	2300      	movs	r3, #0
 8002322:	9301      	str	r3, [sp, #4]
 8002324:	689b      	ldr	r3, [r3, #8]
 8002326:	deff      	udf	#255	; 0xff
 8002328:	2300      	movs	r3, #0
 800232a:	701b      	strb	r3, [r3, #0]
 800232c:	deff      	udf	#255	; 0xff
 800232e:	bf00      	nop
 8002330:	08013a9c 	.word	0x08013a9c
 8002334:	08013a94 	.word	0x08013a94
 8002338:	080132e4 	.word	0x080132e4
 800233c:	080132a8 	.word	0x080132a8
 8002340:	080132d0 	.word	0x080132d0
 8002344:	080132bc 	.word	0x080132bc
 8002348:	080132f8 	.word	0x080132f8
 800234c:	0801330c 	.word	0x0801330c
 8002350:	08013334 	.word	0x08013334
 8002354:	08013320 	.word	0x08013320

08002358 <d_operator_name>:
 8002358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800235a:	68c3      	ldr	r3, [r0, #12]
 800235c:	781f      	ldrb	r7, [r3, #0]
 800235e:	4606      	mov	r6, r0
 8002360:	bb5f      	cbnz	r7, 80023ba <d_operator_name+0x62>
 8002362:	f04f 0e00 	mov.w	lr, #0
 8002366:	4d39      	ldr	r5, [pc, #228]	; (800244c <d_operator_name+0xf4>)
 8002368:	2143      	movs	r1, #67	; 0x43
 800236a:	2200      	movs	r2, #0
 800236c:	1a8b      	subs	r3, r1, r2
 800236e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002372:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8002376:	0118      	lsls	r0, r3, #4
 8002378:	eb05 1c03 	add.w	ip, r5, r3, lsl #4
 800237c:	582c      	ldr	r4, [r5, r0]
 800237e:	7820      	ldrb	r0, [r4, #0]
 8002380:	42b8      	cmp	r0, r7
 8002382:	d006      	beq.n	8002392 <d_operator_name+0x3a>
 8002384:	bf94      	ite	ls
 8002386:	1c5a      	addls	r2, r3, #1
 8002388:	4619      	movhi	r1, r3
 800238a:	428a      	cmp	r2, r1
 800238c:	d1ee      	bne.n	800236c <d_operator_name+0x14>
 800238e:	2000      	movs	r0, #0
 8002390:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002392:	7860      	ldrb	r0, [r4, #1]
 8002394:	4570      	cmp	r0, lr
 8002396:	d1f5      	bne.n	8002384 <d_operator_name+0x2c>
 8002398:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
 800239c:	4293      	cmp	r3, r2
 800239e:	daf6      	bge.n	800238e <d_operator_name+0x36>
 80023a0:	6932      	ldr	r2, [r6, #16]
 80023a2:	eb02 1003 	add.w	r0, r2, r3, lsl #4
 80023a6:	0119      	lsls	r1, r3, #4
 80023a8:	2400      	movs	r4, #0
 80023aa:	6044      	str	r4, [r0, #4]
 80023ac:	3301      	adds	r3, #1
 80023ae:	2432      	movs	r4, #50	; 0x32
 80023b0:	6173      	str	r3, [r6, #20]
 80023b2:	5454      	strb	r4, [r2, r1]
 80023b4:	f8c0 c008 	str.w	ip, [r0, #8]
 80023b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80023ba:	1c5a      	adds	r2, r3, #1
 80023bc:	60c2      	str	r2, [r0, #12]
 80023be:	f893 e001 	ldrb.w	lr, [r3, #1]
 80023c2:	781f      	ldrb	r7, [r3, #0]
 80023c4:	f1be 0f00 	cmp.w	lr, #0
 80023c8:	d102      	bne.n	80023d0 <d_operator_name+0x78>
 80023ca:	2f76      	cmp	r7, #118	; 0x76
 80023cc:	d0cb      	beq.n	8002366 <d_operator_name+0xe>
 80023ce:	e7c8      	b.n	8002362 <d_operator_name+0xa>
 80023d0:	1c9a      	adds	r2, r3, #2
 80023d2:	60c2      	str	r2, [r0, #12]
 80023d4:	2f76      	cmp	r7, #118	; 0x76
 80023d6:	f893 e001 	ldrb.w	lr, [r3, #1]
 80023da:	d11b      	bne.n	8002414 <d_operator_name+0xbc>
 80023dc:	f1ae 0430 	sub.w	r4, lr, #48	; 0x30
 80023e0:	b2e3      	uxtb	r3, r4
 80023e2:	2b09      	cmp	r3, #9
 80023e4:	d8bf      	bhi.n	8002366 <d_operator_name+0xe>
 80023e6:	f7fe f889 	bl	80004fc <d_source_name>
 80023ea:	e9d6 3105 	ldrd	r3, r1, [r6, #20]
 80023ee:	428b      	cmp	r3, r1
 80023f0:	4602      	mov	r2, r0
 80023f2:	dacc      	bge.n	800238e <d_operator_name+0x36>
 80023f4:	6931      	ldr	r1, [r6, #16]
 80023f6:	eb01 1003 	add.w	r0, r1, r3, lsl #4
 80023fa:	1c5f      	adds	r7, r3, #1
 80023fc:	2500      	movs	r5, #0
 80023fe:	6045      	str	r5, [r0, #4]
 8002400:	011b      	lsls	r3, r3, #4
 8002402:	6177      	str	r7, [r6, #20]
 8002404:	2a00      	cmp	r2, #0
 8002406:	d0c2      	beq.n	800238e <d_operator_name+0x36>
 8002408:	2633      	movs	r6, #51	; 0x33
 800240a:	6045      	str	r5, [r0, #4]
 800240c:	54ce      	strb	r6, [r1, r3]
 800240e:	e9c0 4202 	strd	r4, r2, [r0, #8]
 8002412:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002414:	2f63      	cmp	r7, #99	; 0x63
 8002416:	d1a6      	bne.n	8002366 <d_operator_name+0xe>
 8002418:	f1be 0f76 	cmp.w	lr, #118	; 0x76
 800241c:	d1a3      	bne.n	8002366 <d_operator_name+0xe>
 800241e:	e9d0 340c 	ldrd	r3, r4, [r0, #48]	; 0x30
 8002422:	fab3 f383 	clz	r3, r3
 8002426:	095b      	lsrs	r3, r3, #5
 8002428:	6343      	str	r3, [r0, #52]	; 0x34
 800242a:	f7ff fb9d 	bl	8001b68 <d_type>
 800242e:	6b73      	ldr	r3, [r6, #52]	; 0x34
 8002430:	4602      	mov	r2, r0
 8002432:	b133      	cbz	r3, 8002442 <d_operator_name+0xea>
 8002434:	2300      	movs	r3, #0
 8002436:	2135      	movs	r1, #53	; 0x35
 8002438:	4630      	mov	r0, r6
 800243a:	f7fd fec9 	bl	80001d0 <d_make_comp>
 800243e:	6374      	str	r4, [r6, #52]	; 0x34
 8002440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002442:	2134      	movs	r1, #52	; 0x34
 8002444:	4630      	mov	r0, r6
 8002446:	f7fd fec3 	bl	80001d0 <d_make_comp>
 800244a:	e7f8      	b.n	800243e <d_operator_name+0xe6>
 800244c:	08013348 	.word	0x08013348

08002450 <d_parmlist>:
 8002450:	b530      	push	{r4, r5, lr}
 8002452:	68c2      	ldr	r2, [r0, #12]
 8002454:	b083      	sub	sp, #12
 8002456:	2300      	movs	r3, #0
 8002458:	9301      	str	r3, [sp, #4]
 800245a:	7813      	ldrb	r3, [r2, #0]
 800245c:	b323      	cbz	r3, 80024a8 <d_parmlist+0x58>
 800245e:	4604      	mov	r4, r0
 8002460:	ad01      	add	r5, sp, #4
 8002462:	e011      	b.n	8002488 <d_parmlist+0x38>
 8002464:	2b4f      	cmp	r3, #79	; 0x4f
 8002466:	d016      	beq.n	8002496 <d_parmlist+0x46>
 8002468:	f7ff fb7e 	bl	8001b68 <d_type>
 800246c:	4602      	mov	r2, r0
 800246e:	2300      	movs	r3, #0
 8002470:	212e      	movs	r1, #46	; 0x2e
 8002472:	4620      	mov	r0, r4
 8002474:	b1c2      	cbz	r2, 80024a8 <d_parmlist+0x58>
 8002476:	f7fd feab 	bl	80001d0 <d_make_comp>
 800247a:	6028      	str	r0, [r5, #0]
 800247c:	b1a0      	cbz	r0, 80024a8 <d_parmlist+0x58>
 800247e:	68e2      	ldr	r2, [r4, #12]
 8002480:	7813      	ldrb	r3, [r2, #0]
 8002482:	f100 050c 	add.w	r5, r0, #12
 8002486:	b14b      	cbz	r3, 800249c <d_parmlist+0x4c>
 8002488:	2b45      	cmp	r3, #69	; 0x45
 800248a:	4620      	mov	r0, r4
 800248c:	d006      	beq.n	800249c <d_parmlist+0x4c>
 800248e:	2b2e      	cmp	r3, #46	; 0x2e
 8002490:	d004      	beq.n	800249c <d_parmlist+0x4c>
 8002492:	2b52      	cmp	r3, #82	; 0x52
 8002494:	d1e6      	bne.n	8002464 <d_parmlist+0x14>
 8002496:	7853      	ldrb	r3, [r2, #1]
 8002498:	2b45      	cmp	r3, #69	; 0x45
 800249a:	d1e5      	bne.n	8002468 <d_parmlist+0x18>
 800249c:	9801      	ldr	r0, [sp, #4]
 800249e:	b118      	cbz	r0, 80024a8 <d_parmlist+0x58>
 80024a0:	68c3      	ldr	r3, [r0, #12]
 80024a2:	b123      	cbz	r3, 80024ae <d_parmlist+0x5e>
 80024a4:	b003      	add	sp, #12
 80024a6:	bd30      	pop	{r4, r5, pc}
 80024a8:	2000      	movs	r0, #0
 80024aa:	b003      	add	sp, #12
 80024ac:	bd30      	pop	{r4, r5, pc}
 80024ae:	6882      	ldr	r2, [r0, #8]
 80024b0:	7811      	ldrb	r1, [r2, #0]
 80024b2:	2927      	cmp	r1, #39	; 0x27
 80024b4:	d1f6      	bne.n	80024a4 <d_parmlist+0x54>
 80024b6:	6892      	ldr	r2, [r2, #8]
 80024b8:	7c11      	ldrb	r1, [r2, #16]
 80024ba:	2909      	cmp	r1, #9
 80024bc:	d1f2      	bne.n	80024a4 <d_parmlist+0x54>
 80024be:	6851      	ldr	r1, [r2, #4]
 80024c0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80024c2:	1a52      	subs	r2, r2, r1
 80024c4:	62e2      	str	r2, [r4, #44]	; 0x2c
 80024c6:	6083      	str	r3, [r0, #8]
 80024c8:	e7ec      	b.n	80024a4 <d_parmlist+0x54>
 80024ca:	bf00      	nop

080024cc <d_cv_qualifiers>:
 80024cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024d0:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 80024d4:	1e17      	subs	r7, r2, #0
 80024d6:	f89c 3000 	ldrb.w	r3, [ip]
 80024da:	b083      	sub	sp, #12
 80024dc:	4604      	mov	r4, r0
 80024de:	460d      	mov	r5, r1
 80024e0:	bf15      	itete	ne
 80024e2:	f04f 0a1e 	movne.w	sl, #30
 80024e6:	f04f 0a1b 	moveq.w	sl, #27
 80024ea:	f04f 091d 	movne.w	r9, #29
 80024ee:	f04f 091a 	moveq.w	r9, #26
 80024f2:	bf14      	ite	ne
 80024f4:	f04f 081c 	movne.w	r8, #28
 80024f8:	f04f 0819 	moveq.w	r8, #25
 80024fc:	460e      	mov	r6, r1
 80024fe:	f04f 0b01 	mov.w	fp, #1
 8002502:	2b72      	cmp	r3, #114	; 0x72
 8002504:	d015      	beq.n	8002532 <d_cv_qualifiers+0x66>
 8002506:	2b56      	cmp	r3, #86	; 0x56
 8002508:	d013      	beq.n	8002532 <d_cv_qualifiers+0x66>
 800250a:	2b4b      	cmp	r3, #75	; 0x4b
 800250c:	d011      	beq.n	8002532 <d_cv_qualifiers+0x66>
 800250e:	2b44      	cmp	r3, #68	; 0x44
 8002510:	d006      	beq.n	8002520 <d_cv_qualifiers+0x54>
 8002512:	b90f      	cbnz	r7, 8002518 <d_cv_qualifiers+0x4c>
 8002514:	2b46      	cmp	r3, #70	; 0x46
 8002516:	d05d      	beq.n	80025d4 <d_cv_qualifiers+0x108>
 8002518:	4630      	mov	r0, r6
 800251a:	b003      	add	sp, #12
 800251c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002520:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8002524:	f002 01df 	and.w	r1, r2, #223	; 0xdf
 8002528:	294f      	cmp	r1, #79	; 0x4f
 800252a:	d002      	beq.n	8002532 <d_cv_qualifiers+0x66>
 800252c:	3a77      	subs	r2, #119	; 0x77
 800252e:	2a01      	cmp	r2, #1
 8002530:	d8ef      	bhi.n	8002512 <d_cv_qualifiers+0x46>
 8002532:	f10c 0201 	add.w	r2, ip, #1
 8002536:	2b72      	cmp	r3, #114	; 0x72
 8002538:	60e2      	str	r2, [r4, #12]
 800253a:	d016      	beq.n	800256a <d_cv_qualifiers+0x9e>
 800253c:	2b56      	cmp	r3, #86	; 0x56
 800253e:	d02c      	beq.n	800259a <d_cv_qualifiers+0xce>
 8002540:	2b4b      	cmp	r3, #75	; 0x4b
 8002542:	d024      	beq.n	800258e <d_cv_qualifiers+0xc2>
 8002544:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8002548:	2b00      	cmp	r3, #0
 800254a:	d03e      	beq.n	80025ca <d_cv_qualifiers+0xfe>
 800254c:	f10c 0302 	add.w	r3, ip, #2
 8002550:	60e3      	str	r3, [r4, #12]
 8002552:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8002556:	2978      	cmp	r1, #120	; 0x78
 8002558:	d051      	beq.n	80025fe <d_cv_qualifiers+0x132>
 800255a:	296f      	cmp	r1, #111	; 0x6f
 800255c:	d123      	bne.n	80025a6 <d_cv_qualifiers+0xda>
 800255e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002560:	3309      	adds	r3, #9
 8002562:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002564:	214f      	movs	r1, #79	; 0x4f
 8002566:	2300      	movs	r3, #0
 8002568:	e004      	b.n	8002574 <d_cv_qualifiers+0xa8>
 800256a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800256c:	3309      	adds	r3, #9
 800256e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002570:	4641      	mov	r1, r8
 8002572:	2300      	movs	r3, #0
 8002574:	2200      	movs	r2, #0
 8002576:	4620      	mov	r0, r4
 8002578:	f7fd fe2a 	bl	80001d0 <d_make_comp>
 800257c:	6030      	str	r0, [r6, #0]
 800257e:	b320      	cbz	r0, 80025ca <d_cv_qualifiers+0xfe>
 8002580:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 8002584:	f100 0608 	add.w	r6, r0, #8
 8002588:	f89c 3000 	ldrb.w	r3, [ip]
 800258c:	e7b9      	b.n	8002502 <d_cv_qualifiers+0x36>
 800258e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002590:	3306      	adds	r3, #6
 8002592:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002594:	4651      	mov	r1, sl
 8002596:	2300      	movs	r3, #0
 8002598:	e7ec      	b.n	8002574 <d_cv_qualifiers+0xa8>
 800259a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800259c:	3309      	adds	r3, #9
 800259e:	62e3      	str	r3, [r4, #44]	; 0x2c
 80025a0:	4649      	mov	r1, r9
 80025a2:	2300      	movs	r3, #0
 80025a4:	e7e6      	b.n	8002574 <d_cv_qualifiers+0xa8>
 80025a6:	294f      	cmp	r1, #79	; 0x4f
 80025a8:	d13c      	bne.n	8002624 <d_cv_qualifiers+0x158>
 80025aa:	e9d4 320b 	ldrd	r3, r2, [r4, #44]	; 0x2c
 80025ae:	3309      	adds	r3, #9
 80025b0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80025b2:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
 80025b6:	4620      	mov	r0, r4
 80025b8:	9101      	str	r1, [sp, #4]
 80025ba:	9200      	str	r2, [sp, #0]
 80025bc:	f7fe fc4c 	bl	8000e58 <d_expression_1>
 80025c0:	9a00      	ldr	r2, [sp, #0]
 80025c2:	9901      	ldr	r1, [sp, #4]
 80025c4:	6322      	str	r2, [r4, #48]	; 0x30
 80025c6:	4603      	mov	r3, r0
 80025c8:	bb28      	cbnz	r0, 8002616 <d_cv_qualifiers+0x14a>
 80025ca:	2600      	movs	r6, #0
 80025cc:	4630      	mov	r0, r6
 80025ce:	b003      	add	sp, #12
 80025d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80025d4:	42ae      	cmp	r6, r5
 80025d6:	d09f      	beq.n	8002518 <d_cv_qualifiers+0x4c>
 80025d8:	241d      	movs	r4, #29
 80025da:	201e      	movs	r0, #30
 80025dc:	211c      	movs	r1, #28
 80025de:	e005      	b.n	80025ec <d_cv_qualifiers+0x120>
 80025e0:	2a19      	cmp	r2, #25
 80025e2:	d015      	beq.n	8002610 <d_cv_qualifiers+0x144>
 80025e4:	f103 0508 	add.w	r5, r3, #8
 80025e8:	42ae      	cmp	r6, r5
 80025ea:	d095      	beq.n	8002518 <d_cv_qualifiers+0x4c>
 80025ec:	682b      	ldr	r3, [r5, #0]
 80025ee:	781a      	ldrb	r2, [r3, #0]
 80025f0:	2a1a      	cmp	r2, #26
 80025f2:	d00a      	beq.n	800260a <d_cv_qualifiers+0x13e>
 80025f4:	2a1b      	cmp	r2, #27
 80025f6:	d1f3      	bne.n	80025e0 <d_cv_qualifiers+0x114>
 80025f8:	7018      	strb	r0, [r3, #0]
 80025fa:	682b      	ldr	r3, [r5, #0]
 80025fc:	e7f2      	b.n	80025e4 <d_cv_qualifiers+0x118>
 80025fe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002600:	3311      	adds	r3, #17
 8002602:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002604:	214d      	movs	r1, #77	; 0x4d
 8002606:	2300      	movs	r3, #0
 8002608:	e7b4      	b.n	8002574 <d_cv_qualifiers+0xa8>
 800260a:	701c      	strb	r4, [r3, #0]
 800260c:	682b      	ldr	r3, [r5, #0]
 800260e:	e7e9      	b.n	80025e4 <d_cv_qualifiers+0x118>
 8002610:	7019      	strb	r1, [r3, #0]
 8002612:	682b      	ldr	r3, [r5, #0]
 8002614:	e7e6      	b.n	80025e4 <d_cv_qualifiers+0x118>
 8002616:	68e2      	ldr	r2, [r4, #12]
 8002618:	7810      	ldrb	r0, [r2, #0]
 800261a:	2845      	cmp	r0, #69	; 0x45
 800261c:	d1d5      	bne.n	80025ca <d_cv_qualifiers+0xfe>
 800261e:	3201      	adds	r2, #1
 8002620:	60e2      	str	r2, [r4, #12]
 8002622:	e7a7      	b.n	8002574 <d_cv_qualifiers+0xa8>
 8002624:	2977      	cmp	r1, #119	; 0x77
 8002626:	d1d0      	bne.n	80025ca <d_cv_qualifiers+0xfe>
 8002628:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800262a:	3306      	adds	r3, #6
 800262c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800262e:	4620      	mov	r0, r4
 8002630:	f7ff ff0e 	bl	8002450 <d_parmlist>
 8002634:	4603      	mov	r3, r0
 8002636:	2800      	cmp	r0, #0
 8002638:	d0c7      	beq.n	80025ca <d_cv_qualifiers+0xfe>
 800263a:	68e2      	ldr	r2, [r4, #12]
 800263c:	7811      	ldrb	r1, [r2, #0]
 800263e:	2945      	cmp	r1, #69	; 0x45
 8002640:	d1c3      	bne.n	80025ca <d_cv_qualifiers+0xfe>
 8002642:	3201      	adds	r2, #1
 8002644:	60e2      	str	r2, [r4, #12]
 8002646:	2150      	movs	r1, #80	; 0x50
 8002648:	e794      	b.n	8002574 <d_cv_qualifiers+0xa8>
 800264a:	bf00      	nop

0800264c <d_bare_function_type>:
 800264c:	b570      	push	{r4, r5, r6, lr}
 800264e:	68c3      	ldr	r3, [r0, #12]
 8002650:	781a      	ldrb	r2, [r3, #0]
 8002652:	2a4a      	cmp	r2, #74	; 0x4a
 8002654:	4605      	mov	r5, r0
 8002656:	d01a      	beq.n	800268e <d_bare_function_type+0x42>
 8002658:	b181      	cbz	r1, 800267c <d_bare_function_type+0x30>
 800265a:	4628      	mov	r0, r5
 800265c:	f7ff fa84 	bl	8001b68 <d_type>
 8002660:	4604      	mov	r4, r0
 8002662:	b190      	cbz	r0, 800268a <d_bare_function_type+0x3e>
 8002664:	4628      	mov	r0, r5
 8002666:	f7ff fef3 	bl	8002450 <d_parmlist>
 800266a:	4603      	mov	r3, r0
 800266c:	b168      	cbz	r0, 800268a <d_bare_function_type+0x3e>
 800266e:	4622      	mov	r2, r4
 8002670:	4628      	mov	r0, r5
 8002672:	2129      	movs	r1, #41	; 0x29
 8002674:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002678:	f7fd bdaa 	b.w	80001d0 <d_make_comp>
 800267c:	4628      	mov	r0, r5
 800267e:	460c      	mov	r4, r1
 8002680:	f7ff fee6 	bl	8002450 <d_parmlist>
 8002684:	4603      	mov	r3, r0
 8002686:	2800      	cmp	r0, #0
 8002688:	d1f1      	bne.n	800266e <d_bare_function_type+0x22>
 800268a:	2000      	movs	r0, #0
 800268c:	bd70      	pop	{r4, r5, r6, pc}
 800268e:	3301      	adds	r3, #1
 8002690:	60c3      	str	r3, [r0, #12]
 8002692:	e7e2      	b.n	800265a <d_bare_function_type+0xe>

08002694 <d_function_type>:
 8002694:	b510      	push	{r4, lr}
 8002696:	4604      	mov	r4, r0
 8002698:	6880      	ldr	r0, [r0, #8]
 800269a:	f410 2080 	ands.w	r0, r0, #262144	; 0x40000
 800269e:	d10b      	bne.n	80026b8 <d_function_type+0x24>
 80026a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80026a2:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 80026a6:	d806      	bhi.n	80026b6 <d_function_type+0x22>
 80026a8:	1c51      	adds	r1, r2, #1
 80026aa:	68e3      	ldr	r3, [r4, #12]
 80026ac:	63a1      	str	r1, [r4, #56]	; 0x38
 80026ae:	7819      	ldrb	r1, [r3, #0]
 80026b0:	2946      	cmp	r1, #70	; 0x46
 80026b2:	d007      	beq.n	80026c4 <d_function_type+0x30>
 80026b4:	63a2      	str	r2, [r4, #56]	; 0x38
 80026b6:	bd10      	pop	{r4, pc}
 80026b8:	68e3      	ldr	r3, [r4, #12]
 80026ba:	781a      	ldrb	r2, [r3, #0]
 80026bc:	2a46      	cmp	r2, #70	; 0x46
 80026be:	d001      	beq.n	80026c4 <d_function_type+0x30>
 80026c0:	2000      	movs	r0, #0
 80026c2:	bd10      	pop	{r4, pc}
 80026c4:	1c5a      	adds	r2, r3, #1
 80026c6:	60e2      	str	r2, [r4, #12]
 80026c8:	785a      	ldrb	r2, [r3, #1]
 80026ca:	2a59      	cmp	r2, #89	; 0x59
 80026cc:	bf04      	itt	eq
 80026ce:	3302      	addeq	r3, #2
 80026d0:	60e3      	streq	r3, [r4, #12]
 80026d2:	2101      	movs	r1, #1
 80026d4:	4620      	mov	r0, r4
 80026d6:	f7ff ffb9 	bl	800264c <d_bare_function_type>
 80026da:	4601      	mov	r1, r0
 80026dc:	4620      	mov	r0, r4
 80026de:	f7fd fdc1 	bl	8000264 <d_ref_qualifier>
 80026e2:	68e3      	ldr	r3, [r4, #12]
 80026e4:	781a      	ldrb	r2, [r3, #0]
 80026e6:	2a45      	cmp	r2, #69	; 0x45
 80026e8:	bf04      	itt	eq
 80026ea:	3301      	addeq	r3, #1
 80026ec:	60e3      	streq	r3, [r4, #12]
 80026ee:	68a3      	ldr	r3, [r4, #8]
 80026f0:	bf18      	it	ne
 80026f2:	2000      	movne	r0, #0
 80026f4:	035b      	lsls	r3, r3, #13
 80026f6:	d4de      	bmi.n	80026b6 <d_function_type+0x22>
 80026f8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80026fa:	3a01      	subs	r2, #1
 80026fc:	e7da      	b.n	80026b4 <d_function_type+0x20>
 80026fe:	bf00      	nop

08002700 <d_unqualified_name>:
 8002700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002702:	68c2      	ldr	r2, [r0, #12]
 8002704:	7813      	ldrb	r3, [r2, #0]
 8002706:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 800270a:	2909      	cmp	r1, #9
 800270c:	4604      	mov	r4, r0
 800270e:	d94f      	bls.n	80027b0 <d_unqualified_name+0xb0>
 8002710:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8002714:	2919      	cmp	r1, #25
 8002716:	d814      	bhi.n	8002742 <d_unqualified_name+0x42>
 8002718:	2b6f      	cmp	r3, #111	; 0x6f
 800271a:	d104      	bne.n	8002726 <d_unqualified_name+0x26>
 800271c:	7853      	ldrb	r3, [r2, #1]
 800271e:	2b6e      	cmp	r3, #110	; 0x6e
 8002720:	bf04      	itt	eq
 8002722:	3202      	addeq	r2, #2
 8002724:	60c2      	streq	r2, [r0, #12]
 8002726:	4620      	mov	r0, r4
 8002728:	f7ff fe16 	bl	8002358 <d_operator_name>
 800272c:	4605      	mov	r5, r0
 800272e:	b110      	cbz	r0, 8002736 <d_unqualified_name+0x36>
 8002730:	7803      	ldrb	r3, [r0, #0]
 8002732:	2b32      	cmp	r3, #50	; 0x32
 8002734:	d049      	beq.n	80027ca <d_unqualified_name+0xca>
 8002736:	68e3      	ldr	r3, [r4, #12]
 8002738:	7819      	ldrb	r1, [r3, #0]
 800273a:	2942      	cmp	r1, #66	; 0x42
 800273c:	d03f      	beq.n	80027be <d_unqualified_name+0xbe>
 800273e:	4628      	mov	r0, r5
 8002740:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002742:	f1a3 0143 	sub.w	r1, r3, #67	; 0x43
 8002746:	2901      	cmp	r1, #1
 8002748:	d96c      	bls.n	8002824 <d_unqualified_name+0x124>
 800274a:	2b4c      	cmp	r3, #76	; 0x4c
 800274c:	d05a      	beq.n	8002804 <d_unqualified_name+0x104>
 800274e:	2b55      	cmp	r3, #85	; 0x55
 8002750:	d163      	bne.n	800281a <d_unqualified_name+0x11a>
 8002752:	7853      	ldrb	r3, [r2, #1]
 8002754:	2b6c      	cmp	r3, #108	; 0x6c
 8002756:	f000 80d0 	beq.w	80028fa <d_unqualified_name+0x1fa>
 800275a:	2b74      	cmp	r3, #116	; 0x74
 800275c:	d15d      	bne.n	800281a <d_unqualified_name+0x11a>
 800275e:	1c53      	adds	r3, r2, #1
 8002760:	60c3      	str	r3, [r0, #12]
 8002762:	7851      	ldrb	r1, [r2, #1]
 8002764:	2974      	cmp	r1, #116	; 0x74
 8002766:	d15b      	bne.n	8002820 <d_unqualified_name+0x120>
 8002768:	3202      	adds	r2, #2
 800276a:	60c2      	str	r2, [r0, #12]
 800276c:	f7fd fe8c 	bl	8000488 <d_compact_number>
 8002770:	2800      	cmp	r0, #0
 8002772:	f2c0 80ef 	blt.w	8002954 <d_unqualified_name+0x254>
 8002776:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 800277a:	4293      	cmp	r3, r2
 800277c:	f280 80ea 	bge.w	8002954 <d_unqualified_name+0x254>
 8002780:	6922      	ldr	r2, [r4, #16]
 8002782:	011e      	lsls	r6, r3, #4
 8002784:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 8002788:	2100      	movs	r1, #0
 800278a:	3301      	adds	r3, #1
 800278c:	2748      	movs	r7, #72	; 0x48
 800278e:	6069      	str	r1, [r5, #4]
 8002790:	6163      	str	r3, [r4, #20]
 8002792:	5597      	strb	r7, [r2, r6]
 8002794:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8002798:	4293      	cmp	r3, r2
 800279a:	60a8      	str	r0, [r5, #8]
 800279c:	f280 80da 	bge.w	8002954 <d_unqualified_name+0x254>
 80027a0:	69e1      	ldr	r1, [r4, #28]
 80027a2:	68e2      	ldr	r2, [r4, #12]
 80027a4:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 80027a8:	3301      	adds	r3, #1
 80027aa:	6223      	str	r3, [r4, #32]
 80027ac:	7811      	ldrb	r1, [r2, #0]
 80027ae:	e7c4      	b.n	800273a <d_unqualified_name+0x3a>
 80027b0:	f7fd fea4 	bl	80004fc <d_source_name>
 80027b4:	68e3      	ldr	r3, [r4, #12]
 80027b6:	7819      	ldrb	r1, [r3, #0]
 80027b8:	2942      	cmp	r1, #66	; 0x42
 80027ba:	4605      	mov	r5, r0
 80027bc:	d1bf      	bne.n	800273e <d_unqualified_name+0x3e>
 80027be:	4629      	mov	r1, r5
 80027c0:	4620      	mov	r0, r4
 80027c2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80027c6:	f7fd beff 	b.w	80005c8 <d_abi_tags>
 80027ca:	6882      	ldr	r2, [r0, #8]
 80027cc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80027ce:	6891      	ldr	r1, [r2, #8]
 80027d0:	6812      	ldr	r2, [r2, #0]
 80027d2:	3307      	adds	r3, #7
 80027d4:	440b      	add	r3, r1
 80027d6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80027d8:	7813      	ldrb	r3, [r2, #0]
 80027da:	2b6c      	cmp	r3, #108	; 0x6c
 80027dc:	d1ab      	bne.n	8002736 <d_unqualified_name+0x36>
 80027de:	7853      	ldrb	r3, [r2, #1]
 80027e0:	2b69      	cmp	r3, #105	; 0x69
 80027e2:	d1a8      	bne.n	8002736 <d_unqualified_name+0x36>
 80027e4:	7893      	ldrb	r3, [r2, #2]
 80027e6:	2b00      	cmp	r3, #0
 80027e8:	d1a5      	bne.n	8002736 <d_unqualified_name+0x36>
 80027ea:	4620      	mov	r0, r4
 80027ec:	f7fd fe86 	bl	80004fc <d_source_name>
 80027f0:	462a      	mov	r2, r5
 80027f2:	4603      	mov	r3, r0
 80027f4:	2137      	movs	r1, #55	; 0x37
 80027f6:	4620      	mov	r0, r4
 80027f8:	f7fd fcea 	bl	80001d0 <d_make_comp>
 80027fc:	68e3      	ldr	r3, [r4, #12]
 80027fe:	4605      	mov	r5, r0
 8002800:	7819      	ldrb	r1, [r3, #0]
 8002802:	e79a      	b.n	800273a <d_unqualified_name+0x3a>
 8002804:	3201      	adds	r2, #1
 8002806:	60c2      	str	r2, [r0, #12]
 8002808:	f7fd fe78 	bl	80004fc <d_source_name>
 800280c:	4605      	mov	r5, r0
 800280e:	b120      	cbz	r0, 800281a <d_unqualified_name+0x11a>
 8002810:	4620      	mov	r0, r4
 8002812:	f7fd ffd5 	bl	80007c0 <d_discriminator>
 8002816:	2800      	cmp	r0, #0
 8002818:	d18d      	bne.n	8002736 <d_unqualified_name+0x36>
 800281a:	2500      	movs	r5, #0
 800281c:	4628      	mov	r0, r5
 800281e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002820:	2500      	movs	r5, #0
 8002822:	e78a      	b.n	800273a <d_unqualified_name+0x3a>
 8002824:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002826:	b118      	cbz	r0, 8002830 <d_unqualified_name+0x130>
 8002828:	7801      	ldrb	r1, [r0, #0]
 800282a:	b351      	cbz	r1, 8002882 <d_unqualified_name+0x182>
 800282c:	2918      	cmp	r1, #24
 800282e:	d028      	beq.n	8002882 <d_unqualified_name+0x182>
 8002830:	2b43      	cmp	r3, #67	; 0x43
 8002832:	d130      	bne.n	8002896 <d_unqualified_name+0x196>
 8002834:	7853      	ldrb	r3, [r2, #1]
 8002836:	2b49      	cmp	r3, #73	; 0x49
 8002838:	f000 8090 	beq.w	800295c <d_unqualified_name+0x25c>
 800283c:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8002840:	2904      	cmp	r1, #4
 8002842:	d8ea      	bhi.n	800281a <d_unqualified_name+0x11a>
 8002844:	3b30      	subs	r3, #48	; 0x30
 8002846:	3202      	adds	r2, #2
 8002848:	b2de      	uxtb	r6, r3
 800284a:	60e2      	str	r2, [r4, #12]
 800284c:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8002850:	428b      	cmp	r3, r1
 8002852:	f280 8097 	bge.w	8002984 <d_unqualified_name+0x284>
 8002856:	6921      	ldr	r1, [r4, #16]
 8002858:	eb01 1503 	add.w	r5, r1, r3, lsl #4
 800285c:	f103 0c01 	add.w	ip, r3, #1
 8002860:	2700      	movs	r7, #0
 8002862:	606f      	str	r7, [r5, #4]
 8002864:	011b      	lsls	r3, r3, #4
 8002866:	f8c4 c014 	str.w	ip, [r4, #20]
 800286a:	2800      	cmp	r0, #0
 800286c:	f000 8090 	beq.w	8002990 <d_unqualified_name+0x290>
 8002870:	f04f 0c07 	mov.w	ip, #7
 8002874:	606f      	str	r7, [r5, #4]
 8002876:	f801 c003 	strb.w	ip, [r1, r3]
 800287a:	722e      	strb	r6, [r5, #8]
 800287c:	60e8      	str	r0, [r5, #12]
 800287e:	7811      	ldrb	r1, [r2, #0]
 8002880:	e75b      	b.n	800273a <d_unqualified_name+0x3a>
 8002882:	68c1      	ldr	r1, [r0, #12]
 8002884:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002886:	440b      	add	r3, r1
 8002888:	62e3      	str	r3, [r4, #44]	; 0x2c
 800288a:	7811      	ldrb	r1, [r2, #0]
 800288c:	2943      	cmp	r1, #67	; 0x43
 800288e:	460b      	mov	r3, r1
 8002890:	d0d0      	beq.n	8002834 <d_unqualified_name+0x134>
 8002892:	2944      	cmp	r1, #68	; 0x44
 8002894:	d1c4      	bne.n	8002820 <d_unqualified_name+0x120>
 8002896:	7851      	ldrb	r1, [r2, #1]
 8002898:	3930      	subs	r1, #48	; 0x30
 800289a:	2905      	cmp	r1, #5
 800289c:	d82a      	bhi.n	80028f4 <d_unqualified_name+0x1f4>
 800289e:	e8df f001 	tbb	[pc, r1]
 80028a2:	1d03      	.short	0x1d03
 80028a4:	20232926 	.word	0x20232926
 80028a8:	f04f 0c01 	mov.w	ip, #1
 80028ac:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 80028b0:	1c95      	adds	r5, r2, #2
 80028b2:	428b      	cmp	r3, r1
 80028b4:	60e5      	str	r5, [r4, #12]
 80028b6:	da62      	bge.n	800297e <d_unqualified_name+0x27e>
 80028b8:	6921      	ldr	r1, [r4, #16]
 80028ba:	eb01 1503 	add.w	r5, r1, r3, lsl #4
 80028be:	1c5f      	adds	r7, r3, #1
 80028c0:	2600      	movs	r6, #0
 80028c2:	606e      	str	r6, [r5, #4]
 80028c4:	011b      	lsls	r3, r3, #4
 80028c6:	6167      	str	r7, [r4, #20]
 80028c8:	2800      	cmp	r0, #0
 80028ca:	d05e      	beq.n	800298a <d_unqualified_name+0x28a>
 80028cc:	2708      	movs	r7, #8
 80028ce:	606e      	str	r6, [r5, #4]
 80028d0:	54cf      	strb	r7, [r1, r3]
 80028d2:	f885 c008 	strb.w	ip, [r5, #8]
 80028d6:	60e8      	str	r0, [r5, #12]
 80028d8:	7891      	ldrb	r1, [r2, #2]
 80028da:	e72e      	b.n	800273a <d_unqualified_name+0x3a>
 80028dc:	f04f 0c02 	mov.w	ip, #2
 80028e0:	e7e4      	b.n	80028ac <d_unqualified_name+0x1ac>
 80028e2:	f04f 0c05 	mov.w	ip, #5
 80028e6:	e7e1      	b.n	80028ac <d_unqualified_name+0x1ac>
 80028e8:	f04f 0c04 	mov.w	ip, #4
 80028ec:	e7de      	b.n	80028ac <d_unqualified_name+0x1ac>
 80028ee:	f04f 0c03 	mov.w	ip, #3
 80028f2:	e7db      	b.n	80028ac <d_unqualified_name+0x1ac>
 80028f4:	4619      	mov	r1, r3
 80028f6:	2500      	movs	r5, #0
 80028f8:	e71f      	b.n	800273a <d_unqualified_name+0x3a>
 80028fa:	1c53      	adds	r3, r2, #1
 80028fc:	60c3      	str	r3, [r0, #12]
 80028fe:	7851      	ldrb	r1, [r2, #1]
 8002900:	296c      	cmp	r1, #108	; 0x6c
 8002902:	d18d      	bne.n	8002820 <d_unqualified_name+0x120>
 8002904:	3202      	adds	r2, #2
 8002906:	60c2      	str	r2, [r0, #12]
 8002908:	f7ff fda2 	bl	8002450 <d_parmlist>
 800290c:	68e3      	ldr	r3, [r4, #12]
 800290e:	4606      	mov	r6, r0
 8002910:	b308      	cbz	r0, 8002956 <d_unqualified_name+0x256>
 8002912:	7819      	ldrb	r1, [r3, #0]
 8002914:	2945      	cmp	r1, #69	; 0x45
 8002916:	d183      	bne.n	8002820 <d_unqualified_name+0x120>
 8002918:	3301      	adds	r3, #1
 800291a:	60e3      	str	r3, [r4, #12]
 800291c:	4620      	mov	r0, r4
 800291e:	f7fd fdb3 	bl	8000488 <d_compact_number>
 8002922:	2800      	cmp	r0, #0
 8002924:	db16      	blt.n	8002954 <d_unqualified_name+0x254>
 8002926:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 800292a:	4293      	cmp	r3, r2
 800292c:	da12      	bge.n	8002954 <d_unqualified_name+0x254>
 800292e:	6922      	ldr	r2, [r4, #16]
 8002930:	011f      	lsls	r7, r3, #4
 8002932:	eb02 1503 	add.w	r5, r2, r3, lsl #4
 8002936:	2100      	movs	r1, #0
 8002938:	3301      	adds	r3, #1
 800293a:	f04f 0c46 	mov.w	ip, #70	; 0x46
 800293e:	6069      	str	r1, [r5, #4]
 8002940:	6163      	str	r3, [r4, #20]
 8002942:	f802 c007 	strb.w	ip, [r2, r7]
 8002946:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 800294a:	4293      	cmp	r3, r2
 800294c:	e9c5 6002 	strd	r6, r0, [r5, #8]
 8002950:	f6ff af26 	blt.w	80027a0 <d_unqualified_name+0xa0>
 8002954:	68e3      	ldr	r3, [r4, #12]
 8002956:	7819      	ldrb	r1, [r3, #0]
 8002958:	2500      	movs	r5, #0
 800295a:	e6ee      	b.n	800273a <d_unqualified_name+0x3a>
 800295c:	1c53      	adds	r3, r2, #1
 800295e:	60e3      	str	r3, [r4, #12]
 8002960:	7893      	ldrb	r3, [r2, #2]
 8002962:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8002966:	2904      	cmp	r1, #4
 8002968:	d815      	bhi.n	8002996 <d_unqualified_name+0x296>
 800296a:	3203      	adds	r2, #3
 800296c:	60e2      	str	r2, [r4, #12]
 800296e:	3b30      	subs	r3, #48	; 0x30
 8002970:	4620      	mov	r0, r4
 8002972:	b2de      	uxtb	r6, r3
 8002974:	f7ff f8f8 	bl	8001b68 <d_type>
 8002978:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800297a:	68e2      	ldr	r2, [r4, #12]
 800297c:	e766      	b.n	800284c <d_unqualified_name+0x14c>
 800297e:	7891      	ldrb	r1, [r2, #2]
 8002980:	2500      	movs	r5, #0
 8002982:	e6da      	b.n	800273a <d_unqualified_name+0x3a>
 8002984:	7811      	ldrb	r1, [r2, #0]
 8002986:	2500      	movs	r5, #0
 8002988:	e6d7      	b.n	800273a <d_unqualified_name+0x3a>
 800298a:	7891      	ldrb	r1, [r2, #2]
 800298c:	4605      	mov	r5, r0
 800298e:	e6d4      	b.n	800273a <d_unqualified_name+0x3a>
 8002990:	7811      	ldrb	r1, [r2, #0]
 8002992:	4605      	mov	r5, r0
 8002994:	e6d1      	b.n	800273a <d_unqualified_name+0x3a>
 8002996:	7851      	ldrb	r1, [r2, #1]
 8002998:	2500      	movs	r5, #0
 800299a:	e6ce      	b.n	800273a <d_unqualified_name+0x3a>

0800299c <d_expr_primary>:
 800299c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800299e:	68c2      	ldr	r2, [r0, #12]
 80029a0:	7813      	ldrb	r3, [r2, #0]
 80029a2:	2b4c      	cmp	r3, #76	; 0x4c
 80029a4:	d131      	bne.n	8002a0a <d_expr_primary+0x6e>
 80029a6:	1c53      	adds	r3, r2, #1
 80029a8:	60c3      	str	r3, [r0, #12]
 80029aa:	7851      	ldrb	r1, [r2, #1]
 80029ac:	295f      	cmp	r1, #95	; 0x5f
 80029ae:	4605      	mov	r5, r0
 80029b0:	d033      	beq.n	8002a1a <d_expr_primary+0x7e>
 80029b2:	295a      	cmp	r1, #90	; 0x5a
 80029b4:	d10c      	bne.n	80029d0 <d_expr_primary+0x34>
 80029b6:	3301      	adds	r3, #1
 80029b8:	60eb      	str	r3, [r5, #12]
 80029ba:	2100      	movs	r1, #0
 80029bc:	4628      	mov	r0, r5
 80029be:	f7fe fca7 	bl	8001310 <d_encoding>
 80029c2:	68eb      	ldr	r3, [r5, #12]
 80029c4:	781a      	ldrb	r2, [r3, #0]
 80029c6:	2a45      	cmp	r2, #69	; 0x45
 80029c8:	d11f      	bne.n	8002a0a <d_expr_primary+0x6e>
 80029ca:	3301      	adds	r3, #1
 80029cc:	60eb      	str	r3, [r5, #12]
 80029ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80029d0:	f7ff f8ca 	bl	8001b68 <d_type>
 80029d4:	b1c8      	cbz	r0, 8002a0a <d_expr_primary+0x6e>
 80029d6:	7803      	ldrb	r3, [r0, #0]
 80029d8:	2b27      	cmp	r3, #39	; 0x27
 80029da:	d106      	bne.n	80029ea <d_expr_primary+0x4e>
 80029dc:	6883      	ldr	r3, [r0, #8]
 80029de:	7c1a      	ldrb	r2, [r3, #16]
 80029e0:	b11a      	cbz	r2, 80029ea <d_expr_primary+0x4e>
 80029e2:	685a      	ldr	r2, [r3, #4]
 80029e4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80029e6:	1a9b      	subs	r3, r3, r2
 80029e8:	62eb      	str	r3, [r5, #44]	; 0x2c
 80029ea:	68ea      	ldr	r2, [r5, #12]
 80029ec:	7814      	ldrb	r4, [r2, #0]
 80029ee:	2c6e      	cmp	r4, #110	; 0x6e
 80029f0:	d00d      	beq.n	8002a0e <d_expr_primary+0x72>
 80029f2:	213d      	movs	r1, #61	; 0x3d
 80029f4:	2c45      	cmp	r4, #69	; 0x45
 80029f6:	d039      	beq.n	8002a6c <d_expr_primary+0xd0>
 80029f8:	4613      	mov	r3, r2
 80029fa:	e003      	b.n	8002a04 <d_expr_primary+0x68>
 80029fc:	60eb      	str	r3, [r5, #12]
 80029fe:	781c      	ldrb	r4, [r3, #0]
 8002a00:	2c45      	cmp	r4, #69	; 0x45
 8002a02:	d012      	beq.n	8002a2a <d_expr_primary+0x8e>
 8002a04:	3301      	adds	r3, #1
 8002a06:	2c00      	cmp	r4, #0
 8002a08:	d1f8      	bne.n	80029fc <d_expr_primary+0x60>
 8002a0a:	2000      	movs	r0, #0
 8002a0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a0e:	1c53      	adds	r3, r2, #1
 8002a10:	60eb      	str	r3, [r5, #12]
 8002a12:	7854      	ldrb	r4, [r2, #1]
 8002a14:	213e      	movs	r1, #62	; 0x3e
 8002a16:	461a      	mov	r2, r3
 8002a18:	e7ec      	b.n	80029f4 <d_expr_primary+0x58>
 8002a1a:	1c93      	adds	r3, r2, #2
 8002a1c:	60c3      	str	r3, [r0, #12]
 8002a1e:	7892      	ldrb	r2, [r2, #2]
 8002a20:	2a5a      	cmp	r2, #90	; 0x5a
 8002a22:	bf18      	it	ne
 8002a24:	2000      	movne	r0, #0
 8002a26:	d1ce      	bne.n	80029c6 <d_expr_primary+0x2a>
 8002a28:	e7c5      	b.n	80029b6 <d_expr_primary+0x1a>
 8002a2a:	1a9c      	subs	r4, r3, r2
 8002a2c:	e9d5 6305 	ldrd	r6, r3, [r5, #20]
 8002a30:	429e      	cmp	r6, r3
 8002a32:	da19      	bge.n	8002a68 <d_expr_primary+0xcc>
 8002a34:	f8d5 c010 	ldr.w	ip, [r5, #16]
 8002a38:	2700      	movs	r7, #0
 8002a3a:	eb0c 1306 	add.w	r3, ip, r6, lsl #4
 8002a3e:	f106 0e01 	add.w	lr, r6, #1
 8002a42:	42bc      	cmp	r4, r7
 8002a44:	605f      	str	r7, [r3, #4]
 8002a46:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8002a4a:	f8c5 e014 	str.w	lr, [r5, #20]
 8002a4e:	dd0b      	ble.n	8002a68 <d_expr_primary+0xcc>
 8002a50:	605f      	str	r7, [r3, #4]
 8002a52:	f80c 7006 	strb.w	r7, [ip, r6]
 8002a56:	e9c3 2402 	strd	r2, r4, [r3, #8]
 8002a5a:	4602      	mov	r2, r0
 8002a5c:	4628      	mov	r0, r5
 8002a5e:	f7fd fbb7 	bl	80001d0 <d_make_comp>
 8002a62:	68eb      	ldr	r3, [r5, #12]
 8002a64:	781a      	ldrb	r2, [r3, #0]
 8002a66:	e7ae      	b.n	80029c6 <d_expr_primary+0x2a>
 8002a68:	2300      	movs	r3, #0
 8002a6a:	e7f6      	b.n	8002a5a <d_expr_primary+0xbe>
 8002a6c:	2400      	movs	r4, #0
 8002a6e:	e7dd      	b.n	8002a2c <d_expr_primary+0x90>

08002a70 <d_print_comp>:
 8002a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a74:	4604      	mov	r4, r0
 8002a76:	b097      	sub	sp, #92	; 0x5c
 8002a78:	2a00      	cmp	r2, #0
 8002a7a:	d074      	beq.n	8002b66 <d_print_comp+0xf6>
 8002a7c:	6853      	ldr	r3, [r2, #4]
 8002a7e:	2b01      	cmp	r3, #1
 8002a80:	4615      	mov	r5, r2
 8002a82:	dc70      	bgt.n	8002b66 <d_print_comp+0xf6>
 8002a84:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
 8002a88:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8002a8c:	dc6b      	bgt.n	8002b66 <d_print_comp+0xf6>
 8002a8e:	460e      	mov	r6, r1
 8002a90:	1c59      	adds	r1, r3, #1
 8002a92:	6069      	str	r1, [r5, #4]
 8002a94:	f8d0 7118 	ldr.w	r7, [r0, #280]	; 0x118
 8002a98:	f8d0 112c 	ldr.w	r1, [r0, #300]	; 0x12c
 8002a9c:	9502      	str	r5, [sp, #8]
 8002a9e:	f102 0c01 	add.w	ip, r2, #1
 8002aa2:	a802      	add	r0, sp, #8
 8002aa4:	f8c4 c11c 	str.w	ip, [r4, #284]	; 0x11c
 8002aa8:	9103      	str	r1, [sp, #12]
 8002aaa:	f8c4 012c 	str.w	r0, [r4, #300]	; 0x12c
 8002aae:	2f00      	cmp	r7, #0
 8002ab0:	f040 80d8 	bne.w	8002c64 <d_print_comp+0x1f4>
 8002ab4:	f895 c000 	ldrb.w	ip, [r5]
 8002ab8:	f1bc 0f50 	cmp.w	ip, #80	; 0x50
 8002abc:	f201 8016 	bhi.w	8003aec <d_print_comp+0x107c>
 8002ac0:	e8df f01c 	tbh	[pc, ip, lsl #1]
 8002ac4:	012007e7 	.word	0x012007e7
 8002ac8:	038c0120 	.word	0x038c0120
 8002acc:	04180871 	.word	0x04180871
 8002ad0:	07b107be 	.word	0x07b107be
 8002ad4:	0766078c 	.word	0x0766078c
 8002ad8:	071a0740 	.word	0x071a0740
 8002adc:	06ce06f4 	.word	0x06ce06f4
 8002ae0:	0667068d 	.word	0x0667068d
 8002ae4:	061b0641 	.word	0x061b0641
 8002ae8:	05cf05f5 	.word	0x05cf05f5
 8002aec:	058305a9 	.word	0x058305a9
 8002af0:	0537055d 	.word	0x0537055d
 8002af4:	00fb050d 	.word	0x00fb050d
 8002af8:	00fb00fb 	.word	0x00fb00fb
 8002afc:	00d800d8 	.word	0x00d800d8
 8002b00:	00d800d8 	.word	0x00d800d8
 8002b04:	00d800d8 	.word	0x00d800d8
 8002b08:	020800d8 	.word	0x020800d8
 8002b0c:	00d80208 	.word	0x00d80208
 8002b10:	024a00d8 	.word	0x024a00d8
 8002b14:	0222023e 	.word	0x0222023e
 8002b18:	01de0278 	.word	0x01de0278
 8002b1c:	01de02dc 	.word	0x01de02dc
 8002b20:	019a019a 	.word	0x019a019a
 8002b24:	09300975 	.word	0x09300975
 8002b28:	08d709b0 	.word	0x08d709b0
 8002b2c:	090a0814 	.word	0x090a0814
 8002b30:	033808fd 	.word	0x033808fd
 8002b34:	0a72032d 	.word	0x0a72032d
 8002b38:	01fb0a62 	.word	0x01fb0a62
 8002b3c:	015701fb 	.word	0x015701fb
 8002b40:	0a3c0157 	.word	0x0a3c0157
 8002b44:	0a080a2a 	.word	0x0a080a2a
 8002b48:	0aeb09d9 	.word	0x0aeb09d9
 8002b4c:	0a9f0ac5 	.word	0x0a9f0ac5
 8002b50:	08140a79 	.word	0x08140a79
 8002b54:	04c204e8 	.word	0x04c204e8
 8002b58:	0442049c 	.word	0x0442049c
 8002b5c:	00d80846 	.word	0x00d80846
 8002b60:	00d8081b 	.word	0x00d8081b
 8002b64:	00d8      	.short	0x00d8
 8002b66:	2301      	movs	r3, #1
 8002b68:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8002b6c:	b017      	add	sp, #92	; 0x5c
 8002b6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b72:	68aa      	ldr	r2, [r5, #8]
 8002b74:	6893      	ldr	r3, [r2, #8]
 8002b76:	681b      	ldr	r3, [r3, #0]
 8002b78:	7859      	ldrb	r1, [r3, #1]
 8002b7a:	2963      	cmp	r1, #99	; 0x63
 8002b7c:	f002 8452 	beq.w	8005424 <d_print_comp+0x29b4>
 8002b80:	f105 030c 	add.w	r3, r5, #12
 8002b84:	4631      	mov	r1, r6
 8002b86:	4620      	mov	r0, r4
 8002b88:	f003 fe44 	bl	8006814 <d_maybe_print_fold_expression.isra.0>
 8002b8c:	4607      	mov	r7, r0
 8002b8e:	2800      	cmp	r0, #0
 8002b90:	f042 8440 	bne.w	8005414 <d_print_comp+0x29a4>
 8002b94:	68ab      	ldr	r3, [r5, #8]
 8002b96:	781a      	ldrb	r2, [r3, #0]
 8002b98:	2a32      	cmp	r2, #50	; 0x32
 8002b9a:	f002 84dc 	beq.w	8005556 <d_print_comp+0x2ae6>
 8002b9e:	689b      	ldr	r3, [r3, #8]
 8002ba0:	49c9      	ldr	r1, [pc, #804]	; (8002ec8 <d_print_comp+0x458>)
 8002ba2:	6818      	ldr	r0, [r3, #0]
 8002ba4:	f004 f9bc 	bl	8006f20 <strcmp>
 8002ba8:	68eb      	ldr	r3, [r5, #12]
 8002baa:	b920      	cbnz	r0, 8002bb6 <d_print_comp+0x146>
 8002bac:	689a      	ldr	r2, [r3, #8]
 8002bae:	7811      	ldrb	r1, [r2, #0]
 8002bb0:	2903      	cmp	r1, #3
 8002bb2:	f002 8619 	beq.w	80057e8 <d_print_comp+0x2d78>
 8002bb6:	689a      	ldr	r2, [r3, #8]
 8002bb8:	4631      	mov	r1, r6
 8002bba:	4620      	mov	r0, r4
 8002bbc:	f003 fdda 	bl	8006774 <d_print_subexpr>
 8002bc0:	68af      	ldr	r7, [r5, #8]
 8002bc2:	49c2      	ldr	r1, [pc, #776]	; (8002ecc <d_print_comp+0x45c>)
 8002bc4:	68bb      	ldr	r3, [r7, #8]
 8002bc6:	f8d3 8000 	ldr.w	r8, [r3]
 8002bca:	4640      	mov	r0, r8
 8002bcc:	f004 f9a8 	bl	8006f20 <strcmp>
 8002bd0:	4681      	mov	r9, r0
 8002bd2:	2800      	cmp	r0, #0
 8002bd4:	f042 84b0 	bne.w	8005538 <d_print_comp+0x2ac8>
 8002bd8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002bdc:	2bff      	cmp	r3, #255	; 0xff
 8002bde:	d10e      	bne.n	8002bfe <d_print_comp+0x18e>
 8002be0:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8002be4:	4619      	mov	r1, r3
 8002be6:	4620      	mov	r0, r4
 8002be8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002bec:	4798      	blx	r3
 8002bee:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002bf2:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8002bf6:	1c5a      	adds	r2, r3, #1
 8002bf8:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8002bfc:	464b      	mov	r3, r9
 8002bfe:	1c59      	adds	r1, r3, #1
 8002c00:	225b      	movs	r2, #91	; 0x5b
 8002c02:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002c06:	54e2      	strb	r2, [r4, r3]
 8002c08:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8002c0c:	68eb      	ldr	r3, [r5, #12]
 8002c0e:	4631      	mov	r1, r6
 8002c10:	68da      	ldr	r2, [r3, #12]
 8002c12:	4620      	mov	r0, r4
 8002c14:	f7ff ff2c 	bl	8002a70 <d_print_comp>
 8002c18:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002c1c:	2bff      	cmp	r3, #255	; 0xff
 8002c1e:	d10f      	bne.n	8002c40 <d_print_comp+0x1d0>
 8002c20:	2600      	movs	r6, #0
 8002c22:	4619      	mov	r1, r3
 8002c24:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8002c28:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002c2c:	4620      	mov	r0, r4
 8002c2e:	4798      	blx	r3
 8002c30:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002c34:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8002c38:	1c5a      	adds	r2, r3, #1
 8002c3a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8002c3e:	4633      	mov	r3, r6
 8002c40:	225d      	movs	r2, #93	; 0x5d
 8002c42:	1c59      	adds	r1, r3, #1
 8002c44:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002c48:	54e2      	strb	r2, [r4, r3]
 8002c4a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8002c4e:	68ab      	ldr	r3, [r5, #8]
 8002c50:	781a      	ldrb	r2, [r3, #0]
 8002c52:	2a32      	cmp	r2, #50	; 0x32
 8002c54:	f002 852e 	beq.w	80056b4 <d_print_comp+0x2c44>
 8002c58:	686b      	ldr	r3, [r5, #4]
 8002c5a:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8002c5e:	9903      	ldr	r1, [sp, #12]
 8002c60:	3b01      	subs	r3, #1
 8002c62:	3a01      	subs	r2, #1
 8002c64:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 8002c68:	606b      	str	r3, [r5, #4]
 8002c6a:	f8c4 211c 	str.w	r2, [r4, #284]	; 0x11c
 8002c6e:	b017      	add	sp, #92	; 0x5c
 8002c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c74:	2200      	movs	r2, #0
 8002c76:	e9d4 3144 	ldrd	r3, r1, [r4, #272]	; 0x110
 8002c7a:	e9cd 1506 	strd	r1, r5, [sp, #24]
 8002c7e:	a906      	add	r1, sp, #24
 8002c80:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
 8002c84:	2100      	movs	r1, #0
 8002c86:	e9cd 1308 	strd	r1, r3, [sp, #32]
 8002c8a:	46a9      	mov	r9, r5
 8002c8c:	2a00      	cmp	r2, #0
 8002c8e:	d036      	beq.n	8002cfe <d_print_comp+0x28e>
 8002c90:	4631      	mov	r1, r6
 8002c92:	4620      	mov	r0, r4
 8002c94:	f7ff feec 	bl	8002a70 <d_print_comp>
 8002c98:	9b08      	ldr	r3, [sp, #32]
 8002c9a:	2b00      	cmp	r3, #0
 8002c9c:	f001 8568 	beq.w	8004770 <d_print_comp+0x1d00>
 8002ca0:	9b06      	ldr	r3, [sp, #24]
 8002ca2:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8002ca6:	b10f      	cbz	r7, 8002cac <d_print_comp+0x23c>
 8002ca8:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
 8002cac:	686b      	ldr	r3, [r5, #4]
 8002cae:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8002cb2:	9903      	ldr	r1, [sp, #12]
 8002cb4:	3b01      	subs	r3, #1
 8002cb6:	3a01      	subs	r2, #1
 8002cb8:	e7d4      	b.n	8002c64 <d_print_comp+0x1f4>
 8002cba:	f8d4 e114 	ldr.w	lr, [r4, #276]	; 0x114
 8002cbe:	4673      	mov	r3, lr
 8002cc0:	f1be 0f00 	cmp.w	lr, #0
 8002cc4:	d00e      	beq.n	8002ce4 <d_print_comp+0x274>
 8002cc6:	6899      	ldr	r1, [r3, #8]
 8002cc8:	b949      	cbnz	r1, 8002cde <d_print_comp+0x26e>
 8002cca:	685a      	ldr	r2, [r3, #4]
 8002ccc:	7812      	ldrb	r2, [r2, #0]
 8002cce:	f1a2 0019 	sub.w	r0, r2, #25
 8002cd2:	2802      	cmp	r0, #2
 8002cd4:	f202 81eb 	bhi.w	80050ae <d_print_comp+0x263e>
 8002cd8:	4594      	cmp	ip, r2
 8002cda:	f002 81db 	beq.w	8005094 <d_print_comp+0x2624>
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	2b00      	cmp	r3, #0
 8002ce2:	d1f0      	bne.n	8002cc6 <d_print_comp+0x256>
 8002ce4:	46a9      	mov	r9, r5
 8002ce6:	ab06      	add	r3, sp, #24
 8002ce8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8002cec:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8002cf0:	f8cd e018 	str.w	lr, [sp, #24]
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002cfa:	f8cd 901c 	str.w	r9, [sp, #28]
 8002cfe:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8002d02:	e7c5      	b.n	8002c90 <d_print_comp+0x220>
 8002d04:	68aa      	ldr	r2, [r5, #8]
 8002d06:	4631      	mov	r1, r6
 8002d08:	4620      	mov	r0, r4
 8002d0a:	f7ff feb1 	bl	8002a70 <d_print_comp>
 8002d0e:	f016 0a04 	ands.w	sl, r6, #4
 8002d12:	f002 80da 	beq.w	8004eca <d_print_comp+0x245a>
 8002d16:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002d1a:	2bff      	cmp	r3, #255	; 0xff
 8002d1c:	d10f      	bne.n	8002d3e <d_print_comp+0x2ce>
 8002d1e:	2700      	movs	r7, #0
 8002d20:	4619      	mov	r1, r3
 8002d22:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8002d26:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002d2a:	4620      	mov	r0, r4
 8002d2c:	4798      	blx	r3
 8002d2e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002d32:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8002d36:	1c5a      	adds	r2, r3, #1
 8002d38:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8002d3c:	463b      	mov	r3, r7
 8002d3e:	222e      	movs	r2, #46	; 0x2e
 8002d40:	1c59      	adds	r1, r3, #1
 8002d42:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002d46:	54e2      	strb	r2, [r4, r3]
 8002d48:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8002d4c:	f8d5 800c 	ldr.w	r8, [r5, #12]
 8002d50:	f898 3000 	ldrb.w	r3, [r8]
 8002d54:	2b47      	cmp	r3, #71	; 0x47
 8002d56:	f002 81f6 	beq.w	8005146 <d_print_comp+0x26d6>
 8002d5a:	4642      	mov	r2, r8
 8002d5c:	4631      	mov	r1, r6
 8002d5e:	4620      	mov	r0, r4
 8002d60:	f7ff fe86 	bl	8002a70 <d_print_comp>
 8002d64:	686b      	ldr	r3, [r5, #4]
 8002d66:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8002d6a:	9903      	ldr	r1, [sp, #12]
 8002d6c:	3b01      	subs	r3, #1
 8002d6e:	3a01      	subs	r2, #1
 8002d70:	e778      	b.n	8002c64 <d_print_comp+0x1f4>
 8002d72:	68aa      	ldr	r2, [r5, #8]
 8002d74:	7813      	ldrb	r3, [r2, #0]
 8002d76:	2b27      	cmp	r3, #39	; 0x27
 8002d78:	f001 876e 	beq.w	8004c58 <d_print_comp+0x21e8>
 8002d7c:	2700      	movs	r7, #0
 8002d7e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002d82:	29ff      	cmp	r1, #255	; 0xff
 8002d84:	d10e      	bne.n	8002da4 <d_print_comp+0x334>
 8002d86:	f04f 0800 	mov.w	r8, #0
 8002d8a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002d8e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002d92:	4620      	mov	r0, r4
 8002d94:	4798      	blx	r3
 8002d96:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002d9a:	68aa      	ldr	r2, [r5, #8]
 8002d9c:	3301      	adds	r3, #1
 8002d9e:	4641      	mov	r1, r8
 8002da0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002da4:	2328      	movs	r3, #40	; 0x28
 8002da6:	1c48      	adds	r0, r1, #1
 8002da8:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8002dac:	5463      	strb	r3, [r4, r1]
 8002dae:	4620      	mov	r0, r4
 8002db0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002db4:	4631      	mov	r1, r6
 8002db6:	f7ff fe5b 	bl	8002a70 <d_print_comp>
 8002dba:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002dbe:	2bff      	cmp	r3, #255	; 0xff
 8002dc0:	f001 8774 	beq.w	8004cac <d_print_comp+0x223c>
 8002dc4:	1c59      	adds	r1, r3, #1
 8002dc6:	2229      	movs	r2, #41	; 0x29
 8002dc8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002dcc:	54e2      	strb	r2, [r4, r3]
 8002dce:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8002dd2:	782b      	ldrb	r3, [r5, #0]
 8002dd4:	2b3e      	cmp	r3, #62	; 0x3e
 8002dd6:	f002 8231 	beq.w	800523c <d_print_comp+0x27cc>
 8002dda:	2f08      	cmp	r7, #8
 8002ddc:	f002 80bd 	beq.w	8004f5a <d_print_comp+0x24ea>
 8002de0:	68ea      	ldr	r2, [r5, #12]
 8002de2:	4631      	mov	r1, r6
 8002de4:	4620      	mov	r0, r4
 8002de6:	f7ff fe43 	bl	8002a70 <d_print_comp>
 8002dea:	686b      	ldr	r3, [r5, #4]
 8002dec:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8002df0:	9903      	ldr	r1, [sp, #12]
 8002df2:	3b01      	subs	r3, #1
 8002df4:	3a01      	subs	r2, #1
 8002df6:	e735      	b.n	8002c64 <d_print_comp+0x1f4>
 8002df8:	68aa      	ldr	r2, [r5, #8]
 8002dfa:	b11a      	cbz	r2, 8002e04 <d_print_comp+0x394>
 8002dfc:	4631      	mov	r1, r6
 8002dfe:	4620      	mov	r0, r4
 8002e00:	f7ff fe36 	bl	8002a70 <d_print_comp>
 8002e04:	68eb      	ldr	r3, [r5, #12]
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	f002 812c 	beq.w	8005064 <d_print_comp+0x25f4>
 8002e0c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002e10:	2bfd      	cmp	r3, #253	; 0xfd
 8002e12:	d90e      	bls.n	8002e32 <d_print_comp+0x3c2>
 8002e14:	2700      	movs	r7, #0
 8002e16:	54e7      	strb	r7, [r4, r3]
 8002e18:	4619      	mov	r1, r3
 8002e1a:	4620      	mov	r0, r4
 8002e1c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002e20:	4798      	blx	r3
 8002e22:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002e26:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8002e2a:	1c5a      	adds	r2, r3, #1
 8002e2c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8002e30:	463b      	mov	r3, r7
 8002e32:	f8df 909c 	ldr.w	r9, [pc, #156]	; 8002ed0 <d_print_comp+0x460>
 8002e36:	f04f 082c 	mov.w	r8, #44	; 0x2c
 8002e3a:	f109 0b01 	add.w	fp, r9, #1
 8002e3e:	f04f 0a00 	mov.w	sl, #0
 8002e42:	4619      	mov	r1, r3
 8002e44:	e00c      	b.n	8002e60 <d_print_comp+0x3f0>
 8002e46:	460b      	mov	r3, r1
 8002e48:	3101      	adds	r1, #1
 8002e4a:	45cb      	cmp	fp, r9
 8002e4c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002e50:	f804 8003 	strb.w	r8, [r4, r3]
 8002e54:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8002e58:	f001 84ab 	beq.w	80047b2 <d_print_comp+0x1d42>
 8002e5c:	f819 8f01 	ldrb.w	r8, [r9, #1]!
 8002e60:	29ff      	cmp	r1, #255	; 0xff
 8002e62:	d1f0      	bne.n	8002e46 <d_print_comp+0x3d6>
 8002e64:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002e68:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8002e6c:	4620      	mov	r0, r4
 8002e6e:	4798      	blx	r3
 8002e70:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002e74:	3301      	adds	r3, #1
 8002e76:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002e7a:	2101      	movs	r1, #1
 8002e7c:	2300      	movs	r3, #0
 8002e7e:	e7e4      	b.n	8002e4a <d_print_comp+0x3da>
 8002e80:	e9d4 3144 	ldrd	r3, r1, [r4, #272]	; 0x110
 8002e84:	aa06      	add	r2, sp, #24
 8002e86:	2000      	movs	r0, #0
 8002e88:	e9cd 1506 	strd	r1, r5, [sp, #24]
 8002e8c:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8002e90:	9008      	str	r0, [sp, #32]
 8002e92:	68ea      	ldr	r2, [r5, #12]
 8002e94:	9309      	str	r3, [sp, #36]	; 0x24
 8002e96:	4631      	mov	r1, r6
 8002e98:	4620      	mov	r0, r4
 8002e9a:	f7ff fde9 	bl	8002a70 <d_print_comp>
 8002e9e:	9b08      	ldr	r3, [sp, #32]
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	f001 86fc 	beq.w	8004c9e <d_print_comp+0x222e>
 8002ea6:	686b      	ldr	r3, [r5, #4]
 8002ea8:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8002eac:	9906      	ldr	r1, [sp, #24]
 8002eae:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
 8002eb2:	3b01      	subs	r3, #1
 8002eb4:	9903      	ldr	r1, [sp, #12]
 8002eb6:	3a01      	subs	r2, #1
 8002eb8:	e6d4      	b.n	8002c64 <d_print_comp+0x1f4>
 8002eba:	2301      	movs	r3, #1
 8002ebc:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8002ec0:	686b      	ldr	r3, [r5, #4]
 8002ec2:	3b01      	subs	r3, #1
 8002ec4:	e6ce      	b.n	8002c64 <d_print_comp+0x1f4>
 8002ec6:	bf00      	nop
 8002ec8:	08013c8c 	.word	0x08013c8c
 8002ecc:	08013c90 	.word	0x08013c90
 8002ed0:	08013c64 	.word	0x08013c64
 8002ed4:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002ed8:	f8d5 9008 	ldr.w	r9, [r5, #8]
 8002edc:	b92b      	cbnz	r3, 8002eea <d_print_comp+0x47a>
 8002ede:	f899 7000 	ldrb.w	r7, [r9]
 8002ee2:	2f05      	cmp	r7, #5
 8002ee4:	f002 81c3 	beq.w	800526e <d_print_comp+0x27fe>
 8002ee8:	461f      	mov	r7, r3
 8002eea:	f899 3000 	ldrb.w	r3, [r9]
 8002eee:	2b23      	cmp	r3, #35	; 0x23
 8002ef0:	f001 8496 	beq.w	8004820 <d_print_comp+0x1db0>
 8002ef4:	782a      	ldrb	r2, [r5, #0]
 8002ef6:	429a      	cmp	r2, r3
 8002ef8:	f001 8492 	beq.w	8004820 <d_print_comp+0x1db0>
 8002efc:	2b24      	cmp	r3, #36	; 0x24
 8002efe:	f002 8317 	beq.w	8005530 <d_print_comp+0x2ac0>
 8002f02:	f8d4 e114 	ldr.w	lr, [r4, #276]	; 0x114
 8002f06:	e6ed      	b.n	8002ce4 <d_print_comp+0x274>
 8002f08:	06b3      	lsls	r3, r6, #26
 8002f0a:	f101 862f 	bmi.w	8004b6c <d_print_comp+0x20fc>
 8002f0e:	68aa      	ldr	r2, [r5, #8]
 8002f10:	2a00      	cmp	r2, #0
 8002f12:	f002 80dd 	beq.w	80050d0 <d_print_comp+0x2660>
 8002f16:	f016 0040 	ands.w	r0, r6, #64	; 0x40
 8002f1a:	f026 0660 	bic.w	r6, r6, #96	; 0x60
 8002f1e:	f002 80e0 	beq.w	80050e2 <d_print_comp+0x2672>
 8002f22:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8002f26:	4631      	mov	r1, r6
 8002f28:	f105 020c 	add.w	r2, r5, #12
 8002f2c:	4620      	mov	r0, r4
 8002f2e:	f003 f8db 	bl	80060e8 <d_print_function_type.isra.0>
 8002f32:	686b      	ldr	r3, [r5, #4]
 8002f34:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8002f38:	9903      	ldr	r1, [sp, #12]
 8002f3a:	3b01      	subs	r3, #1
 8002f3c:	3a01      	subs	r2, #1
 8002f3e:	e691      	b.n	8002c64 <d_print_comp+0x1f4>
 8002f40:	68aa      	ldr	r2, [r5, #8]
 8002f42:	4631      	mov	r1, r6
 8002f44:	4620      	mov	r0, r4
 8002f46:	f7ff fd93 	bl	8002a70 <d_print_comp>
 8002f4a:	686b      	ldr	r3, [r5, #4]
 8002f4c:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8002f50:	9903      	ldr	r1, [sp, #12]
 8002f52:	3b01      	subs	r3, #1
 8002f54:	3a01      	subs	r2, #1
 8002f56:	e685      	b.n	8002c64 <d_print_comp+0x1f4>
 8002f58:	f016 0604 	ands.w	r6, r6, #4
 8002f5c:	f041 8464 	bne.w	8004828 <d_print_comp+0x1db8>
 8002f60:	68af      	ldr	r7, [r5, #8]
 8002f62:	e9d7 7000 	ldrd	r7, r0, [r7]
 8002f66:	2800      	cmp	r0, #0
 8002f68:	f43f ae7c 	beq.w	8002c64 <d_print_comp+0x1f4>
 8002f6c:	4438      	add	r0, r7
 8002f6e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002f72:	f100 39ff 	add.w	r9, r0, #4294967295
 8002f76:	3f01      	subs	r7, #1
 8002f78:	46b0      	mov	r8, r6
 8002f7a:	e009      	b.n	8002f90 <d_print_comp+0x520>
 8002f7c:	460b      	mov	r3, r1
 8002f7e:	3101      	adds	r1, #1
 8002f80:	45b9      	cmp	r9, r7
 8002f82:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002f86:	54e6      	strb	r6, [r4, r3]
 8002f88:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8002f8c:	f001 85ce 	beq.w	8004b2c <d_print_comp+0x20bc>
 8002f90:	29ff      	cmp	r1, #255	; 0xff
 8002f92:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8002f96:	d1f1      	bne.n	8002f7c <d_print_comp+0x50c>
 8002f98:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8002f9c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002fa0:	4620      	mov	r0, r4
 8002fa2:	4798      	blx	r3
 8002fa4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002fa8:	3301      	adds	r3, #1
 8002faa:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002fae:	2101      	movs	r1, #1
 8002fb0:	2300      	movs	r3, #0
 8002fb2:	e7e5      	b.n	8002f80 <d_print_comp+0x510>
 8002fb4:	e9d4 3e44 	ldrd	r3, lr, [r4, #272]	; 0x110
 8002fb8:	f10d 0918 	add.w	r9, sp, #24
 8002fbc:	4671      	mov	r1, lr
 8002fbe:	2200      	movs	r2, #0
 8002fc0:	f8cd e000 	str.w	lr, [sp]
 8002fc4:	f8cd e018 	str.w	lr, [sp, #24]
 8002fc8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002fcc:	9507      	str	r5, [sp, #28]
 8002fce:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8002fd2:	46ce      	mov	lr, r9
 8002fd4:	2900      	cmp	r1, #0
 8002fd6:	f002 8494 	beq.w	8005902 <d_print_comp+0x2e92>
 8002fda:	f04f 0801 	mov.w	r8, #1
 8002fde:	46b4      	mov	ip, r6
 8002fe0:	9f00      	ldr	r7, [sp, #0]
 8002fe2:	46c3      	mov	fp, r8
 8002fe4:	464e      	mov	r6, r9
 8002fe6:	e017      	b.n	8003018 <d_print_comp+0x5a8>
 8002fe8:	68bb      	ldr	r3, [r7, #8]
 8002fea:	b99b      	cbnz	r3, 8003014 <d_print_comp+0x5a4>
 8002fec:	f1b8 0f03 	cmp.w	r8, #3
 8002ff0:	f202 8072 	bhi.w	80050d8 <d_print_comp+0x2668>
 8002ff4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8002ff8:	f1aa 0e40 	sub.w	lr, sl, #64	; 0x40
 8002ffc:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 8003000:	f84a 6c40 	str.w	r6, [sl, #-64]
 8003004:	eb09 1608 	add.w	r6, r9, r8, lsl #4
 8003008:	f8c4 6114 	str.w	r6, [r4, #276]	; 0x114
 800300c:	f108 0801 	add.w	r8, r8, #1
 8003010:	f8c7 b008 	str.w	fp, [r7, #8]
 8003014:	683f      	ldr	r7, [r7, #0]
 8003016:	b13f      	cbz	r7, 8003028 <d_print_comp+0x5b8>
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	781b      	ldrb	r3, [r3, #0]
 800301c:	3b19      	subs	r3, #25
 800301e:	2b02      	cmp	r3, #2
 8003020:	ab16      	add	r3, sp, #88	; 0x58
 8003022:	eb03 1a08 	add.w	sl, r3, r8, lsl #4
 8003026:	d9df      	bls.n	8002fe8 <d_print_comp+0x578>
 8003028:	68ea      	ldr	r2, [r5, #12]
 800302a:	4661      	mov	r1, ip
 800302c:	4620      	mov	r0, r4
 800302e:	4666      	mov	r6, ip
 8003030:	f7ff fd1e 	bl	8002a70 <d_print_comp>
 8003034:	9b08      	ldr	r3, [sp, #32]
 8003036:	9a00      	ldr	r2, [sp, #0]
 8003038:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 800303c:	b9bb      	cbnz	r3, 800306e <d_print_comp+0x5fe>
 800303e:	f1b8 0f01 	cmp.w	r8, #1
 8003042:	d00c      	beq.n	800305e <d_print_comp+0x5ee>
 8003044:	eb09 1808 	add.w	r8, r9, r8, lsl #4
 8003048:	af0a      	add	r7, sp, #40	; 0x28
 800304a:	f858 2c0c 	ldr.w	r2, [r8, #-12]
 800304e:	4631      	mov	r1, r6
 8003050:	f1a8 0810 	sub.w	r8, r8, #16
 8003054:	4620      	mov	r0, r4
 8003056:	f002 fd41 	bl	8005adc <d_print_mod>
 800305a:	4547      	cmp	r7, r8
 800305c:	d1f5      	bne.n	800304a <d_print_comp+0x5da>
 800305e:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8003062:	4631      	mov	r1, r6
 8003064:	f105 0208 	add.w	r2, r5, #8
 8003068:	4620      	mov	r0, r4
 800306a:	f003 fa6d 	bl	8006548 <d_print_array_type.isra.0>
 800306e:	686b      	ldr	r3, [r5, #4]
 8003070:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8003074:	9903      	ldr	r1, [sp, #12]
 8003076:	3b01      	subs	r3, #1
 8003078:	3a01      	subs	r2, #1
 800307a:	e5f3      	b.n	8002c64 <d_print_comp+0x1f4>
 800307c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003080:	2b00      	cmp	r3, #0
 8003082:	f041 8745 	bne.w	8004f10 <d_print_comp+0x24a0>
 8003086:	68aa      	ldr	r2, [r5, #8]
 8003088:	4bd8      	ldr	r3, [pc, #864]	; (80033ec <d_print_comp+0x97c>)
 800308a:	6891      	ldr	r1, [r2, #8]
 800308c:	4299      	cmp	r1, r3
 800308e:	f001 8549 	beq.w	8004b24 <d_print_comp+0x20b4>
 8003092:	4631      	mov	r1, r6
 8003094:	4620      	mov	r0, r4
 8003096:	f7ff fceb 	bl	8002a70 <d_print_comp>
 800309a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800309e:	2bff      	cmp	r3, #255	; 0xff
 80030a0:	d10f      	bne.n	80030c2 <d_print_comp+0x652>
 80030a2:	2600      	movs	r6, #0
 80030a4:	4619      	mov	r1, r3
 80030a6:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80030aa:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80030ae:	4620      	mov	r0, r4
 80030b0:	4798      	blx	r3
 80030b2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80030b6:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80030ba:	1c5a      	adds	r2, r3, #1
 80030bc:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80030c0:	4633      	mov	r3, r6
 80030c2:	2220      	movs	r2, #32
 80030c4:	1c59      	adds	r1, r3, #1
 80030c6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80030ca:	54e2      	strb	r2, [r4, r3]
 80030cc:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80030d0:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
 80030d4:	2b00      	cmp	r3, #0
 80030d6:	f041 84c6 	bne.w	8004a66 <d_print_comp+0x1ff6>
 80030da:	4fc5      	ldr	r7, [pc, #788]	; (80033f0 <d_print_comp+0x980>)
 80030dc:	4698      	mov	r8, r3
 80030de:	f107 0905 	add.w	r9, r7, #5
 80030e2:	265f      	movs	r6, #95	; 0x5f
 80030e4:	e00b      	b.n	80030fe <d_print_comp+0x68e>
 80030e6:	460b      	mov	r3, r1
 80030e8:	3101      	adds	r1, #1
 80030ea:	45b9      	cmp	r9, r7
 80030ec:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80030f0:	54e6      	strb	r6, [r4, r3]
 80030f2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80030f6:	f001 84ae 	beq.w	8004a56 <d_print_comp+0x1fe6>
 80030fa:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 80030fe:	29ff      	cmp	r1, #255	; 0xff
 8003100:	d1f1      	bne.n	80030e6 <d_print_comp+0x676>
 8003102:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003106:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800310a:	4620      	mov	r0, r4
 800310c:	4798      	blx	r3
 800310e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003112:	3301      	adds	r3, #1
 8003114:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003118:	2101      	movs	r1, #1
 800311a:	2300      	movs	r3, #0
 800311c:	e7e5      	b.n	80030ea <d_print_comp+0x67a>
 800311e:	68eb      	ldr	r3, [r5, #12]
 8003120:	781b      	ldrb	r3, [r3, #0]
 8003122:	2b39      	cmp	r3, #57	; 0x39
 8003124:	f43f ad25 	beq.w	8002b72 <d_print_comp+0x102>
 8003128:	2301      	movs	r3, #1
 800312a:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800312e:	686b      	ldr	r3, [r5, #4]
 8003130:	3b01      	subs	r3, #1
 8003132:	e597      	b.n	8002c64 <d_print_comp+0x1f4>
 8003134:	e9d5 8702 	ldrd	r8, r7, [r5, #8]
 8003138:	f898 3000 	ldrb.w	r3, [r8]
 800313c:	2b32      	cmp	r3, #50	; 0x32
 800313e:	f001 8613 	beq.w	8004d68 <d_print_comp+0x22f8>
 8003142:	2b34      	cmp	r3, #52	; 0x34
 8003144:	f042 83ee 	bne.w	8005924 <d_print_comp+0x2eb4>
 8003148:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800314c:	2bff      	cmp	r3, #255	; 0xff
 800314e:	d110      	bne.n	8003172 <d_print_comp+0x702>
 8003150:	f04f 0900 	mov.w	r9, #0
 8003154:	4619      	mov	r1, r3
 8003156:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800315a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800315e:	4620      	mov	r0, r4
 8003160:	4798      	blx	r3
 8003162:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003166:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 800316a:	1c5a      	adds	r2, r3, #1
 800316c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8003170:	464b      	mov	r3, r9
 8003172:	1c59      	adds	r1, r3, #1
 8003174:	2228      	movs	r2, #40	; 0x28
 8003176:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800317a:	54e2      	strb	r2, [r4, r3]
 800317c:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8003180:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8003184:	4631      	mov	r1, r6
 8003186:	4620      	mov	r0, r4
 8003188:	f7ff fc72 	bl	8002a70 <d_print_comp>
 800318c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003190:	2bff      	cmp	r3, #255	; 0xff
 8003192:	d110      	bne.n	80031b6 <d_print_comp+0x746>
 8003194:	f04f 0800 	mov.w	r8, #0
 8003198:	4619      	mov	r1, r3
 800319a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800319e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80031a2:	4620      	mov	r0, r4
 80031a4:	4798      	blx	r3
 80031a6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80031aa:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80031ae:	1c5a      	adds	r2, r3, #1
 80031b0:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80031b4:	4643      	mov	r3, r8
 80031b6:	2229      	movs	r2, #41	; 0x29
 80031b8:	1c59      	adds	r1, r3, #1
 80031ba:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80031be:	54e2      	strb	r2, [r4, r3]
 80031c0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80031c4:	463a      	mov	r2, r7
 80031c6:	4631      	mov	r1, r6
 80031c8:	4620      	mov	r0, r4
 80031ca:	f003 fad3 	bl	8006774 <d_print_subexpr>
 80031ce:	686b      	ldr	r3, [r5, #4]
 80031d0:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80031d4:	9903      	ldr	r1, [sp, #12]
 80031d6:	3b01      	subs	r3, #1
 80031d8:	3a01      	subs	r2, #1
 80031da:	e543      	b.n	8002c64 <d_print_comp+0x1f4>
 80031dc:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80031e0:	f8d5 8008 	ldr.w	r8, [r5, #8]
 80031e4:	9300      	str	r3, [sp, #0]
 80031e6:	2300      	movs	r3, #0
 80031e8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80031ec:	f1b8 0f00 	cmp.w	r8, #0
 80031f0:	f002 80c2 	beq.w	8005378 <d_print_comp+0x2908>
 80031f4:	f10d 0918 	add.w	r9, sp, #24
 80031f8:	f8d4 e110 	ldr.w	lr, [r4, #272]	; 0x110
 80031fc:	461f      	mov	r7, r3
 80031fe:	4618      	mov	r0, r3
 8003200:	464a      	mov	r2, r9
 8003202:	e9c2 3800 	strd	r3, r8, [r2]
 8003206:	e9c2 0e02 	strd	r0, lr, [r2, #8]
 800320a:	f898 1000 	ldrb.w	r1, [r8]
 800320e:	294d      	cmp	r1, #77	; 0x4d
 8003210:	f1a1 0a1c 	sub.w	sl, r1, #28
 8003214:	f1a1 0c4f 	sub.w	ip, r1, #79	; 0x4f
 8003218:	f107 0701 	add.w	r7, r7, #1
 800321c:	4613      	mov	r3, r2
 800321e:	f001 82dd 	beq.w	80047dc <d_print_comp+0x1d6c>
 8003222:	f200 8760 	bhi.w	80040e6 <d_print_comp+0x1676>
 8003226:	f1ba 0f04 	cmp.w	sl, #4
 800322a:	f241 82d7 	bls.w	80047dc <d_print_comp+0x1d6c>
 800322e:	2902      	cmp	r1, #2
 8003230:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8003234:	d116      	bne.n	8003264 <d_print_comp+0x7f4>
 8003236:	f8d8 800c 	ldr.w	r8, [r8, #12]
 800323a:	f898 3000 	ldrb.w	r3, [r8]
 800323e:	2b47      	cmp	r3, #71	; 0x47
 8003240:	f002 8357 	beq.w	80058f2 <d_print_comp+0x2e82>
 8003244:	eb09 1c07 	add.w	ip, r9, r7, lsl #4
 8003248:	f898 3000 	ldrb.w	r3, [r8]
 800324c:	2b4d      	cmp	r3, #77	; 0x4d
 800324e:	f1a3 011c 	sub.w	r1, r3, #28
 8003252:	f1a3 024f 	sub.w	r2, r3, #79	; 0x4f
 8003256:	f001 86eb 	beq.w	8005030 <d_print_comp+0x25c0>
 800325a:	f201 86e6 	bhi.w	800502a <d_print_comp+0x25ba>
 800325e:	2904      	cmp	r1, #4
 8003260:	f241 86e6 	bls.w	8005030 <d_print_comp+0x25c0>
 8003264:	f898 3000 	ldrb.w	r3, [r8]
 8003268:	2b04      	cmp	r3, #4
 800326a:	d104      	bne.n	8003276 <d_print_comp+0x806>
 800326c:	e9cd e804 	strd	lr, r8, [sp, #16]
 8003270:	ab04      	add	r3, sp, #16
 8003272:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8003276:	68ea      	ldr	r2, [r5, #12]
 8003278:	4631      	mov	r1, r6
 800327a:	4620      	mov	r0, r4
 800327c:	f7ff fbf8 	bl	8002a70 <d_print_comp>
 8003280:	f898 3000 	ldrb.w	r3, [r8]
 8003284:	2b04      	cmp	r3, #4
 8003286:	d102      	bne.n	800328e <d_print_comp+0x81e>
 8003288:	9b04      	ldr	r3, [sp, #16]
 800328a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800328e:	eb09 1707 	add.w	r7, r9, r7, lsl #4
 8003292:	f04f 0820 	mov.w	r8, #32
 8003296:	46aa      	mov	sl, r5
 8003298:	f857 5c08 	ldr.w	r5, [r7, #-8]
 800329c:	b9e5      	cbnz	r5, 80032d8 <d_print_comp+0x868>
 800329e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80032a2:	29ff      	cmp	r1, #255	; 0xff
 80032a4:	d10b      	bne.n	80032be <d_print_comp+0x84e>
 80032a6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80032aa:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80032ae:	4620      	mov	r0, r4
 80032b0:	4798      	blx	r3
 80032b2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80032b6:	3301      	adds	r3, #1
 80032b8:	4629      	mov	r1, r5
 80032ba:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80032be:	1c4b      	adds	r3, r1, #1
 80032c0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80032c4:	f857 2c0c 	ldr.w	r2, [r7, #-12]
 80032c8:	f804 8001 	strb.w	r8, [r4, r1]
 80032cc:	4620      	mov	r0, r4
 80032ce:	4631      	mov	r1, r6
 80032d0:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80032d4:	f002 fc02 	bl	8005adc <d_print_mod>
 80032d8:	3f10      	subs	r7, #16
 80032da:	45b9      	cmp	r9, r7
 80032dc:	d1dc      	bne.n	8003298 <d_print_comp+0x828>
 80032de:	9b00      	ldr	r3, [sp, #0]
 80032e0:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80032e4:	4655      	mov	r5, sl
 80032e6:	686b      	ldr	r3, [r5, #4]
 80032e8:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80032ec:	9903      	ldr	r1, [sp, #12]
 80032ee:	3b01      	subs	r3, #1
 80032f0:	3a01      	subs	r2, #1
 80032f2:	e4b7      	b.n	8002c64 <d_print_comp+0x1f4>
 80032f4:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80032f8:	2b00      	cmp	r3, #0
 80032fa:	f001 838c 	beq.w	8004a16 <d_print_comp+0x1fa6>
 80032fe:	4f3d      	ldr	r7, [pc, #244]	; (80033f4 <d_print_comp+0x984>)
 8003300:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003304:	f107 0904 	add.w	r9, r7, #4
 8003308:	2661      	movs	r6, #97	; 0x61
 800330a:	f04f 0800 	mov.w	r8, #0
 800330e:	e00b      	b.n	8003328 <d_print_comp+0x8b8>
 8003310:	460b      	mov	r3, r1
 8003312:	3101      	adds	r1, #1
 8003314:	45b9      	cmp	r9, r7
 8003316:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800331a:	54e6      	strb	r6, [r4, r3]
 800331c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003320:	f001 83cb 	beq.w	8004aba <d_print_comp+0x204a>
 8003324:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8003328:	29ff      	cmp	r1, #255	; 0xff
 800332a:	d1f1      	bne.n	8003310 <d_print_comp+0x8a0>
 800332c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003330:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003334:	4620      	mov	r0, r4
 8003336:	4798      	blx	r3
 8003338:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800333c:	3301      	adds	r3, #1
 800333e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003342:	2101      	movs	r1, #1
 8003344:	2300      	movs	r3, #0
 8003346:	e7e5      	b.n	8003314 <d_print_comp+0x8a4>
 8003348:	68a9      	ldr	r1, [r5, #8]
 800334a:	4620      	mov	r0, r4
 800334c:	f7fd fa80 	bl	8000850 <d_find_pack>
 8003350:	f04f 0a00 	mov.w	sl, #0
 8003354:	2800      	cmp	r0, #0
 8003356:	f002 8187 	beq.w	8005668 <d_print_comp+0x2bf8>
 800335a:	7803      	ldrb	r3, [r0, #0]
 800335c:	2b2f      	cmp	r3, #47	; 0x2f
 800335e:	f041 824d 	bne.w	80047fc <d_print_comp+0x1d8c>
 8003362:	6883      	ldr	r3, [r0, #8]
 8003364:	2b00      	cmp	r3, #0
 8003366:	f001 8249 	beq.w	80047fc <d_print_comp+0x1d8c>
 800336a:	68c0      	ldr	r0, [r0, #12]
 800336c:	f10a 0a01 	add.w	sl, sl, #1
 8003370:	2800      	cmp	r0, #0
 8003372:	d1f2      	bne.n	800335a <d_print_comp+0x8ea>
 8003374:	68ab      	ldr	r3, [r5, #8]
 8003376:	461a      	mov	r2, r3
 8003378:	f10a 33ff 	add.w	r3, sl, #4294967295
 800337c:	9300      	str	r3, [sp, #0]
 800337e:	4690      	mov	r8, r2
 8003380:	46a1      	mov	r9, r4
 8003382:	9501      	str	r5, [sp, #4]
 8003384:	e003      	b.n	800338e <d_print_comp+0x91e>
 8003386:	3701      	adds	r7, #1
 8003388:	45ba      	cmp	sl, r7
 800338a:	f341 8208 	ble.w	800479e <d_print_comp+0x1d2e>
 800338e:	f8c9 7124 	str.w	r7, [r9, #292]	; 0x124
 8003392:	4642      	mov	r2, r8
 8003394:	4631      	mov	r1, r6
 8003396:	4648      	mov	r0, r9
 8003398:	f7ff fb6a 	bl	8002a70 <d_print_comp>
 800339c:	9b00      	ldr	r3, [sp, #0]
 800339e:	429f      	cmp	r7, r3
 80033a0:	daf1      	bge.n	8003386 <d_print_comp+0x916>
 80033a2:	4c15      	ldr	r4, [pc, #84]	; (80033f8 <d_print_comp+0x988>)
 80033a4:	f8d9 1100 	ldr.w	r1, [r9, #256]	; 0x100
 80033a8:	f104 0b01 	add.w	fp, r4, #1
 80033ac:	252c      	movs	r5, #44	; 0x2c
 80033ae:	e00b      	b.n	80033c8 <d_print_comp+0x958>
 80033b0:	460b      	mov	r3, r1
 80033b2:	3101      	adds	r1, #1
 80033b4:	45a3      	cmp	fp, r4
 80033b6:	f8c9 1100 	str.w	r1, [r9, #256]	; 0x100
 80033ba:	f809 5003 	strb.w	r5, [r9, r3]
 80033be:	f889 5104 	strb.w	r5, [r9, #260]	; 0x104
 80033c2:	d0e0      	beq.n	8003386 <d_print_comp+0x916>
 80033c4:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 80033c8:	29ff      	cmp	r1, #255	; 0xff
 80033ca:	d1f1      	bne.n	80033b0 <d_print_comp+0x940>
 80033cc:	f04f 0300 	mov.w	r3, #0
 80033d0:	f889 30ff 	strb.w	r3, [r9, #255]	; 0xff
 80033d4:	4648      	mov	r0, r9
 80033d6:	e9d9 3242 	ldrd	r3, r2, [r9, #264]	; 0x108
 80033da:	4798      	blx	r3
 80033dc:	f8d9 3128 	ldr.w	r3, [r9, #296]	; 0x128
 80033e0:	3301      	adds	r3, #1
 80033e2:	f8c9 3128 	str.w	r3, [r9, #296]	; 0x128
 80033e6:	2101      	movs	r1, #1
 80033e8:	2300      	movs	r3, #0
 80033ea:	e7e3      	b.n	80033b4 <d_print_comp+0x944>
 80033ec:	08013140 	.word	0x08013140
 80033f0:	08013c54 	.word	0x08013c54
 80033f4:	08013adc 	.word	0x08013adc
 80033f8:	08013c64 	.word	0x08013c64
 80033fc:	f8df 83f8 	ldr.w	r8, [pc, #1016]	; 80037f8 <d_print_comp+0xd88>
 8003400:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003404:	f108 0a19 	add.w	sl, r8, #25
 8003408:	276e      	movs	r7, #110	; 0x6e
 800340a:	f04f 0900 	mov.w	r9, #0
 800340e:	e00b      	b.n	8003428 <d_print_comp+0x9b8>
 8003410:	460b      	mov	r3, r1
 8003412:	3101      	adds	r1, #1
 8003414:	45c2      	cmp	sl, r8
 8003416:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800341a:	54e7      	strb	r7, [r4, r3]
 800341c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003420:	f001 8114 	beq.w	800464c <d_print_comp+0x1bdc>
 8003424:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003428:	29ff      	cmp	r1, #255	; 0xff
 800342a:	d1f1      	bne.n	8003410 <d_print_comp+0x9a0>
 800342c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003430:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003434:	4620      	mov	r0, r4
 8003436:	4798      	blx	r3
 8003438:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800343c:	3301      	adds	r3, #1
 800343e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003442:	2101      	movs	r1, #1
 8003444:	2300      	movs	r3, #0
 8003446:	e7e5      	b.n	8003414 <d_print_comp+0x9a4>
 8003448:	f8df 83b0 	ldr.w	r8, [pc, #944]	; 80037fc <d_print_comp+0xd8c>
 800344c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003450:	f108 0a15 	add.w	sl, r8, #21
 8003454:	2774      	movs	r7, #116	; 0x74
 8003456:	f04f 0900 	mov.w	r9, #0
 800345a:	e00b      	b.n	8003474 <d_print_comp+0xa04>
 800345c:	460b      	mov	r3, r1
 800345e:	3101      	adds	r1, #1
 8003460:	45c2      	cmp	sl, r8
 8003462:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003466:	54e7      	strb	r7, [r4, r3]
 8003468:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800346c:	f001 80e1 	beq.w	8004632 <d_print_comp+0x1bc2>
 8003470:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003474:	29ff      	cmp	r1, #255	; 0xff
 8003476:	d1f1      	bne.n	800345c <d_print_comp+0x9ec>
 8003478:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800347c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003480:	4620      	mov	r0, r4
 8003482:	4798      	blx	r3
 8003484:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003488:	3301      	adds	r3, #1
 800348a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800348e:	2101      	movs	r1, #1
 8003490:	2300      	movs	r3, #0
 8003492:	e7e5      	b.n	8003460 <d_print_comp+0x9f0>
 8003494:	4fd7      	ldr	r7, [pc, #860]	; (80037f4 <d_print_comp+0xd84>)
 8003496:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800349a:	f107 090d 	add.w	r9, r7, #13
 800349e:	267b      	movs	r6, #123	; 0x7b
 80034a0:	f04f 0800 	mov.w	r8, #0
 80034a4:	e00b      	b.n	80034be <d_print_comp+0xa4e>
 80034a6:	460b      	mov	r3, r1
 80034a8:	3101      	adds	r1, #1
 80034aa:	45b9      	cmp	r9, r7
 80034ac:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80034b0:	54e6      	strb	r6, [r4, r3]
 80034b2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80034b6:	f000 878b 	beq.w	80043d0 <d_print_comp+0x1960>
 80034ba:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 80034be:	29ff      	cmp	r1, #255	; 0xff
 80034c0:	d1f1      	bne.n	80034a6 <d_print_comp+0xa36>
 80034c2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80034c6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80034ca:	4620      	mov	r0, r4
 80034cc:	4798      	blx	r3
 80034ce:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80034d2:	3301      	adds	r3, #1
 80034d4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80034d8:	2101      	movs	r1, #1
 80034da:	2300      	movs	r3, #0
 80034dc:	e7e5      	b.n	80034aa <d_print_comp+0xa3a>
 80034de:	e9d5 6002 	ldrd	r6, r0, [r5, #8]
 80034e2:	2800      	cmp	r0, #0
 80034e4:	f43f abbe 	beq.w	8002c64 <d_print_comp+0x1f4>
 80034e8:	4430      	add	r0, r6
 80034ea:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80034ee:	f100 39ff 	add.w	r9, r0, #4294967295
 80034f2:	3e01      	subs	r6, #1
 80034f4:	f04f 0800 	mov.w	r8, #0
 80034f8:	e009      	b.n	800350e <d_print_comp+0xa9e>
 80034fa:	460b      	mov	r3, r1
 80034fc:	3101      	adds	r1, #1
 80034fe:	45b1      	cmp	r9, r6
 8003500:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003504:	54e7      	strb	r7, [r4, r3]
 8003506:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800350a:	f001 8138 	beq.w	800477e <d_print_comp+0x1d0e>
 800350e:	29ff      	cmp	r1, #255	; 0xff
 8003510:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8003514:	d1f1      	bne.n	80034fa <d_print_comp+0xa8a>
 8003516:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800351a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800351e:	4620      	mov	r0, r4
 8003520:	4798      	blx	r3
 8003522:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003526:	3301      	adds	r3, #1
 8003528:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800352c:	2101      	movs	r1, #1
 800352e:	2300      	movs	r3, #0
 8003530:	e7e5      	b.n	80034fe <d_print_comp+0xa8e>
 8003532:	f8df 82cc 	ldr.w	r8, [pc, #716]	; 8003800 <d_print_comp+0xd90>
 8003536:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800353a:	f108 0a10 	add.w	sl, r8, #16
 800353e:	2768      	movs	r7, #104	; 0x68
 8003540:	f04f 0900 	mov.w	r9, #0
 8003544:	e00b      	b.n	800355e <d_print_comp+0xaee>
 8003546:	460b      	mov	r3, r1
 8003548:	3101      	adds	r1, #1
 800354a:	45c2      	cmp	sl, r8
 800354c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003550:	54e7      	strb	r7, [r4, r3]
 8003552:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003556:	f000 8788 	beq.w	800446a <d_print_comp+0x19fa>
 800355a:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 800355e:	29ff      	cmp	r1, #255	; 0xff
 8003560:	d1f1      	bne.n	8003546 <d_print_comp+0xad6>
 8003562:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003566:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800356a:	4620      	mov	r0, r4
 800356c:	4798      	blx	r3
 800356e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003572:	3301      	adds	r3, #1
 8003574:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003578:	2101      	movs	r1, #1
 800357a:	2300      	movs	r3, #0
 800357c:	e7e5      	b.n	800354a <d_print_comp+0xada>
 800357e:	f8df 8284 	ldr.w	r8, [pc, #644]	; 8003804 <d_print_comp+0xd94>
 8003582:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003586:	f108 0a14 	add.w	sl, r8, #20
 800358a:	2772      	movs	r7, #114	; 0x72
 800358c:	f04f 0900 	mov.w	r9, #0
 8003590:	e00b      	b.n	80035aa <d_print_comp+0xb3a>
 8003592:	460b      	mov	r3, r1
 8003594:	3101      	adds	r1, #1
 8003596:	45c2      	cmp	sl, r8
 8003598:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800359c:	54e7      	strb	r7, [r4, r3]
 800359e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80035a2:	f000 87ca 	beq.w	800453a <d_print_comp+0x1aca>
 80035a6:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80035aa:	29ff      	cmp	r1, #255	; 0xff
 80035ac:	d1f1      	bne.n	8003592 <d_print_comp+0xb22>
 80035ae:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80035b2:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80035b6:	4620      	mov	r0, r4
 80035b8:	4798      	blx	r3
 80035ba:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80035be:	3301      	adds	r3, #1
 80035c0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80035c4:	2101      	movs	r1, #1
 80035c6:	2300      	movs	r3, #0
 80035c8:	e7e5      	b.n	8003596 <d_print_comp+0xb26>
 80035ca:	f8df 823c 	ldr.w	r8, [pc, #572]	; 8003808 <d_print_comp+0xd98>
 80035ce:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80035d2:	f108 0a18 	add.w	sl, r8, #24
 80035d6:	2754      	movs	r7, #84	; 0x54
 80035d8:	f04f 0900 	mov.w	r9, #0
 80035dc:	e00b      	b.n	80035f6 <d_print_comp+0xb86>
 80035de:	460b      	mov	r3, r1
 80035e0:	3101      	adds	r1, #1
 80035e2:	45c2      	cmp	sl, r8
 80035e4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80035e8:	54e7      	strb	r7, [r4, r3]
 80035ea:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80035ee:	f000 8797 	beq.w	8004520 <d_print_comp+0x1ab0>
 80035f2:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80035f6:	29ff      	cmp	r1, #255	; 0xff
 80035f8:	d1f1      	bne.n	80035de <d_print_comp+0xb6e>
 80035fa:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80035fe:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003602:	4620      	mov	r0, r4
 8003604:	4798      	blx	r3
 8003606:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800360a:	3301      	adds	r3, #1
 800360c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003610:	2101      	movs	r1, #1
 8003612:	2300      	movs	r3, #0
 8003614:	e7e5      	b.n	80035e2 <d_print_comp+0xb72>
 8003616:	f8df 81f4 	ldr.w	r8, [pc, #500]	; 800380c <d_print_comp+0xd9c>
 800361a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800361e:	f108 0a15 	add.w	sl, r8, #21
 8003622:	2754      	movs	r7, #84	; 0x54
 8003624:	f04f 0900 	mov.w	r9, #0
 8003628:	e00b      	b.n	8003642 <d_print_comp+0xbd2>
 800362a:	460b      	mov	r3, r1
 800362c:	3101      	adds	r1, #1
 800362e:	45c2      	cmp	sl, r8
 8003630:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003634:	54e7      	strb	r7, [r4, r3]
 8003636:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800363a:	f000 8764 	beq.w	8004506 <d_print_comp+0x1a96>
 800363e:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003642:	29ff      	cmp	r1, #255	; 0xff
 8003644:	d1f1      	bne.n	800362a <d_print_comp+0xbba>
 8003646:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800364a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800364e:	4620      	mov	r0, r4
 8003650:	4798      	blx	r3
 8003652:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003656:	3301      	adds	r3, #1
 8003658:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800365c:	2101      	movs	r1, #1
 800365e:	2300      	movs	r3, #0
 8003660:	e7e5      	b.n	800362e <d_print_comp+0xbbe>
 8003662:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8003810 <d_print_comp+0xda0>
 8003666:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800366a:	f108 0a12 	add.w	sl, r8, #18
 800366e:	2767      	movs	r7, #103	; 0x67
 8003670:	f04f 0900 	mov.w	r9, #0
 8003674:	e00b      	b.n	800368e <d_print_comp+0xc1e>
 8003676:	460b      	mov	r3, r1
 8003678:	3101      	adds	r1, #1
 800367a:	45c2      	cmp	sl, r8
 800367c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003680:	54e7      	strb	r7, [r4, r3]
 8003682:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003686:	f000 8731 	beq.w	80044ec <d_print_comp+0x1a7c>
 800368a:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 800368e:	29ff      	cmp	r1, #255	; 0xff
 8003690:	d1f1      	bne.n	8003676 <d_print_comp+0xc06>
 8003692:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003696:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800369a:	4620      	mov	r0, r4
 800369c:	4798      	blx	r3
 800369e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80036a2:	3301      	adds	r3, #1
 80036a4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80036a8:	2101      	movs	r1, #1
 80036aa:	2300      	movs	r3, #0
 80036ac:	e7e5      	b.n	800367a <d_print_comp+0xc0a>
 80036ae:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8003814 <d_print_comp+0xda4>
 80036b2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80036b6:	f108 0a0e 	add.w	sl, r8, #14
 80036ba:	276a      	movs	r7, #106	; 0x6a
 80036bc:	f04f 0900 	mov.w	r9, #0
 80036c0:	e00b      	b.n	80036da <d_print_comp+0xc6a>
 80036c2:	460b      	mov	r3, r1
 80036c4:	3101      	adds	r1, #1
 80036c6:	45c2      	cmp	sl, r8
 80036c8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80036cc:	54e7      	strb	r7, [r4, r3]
 80036ce:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80036d2:	f000 86fe 	beq.w	80044d2 <d_print_comp+0x1a62>
 80036d6:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80036da:	29ff      	cmp	r1, #255	; 0xff
 80036dc:	d1f1      	bne.n	80036c2 <d_print_comp+0xc52>
 80036de:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80036e2:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80036e6:	4620      	mov	r0, r4
 80036e8:	4798      	blx	r3
 80036ea:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80036ee:	3301      	adds	r3, #1
 80036f0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80036f4:	2101      	movs	r1, #1
 80036f6:	2300      	movs	r3, #0
 80036f8:	e7e5      	b.n	80036c6 <d_print_comp+0xc56>
 80036fa:	f8df 811c 	ldr.w	r8, [pc, #284]	; 8003818 <d_print_comp+0xda8>
 80036fe:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003702:	f108 0a19 	add.w	sl, r8, #25
 8003706:	2763      	movs	r7, #99	; 0x63
 8003708:	f04f 0900 	mov.w	r9, #0
 800370c:	e00b      	b.n	8003726 <d_print_comp+0xcb6>
 800370e:	460b      	mov	r3, r1
 8003710:	3101      	adds	r1, #1
 8003712:	45c2      	cmp	sl, r8
 8003714:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003718:	54e7      	strb	r7, [r4, r3]
 800371a:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800371e:	f000 86cb 	beq.w	80044b8 <d_print_comp+0x1a48>
 8003722:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003726:	29ff      	cmp	r1, #255	; 0xff
 8003728:	d1f1      	bne.n	800370e <d_print_comp+0xc9e>
 800372a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800372e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003732:	4620      	mov	r0, r4
 8003734:	4798      	blx	r3
 8003736:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800373a:	3301      	adds	r3, #1
 800373c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003740:	2101      	movs	r1, #1
 8003742:	2300      	movs	r3, #0
 8003744:	e7e5      	b.n	8003712 <d_print_comp+0xca2>
 8003746:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800381c <d_print_comp+0xdac>
 800374a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800374e:	f108 0a10 	add.w	sl, r8, #16
 8003752:	2776      	movs	r7, #118	; 0x76
 8003754:	f04f 0900 	mov.w	r9, #0
 8003758:	e00b      	b.n	8003772 <d_print_comp+0xd02>
 800375a:	460b      	mov	r3, r1
 800375c:	3101      	adds	r1, #1
 800375e:	45c2      	cmp	sl, r8
 8003760:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003764:	54e7      	strb	r7, [r4, r3]
 8003766:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800376a:	f000 8698 	beq.w	800449e <d_print_comp+0x1a2e>
 800376e:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003772:	29ff      	cmp	r1, #255	; 0xff
 8003774:	d1f1      	bne.n	800375a <d_print_comp+0xcea>
 8003776:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800377a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800377e:	4620      	mov	r0, r4
 8003780:	4798      	blx	r3
 8003782:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003786:	3301      	adds	r3, #1
 8003788:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800378c:	2101      	movs	r1, #1
 800378e:	2300      	movs	r3, #0
 8003790:	e7e5      	b.n	800375e <d_print_comp+0xcee>
 8003792:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8003820 <d_print_comp+0xdb0>
 8003796:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800379a:	f108 0a14 	add.w	sl, r8, #20
 800379e:	276e      	movs	r7, #110	; 0x6e
 80037a0:	f04f 0900 	mov.w	r9, #0
 80037a4:	e00b      	b.n	80037be <d_print_comp+0xd4e>
 80037a6:	460b      	mov	r3, r1
 80037a8:	3101      	adds	r1, #1
 80037aa:	45c2      	cmp	sl, r8
 80037ac:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80037b0:	54e7      	strb	r7, [r4, r3]
 80037b2:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80037b6:	f000 8665 	beq.w	8004484 <d_print_comp+0x1a14>
 80037ba:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80037be:	29ff      	cmp	r1, #255	; 0xff
 80037c0:	d1f1      	bne.n	80037a6 <d_print_comp+0xd36>
 80037c2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80037c6:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80037ca:	4620      	mov	r0, r4
 80037cc:	4798      	blx	r3
 80037ce:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80037d2:	3301      	adds	r3, #1
 80037d4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80037d8:	2101      	movs	r1, #1
 80037da:	2300      	movs	r3, #0
 80037dc:	e7e5      	b.n	80037aa <d_print_comp+0xd3a>
 80037de:	f8df 8044 	ldr.w	r8, [pc, #68]	; 8003824 <d_print_comp+0xdb4>
 80037e2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80037e6:	f108 0a0f 	add.w	sl, r8, #15
 80037ea:	2774      	movs	r7, #116	; 0x74
 80037ec:	f04f 0900 	mov.w	r9, #0
 80037f0:	e026      	b.n	8003840 <d_print_comp+0xdd0>
 80037f2:	bf00      	nop
 80037f4:	08013d40 	.word	0x08013d40
 80037f8:	08013c30 	.word	0x08013c30
 80037fc:	08013c34 	.word	0x08013c34
 8003800:	08013c1c 	.word	0x08013c1c
 8003804:	08013c04 	.word	0x08013c04
 8003808:	08013be8 	.word	0x08013be8
 800380c:	08013bd0 	.word	0x08013bd0
 8003810:	08013bbc 	.word	0x08013bbc
 8003814:	08013bac 	.word	0x08013bac
 8003818:	08013b90 	.word	0x08013b90
 800381c:	08013b7c 	.word	0x08013b7c
 8003820:	08013b78 	.word	0x08013b78
 8003824:	08013b64 	.word	0x08013b64
 8003828:	460b      	mov	r3, r1
 800382a:	3101      	adds	r1, #1
 800382c:	45c2      	cmp	sl, r8
 800382e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003832:	54e7      	strb	r7, [r4, r3]
 8003834:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003838:	f000 8780 	beq.w	800473c <d_print_comp+0x1ccc>
 800383c:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003840:	29ff      	cmp	r1, #255	; 0xff
 8003842:	d1f1      	bne.n	8003828 <d_print_comp+0xdb8>
 8003844:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003848:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800384c:	4620      	mov	r0, r4
 800384e:	4798      	blx	r3
 8003850:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003854:	3301      	adds	r3, #1
 8003856:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800385a:	2101      	movs	r1, #1
 800385c:	2300      	movs	r3, #0
 800385e:	e7e5      	b.n	800382c <d_print_comp+0xdbc>
 8003860:	f8df 8564 	ldr.w	r8, [pc, #1380]	; 8003dc8 <d_print_comp+0x1358>
 8003864:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003868:	f108 0a11 	add.w	sl, r8, #17
 800386c:	2774      	movs	r7, #116	; 0x74
 800386e:	f04f 0900 	mov.w	r9, #0
 8003872:	e00b      	b.n	800388c <d_print_comp+0xe1c>
 8003874:	460b      	mov	r3, r1
 8003876:	3101      	adds	r1, #1
 8003878:	45c2      	cmp	sl, r8
 800387a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800387e:	54e7      	strb	r7, [r4, r3]
 8003880:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003884:	f000 874d 	beq.w	8004722 <d_print_comp+0x1cb2>
 8003888:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 800388c:	29ff      	cmp	r1, #255	; 0xff
 800388e:	d1f1      	bne.n	8003874 <d_print_comp+0xe04>
 8003890:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003894:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003898:	4620      	mov	r0, r4
 800389a:	4798      	blx	r3
 800389c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80038a0:	3301      	adds	r3, #1
 80038a2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80038a6:	2101      	movs	r1, #1
 80038a8:	2300      	movs	r3, #0
 80038aa:	e7e5      	b.n	8003878 <d_print_comp+0xe08>
 80038ac:	f8df 851c 	ldr.w	r8, [pc, #1308]	; 8003dcc <d_print_comp+0x135c>
 80038b0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80038b4:	f108 0a0c 	add.w	sl, r8, #12
 80038b8:	2774      	movs	r7, #116	; 0x74
 80038ba:	f04f 0900 	mov.w	r9, #0
 80038be:	e00b      	b.n	80038d8 <d_print_comp+0xe68>
 80038c0:	460b      	mov	r3, r1
 80038c2:	3101      	adds	r1, #1
 80038c4:	45c2      	cmp	sl, r8
 80038c6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80038ca:	54e7      	strb	r7, [r4, r3]
 80038cc:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80038d0:	f000 870d 	beq.w	80046ee <d_print_comp+0x1c7e>
 80038d4:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80038d8:	29ff      	cmp	r1, #255	; 0xff
 80038da:	d1f1      	bne.n	80038c0 <d_print_comp+0xe50>
 80038dc:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80038e0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80038e4:	4620      	mov	r0, r4
 80038e6:	4798      	blx	r3
 80038e8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80038ec:	3301      	adds	r3, #1
 80038ee:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80038f2:	2101      	movs	r1, #1
 80038f4:	2300      	movs	r3, #0
 80038f6:	e7e5      	b.n	80038c4 <d_print_comp+0xe54>
 80038f8:	f8df 84d4 	ldr.w	r8, [pc, #1236]	; 8003dd0 <d_print_comp+0x1360>
 80038fc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003900:	f108 0a17 	add.w	sl, r8, #23
 8003904:	2763      	movs	r7, #99	; 0x63
 8003906:	f04f 0900 	mov.w	r9, #0
 800390a:	e00b      	b.n	8003924 <d_print_comp+0xeb4>
 800390c:	460b      	mov	r3, r1
 800390e:	3101      	adds	r1, #1
 8003910:	45c2      	cmp	sl, r8
 8003912:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003916:	54e7      	strb	r7, [r4, r3]
 8003918:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800391c:	f000 86bd 	beq.w	800469a <d_print_comp+0x1c2a>
 8003920:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003924:	29ff      	cmp	r1, #255	; 0xff
 8003926:	d1f1      	bne.n	800390c <d_print_comp+0xe9c>
 8003928:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800392c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003930:	4620      	mov	r0, r4
 8003932:	4798      	blx	r3
 8003934:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003938:	3301      	adds	r3, #1
 800393a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800393e:	2101      	movs	r1, #1
 8003940:	2300      	movs	r3, #0
 8003942:	e7e5      	b.n	8003910 <d_print_comp+0xea0>
 8003944:	f8df 848c 	ldr.w	r8, [pc, #1164]	; 8003dd4 <d_print_comp+0x1364>
 8003948:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800394c:	f108 0a07 	add.w	sl, r8, #7
 8003950:	2756      	movs	r7, #86	; 0x56
 8003952:	f04f 0900 	mov.w	r9, #0
 8003956:	e00b      	b.n	8003970 <d_print_comp+0xf00>
 8003958:	460b      	mov	r3, r1
 800395a:	3101      	adds	r1, #1
 800395c:	45c2      	cmp	sl, r8
 800395e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003962:	54e7      	strb	r7, [r4, r3]
 8003964:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003968:	f000 868a 	beq.w	8004680 <d_print_comp+0x1c10>
 800396c:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003970:	29ff      	cmp	r1, #255	; 0xff
 8003972:	d1f1      	bne.n	8003958 <d_print_comp+0xee8>
 8003974:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003978:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800397c:	4620      	mov	r0, r4
 800397e:	4798      	blx	r3
 8003980:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003984:	3301      	adds	r3, #1
 8003986:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800398a:	2101      	movs	r1, #1
 800398c:	2300      	movs	r3, #0
 800398e:	e7e5      	b.n	800395c <d_print_comp+0xeec>
 8003990:	f8df 8444 	ldr.w	r8, [pc, #1092]	; 8003dd8 <d_print_comp+0x1368>
 8003994:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003998:	f108 0a0a 	add.w	sl, r8, #10
 800399c:	2776      	movs	r7, #118	; 0x76
 800399e:	f04f 0900 	mov.w	r9, #0
 80039a2:	e00b      	b.n	80039bc <d_print_comp+0xf4c>
 80039a4:	460b      	mov	r3, r1
 80039a6:	3101      	adds	r1, #1
 80039a8:	45c2      	cmp	sl, r8
 80039aa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80039ae:	54e7      	strb	r7, [r4, r3]
 80039b0:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80039b4:	f000 8657 	beq.w	8004666 <d_print_comp+0x1bf6>
 80039b8:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80039bc:	29ff      	cmp	r1, #255	; 0xff
 80039be:	d1f1      	bne.n	80039a4 <d_print_comp+0xf34>
 80039c0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80039c4:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80039c8:	4620      	mov	r0, r4
 80039ca:	4798      	blx	r3
 80039cc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80039d0:	3301      	adds	r3, #1
 80039d2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80039d6:	2101      	movs	r1, #1
 80039d8:	2300      	movs	r3, #0
 80039da:	e7e5      	b.n	80039a8 <d_print_comp+0xf38>
 80039dc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80039e0:	29ff      	cmp	r1, #255	; 0xff
 80039e2:	d10c      	bne.n	80039fe <d_print_comp+0xf8e>
 80039e4:	2700      	movs	r7, #0
 80039e6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80039ea:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 80039ee:	4620      	mov	r0, r4
 80039f0:	4798      	blx	r3
 80039f2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80039f6:	3301      	adds	r3, #1
 80039f8:	4639      	mov	r1, r7
 80039fa:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80039fe:	237e      	movs	r3, #126	; 0x7e
 8003a00:	1c4a      	adds	r2, r1, #1
 8003a02:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003a06:	5463      	strb	r3, [r4, r1]
 8003a08:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003a0c:	68ea      	ldr	r2, [r5, #12]
 8003a0e:	4631      	mov	r1, r6
 8003a10:	4620      	mov	r0, r4
 8003a12:	f7ff f82d 	bl	8002a70 <d_print_comp>
 8003a16:	686b      	ldr	r3, [r5, #4]
 8003a18:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8003a1c:	9903      	ldr	r1, [sp, #12]
 8003a1e:	3b01      	subs	r3, #1
 8003a20:	3a01      	subs	r2, #1
 8003a22:	f7ff b91f 	b.w	8002c64 <d_print_comp+0x1f4>
 8003a26:	68ea      	ldr	r2, [r5, #12]
 8003a28:	4631      	mov	r1, r6
 8003a2a:	4620      	mov	r0, r4
 8003a2c:	f7ff f820 	bl	8002a70 <d_print_comp>
 8003a30:	686b      	ldr	r3, [r5, #4]
 8003a32:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8003a36:	9903      	ldr	r1, [sp, #12]
 8003a38:	3b01      	subs	r3, #1
 8003a3a:	3a01      	subs	r2, #1
 8003a3c:	f7ff b912 	b.w	8002c64 <d_print_comp+0x1f4>
 8003a40:	f8d5 8008 	ldr.w	r8, [r5, #8]
 8003a44:	f1b8 0f00 	cmp.w	r8, #0
 8003a48:	f040 876a 	bne.w	8004920 <d_print_comp+0x1eb0>
 8003a4c:	4fdd      	ldr	r7, [pc, #884]	; (8003dc4 <d_print_comp+0x1354>)
 8003a4e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003a52:	f107 0903 	add.w	r9, r7, #3
 8003a56:	2674      	movs	r6, #116	; 0x74
 8003a58:	e00b      	b.n	8003a72 <d_print_comp+0x1002>
 8003a5a:	460b      	mov	r3, r1
 8003a5c:	3101      	adds	r1, #1
 8003a5e:	45b9      	cmp	r9, r7
 8003a60:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003a64:	54e6      	strb	r6, [r4, r3]
 8003a66:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003a6a:	f000 87cc 	beq.w	8004a06 <d_print_comp+0x1f96>
 8003a6e:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8003a72:	29ff      	cmp	r1, #255	; 0xff
 8003a74:	d1f1      	bne.n	8003a5a <d_print_comp+0xfea>
 8003a76:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003a7a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003a7e:	4620      	mov	r0, r4
 8003a80:	4798      	blx	r3
 8003a82:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003a86:	3301      	adds	r3, #1
 8003a88:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003a8c:	2101      	movs	r1, #1
 8003a8e:	2300      	movs	r3, #0
 8003a90:	e7e5      	b.n	8003a5e <d_print_comp+0xfee>
 8003a92:	f016 0604 	ands.w	r6, r6, #4
 8003a96:	f040 86f2 	bne.w	800487e <d_print_comp+0x1e0e>
 8003a9a:	e9d5 7002 	ldrd	r7, r0, [r5, #8]
 8003a9e:	2800      	cmp	r0, #0
 8003aa0:	f43f a8e0 	beq.w	8002c64 <d_print_comp+0x1f4>
 8003aa4:	4438      	add	r0, r7
 8003aa6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003aaa:	f100 39ff 	add.w	r9, r0, #4294967295
 8003aae:	3f01      	subs	r7, #1
 8003ab0:	46b0      	mov	r8, r6
 8003ab2:	e009      	b.n	8003ac8 <d_print_comp+0x1058>
 8003ab4:	460b      	mov	r3, r1
 8003ab6:	3101      	adds	r1, #1
 8003ab8:	45b9      	cmp	r9, r7
 8003aba:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003abe:	54e6      	strb	r6, [r4, r3]
 8003ac0:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003ac4:	f001 804a 	beq.w	8004b5c <d_print_comp+0x20ec>
 8003ac8:	29ff      	cmp	r1, #255	; 0xff
 8003aca:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8003ace:	d1f1      	bne.n	8003ab4 <d_print_comp+0x1044>
 8003ad0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003ad4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003ad8:	4620      	mov	r0, r4
 8003ada:	4798      	blx	r3
 8003adc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003ae0:	3301      	adds	r3, #1
 8003ae2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003ae6:	2101      	movs	r1, #1
 8003ae8:	2300      	movs	r3, #0
 8003aea:	e7e5      	b.n	8003ab8 <d_print_comp+0x1048>
 8003aec:	2301      	movs	r3, #1
 8003aee:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8003af2:	686b      	ldr	r3, [r5, #4]
 8003af4:	3b01      	subs	r3, #1
 8003af6:	f7ff b8b5 	b.w	8002c64 <d_print_comp+0x1f4>
 8003afa:	f8df 82e0 	ldr.w	r8, [pc, #736]	; 8003ddc <d_print_comp+0x136c>
 8003afe:	68aa      	ldr	r2, [r5, #8]
 8003b00:	4631      	mov	r1, r6
 8003b02:	4620      	mov	r0, r4
 8003b04:	f7fe ffb4 	bl	8002a70 <d_print_comp>
 8003b08:	f108 0a07 	add.w	sl, r8, #7
 8003b0c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003b10:	2720      	movs	r7, #32
 8003b12:	f04f 0900 	mov.w	r9, #0
 8003b16:	e00b      	b.n	8003b30 <d_print_comp+0x10c0>
 8003b18:	460b      	mov	r3, r1
 8003b1a:	3101      	adds	r1, #1
 8003b1c:	45c2      	cmp	sl, r8
 8003b1e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003b22:	54e7      	strb	r7, [r4, r3]
 8003b24:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003b28:	f000 8532 	beq.w	8004590 <d_print_comp+0x1b20>
 8003b2c:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003b30:	29ff      	cmp	r1, #255	; 0xff
 8003b32:	d1f1      	bne.n	8003b18 <d_print_comp+0x10a8>
 8003b34:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003b38:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003b3c:	4620      	mov	r0, r4
 8003b3e:	4798      	blx	r3
 8003b40:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003b44:	3301      	adds	r3, #1
 8003b46:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003b4a:	2101      	movs	r1, #1
 8003b4c:	2300      	movs	r3, #0
 8003b4e:	e7e5      	b.n	8003b1c <d_print_comp+0x10ac>
 8003b50:	f8df 828c 	ldr.w	r8, [pc, #652]	; 8003de0 <d_print_comp+0x1370>
 8003b54:	68aa      	ldr	r2, [r5, #8]
 8003b56:	4631      	mov	r1, r6
 8003b58:	4620      	mov	r0, r4
 8003b5a:	f7fe ff89 	bl	8002a70 <d_print_comp>
 8003b5e:	f108 0a04 	add.w	sl, r8, #4
 8003b62:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003b66:	275b      	movs	r7, #91	; 0x5b
 8003b68:	f04f 0900 	mov.w	r9, #0
 8003b6c:	e00b      	b.n	8003b86 <d_print_comp+0x1116>
 8003b6e:	460b      	mov	r3, r1
 8003b70:	3101      	adds	r1, #1
 8003b72:	45c2      	cmp	sl, r8
 8003b74:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003b78:	54e7      	strb	r7, [r4, r3]
 8003b7a:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003b7e:	f000 8533 	beq.w	80045e8 <d_print_comp+0x1b78>
 8003b82:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003b86:	29ff      	cmp	r1, #255	; 0xff
 8003b88:	d1f1      	bne.n	8003b6e <d_print_comp+0x10fe>
 8003b8a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003b8e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003b92:	4620      	mov	r0, r4
 8003b94:	4798      	blx	r3
 8003b96:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003b9a:	3301      	adds	r3, #1
 8003b9c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003ba0:	2101      	movs	r1, #1
 8003ba2:	2300      	movs	r3, #0
 8003ba4:	e7e5      	b.n	8003b72 <d_print_comp+0x1102>
 8003ba6:	2300      	movs	r3, #0
 8003ba8:	0772      	lsls	r2, r6, #29
 8003baa:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 8003bae:	f8d4 7148 	ldr.w	r7, [r4, #328]	; 0x148
 8003bb2:	f8d5 9008 	ldr.w	r9, [r5, #8]
 8003bb6:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003bba:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8003bbe:	d507      	bpl.n	8003bd0 <d_print_comp+0x1160>
 8003bc0:	f899 3000 	ldrb.w	r3, [r9]
 8003bc4:	b923      	cbnz	r3, 8003bd0 <d_print_comp+0x1160>
 8003bc6:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8003bca:	2a06      	cmp	r2, #6
 8003bcc:	f001 855e 	beq.w	800568c <d_print_comp+0x2c1c>
 8003bd0:	464a      	mov	r2, r9
 8003bd2:	4631      	mov	r1, r6
 8003bd4:	4620      	mov	r0, r4
 8003bd6:	f7fe ff4b 	bl	8002a70 <d_print_comp>
 8003bda:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003bde:	2b3c      	cmp	r3, #60	; 0x3c
 8003be0:	f001 80a4 	beq.w	8004d2c <d_print_comp+0x22bc>
 8003be4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003be8:	29ff      	cmp	r1, #255	; 0xff
 8003bea:	d10d      	bne.n	8003c08 <d_print_comp+0x1198>
 8003bec:	f04f 0900 	mov.w	r9, #0
 8003bf0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003bf4:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003bf8:	4620      	mov	r0, r4
 8003bfa:	4798      	blx	r3
 8003bfc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003c00:	3301      	adds	r3, #1
 8003c02:	4649      	mov	r1, r9
 8003c04:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003c08:	233c      	movs	r3, #60	; 0x3c
 8003c0a:	1c4a      	adds	r2, r1, #1
 8003c0c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003c10:	5463      	strb	r3, [r4, r1]
 8003c12:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003c16:	68ea      	ldr	r2, [r5, #12]
 8003c18:	4631      	mov	r1, r6
 8003c1a:	4620      	mov	r0, r4
 8003c1c:	f7fe ff28 	bl	8002a70 <d_print_comp>
 8003c20:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003c24:	2b3e      	cmp	r3, #62	; 0x3e
 8003c26:	f001 8064 	beq.w	8004cf2 <d_print_comp+0x2282>
 8003c2a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003c2e:	29ff      	cmp	r1, #255	; 0xff
 8003c30:	d10c      	bne.n	8003c4c <d_print_comp+0x11dc>
 8003c32:	2600      	movs	r6, #0
 8003c34:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003c38:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003c3c:	4620      	mov	r0, r4
 8003c3e:	4798      	blx	r3
 8003c40:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003c44:	3301      	adds	r3, #1
 8003c46:	4631      	mov	r1, r6
 8003c48:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003c4c:	233e      	movs	r3, #62	; 0x3e
 8003c4e:	1c4a      	adds	r2, r1, #1
 8003c50:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003c54:	5463      	strb	r3, [r4, r1]
 8003c56:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003c5a:	686b      	ldr	r3, [r5, #4]
 8003c5c:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8003c60:	9903      	ldr	r1, [sp, #12]
 8003c62:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
 8003c66:	f8c4 7148 	str.w	r7, [r4, #328]	; 0x148
 8003c6a:	3b01      	subs	r3, #1
 8003c6c:	3a01      	subs	r2, #1
 8003c6e:	f7fe bff9 	b.w	8002c64 <d_print_comp+0x1f4>
 8003c72:	f8df 8170 	ldr.w	r8, [pc, #368]	; 8003de4 <d_print_comp+0x1374>
 8003c76:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003c7a:	f108 0a08 	add.w	sl, r8, #8
 8003c7e:	276f      	movs	r7, #111	; 0x6f
 8003c80:	f04f 0900 	mov.w	r9, #0
 8003c84:	e00b      	b.n	8003c9e <d_print_comp+0x122e>
 8003c86:	460b      	mov	r3, r1
 8003c88:	3101      	adds	r1, #1
 8003c8a:	45c2      	cmp	sl, r8
 8003c8c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003c90:	54e7      	strb	r7, [r4, r3]
 8003c92:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003c96:	f000 822e 	beq.w	80040f6 <d_print_comp+0x1686>
 8003c9a:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003c9e:	29ff      	cmp	r1, #255	; 0xff
 8003ca0:	d1f1      	bne.n	8003c86 <d_print_comp+0x1216>
 8003ca2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003ca6:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003caa:	4620      	mov	r0, r4
 8003cac:	4798      	blx	r3
 8003cae:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003cb2:	3301      	adds	r3, #1
 8003cb4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003cb8:	2101      	movs	r1, #1
 8003cba:	2300      	movs	r3, #0
 8003cbc:	e7e5      	b.n	8003c8a <d_print_comp+0x121a>
 8003cbe:	68aa      	ldr	r2, [r5, #8]
 8003cc0:	4631      	mov	r1, r6
 8003cc2:	4620      	mov	r0, r4
 8003cc4:	f002 fd1a 	bl	80066fc <d_print_expr_op>
 8003cc8:	686b      	ldr	r3, [r5, #4]
 8003cca:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8003cce:	9903      	ldr	r1, [sp, #12]
 8003cd0:	3b01      	subs	r3, #1
 8003cd2:	3a01      	subs	r2, #1
 8003cd4:	f7fe bfc6 	b.w	8002c64 <d_print_comp+0x1f4>
 8003cd8:	f8df 8108 	ldr.w	r8, [pc, #264]	; 8003de4 <d_print_comp+0x1374>
 8003cdc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003ce0:	f108 0a08 	add.w	sl, r8, #8
 8003ce4:	276f      	movs	r7, #111	; 0x6f
 8003ce6:	f04f 0900 	mov.w	r9, #0
 8003cea:	e00b      	b.n	8003d04 <d_print_comp+0x1294>
 8003cec:	460b      	mov	r3, r1
 8003cee:	3101      	adds	r1, #1
 8003cf0:	45c2      	cmp	sl, r8
 8003cf2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003cf6:	54e7      	strb	r7, [r4, r3]
 8003cf8:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003cfc:	f000 827b 	beq.w	80041f6 <d_print_comp+0x1786>
 8003d00:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003d04:	29ff      	cmp	r1, #255	; 0xff
 8003d06:	d1f1      	bne.n	8003cec <d_print_comp+0x127c>
 8003d08:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003d0c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003d10:	4620      	mov	r0, r4
 8003d12:	4798      	blx	r3
 8003d14:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003d18:	3301      	adds	r3, #1
 8003d1a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003d1e:	2101      	movs	r1, #1
 8003d20:	2300      	movs	r3, #0
 8003d22:	e7e5      	b.n	8003cf0 <d_print_comp+0x1280>
 8003d24:	e9d5 2802 	ldrd	r2, r8, [r5, #8]
 8003d28:	b11a      	cbz	r2, 8003d32 <d_print_comp+0x12c2>
 8003d2a:	4631      	mov	r1, r6
 8003d2c:	4620      	mov	r0, r4
 8003d2e:	f7fe fe9f 	bl	8002a70 <d_print_comp>
 8003d32:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003d36:	2bff      	cmp	r3, #255	; 0xff
 8003d38:	d10d      	bne.n	8003d56 <d_print_comp+0x12e6>
 8003d3a:	2700      	movs	r7, #0
 8003d3c:	4619      	mov	r1, r3
 8003d3e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8003d42:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003d46:	4620      	mov	r0, r4
 8003d48:	4798      	blx	r3
 8003d4a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003d4e:	1c5a      	adds	r2, r3, #1
 8003d50:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8003d54:	463b      	mov	r3, r7
 8003d56:	1c58      	adds	r0, r3, #1
 8003d58:	277b      	movs	r7, #123	; 0x7b
 8003d5a:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8003d5e:	4631      	mov	r1, r6
 8003d60:	54e7      	strb	r7, [r4, r3]
 8003d62:	4642      	mov	r2, r8
 8003d64:	4620      	mov	r0, r4
 8003d66:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003d6a:	f7fe fe81 	bl	8002a70 <d_print_comp>
 8003d6e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003d72:	29ff      	cmp	r1, #255	; 0xff
 8003d74:	d10c      	bne.n	8003d90 <d_print_comp+0x1320>
 8003d76:	2600      	movs	r6, #0
 8003d78:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003d7c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003d80:	4620      	mov	r0, r4
 8003d82:	4798      	blx	r3
 8003d84:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003d88:	3301      	adds	r3, #1
 8003d8a:	4631      	mov	r1, r6
 8003d8c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003d90:	1c4a      	adds	r2, r1, #1
 8003d92:	237d      	movs	r3, #125	; 0x7d
 8003d94:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003d98:	5463      	strb	r3, [r4, r1]
 8003d9a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003d9e:	686b      	ldr	r3, [r5, #4]
 8003da0:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8003da4:	9903      	ldr	r1, [sp, #12]
 8003da6:	3b01      	subs	r3, #1
 8003da8:	3a01      	subs	r2, #1
 8003daa:	f7fe bf5b 	b.w	8002c64 <d_print_comp+0x1f4>
 8003dae:	f8df 8038 	ldr.w	r8, [pc, #56]	; 8003de8 <d_print_comp+0x1378>
 8003db2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003db6:	f108 0a1d 	add.w	sl, r8, #29
 8003dba:	2774      	movs	r7, #116	; 0x74
 8003dbc:	f04f 0900 	mov.w	r9, #0
 8003dc0:	e020      	b.n	8003e04 <d_print_comp+0x1394>
 8003dc2:	bf00      	nop
 8003dc4:	08013ce0 	.word	0x08013ce0
 8003dc8:	08013b50 	.word	0x08013b50
 8003dcc:	08013b40 	.word	0x08013b40
 8003dd0:	08013b1c 	.word	0x08013b1c
 8003dd4:	08013b10 	.word	0x08013b10
 8003dd8:	08013b04 	.word	0x08013b04
 8003ddc:	08013d50 	.word	0x08013d50
 8003de0:	08013aac 	.word	0x08013aac
 8003de4:	08013c74 	.word	0x08013c74
 8003de8:	08013ae4 	.word	0x08013ae4
 8003dec:	460b      	mov	r3, r1
 8003dee:	3101      	adds	r1, #1
 8003df0:	45c2      	cmp	sl, r8
 8003df2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003df6:	54e7      	strb	r7, [r4, r3]
 8003df8:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003dfc:	f000 821c 	beq.w	8004238 <d_print_comp+0x17c8>
 8003e00:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003e04:	29ff      	cmp	r1, #255	; 0xff
 8003e06:	d1f1      	bne.n	8003dec <d_print_comp+0x137c>
 8003e08:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003e0c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003e10:	4620      	mov	r0, r4
 8003e12:	4798      	blx	r3
 8003e14:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003e18:	3301      	adds	r3, #1
 8003e1a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003e1e:	2101      	movs	r1, #1
 8003e20:	2300      	movs	r3, #0
 8003e22:	e7e5      	b.n	8003df0 <d_print_comp+0x1380>
 8003e24:	f8d5 9008 	ldr.w	r9, [r5, #8]
 8003e28:	4fd3      	ldr	r7, [pc, #844]	; (8004178 <d_print_comp+0x1708>)
 8003e2a:	f8d9 8008 	ldr.w	r8, [r9, #8]
 8003e2e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003e32:	f107 0b07 	add.w	fp, r7, #7
 8003e36:	266f      	movs	r6, #111	; 0x6f
 8003e38:	f04f 0a00 	mov.w	sl, #0
 8003e3c:	e00b      	b.n	8003e56 <d_print_comp+0x13e6>
 8003e3e:	460b      	mov	r3, r1
 8003e40:	3101      	adds	r1, #1
 8003e42:	45bb      	cmp	fp, r7
 8003e44:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003e48:	54e6      	strb	r6, [r4, r3]
 8003e4a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003e4e:	f000 815f 	beq.w	8004110 <d_print_comp+0x16a0>
 8003e52:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8003e56:	29ff      	cmp	r1, #255	; 0xff
 8003e58:	d1f1      	bne.n	8003e3e <d_print_comp+0x13ce>
 8003e5a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003e5e:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8003e62:	4620      	mov	r0, r4
 8003e64:	4798      	blx	r3
 8003e66:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003e6a:	3301      	adds	r3, #1
 8003e6c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003e70:	2101      	movs	r1, #1
 8003e72:	2300      	movs	r3, #0
 8003e74:	e7e5      	b.n	8003e42 <d_print_comp+0x13d2>
 8003e76:	68aa      	ldr	r2, [r5, #8]
 8003e78:	49c0      	ldr	r1, [pc, #768]	; (800417c <d_print_comp+0x170c>)
 8003e7a:	a806      	add	r0, sp, #24
 8003e7c:	f00b f950 	bl	800f120 <sprintf>
 8003e80:	a806      	add	r0, sp, #24
 8003e82:	f003 f857 	bl	8006f34 <strlen>
 8003e86:	2800      	cmp	r0, #0
 8003e88:	f000 81a0 	beq.w	80041cc <d_print_comp+0x175c>
 8003e8c:	ae06      	add	r6, sp, #24
 8003e8e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003e92:	eb06 0900 	add.w	r9, r6, r0
 8003e96:	f04f 0800 	mov.w	r8, #0
 8003e9a:	e009      	b.n	8003eb0 <d_print_comp+0x1440>
 8003e9c:	460b      	mov	r3, r1
 8003e9e:	3101      	adds	r1, #1
 8003ea0:	45b1      	cmp	r9, r6
 8003ea2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003ea6:	54e7      	strb	r7, [r4, r3]
 8003ea8:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003eac:	f000 818e 	beq.w	80041cc <d_print_comp+0x175c>
 8003eb0:	29ff      	cmp	r1, #255	; 0xff
 8003eb2:	f816 7b01 	ldrb.w	r7, [r6], #1
 8003eb6:	d1f1      	bne.n	8003e9c <d_print_comp+0x142c>
 8003eb8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003ebc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003ec0:	4620      	mov	r0, r4
 8003ec2:	4798      	blx	r3
 8003ec4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003ec8:	3301      	adds	r3, #1
 8003eca:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003ece:	2101      	movs	r1, #1
 8003ed0:	2300      	movs	r3, #0
 8003ed2:	e7e5      	b.n	8003ea0 <d_print_comp+0x1430>
 8003ed4:	f8d4 0100 	ldr.w	r0, [r4, #256]	; 0x100
 8003ed8:	7a2e      	ldrb	r6, [r5, #8]
 8003eda:	28ff      	cmp	r0, #255	; 0xff
 8003edc:	d114      	bne.n	8003f08 <d_print_comp+0x1498>
 8003ede:	f04f 0800 	mov.w	r8, #0
 8003ee2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003ee6:	4601      	mov	r1, r0
 8003ee8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003eec:	4620      	mov	r0, r4
 8003eee:	4798      	blx	r3
 8003ef0:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 8003ef4:	686b      	ldr	r3, [r5, #4]
 8003ef6:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8003efa:	9903      	ldr	r1, [sp, #12]
 8003efc:	1c47      	adds	r7, r0, #1
 8003efe:	f8c4 7128 	str.w	r7, [r4, #296]	; 0x128
 8003f02:	4640      	mov	r0, r8
 8003f04:	3b01      	subs	r3, #1
 8003f06:	3a01      	subs	r2, #1
 8003f08:	1c47      	adds	r7, r0, #1
 8003f0a:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8003f0e:	5426      	strb	r6, [r4, r0]
 8003f10:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003f14:	f7fe bea6 	b.w	8002c64 <d_print_comp+0x1f4>
 8003f18:	68aa      	ldr	r2, [r5, #8]
 8003f1a:	4631      	mov	r1, r6
 8003f1c:	4620      	mov	r0, r4
 8003f1e:	f7fe fda7 	bl	8002a70 <d_print_comp>
 8003f22:	68ea      	ldr	r2, [r5, #12]
 8003f24:	4631      	mov	r1, r6
 8003f26:	4620      	mov	r0, r4
 8003f28:	f7fe fda2 	bl	8002a70 <d_print_comp>
 8003f2c:	686b      	ldr	r3, [r5, #4]
 8003f2e:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8003f32:	9903      	ldr	r1, [sp, #12]
 8003f34:	3b01      	subs	r3, #1
 8003f36:	3a01      	subs	r2, #1
 8003f38:	f7fe be94 	b.w	8002c64 <d_print_comp+0x1f4>
 8003f3c:	f8df 8240 	ldr.w	r8, [pc, #576]	; 8004180 <d_print_comp+0x1710>
 8003f40:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003f44:	f108 0a0d 	add.w	sl, r8, #13
 8003f48:	276a      	movs	r7, #106	; 0x6a
 8003f4a:	f04f 0900 	mov.w	r9, #0
 8003f4e:	e00b      	b.n	8003f68 <d_print_comp+0x14f8>
 8003f50:	460b      	mov	r3, r1
 8003f52:	3101      	adds	r1, #1
 8003f54:	45c2      	cmp	sl, r8
 8003f56:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003f5a:	54e7      	strb	r7, [r4, r3]
 8003f5c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003f60:	f000 813c 	beq.w	80041dc <d_print_comp+0x176c>
 8003f64:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003f68:	29ff      	cmp	r1, #255	; 0xff
 8003f6a:	d1f1      	bne.n	8003f50 <d_print_comp+0x14e0>
 8003f6c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003f70:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003f74:	4620      	mov	r0, r4
 8003f76:	4798      	blx	r3
 8003f78:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003f7c:	3301      	adds	r3, #1
 8003f7e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003f82:	2101      	movs	r1, #1
 8003f84:	2300      	movs	r3, #0
 8003f86:	e7e5      	b.n	8003f54 <d_print_comp+0x14e4>
 8003f88:	68eb      	ldr	r3, [r5, #12]
 8003f8a:	7818      	ldrb	r0, [r3, #0]
 8003f8c:	283b      	cmp	r0, #59	; 0x3b
 8003f8e:	d104      	bne.n	8003f9a <d_print_comp+0x152a>
 8003f90:	68db      	ldr	r3, [r3, #12]
 8003f92:	781b      	ldrb	r3, [r3, #0]
 8003f94:	2b3c      	cmp	r3, #60	; 0x3c
 8003f96:	f001 81b1 	beq.w	80052fc <d_print_comp+0x288c>
 8003f9a:	2301      	movs	r3, #1
 8003f9c:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8003fa0:	686b      	ldr	r3, [r5, #4]
 8003fa2:	3b01      	subs	r3, #1
 8003fa4:	f7fe be5e 	b.w	8002c64 <d_print_comp+0x1f4>
 8003fa8:	2301      	movs	r3, #1
 8003faa:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8003fae:	686b      	ldr	r3, [r5, #4]
 8003fb0:	3b01      	subs	r3, #1
 8003fb2:	f7fe be57 	b.w	8002c64 <d_print_comp+0x1f4>
 8003fb6:	f8df 81cc 	ldr.w	r8, [pc, #460]	; 8004184 <d_print_comp+0x1714>
 8003fba:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003fbe:	f108 0a07 	add.w	sl, r8, #7
 8003fc2:	277b      	movs	r7, #123	; 0x7b
 8003fc4:	f04f 0900 	mov.w	r9, #0
 8003fc8:	e00b      	b.n	8003fe2 <d_print_comp+0x1572>
 8003fca:	460b      	mov	r3, r1
 8003fcc:	3101      	adds	r1, #1
 8003fce:	45c2      	cmp	sl, r8
 8003fd0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003fd4:	54e7      	strb	r7, [r4, r3]
 8003fd6:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003fda:	f000 8154 	beq.w	8004286 <d_print_comp+0x1816>
 8003fde:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8003fe2:	29ff      	cmp	r1, #255	; 0xff
 8003fe4:	d1f1      	bne.n	8003fca <d_print_comp+0x155a>
 8003fe6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003fea:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003fee:	4620      	mov	r0, r4
 8003ff0:	4798      	blx	r3
 8003ff2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003ff6:	3301      	adds	r3, #1
 8003ff8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003ffc:	2101      	movs	r1, #1
 8003ffe:	2300      	movs	r3, #0
 8004000:	e7e5      	b.n	8003fce <d_print_comp+0x155e>
 8004002:	f8df 8184 	ldr.w	r8, [pc, #388]	; 8004188 <d_print_comp+0x1718>
 8004006:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800400a:	f108 0a1b 	add.w	sl, r8, #27
 800400e:	2767      	movs	r7, #103	; 0x67
 8004010:	f04f 0900 	mov.w	r9, #0
 8004014:	e00b      	b.n	800402e <d_print_comp+0x15be>
 8004016:	460b      	mov	r3, r1
 8004018:	3101      	adds	r1, #1
 800401a:	45c2      	cmp	sl, r8
 800401c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004020:	54e7      	strb	r7, [r4, r3]
 8004022:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004026:	f000 8121 	beq.w	800426c <d_print_comp+0x17fc>
 800402a:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 800402e:	29ff      	cmp	r1, #255	; 0xff
 8004030:	d1f1      	bne.n	8004016 <d_print_comp+0x15a6>
 8004032:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004036:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800403a:	4620      	mov	r0, r4
 800403c:	4798      	blx	r3
 800403e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004042:	3301      	adds	r3, #1
 8004044:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004048:	2101      	movs	r1, #1
 800404a:	2300      	movs	r3, #0
 800404c:	e7e5      	b.n	800401a <d_print_comp+0x15aa>
 800404e:	f8df 813c 	ldr.w	r8, [pc, #316]	; 800418c <d_print_comp+0x171c>
 8004052:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004056:	f108 0a1c 	add.w	sl, r8, #28
 800405a:	2767      	movs	r7, #103	; 0x67
 800405c:	f04f 0900 	mov.w	r9, #0
 8004060:	e00b      	b.n	800407a <d_print_comp+0x160a>
 8004062:	460b      	mov	r3, r1
 8004064:	3101      	adds	r1, #1
 8004066:	45c2      	cmp	sl, r8
 8004068:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800406c:	54e7      	strb	r7, [r4, r3]
 800406e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004072:	f000 80ee 	beq.w	8004252 <d_print_comp+0x17e2>
 8004076:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 800407a:	29ff      	cmp	r1, #255	; 0xff
 800407c:	d1f1      	bne.n	8004062 <d_print_comp+0x15f2>
 800407e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004082:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004086:	4620      	mov	r0, r4
 8004088:	4798      	blx	r3
 800408a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800408e:	3301      	adds	r3, #1
 8004090:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004094:	2101      	movs	r1, #1
 8004096:	2300      	movs	r3, #0
 8004098:	e7e5      	b.n	8004066 <d_print_comp+0x15f6>
 800409a:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 8004190 <d_print_comp+0x1720>
 800409e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80040a2:	f108 0a09 	add.w	sl, r8, #9
 80040a6:	2764      	movs	r7, #100	; 0x64
 80040a8:	f04f 0900 	mov.w	r9, #0
 80040ac:	e00b      	b.n	80040c6 <d_print_comp+0x1656>
 80040ae:	460b      	mov	r3, r1
 80040b0:	3101      	adds	r1, #1
 80040b2:	45c2      	cmp	sl, r8
 80040b4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80040b8:	54e7      	strb	r7, [r4, r3]
 80040ba:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80040be:	f000 8162 	beq.w	8004386 <d_print_comp+0x1916>
 80040c2:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80040c6:	29ff      	cmp	r1, #255	; 0xff
 80040c8:	d1f1      	bne.n	80040ae <d_print_comp+0x163e>
 80040ca:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80040ce:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80040d2:	4620      	mov	r0, r4
 80040d4:	4798      	blx	r3
 80040d6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80040da:	3301      	adds	r3, #1
 80040dc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80040e0:	2101      	movs	r1, #1
 80040e2:	2300      	movs	r3, #0
 80040e4:	e7e5      	b.n	80040b2 <d_print_comp+0x1642>
 80040e6:	f1bc 0f01 	cmp.w	ip, #1
 80040ea:	f240 8377 	bls.w	80047dc <d_print_comp+0x1d6c>
 80040ee:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 80040f2:	f7ff b8b7 	b.w	8003264 <d_print_comp+0x7f4>
 80040f6:	68ea      	ldr	r2, [r5, #12]
 80040f8:	4631      	mov	r1, r6
 80040fa:	4620      	mov	r0, r4
 80040fc:	f7fe fcb8 	bl	8002a70 <d_print_comp>
 8004100:	686b      	ldr	r3, [r5, #4]
 8004102:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004106:	9903      	ldr	r1, [sp, #12]
 8004108:	3b01      	subs	r3, #1
 800410a:	3a01      	subs	r2, #1
 800410c:	f7fe bdaa 	b.w	8002c64 <d_print_comp+0x1f4>
 8004110:	f8d9 6004 	ldr.w	r6, [r9, #4]
 8004114:	7833      	ldrb	r3, [r6, #0]
 8004116:	3b61      	subs	r3, #97	; 0x61
 8004118:	2b19      	cmp	r3, #25
 800411a:	d81a      	bhi.n	8004152 <d_print_comp+0x16e2>
 800411c:	29ff      	cmp	r1, #255	; 0xff
 800411e:	d10d      	bne.n	800413c <d_print_comp+0x16cc>
 8004120:	2600      	movs	r6, #0
 8004122:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004126:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800412a:	4620      	mov	r0, r4
 800412c:	4798      	blx	r3
 800412e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004132:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004136:	3301      	adds	r3, #1
 8004138:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800413c:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8004140:	2320      	movs	r3, #32
 8004142:	1c51      	adds	r1, r2, #1
 8004144:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004148:	54a3      	strb	r3, [r4, r2]
 800414a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800414e:	f8d9 6004 	ldr.w	r6, [r9, #4]
 8004152:	4643      	mov	r3, r8
 8004154:	18f2      	adds	r2, r6, r3
 8004156:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 800415a:	2a20      	cmp	r2, #32
 800415c:	bf08      	it	eq
 800415e:	f108 33ff 	addeq.w	r3, r8, #4294967295
 8004162:	2b00      	cmp	r3, #0
 8004164:	f001 82d3 	beq.w	800570e <d_print_comp+0x2c9e>
 8004168:	3e01      	subs	r6, #1
 800416a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800416e:	eb06 0903 	add.w	r9, r6, r3
 8004172:	f04f 0800 	mov.w	r8, #0
 8004176:	e017      	b.n	80041a8 <d_print_comp+0x1738>
 8004178:	08013c68 	.word	0x08013c68
 800417c:	08013ac8 	.word	0x08013ac8
 8004180:	08013cc0 	.word	0x08013cc0
 8004184:	08013d30 	.word	0x08013d30
 8004188:	08013d10 	.word	0x08013d10
 800418c:	08013cf0 	.word	0x08013cf0
 8004190:	08013cd0 	.word	0x08013cd0
 8004194:	460b      	mov	r3, r1
 8004196:	3101      	adds	r1, #1
 8004198:	45b1      	cmp	r9, r6
 800419a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800419e:	54e7      	strb	r7, [r4, r3]
 80041a0:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80041a4:	f000 82f3 	beq.w	800478e <d_print_comp+0x1d1e>
 80041a8:	29ff      	cmp	r1, #255	; 0xff
 80041aa:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 80041ae:	d1f1      	bne.n	8004194 <d_print_comp+0x1724>
 80041b0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80041b4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80041b8:	4620      	mov	r0, r4
 80041ba:	4798      	blx	r3
 80041bc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80041c0:	3301      	adds	r3, #1
 80041c2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80041c6:	2101      	movs	r1, #1
 80041c8:	2300      	movs	r3, #0
 80041ca:	e7e5      	b.n	8004198 <d_print_comp+0x1728>
 80041cc:	686b      	ldr	r3, [r5, #4]
 80041ce:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80041d2:	9903      	ldr	r1, [sp, #12]
 80041d4:	3b01      	subs	r3, #1
 80041d6:	3a01      	subs	r2, #1
 80041d8:	f7fe bd44 	b.w	8002c64 <d_print_comp+0x1f4>
 80041dc:	68aa      	ldr	r2, [r5, #8]
 80041de:	4631      	mov	r1, r6
 80041e0:	4620      	mov	r0, r4
 80041e2:	f7fe fc45 	bl	8002a70 <d_print_comp>
 80041e6:	686b      	ldr	r3, [r5, #4]
 80041e8:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80041ec:	9903      	ldr	r1, [sp, #12]
 80041ee:	3b01      	subs	r3, #1
 80041f0:	3a01      	subs	r2, #1
 80041f2:	f7fe bd37 	b.w	8002c64 <d_print_comp+0x1f4>
 80041f6:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80041fa:	b133      	cbz	r3, 800420a <d_print_comp+0x179a>
 80041fc:	f8d4 2110 	ldr.w	r2, [r4, #272]	; 0x110
 8004200:	9307      	str	r3, [sp, #28]
 8004202:	ab06      	add	r3, sp, #24
 8004204:	9206      	str	r2, [sp, #24]
 8004206:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800420a:	68aa      	ldr	r2, [r5, #8]
 800420c:	7813      	ldrb	r3, [r2, #0]
 800420e:	2b04      	cmp	r3, #4
 8004210:	f000 84c6 	beq.w	8004ba0 <d_print_comp+0x2130>
 8004214:	4631      	mov	r1, r6
 8004216:	4620      	mov	r0, r4
 8004218:	f7fe fc2a 	bl	8002a70 <d_print_comp>
 800421c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8004220:	b113      	cbz	r3, 8004228 <d_print_comp+0x17b8>
 8004222:	9b06      	ldr	r3, [sp, #24]
 8004224:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004228:	686b      	ldr	r3, [r5, #4]
 800422a:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800422e:	9903      	ldr	r1, [sp, #12]
 8004230:	3b01      	subs	r3, #1
 8004232:	3a01      	subs	r2, #1
 8004234:	f7fe bd16 	b.w	8002c64 <d_print_comp+0x1f4>
 8004238:	68aa      	ldr	r2, [r5, #8]
 800423a:	4631      	mov	r1, r6
 800423c:	4620      	mov	r0, r4
 800423e:	f7fe fc17 	bl	8002a70 <d_print_comp>
 8004242:	686b      	ldr	r3, [r5, #4]
 8004244:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004248:	9903      	ldr	r1, [sp, #12]
 800424a:	3b01      	subs	r3, #1
 800424c:	3a01      	subs	r2, #1
 800424e:	f7fe bd09 	b.w	8002c64 <d_print_comp+0x1f4>
 8004252:	68aa      	ldr	r2, [r5, #8]
 8004254:	4631      	mov	r1, r6
 8004256:	4620      	mov	r0, r4
 8004258:	f7fe fc0a 	bl	8002a70 <d_print_comp>
 800425c:	686b      	ldr	r3, [r5, #4]
 800425e:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004262:	9903      	ldr	r1, [sp, #12]
 8004264:	3b01      	subs	r3, #1
 8004266:	3a01      	subs	r2, #1
 8004268:	f7fe bcfc 	b.w	8002c64 <d_print_comp+0x1f4>
 800426c:	68aa      	ldr	r2, [r5, #8]
 800426e:	4631      	mov	r1, r6
 8004270:	4620      	mov	r0, r4
 8004272:	f7fe fbfd 	bl	8002a70 <d_print_comp>
 8004276:	686b      	ldr	r3, [r5, #4]
 8004278:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800427c:	9903      	ldr	r1, [sp, #12]
 800427e:	3b01      	subs	r3, #1
 8004280:	3a01      	subs	r2, #1
 8004282:	f7fe bcef 	b.w	8002c64 <d_print_comp+0x1f4>
 8004286:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800428a:	68aa      	ldr	r2, [r5, #8]
 800428c:	4fd3      	ldr	r7, [pc, #844]	; (80045dc <d_print_comp+0x1b6c>)
 800428e:	3301      	adds	r3, #1
 8004290:	4631      	mov	r1, r6
 8004292:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8004296:	4620      	mov	r0, r4
 8004298:	f7fe fbea 	bl	8002a70 <d_print_comp>
 800429c:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80042a0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80042a4:	3b01      	subs	r3, #1
 80042a6:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 80042aa:	f107 0901 	add.w	r9, r7, #1
 80042ae:	2629      	movs	r6, #41	; 0x29
 80042b0:	f04f 0800 	mov.w	r8, #0
 80042b4:	e00a      	b.n	80042cc <d_print_comp+0x185c>
 80042b6:	460b      	mov	r3, r1
 80042b8:	3101      	adds	r1, #1
 80042ba:	45b9      	cmp	r9, r7
 80042bc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80042c0:	54e6      	strb	r6, [r4, r3]
 80042c2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80042c6:	d011      	beq.n	80042ec <d_print_comp+0x187c>
 80042c8:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 80042cc:	29ff      	cmp	r1, #255	; 0xff
 80042ce:	d1f2      	bne.n	80042b6 <d_print_comp+0x1846>
 80042d0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80042d4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80042d8:	4620      	mov	r0, r4
 80042da:	4798      	blx	r3
 80042dc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80042e0:	3301      	adds	r3, #1
 80042e2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80042e6:	2101      	movs	r1, #1
 80042e8:	2300      	movs	r3, #0
 80042ea:	e7e6      	b.n	80042ba <d_print_comp+0x184a>
 80042ec:	68ea      	ldr	r2, [r5, #12]
 80042ee:	49bc      	ldr	r1, [pc, #752]	; (80045e0 <d_print_comp+0x1b70>)
 80042f0:	3201      	adds	r2, #1
 80042f2:	a806      	add	r0, sp, #24
 80042f4:	f00a ff14 	bl	800f120 <sprintf>
 80042f8:	a806      	add	r0, sp, #24
 80042fa:	f002 fe1b 	bl	8006f34 <strlen>
 80042fe:	b310      	cbz	r0, 8004346 <d_print_comp+0x18d6>
 8004300:	ae06      	add	r6, sp, #24
 8004302:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004306:	eb06 0900 	add.w	r9, r6, r0
 800430a:	f04f 0800 	mov.w	r8, #0
 800430e:	e008      	b.n	8004322 <d_print_comp+0x18b2>
 8004310:	460b      	mov	r3, r1
 8004312:	3101      	adds	r1, #1
 8004314:	45b1      	cmp	r9, r6
 8004316:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800431a:	54e7      	strb	r7, [r4, r3]
 800431c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004320:	d013      	beq.n	800434a <d_print_comp+0x18da>
 8004322:	29ff      	cmp	r1, #255	; 0xff
 8004324:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004328:	d1f2      	bne.n	8004310 <d_print_comp+0x18a0>
 800432a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800432e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004332:	4620      	mov	r0, r4
 8004334:	4798      	blx	r3
 8004336:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800433a:	3301      	adds	r3, #1
 800433c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004340:	2101      	movs	r1, #1
 8004342:	2300      	movs	r3, #0
 8004344:	e7e6      	b.n	8004314 <d_print_comp+0x18a4>
 8004346:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800434a:	29ff      	cmp	r1, #255	; 0xff
 800434c:	d10c      	bne.n	8004368 <d_print_comp+0x18f8>
 800434e:	2600      	movs	r6, #0
 8004350:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004354:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004358:	4620      	mov	r0, r4
 800435a:	4798      	blx	r3
 800435c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004360:	3301      	adds	r3, #1
 8004362:	4631      	mov	r1, r6
 8004364:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004368:	1c4a      	adds	r2, r1, #1
 800436a:	237d      	movs	r3, #125	; 0x7d
 800436c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004370:	5463      	strb	r3, [r4, r1]
 8004372:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004376:	686b      	ldr	r3, [r5, #4]
 8004378:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800437c:	9903      	ldr	r1, [sp, #12]
 800437e:	3b01      	subs	r3, #1
 8004380:	3a01      	subs	r2, #1
 8004382:	f7fe bc6f 	b.w	8002c64 <d_print_comp+0x1f4>
 8004386:	4631      	mov	r1, r6
 8004388:	68aa      	ldr	r2, [r5, #8]
 800438a:	4620      	mov	r0, r4
 800438c:	f7fe fb70 	bl	8002a70 <d_print_comp>
 8004390:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004394:	29ff      	cmp	r1, #255	; 0xff
 8004396:	d10c      	bne.n	80043b2 <d_print_comp+0x1942>
 8004398:	2600      	movs	r6, #0
 800439a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800439e:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80043a2:	4620      	mov	r0, r4
 80043a4:	4798      	blx	r3
 80043a6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80043aa:	3301      	adds	r3, #1
 80043ac:	4631      	mov	r1, r6
 80043ae:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80043b2:	1c4a      	adds	r2, r1, #1
 80043b4:	2329      	movs	r3, #41	; 0x29
 80043b6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80043ba:	5463      	strb	r3, [r4, r1]
 80043bc:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80043c0:	686b      	ldr	r3, [r5, #4]
 80043c2:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80043c6:	9903      	ldr	r1, [sp, #12]
 80043c8:	3b01      	subs	r3, #1
 80043ca:	3a01      	subs	r2, #1
 80043cc:	f7fe bc4a 	b.w	8002c64 <d_print_comp+0x1f4>
 80043d0:	68aa      	ldr	r2, [r5, #8]
 80043d2:	4983      	ldr	r1, [pc, #524]	; (80045e0 <d_print_comp+0x1b70>)
 80043d4:	3201      	adds	r2, #1
 80043d6:	a806      	add	r0, sp, #24
 80043d8:	f00a fea2 	bl	800f120 <sprintf>
 80043dc:	a806      	add	r0, sp, #24
 80043de:	f002 fda9 	bl	8006f34 <strlen>
 80043e2:	b310      	cbz	r0, 800442a <d_print_comp+0x19ba>
 80043e4:	ae06      	add	r6, sp, #24
 80043e6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80043ea:	eb06 0900 	add.w	r9, r6, r0
 80043ee:	f04f 0800 	mov.w	r8, #0
 80043f2:	e008      	b.n	8004406 <d_print_comp+0x1996>
 80043f4:	460b      	mov	r3, r1
 80043f6:	3101      	adds	r1, #1
 80043f8:	45b1      	cmp	r9, r6
 80043fa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80043fe:	54e7      	strb	r7, [r4, r3]
 8004400:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004404:	d013      	beq.n	800442e <d_print_comp+0x19be>
 8004406:	29ff      	cmp	r1, #255	; 0xff
 8004408:	f816 7b01 	ldrb.w	r7, [r6], #1
 800440c:	d1f2      	bne.n	80043f4 <d_print_comp+0x1984>
 800440e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004412:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004416:	4620      	mov	r0, r4
 8004418:	4798      	blx	r3
 800441a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800441e:	3301      	adds	r3, #1
 8004420:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004424:	2101      	movs	r1, #1
 8004426:	2300      	movs	r3, #0
 8004428:	e7e6      	b.n	80043f8 <d_print_comp+0x1988>
 800442a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800442e:	29ff      	cmp	r1, #255	; 0xff
 8004430:	d10c      	bne.n	800444c <d_print_comp+0x19dc>
 8004432:	2600      	movs	r6, #0
 8004434:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004438:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800443c:	4620      	mov	r0, r4
 800443e:	4798      	blx	r3
 8004440:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004444:	3301      	adds	r3, #1
 8004446:	4631      	mov	r1, r6
 8004448:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800444c:	1c4a      	adds	r2, r1, #1
 800444e:	237d      	movs	r3, #125	; 0x7d
 8004450:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004454:	5463      	strb	r3, [r4, r1]
 8004456:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800445a:	686b      	ldr	r3, [r5, #4]
 800445c:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004460:	9903      	ldr	r1, [sp, #12]
 8004462:	3b01      	subs	r3, #1
 8004464:	3a01      	subs	r2, #1
 8004466:	f7fe bbfd 	b.w	8002c64 <d_print_comp+0x1f4>
 800446a:	68aa      	ldr	r2, [r5, #8]
 800446c:	4631      	mov	r1, r6
 800446e:	4620      	mov	r0, r4
 8004470:	f7fe fafe 	bl	8002a70 <d_print_comp>
 8004474:	686b      	ldr	r3, [r5, #4]
 8004476:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800447a:	9903      	ldr	r1, [sp, #12]
 800447c:	3b01      	subs	r3, #1
 800447e:	3a01      	subs	r2, #1
 8004480:	f7fe bbf0 	b.w	8002c64 <d_print_comp+0x1f4>
 8004484:	68aa      	ldr	r2, [r5, #8]
 8004486:	4631      	mov	r1, r6
 8004488:	4620      	mov	r0, r4
 800448a:	f7fe faf1 	bl	8002a70 <d_print_comp>
 800448e:	686b      	ldr	r3, [r5, #4]
 8004490:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004494:	9903      	ldr	r1, [sp, #12]
 8004496:	3b01      	subs	r3, #1
 8004498:	3a01      	subs	r2, #1
 800449a:	f7fe bbe3 	b.w	8002c64 <d_print_comp+0x1f4>
 800449e:	68aa      	ldr	r2, [r5, #8]
 80044a0:	4631      	mov	r1, r6
 80044a2:	4620      	mov	r0, r4
 80044a4:	f7fe fae4 	bl	8002a70 <d_print_comp>
 80044a8:	686b      	ldr	r3, [r5, #4]
 80044aa:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80044ae:	9903      	ldr	r1, [sp, #12]
 80044b0:	3b01      	subs	r3, #1
 80044b2:	3a01      	subs	r2, #1
 80044b4:	f7fe bbd6 	b.w	8002c64 <d_print_comp+0x1f4>
 80044b8:	68aa      	ldr	r2, [r5, #8]
 80044ba:	4631      	mov	r1, r6
 80044bc:	4620      	mov	r0, r4
 80044be:	f7fe fad7 	bl	8002a70 <d_print_comp>
 80044c2:	686b      	ldr	r3, [r5, #4]
 80044c4:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80044c8:	9903      	ldr	r1, [sp, #12]
 80044ca:	3b01      	subs	r3, #1
 80044cc:	3a01      	subs	r2, #1
 80044ce:	f7fe bbc9 	b.w	8002c64 <d_print_comp+0x1f4>
 80044d2:	68aa      	ldr	r2, [r5, #8]
 80044d4:	4631      	mov	r1, r6
 80044d6:	4620      	mov	r0, r4
 80044d8:	f7fe faca 	bl	8002a70 <d_print_comp>
 80044dc:	686b      	ldr	r3, [r5, #4]
 80044de:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80044e2:	9903      	ldr	r1, [sp, #12]
 80044e4:	3b01      	subs	r3, #1
 80044e6:	3a01      	subs	r2, #1
 80044e8:	f7fe bbbc 	b.w	8002c64 <d_print_comp+0x1f4>
 80044ec:	68aa      	ldr	r2, [r5, #8]
 80044ee:	4631      	mov	r1, r6
 80044f0:	4620      	mov	r0, r4
 80044f2:	f7fe fabd 	bl	8002a70 <d_print_comp>
 80044f6:	686b      	ldr	r3, [r5, #4]
 80044f8:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80044fc:	9903      	ldr	r1, [sp, #12]
 80044fe:	3b01      	subs	r3, #1
 8004500:	3a01      	subs	r2, #1
 8004502:	f7fe bbaf 	b.w	8002c64 <d_print_comp+0x1f4>
 8004506:	68aa      	ldr	r2, [r5, #8]
 8004508:	4631      	mov	r1, r6
 800450a:	4620      	mov	r0, r4
 800450c:	f7fe fab0 	bl	8002a70 <d_print_comp>
 8004510:	686b      	ldr	r3, [r5, #4]
 8004512:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004516:	9903      	ldr	r1, [sp, #12]
 8004518:	3b01      	subs	r3, #1
 800451a:	3a01      	subs	r2, #1
 800451c:	f7fe bba2 	b.w	8002c64 <d_print_comp+0x1f4>
 8004520:	68aa      	ldr	r2, [r5, #8]
 8004522:	4631      	mov	r1, r6
 8004524:	4620      	mov	r0, r4
 8004526:	f7fe faa3 	bl	8002a70 <d_print_comp>
 800452a:	686b      	ldr	r3, [r5, #4]
 800452c:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004530:	9903      	ldr	r1, [sp, #12]
 8004532:	3b01      	subs	r3, #1
 8004534:	3a01      	subs	r2, #1
 8004536:	f7fe bb95 	b.w	8002c64 <d_print_comp+0x1f4>
 800453a:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80045e4 <d_print_comp+0x1b74>
 800453e:	68ea      	ldr	r2, [r5, #12]
 8004540:	4631      	mov	r1, r6
 8004542:	4620      	mov	r0, r4
 8004544:	f7fe fa94 	bl	8002a70 <d_print_comp>
 8004548:	f108 0a04 	add.w	sl, r8, #4
 800454c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004550:	2720      	movs	r7, #32
 8004552:	f04f 0900 	mov.w	r9, #0
 8004556:	e00b      	b.n	8004570 <d_print_comp+0x1b00>
 8004558:	460b      	mov	r3, r1
 800455a:	3101      	adds	r1, #1
 800455c:	45c2      	cmp	sl, r8
 800455e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004562:	54e7      	strb	r7, [r4, r3]
 8004564:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004568:	f000 80f5 	beq.w	8004756 <d_print_comp+0x1ce6>
 800456c:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8004570:	29ff      	cmp	r1, #255	; 0xff
 8004572:	d1f1      	bne.n	8004558 <d_print_comp+0x1ae8>
 8004574:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004578:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800457c:	4620      	mov	r0, r4
 800457e:	4798      	blx	r3
 8004580:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004584:	3301      	adds	r3, #1
 8004586:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800458a:	2101      	movs	r1, #1
 800458c:	2300      	movs	r3, #0
 800458e:	e7e5      	b.n	800455c <d_print_comp+0x1aec>
 8004590:	4631      	mov	r1, r6
 8004592:	68ea      	ldr	r2, [r5, #12]
 8004594:	4620      	mov	r0, r4
 8004596:	f7fe fa6b 	bl	8002a70 <d_print_comp>
 800459a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800459e:	29ff      	cmp	r1, #255	; 0xff
 80045a0:	d10c      	bne.n	80045bc <d_print_comp+0x1b4c>
 80045a2:	2600      	movs	r6, #0
 80045a4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80045a8:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80045ac:	4620      	mov	r0, r4
 80045ae:	4798      	blx	r3
 80045b0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80045b4:	3301      	adds	r3, #1
 80045b6:	4631      	mov	r1, r6
 80045b8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80045bc:	1c4a      	adds	r2, r1, #1
 80045be:	235d      	movs	r3, #93	; 0x5d
 80045c0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80045c4:	5463      	strb	r3, [r4, r1]
 80045c6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80045ca:	686b      	ldr	r3, [r5, #4]
 80045cc:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80045d0:	9903      	ldr	r1, [sp, #12]
 80045d2:	3b01      	subs	r3, #1
 80045d4:	3a01      	subs	r2, #1
 80045d6:	f7fe bb45 	b.w	8002c64 <d_print_comp+0x1f4>
 80045da:	bf00      	nop
 80045dc:	08013d3c 	.word	0x08013d3c
 80045e0:	08013ac8 	.word	0x08013ac8
 80045e4:	08013bfc 	.word	0x08013bfc
 80045e8:	4631      	mov	r1, r6
 80045ea:	68ea      	ldr	r2, [r5, #12]
 80045ec:	4620      	mov	r0, r4
 80045ee:	f7fe fa3f 	bl	8002a70 <d_print_comp>
 80045f2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80045f6:	29ff      	cmp	r1, #255	; 0xff
 80045f8:	d10c      	bne.n	8004614 <d_print_comp+0x1ba4>
 80045fa:	2600      	movs	r6, #0
 80045fc:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004600:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004604:	4620      	mov	r0, r4
 8004606:	4798      	blx	r3
 8004608:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800460c:	3301      	adds	r3, #1
 800460e:	4631      	mov	r1, r6
 8004610:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004614:	1c4a      	adds	r2, r1, #1
 8004616:	235d      	movs	r3, #93	; 0x5d
 8004618:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800461c:	5463      	strb	r3, [r4, r1]
 800461e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004622:	686b      	ldr	r3, [r5, #4]
 8004624:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004628:	9903      	ldr	r1, [sp, #12]
 800462a:	3b01      	subs	r3, #1
 800462c:	3a01      	subs	r2, #1
 800462e:	f7fe bb19 	b.w	8002c64 <d_print_comp+0x1f4>
 8004632:	68aa      	ldr	r2, [r5, #8]
 8004634:	4631      	mov	r1, r6
 8004636:	4620      	mov	r0, r4
 8004638:	f7fe fa1a 	bl	8002a70 <d_print_comp>
 800463c:	686b      	ldr	r3, [r5, #4]
 800463e:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004642:	9903      	ldr	r1, [sp, #12]
 8004644:	3b01      	subs	r3, #1
 8004646:	3a01      	subs	r2, #1
 8004648:	f7fe bb0c 	b.w	8002c64 <d_print_comp+0x1f4>
 800464c:	68aa      	ldr	r2, [r5, #8]
 800464e:	4631      	mov	r1, r6
 8004650:	4620      	mov	r0, r4
 8004652:	f7fe fa0d 	bl	8002a70 <d_print_comp>
 8004656:	686b      	ldr	r3, [r5, #4]
 8004658:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800465c:	9903      	ldr	r1, [sp, #12]
 800465e:	3b01      	subs	r3, #1
 8004660:	3a01      	subs	r2, #1
 8004662:	f7fe baff 	b.w	8002c64 <d_print_comp+0x1f4>
 8004666:	68aa      	ldr	r2, [r5, #8]
 8004668:	4631      	mov	r1, r6
 800466a:	4620      	mov	r0, r4
 800466c:	f7fe fa00 	bl	8002a70 <d_print_comp>
 8004670:	686b      	ldr	r3, [r5, #4]
 8004672:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004676:	9903      	ldr	r1, [sp, #12]
 8004678:	3b01      	subs	r3, #1
 800467a:	3a01      	subs	r2, #1
 800467c:	f7fe baf2 	b.w	8002c64 <d_print_comp+0x1f4>
 8004680:	68aa      	ldr	r2, [r5, #8]
 8004682:	4631      	mov	r1, r6
 8004684:	4620      	mov	r0, r4
 8004686:	f7fe f9f3 	bl	8002a70 <d_print_comp>
 800468a:	686b      	ldr	r3, [r5, #4]
 800468c:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004690:	9903      	ldr	r1, [sp, #12]
 8004692:	3b01      	subs	r3, #1
 8004694:	3a01      	subs	r2, #1
 8004696:	f7fe bae5 	b.w	8002c64 <d_print_comp+0x1f4>
 800469a:	f8df 85b8 	ldr.w	r8, [pc, #1464]	; 8004c54 <d_print_comp+0x21e4>
 800469e:	68aa      	ldr	r2, [r5, #8]
 80046a0:	4631      	mov	r1, r6
 80046a2:	4620      	mov	r0, r4
 80046a4:	f7fe f9e4 	bl	8002a70 <d_print_comp>
 80046a8:	f108 0a03 	add.w	sl, r8, #3
 80046ac:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80046b0:	272d      	movs	r7, #45	; 0x2d
 80046b2:	f04f 0900 	mov.w	r9, #0
 80046b6:	e00a      	b.n	80046ce <d_print_comp+0x1c5e>
 80046b8:	460b      	mov	r3, r1
 80046ba:	3101      	adds	r1, #1
 80046bc:	45c2      	cmp	sl, r8
 80046be:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80046c2:	54e7      	strb	r7, [r4, r3]
 80046c4:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80046c8:	d01e      	beq.n	8004708 <d_print_comp+0x1c98>
 80046ca:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 80046ce:	29ff      	cmp	r1, #255	; 0xff
 80046d0:	d1f2      	bne.n	80046b8 <d_print_comp+0x1c48>
 80046d2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80046d6:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80046da:	4620      	mov	r0, r4
 80046dc:	4798      	blx	r3
 80046de:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80046e2:	3301      	adds	r3, #1
 80046e4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80046e8:	2101      	movs	r1, #1
 80046ea:	2300      	movs	r3, #0
 80046ec:	e7e6      	b.n	80046bc <d_print_comp+0x1c4c>
 80046ee:	68aa      	ldr	r2, [r5, #8]
 80046f0:	4631      	mov	r1, r6
 80046f2:	4620      	mov	r0, r4
 80046f4:	f7fe f9bc 	bl	8002a70 <d_print_comp>
 80046f8:	686b      	ldr	r3, [r5, #4]
 80046fa:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80046fe:	9903      	ldr	r1, [sp, #12]
 8004700:	3b01      	subs	r3, #1
 8004702:	3a01      	subs	r2, #1
 8004704:	f7fe baae 	b.w	8002c64 <d_print_comp+0x1f4>
 8004708:	68ea      	ldr	r2, [r5, #12]
 800470a:	4631      	mov	r1, r6
 800470c:	4620      	mov	r0, r4
 800470e:	f7fe f9af 	bl	8002a70 <d_print_comp>
 8004712:	686b      	ldr	r3, [r5, #4]
 8004714:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004718:	9903      	ldr	r1, [sp, #12]
 800471a:	3b01      	subs	r3, #1
 800471c:	3a01      	subs	r2, #1
 800471e:	f7fe baa1 	b.w	8002c64 <d_print_comp+0x1f4>
 8004722:	68aa      	ldr	r2, [r5, #8]
 8004724:	4631      	mov	r1, r6
 8004726:	4620      	mov	r0, r4
 8004728:	f7fe f9a2 	bl	8002a70 <d_print_comp>
 800472c:	686b      	ldr	r3, [r5, #4]
 800472e:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004732:	9903      	ldr	r1, [sp, #12]
 8004734:	3b01      	subs	r3, #1
 8004736:	3a01      	subs	r2, #1
 8004738:	f7fe ba94 	b.w	8002c64 <d_print_comp+0x1f4>
 800473c:	68aa      	ldr	r2, [r5, #8]
 800473e:	4631      	mov	r1, r6
 8004740:	4620      	mov	r0, r4
 8004742:	f7fe f995 	bl	8002a70 <d_print_comp>
 8004746:	686b      	ldr	r3, [r5, #4]
 8004748:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800474c:	9903      	ldr	r1, [sp, #12]
 800474e:	3b01      	subs	r3, #1
 8004750:	3a01      	subs	r2, #1
 8004752:	f7fe ba87 	b.w	8002c64 <d_print_comp+0x1f4>
 8004756:	68aa      	ldr	r2, [r5, #8]
 8004758:	4631      	mov	r1, r6
 800475a:	4620      	mov	r0, r4
 800475c:	f7fe f988 	bl	8002a70 <d_print_comp>
 8004760:	686b      	ldr	r3, [r5, #4]
 8004762:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004766:	9903      	ldr	r1, [sp, #12]
 8004768:	3b01      	subs	r3, #1
 800476a:	3a01      	subs	r2, #1
 800476c:	f7fe ba7a 	b.w	8002c64 <d_print_comp+0x1f4>
 8004770:	464a      	mov	r2, r9
 8004772:	4631      	mov	r1, r6
 8004774:	4620      	mov	r0, r4
 8004776:	f001 f9b1 	bl	8005adc <d_print_mod>
 800477a:	f7fe ba91 	b.w	8002ca0 <d_print_comp+0x230>
 800477e:	686b      	ldr	r3, [r5, #4]
 8004780:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004784:	9903      	ldr	r1, [sp, #12]
 8004786:	3b01      	subs	r3, #1
 8004788:	3a01      	subs	r2, #1
 800478a:	f7fe ba6b 	b.w	8002c64 <d_print_comp+0x1f4>
 800478e:	686b      	ldr	r3, [r5, #4]
 8004790:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004794:	9903      	ldr	r1, [sp, #12]
 8004796:	3b01      	subs	r3, #1
 8004798:	3a01      	subs	r2, #1
 800479a:	f7fe ba63 	b.w	8002c64 <d_print_comp+0x1f4>
 800479e:	9d01      	ldr	r5, [sp, #4]
 80047a0:	f8d9 211c 	ldr.w	r2, [r9, #284]	; 0x11c
 80047a4:	686b      	ldr	r3, [r5, #4]
 80047a6:	9903      	ldr	r1, [sp, #12]
 80047a8:	464c      	mov	r4, r9
 80047aa:	3b01      	subs	r3, #1
 80047ac:	3a01      	subs	r2, #1
 80047ae:	f7fe ba59 	b.w	8002c64 <d_print_comp+0x1f4>
 80047b2:	68ea      	ldr	r2, [r5, #12]
 80047b4:	460f      	mov	r7, r1
 80047b6:	4620      	mov	r0, r4
 80047b8:	4631      	mov	r1, r6
 80047ba:	f8d4 6128 	ldr.w	r6, [r4, #296]	; 0x128
 80047be:	f7fe f957 	bl	8002a70 <d_print_comp>
 80047c2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80047c6:	429e      	cmp	r6, r3
 80047c8:	f000 8454 	beq.w	8005074 <d_print_comp+0x2604>
 80047cc:	686b      	ldr	r3, [r5, #4]
 80047ce:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80047d2:	9903      	ldr	r1, [sp, #12]
 80047d4:	3b01      	subs	r3, #1
 80047d6:	3a01      	subs	r2, #1
 80047d8:	f7fe ba44 	b.w	8002c64 <d_print_comp+0x1f4>
 80047dc:	f8d8 8008 	ldr.w	r8, [r8, #8]
 80047e0:	f1b8 0f00 	cmp.w	r8, #0
 80047e4:	f000 85c6 	beq.w	8005374 <d_print_comp+0x2904>
 80047e8:	2f04      	cmp	r7, #4
 80047ea:	f102 0210 	add.w	r2, r2, #16
 80047ee:	f47e ad08 	bne.w	8003202 <d_print_comp+0x792>
 80047f2:	2201      	movs	r2, #1
 80047f4:	e9c4 3245 	strd	r3, r2, [r4, #276]	; 0x114
 80047f8:	f7fe bd75 	b.w	80032e6 <d_print_comp+0x876>
 80047fc:	68ab      	ldr	r3, [r5, #8]
 80047fe:	461a      	mov	r2, r3
 8004800:	f1ba 0f00 	cmp.w	sl, #0
 8004804:	f47e adb8 	bne.w	8003378 <d_print_comp+0x908>
 8004808:	686b      	ldr	r3, [r5, #4]
 800480a:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800480e:	9903      	ldr	r1, [sp, #12]
 8004810:	3b01      	subs	r3, #1
 8004812:	3a01      	subs	r2, #1
 8004814:	f7fe ba26 	b.w	8002c64 <d_print_comp+0x1f4>
 8004818:	782b      	ldrb	r3, [r5, #0]
 800481a:	2b2f      	cmp	r3, #47	; 0x2f
 800481c:	d000      	beq.n	8004820 <d_print_comp+0x1db0>
 800481e:	46a9      	mov	r9, r5
 8004820:	f8d4 e114 	ldr.w	lr, [r4, #276]	; 0x114
 8004824:	f7fe ba5f 	b.w	8002ce6 <d_print_comp+0x276>
 8004828:	68ae      	ldr	r6, [r5, #8]
 800482a:	e9d6 6002 	ldrd	r6, r0, [r6, #8]
 800482e:	2800      	cmp	r0, #0
 8004830:	f43e aa18 	beq.w	8002c64 <d_print_comp+0x1f4>
 8004834:	4430      	add	r0, r6
 8004836:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800483a:	f100 39ff 	add.w	r9, r0, #4294967295
 800483e:	3e01      	subs	r6, #1
 8004840:	f04f 0800 	mov.w	r8, #0
 8004844:	e009      	b.n	800485a <d_print_comp+0x1dea>
 8004846:	460b      	mov	r3, r1
 8004848:	3101      	adds	r1, #1
 800484a:	45b1      	cmp	r9, r6
 800484c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004850:	54e7      	strb	r7, [r4, r3]
 8004852:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004856:	f000 8179 	beq.w	8004b4c <d_print_comp+0x20dc>
 800485a:	29ff      	cmp	r1, #255	; 0xff
 800485c:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8004860:	d1f1      	bne.n	8004846 <d_print_comp+0x1dd6>
 8004862:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004866:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800486a:	4620      	mov	r0, r4
 800486c:	4798      	blx	r3
 800486e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004872:	3301      	adds	r3, #1
 8004874:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004878:	2101      	movs	r1, #1
 800487a:	2300      	movs	r3, #0
 800487c:	e7e5      	b.n	800484a <d_print_comp+0x1dda>
 800487e:	e9d5 6002 	ldrd	r6, r0, [r5, #8]
 8004882:	eb06 0800 	add.w	r8, r6, r0
 8004886:	4546      	cmp	r6, r8
 8004888:	f4be a9ec 	bcs.w	8002c64 <d_print_comp+0x1f4>
 800488c:	f04f 0900 	mov.w	r9, #0
 8004890:	e009      	b.n	80048a6 <d_print_comp+0x1e36>
 8004892:	1c4b      	adds	r3, r1, #1
 8004894:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004898:	5467      	strb	r7, [r4, r1]
 800489a:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800489e:	3601      	adds	r6, #1
 80048a0:	45b0      	cmp	r8, r6
 80048a2:	f240 814b 	bls.w	8004b3c <d_print_comp+0x20cc>
 80048a6:	eba8 0306 	sub.w	r3, r8, r6
 80048aa:	2b03      	cmp	r3, #3
 80048ac:	7837      	ldrb	r7, [r6, #0]
 80048ae:	dd01      	ble.n	80048b4 <d_print_comp+0x1e44>
 80048b0:	2f5f      	cmp	r7, #95	; 0x5f
 80048b2:	d011      	beq.n	80048d8 <d_print_comp+0x1e68>
 80048b4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80048b8:	29ff      	cmp	r1, #255	; 0xff
 80048ba:	d1ea      	bne.n	8004892 <d_print_comp+0x1e22>
 80048bc:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80048c0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80048c4:	4620      	mov	r0, r4
 80048c6:	4798      	blx	r3
 80048c8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80048cc:	3301      	adds	r3, #1
 80048ce:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80048d2:	2100      	movs	r1, #0
 80048d4:	2301      	movs	r3, #1
 80048d6:	e7dd      	b.n	8004894 <d_print_comp+0x1e24>
 80048d8:	7873      	ldrb	r3, [r6, #1]
 80048da:	2b5f      	cmp	r3, #95	; 0x5f
 80048dc:	d1ea      	bne.n	80048b4 <d_print_comp+0x1e44>
 80048de:	78b3      	ldrb	r3, [r6, #2]
 80048e0:	2b55      	cmp	r3, #85	; 0x55
 80048e2:	d1e7      	bne.n	80048b4 <d_print_comp+0x1e44>
 80048e4:	1cf3      	adds	r3, r6, #3
 80048e6:	4598      	cmp	r8, r3
 80048e8:	d9e4      	bls.n	80048b4 <d_print_comp+0x1e44>
 80048ea:	2000      	movs	r0, #0
 80048ec:	e005      	b.n	80048fa <d_print_comp+0x1e8a>
 80048ee:	4617      	mov	r7, r2
 80048f0:	4598      	cmp	r8, r3
 80048f2:	eb07 1000 	add.w	r0, r7, r0, lsl #4
 80048f6:	f001 8012 	beq.w	800591e <d_print_comp+0x2eae>
 80048fa:	469a      	mov	sl, r3
 80048fc:	f813 7b01 	ldrb.w	r7, [r3], #1
 8004900:	f1a7 0230 	sub.w	r2, r7, #48	; 0x30
 8004904:	fa5f fc82 	uxtb.w	ip, r2
 8004908:	f1bc 0f09 	cmp.w	ip, #9
 800490c:	f1a7 0141 	sub.w	r1, r7, #65	; 0x41
 8004910:	d9ed      	bls.n	80048ee <d_print_comp+0x1e7e>
 8004912:	2905      	cmp	r1, #5
 8004914:	f1a7 0261 	sub.w	r2, r7, #97	; 0x61
 8004918:	f200 84a3 	bhi.w	8005262 <d_print_comp+0x27f2>
 800491c:	3f37      	subs	r7, #55	; 0x37
 800491e:	e7e7      	b.n	80048f0 <d_print_comp+0x1e80>
 8004920:	4fc9      	ldr	r7, [pc, #804]	; (8004c48 <d_print_comp+0x21d8>)
 8004922:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004926:	f107 0a05 	add.w	sl, r7, #5
 800492a:	267b      	movs	r6, #123	; 0x7b
 800492c:	f04f 0900 	mov.w	r9, #0
 8004930:	e00a      	b.n	8004948 <d_print_comp+0x1ed8>
 8004932:	460b      	mov	r3, r1
 8004934:	3101      	adds	r1, #1
 8004936:	45ba      	cmp	sl, r7
 8004938:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800493c:	54e6      	strb	r6, [r4, r3]
 800493e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004942:	d011      	beq.n	8004968 <d_print_comp+0x1ef8>
 8004944:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8004948:	29ff      	cmp	r1, #255	; 0xff
 800494a:	d1f2      	bne.n	8004932 <d_print_comp+0x1ec2>
 800494c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004950:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004954:	4620      	mov	r0, r4
 8004956:	4798      	blx	r3
 8004958:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800495c:	3301      	adds	r3, #1
 800495e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004962:	2101      	movs	r1, #1
 8004964:	2300      	movs	r3, #0
 8004966:	e7e6      	b.n	8004936 <d_print_comp+0x1ec6>
 8004968:	49b8      	ldr	r1, [pc, #736]	; (8004c4c <d_print_comp+0x21dc>)
 800496a:	4642      	mov	r2, r8
 800496c:	a806      	add	r0, sp, #24
 800496e:	f00a fbd7 	bl	800f120 <sprintf>
 8004972:	a806      	add	r0, sp, #24
 8004974:	f002 fade 	bl	8006f34 <strlen>
 8004978:	b310      	cbz	r0, 80049c0 <d_print_comp+0x1f50>
 800497a:	ae06      	add	r6, sp, #24
 800497c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004980:	eb06 0900 	add.w	r9, r6, r0
 8004984:	f04f 0800 	mov.w	r8, #0
 8004988:	e008      	b.n	800499c <d_print_comp+0x1f2c>
 800498a:	460b      	mov	r3, r1
 800498c:	3101      	adds	r1, #1
 800498e:	45b1      	cmp	r9, r6
 8004990:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004994:	54e7      	strb	r7, [r4, r3]
 8004996:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 800499a:	d011      	beq.n	80049c0 <d_print_comp+0x1f50>
 800499c:	29ff      	cmp	r1, #255	; 0xff
 800499e:	f816 7b01 	ldrb.w	r7, [r6], #1
 80049a2:	d1f2      	bne.n	800498a <d_print_comp+0x1f1a>
 80049a4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80049a8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80049ac:	4620      	mov	r0, r4
 80049ae:	4798      	blx	r3
 80049b0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80049b4:	3301      	adds	r3, #1
 80049b6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80049ba:	2101      	movs	r1, #1
 80049bc:	2300      	movs	r3, #0
 80049be:	e7e6      	b.n	800498e <d_print_comp+0x1f1e>
 80049c0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80049c4:	2bff      	cmp	r3, #255	; 0xff
 80049c6:	d10f      	bne.n	80049e8 <d_print_comp+0x1f78>
 80049c8:	2600      	movs	r6, #0
 80049ca:	4619      	mov	r1, r3
 80049cc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80049d0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80049d4:	4620      	mov	r0, r4
 80049d6:	4798      	blx	r3
 80049d8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80049dc:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80049e0:	1c5a      	adds	r2, r3, #1
 80049e2:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80049e6:	4633      	mov	r3, r6
 80049e8:	1c59      	adds	r1, r3, #1
 80049ea:	227d      	movs	r2, #125	; 0x7d
 80049ec:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80049f0:	54e2      	strb	r2, [r4, r3]
 80049f2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80049f6:	686b      	ldr	r3, [r5, #4]
 80049f8:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80049fc:	9903      	ldr	r1, [sp, #12]
 80049fe:	3b01      	subs	r3, #1
 8004a00:	3a01      	subs	r2, #1
 8004a02:	f7fe b92f 	b.w	8002c64 <d_print_comp+0x1f4>
 8004a06:	686b      	ldr	r3, [r5, #4]
 8004a08:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004a0c:	9903      	ldr	r1, [sp, #12]
 8004a0e:	3b01      	subs	r3, #1
 8004a10:	3a01      	subs	r2, #1
 8004a12:	f7fe b927 	b.w	8002c64 <d_print_comp+0x1f4>
 8004a16:	f105 0108 	add.w	r1, r5, #8
 8004a1a:	4620      	mov	r0, r4
 8004a1c:	f7fb ff08 	bl	8000830 <d_lookup_template_argument.isra.0>
 8004a20:	4602      	mov	r2, r0
 8004a22:	2800      	cmp	r0, #0
 8004a24:	f000 84b8 	beq.w	8005398 <d_print_comp+0x2928>
 8004a28:	7803      	ldrb	r3, [r0, #0]
 8004a2a:	2b2f      	cmp	r3, #47	; 0x2f
 8004a2c:	f000 84a9 	beq.w	8005382 <d_print_comp+0x2912>
 8004a30:	f8d4 7110 	ldr.w	r7, [r4, #272]	; 0x110
 8004a34:	683b      	ldr	r3, [r7, #0]
 8004a36:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004a3a:	4631      	mov	r1, r6
 8004a3c:	4620      	mov	r0, r4
 8004a3e:	f7fe f817 	bl	8002a70 <d_print_comp>
 8004a42:	686b      	ldr	r3, [r5, #4]
 8004a44:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004a48:	9903      	ldr	r1, [sp, #12]
 8004a4a:	f8c4 7110 	str.w	r7, [r4, #272]	; 0x110
 8004a4e:	3b01      	subs	r3, #1
 8004a50:	3a01      	subs	r2, #1
 8004a52:	f7fe b907 	b.w	8002c64 <d_print_comp+0x1f4>
 8004a56:	686b      	ldr	r3, [r5, #4]
 8004a58:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004a5c:	9903      	ldr	r1, [sp, #12]
 8004a5e:	3b01      	subs	r3, #1
 8004a60:	3a01      	subs	r2, #1
 8004a62:	f7fe b8ff 	b.w	8002c64 <d_print_comp+0x1f4>
 8004a66:	4e7a      	ldr	r6, [pc, #488]	; (8004c50 <d_print_comp+0x21e0>)
 8004a68:	275f      	movs	r7, #95	; 0x5f
 8004a6a:	f106 0905 	add.w	r9, r6, #5
 8004a6e:	f04f 0800 	mov.w	r8, #0
 8004a72:	e00a      	b.n	8004a8a <d_print_comp+0x201a>
 8004a74:	460b      	mov	r3, r1
 8004a76:	3101      	adds	r1, #1
 8004a78:	45b1      	cmp	r9, r6
 8004a7a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004a7e:	54e7      	strb	r7, [r4, r3]
 8004a80:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004a84:	d011      	beq.n	8004aaa <d_print_comp+0x203a>
 8004a86:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8004a8a:	29ff      	cmp	r1, #255	; 0xff
 8004a8c:	d1f2      	bne.n	8004a74 <d_print_comp+0x2004>
 8004a8e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004a92:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004a96:	4620      	mov	r0, r4
 8004a98:	4798      	blx	r3
 8004a9a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004a9e:	3301      	adds	r3, #1
 8004aa0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004aa4:	2101      	movs	r1, #1
 8004aa6:	2300      	movs	r3, #0
 8004aa8:	e7e6      	b.n	8004a78 <d_print_comp+0x2008>
 8004aaa:	686b      	ldr	r3, [r5, #4]
 8004aac:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004ab0:	9903      	ldr	r1, [sp, #12]
 8004ab2:	3b01      	subs	r3, #1
 8004ab4:	3a01      	subs	r2, #1
 8004ab6:	f7fe b8d5 	b.w	8002c64 <d_print_comp+0x1f4>
 8004aba:	68aa      	ldr	r2, [r5, #8]
 8004abc:	4963      	ldr	r1, [pc, #396]	; (8004c4c <d_print_comp+0x21dc>)
 8004abe:	3201      	adds	r2, #1
 8004ac0:	a806      	add	r0, sp, #24
 8004ac2:	f00a fb2d 	bl	800f120 <sprintf>
 8004ac6:	a806      	add	r0, sp, #24
 8004ac8:	f002 fa34 	bl	8006f34 <strlen>
 8004acc:	b310      	cbz	r0, 8004b14 <d_print_comp+0x20a4>
 8004ace:	ae06      	add	r6, sp, #24
 8004ad0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004ad4:	eb06 0900 	add.w	r9, r6, r0
 8004ad8:	f04f 0800 	mov.w	r8, #0
 8004adc:	e008      	b.n	8004af0 <d_print_comp+0x2080>
 8004ade:	460b      	mov	r3, r1
 8004ae0:	3101      	adds	r1, #1
 8004ae2:	45b1      	cmp	r9, r6
 8004ae4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004ae8:	54e7      	strb	r7, [r4, r3]
 8004aea:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004aee:	d011      	beq.n	8004b14 <d_print_comp+0x20a4>
 8004af0:	29ff      	cmp	r1, #255	; 0xff
 8004af2:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004af6:	d1f2      	bne.n	8004ade <d_print_comp+0x206e>
 8004af8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004afc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004b00:	4620      	mov	r0, r4
 8004b02:	4798      	blx	r3
 8004b04:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004b08:	3301      	adds	r3, #1
 8004b0a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004b0e:	2101      	movs	r1, #1
 8004b10:	2300      	movs	r3, #0
 8004b12:	e7e6      	b.n	8004ae2 <d_print_comp+0x2072>
 8004b14:	686b      	ldr	r3, [r5, #4]
 8004b16:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004b1a:	9903      	ldr	r1, [sp, #12]
 8004b1c:	3b01      	subs	r3, #1
 8004b1e:	3a01      	subs	r2, #1
 8004b20:	f7fe b8a0 	b.w	8002c64 <d_print_comp+0x1f4>
 8004b24:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004b28:	f7fe bad2 	b.w	80030d0 <d_print_comp+0x660>
 8004b2c:	686b      	ldr	r3, [r5, #4]
 8004b2e:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004b32:	9903      	ldr	r1, [sp, #12]
 8004b34:	3b01      	subs	r3, #1
 8004b36:	3a01      	subs	r2, #1
 8004b38:	f7fe b894 	b.w	8002c64 <d_print_comp+0x1f4>
 8004b3c:	686b      	ldr	r3, [r5, #4]
 8004b3e:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004b42:	9903      	ldr	r1, [sp, #12]
 8004b44:	3b01      	subs	r3, #1
 8004b46:	3a01      	subs	r2, #1
 8004b48:	f7fe b88c 	b.w	8002c64 <d_print_comp+0x1f4>
 8004b4c:	686b      	ldr	r3, [r5, #4]
 8004b4e:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004b52:	9903      	ldr	r1, [sp, #12]
 8004b54:	3b01      	subs	r3, #1
 8004b56:	3a01      	subs	r2, #1
 8004b58:	f7fe b884 	b.w	8002c64 <d_print_comp+0x1f4>
 8004b5c:	686b      	ldr	r3, [r5, #4]
 8004b5e:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004b62:	9903      	ldr	r1, [sp, #12]
 8004b64:	3b01      	subs	r3, #1
 8004b66:	3a01      	subs	r2, #1
 8004b68:	f7fe b87c 	b.w	8002c64 <d_print_comp+0x1f4>
 8004b6c:	f026 0160 	bic.w	r1, r6, #96	; 0x60
 8004b70:	f105 020c 	add.w	r2, r5, #12
 8004b74:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8004b78:	9100      	str	r1, [sp, #0]
 8004b7a:	4620      	mov	r0, r4
 8004b7c:	f001 fab4 	bl	80060e8 <d_print_function_type.isra.0>
 8004b80:	68aa      	ldr	r2, [r5, #8]
 8004b82:	9900      	ldr	r1, [sp, #0]
 8004b84:	2a00      	cmp	r2, #0
 8004b86:	f000 85ca 	beq.w	800571e <d_print_comp+0x2cae>
 8004b8a:	4620      	mov	r0, r4
 8004b8c:	f7fd ff70 	bl	8002a70 <d_print_comp>
 8004b90:	686b      	ldr	r3, [r5, #4]
 8004b92:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004b96:	9903      	ldr	r1, [sp, #12]
 8004b98:	3b01      	subs	r3, #1
 8004b9a:	3a01      	subs	r2, #1
 8004b9c:	f7fe b862 	b.w	8002c64 <d_print_comp+0x1f4>
 8004ba0:	6892      	ldr	r2, [r2, #8]
 8004ba2:	4631      	mov	r1, r6
 8004ba4:	4620      	mov	r0, r4
 8004ba6:	f7fd ff63 	bl	8002a70 <d_print_comp>
 8004baa:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8004bae:	b113      	cbz	r3, 8004bb6 <d_print_comp+0x2146>
 8004bb0:	9b06      	ldr	r3, [sp, #24]
 8004bb2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004bb6:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8004bba:	2b3c      	cmp	r3, #60	; 0x3c
 8004bbc:	f000 850f 	beq.w	80055de <d_print_comp+0x2b6e>
 8004bc0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004bc4:	2bff      	cmp	r3, #255	; 0xff
 8004bc6:	d10f      	bne.n	8004be8 <d_print_comp+0x2178>
 8004bc8:	2700      	movs	r7, #0
 8004bca:	4619      	mov	r1, r3
 8004bcc:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8004bd0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004bd4:	4620      	mov	r0, r4
 8004bd6:	4798      	blx	r3
 8004bd8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004bdc:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8004be0:	1c5a      	adds	r2, r3, #1
 8004be2:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004be6:	463b      	mov	r3, r7
 8004be8:	1c59      	adds	r1, r3, #1
 8004bea:	223c      	movs	r2, #60	; 0x3c
 8004bec:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004bf0:	54e2      	strb	r2, [r4, r3]
 8004bf2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004bf6:	68ab      	ldr	r3, [r5, #8]
 8004bf8:	4631      	mov	r1, r6
 8004bfa:	68da      	ldr	r2, [r3, #12]
 8004bfc:	4620      	mov	r0, r4
 8004bfe:	f7fd ff37 	bl	8002a70 <d_print_comp>
 8004c02:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8004c06:	2b3e      	cmp	r3, #62	; 0x3e
 8004c08:	f000 84cc 	beq.w	80055a4 <d_print_comp+0x2b34>
 8004c0c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004c10:	2bff      	cmp	r3, #255	; 0xff
 8004c12:	d10f      	bne.n	8004c34 <d_print_comp+0x21c4>
 8004c14:	2600      	movs	r6, #0
 8004c16:	4619      	mov	r1, r3
 8004c18:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004c1c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004c20:	4620      	mov	r0, r4
 8004c22:	4798      	blx	r3
 8004c24:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004c28:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004c2c:	1c5a      	adds	r2, r3, #1
 8004c2e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004c32:	4633      	mov	r3, r6
 8004c34:	223e      	movs	r2, #62	; 0x3e
 8004c36:	1c59      	adds	r1, r3, #1
 8004c38:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004c3c:	54e2      	strb	r2, [r4, r3]
 8004c3e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004c42:	f7ff baf1 	b.w	8004228 <d_print_comp+0x17b8>
 8004c46:	bf00      	nop
 8004c48:	08013ce8 	.word	0x08013ce8
 8004c4c:	08013ac8 	.word	0x08013ac8
 8004c50:	08013c5c 	.word	0x08013c5c
 8004c54:	08013b38 	.word	0x08013b38
 8004c58:	6893      	ldr	r3, [r2, #8]
 8004c5a:	7c1f      	ldrb	r7, [r3, #16]
 8004c5c:	2f06      	cmp	r7, #6
 8004c5e:	f200 81bf 	bhi.w	8004fe0 <d_print_comp+0x2570>
 8004c62:	2f00      	cmp	r7, #0
 8004c64:	f43e a88b 	beq.w	8002d7e <d_print_comp+0x30e>
 8004c68:	68eb      	ldr	r3, [r5, #12]
 8004c6a:	f893 8000 	ldrb.w	r8, [r3]
 8004c6e:	f1b8 0f00 	cmp.w	r8, #0
 8004c72:	f47e a884 	bne.w	8002d7e <d_print_comp+0x30e>
 8004c76:	f1bc 0f3e 	cmp.w	ip, #62	; 0x3e
 8004c7a:	f000 86f4 	beq.w	8005a66 <d_print_comp+0x2ff6>
 8004c7e:	68ea      	ldr	r2, [r5, #12]
 8004c80:	4631      	mov	r1, r6
 8004c82:	4620      	mov	r0, r4
 8004c84:	3f02      	subs	r7, #2
 8004c86:	f7fd fef3 	bl	8002a70 <d_print_comp>
 8004c8a:	2f04      	cmp	r7, #4
 8004c8c:	f200 8714 	bhi.w	8005ab8 <d_print_comp+0x3048>
 8004c90:	e8df f017 	tbh	[pc, r7, lsl #1]
 8004c94:	06a306c6 	.word	0x06a306c6
 8004c98:	06890696 	.word	0x06890696
 8004c9c:	067c      	.short	0x067c
 8004c9e:	4631      	mov	r1, r6
 8004ca0:	462a      	mov	r2, r5
 8004ca2:	4620      	mov	r0, r4
 8004ca4:	f000 ff1a 	bl	8005adc <d_print_mod>
 8004ca8:	f7fe b8fd 	b.w	8002ea6 <d_print_comp+0x436>
 8004cac:	2200      	movs	r2, #0
 8004cae:	4619      	mov	r1, r3
 8004cb0:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 8004cb4:	4620      	mov	r0, r4
 8004cb6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004cba:	4798      	blx	r3
 8004cbc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004cc0:	2101      	movs	r1, #1
 8004cc2:	440b      	add	r3, r1
 8004cc4:	2229      	movs	r2, #41	; 0x29
 8004cc6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004cca:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004cce:	7022      	strb	r2, [r4, #0]
 8004cd0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004cd4:	782b      	ldrb	r3, [r5, #0]
 8004cd6:	2b3e      	cmp	r3, #62	; 0x3e
 8004cd8:	f47e a87f 	bne.w	8002dda <d_print_comp+0x36a>
 8004cdc:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8004ce0:	232d      	movs	r3, #45	; 0x2d
 8004ce2:	1c51      	adds	r1, r2, #1
 8004ce4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004ce8:	54a3      	strb	r3, [r4, r2]
 8004cea:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004cee:	f7fe b874 	b.w	8002dda <d_print_comp+0x36a>
 8004cf2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004cf6:	2bff      	cmp	r3, #255	; 0xff
 8004cf8:	d10f      	bne.n	8004d1a <d_print_comp+0x22aa>
 8004cfa:	2600      	movs	r6, #0
 8004cfc:	4619      	mov	r1, r3
 8004cfe:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004d02:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004d06:	4620      	mov	r0, r4
 8004d08:	4798      	blx	r3
 8004d0a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004d0e:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004d12:	1c5a      	adds	r2, r3, #1
 8004d14:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004d18:	4633      	mov	r3, r6
 8004d1a:	2220      	movs	r2, #32
 8004d1c:	1c59      	adds	r1, r3, #1
 8004d1e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004d22:	54e2      	strb	r2, [r4, r3]
 8004d24:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004d28:	f7fe bf7f 	b.w	8003c2a <d_print_comp+0x11ba>
 8004d2c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004d30:	2bff      	cmp	r3, #255	; 0xff
 8004d32:	d110      	bne.n	8004d56 <d_print_comp+0x22e6>
 8004d34:	f04f 0900 	mov.w	r9, #0
 8004d38:	4619      	mov	r1, r3
 8004d3a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004d3e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004d42:	4620      	mov	r0, r4
 8004d44:	4798      	blx	r3
 8004d46:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004d4a:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8004d4e:	1c5a      	adds	r2, r3, #1
 8004d50:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004d54:	464b      	mov	r3, r9
 8004d56:	2220      	movs	r2, #32
 8004d58:	1c59      	adds	r1, r3, #1
 8004d5a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004d5e:	54e2      	strb	r2, [r4, r3]
 8004d60:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004d64:	f7fe bf3e 	b.w	8003be4 <d_print_comp+0x1174>
 8004d68:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004d6c:	49d2      	ldr	r1, [pc, #840]	; (80050b8 <d_print_comp+0x2648>)
 8004d6e:	f8d3 a000 	ldr.w	sl, [r3]
 8004d72:	4650      	mov	r0, sl
 8004d74:	f002 f8d4 	bl	8006f20 <strcmp>
 8004d78:	783b      	ldrb	r3, [r7, #0]
 8004d7a:	b910      	cbnz	r0, 8004d82 <d_print_comp+0x2312>
 8004d7c:	2b03      	cmp	r3, #3
 8004d7e:	f000 859e 	beq.w	80058be <d_print_comp+0x2e4e>
 8004d82:	2b39      	cmp	r3, #57	; 0x39
 8004d84:	f000 8589 	beq.w	800589a <d_print_comp+0x2e2a>
 8004d88:	49cc      	ldr	r1, [pc, #816]	; (80050bc <d_print_comp+0x264c>)
 8004d8a:	4650      	mov	r0, sl
 8004d8c:	f002 f8c8 	bl	8006f20 <strcmp>
 8004d90:	4681      	mov	r9, r0
 8004d92:	2800      	cmp	r0, #0
 8004d94:	f000 8536 	beq.w	8005804 <d_print_comp+0x2d94>
 8004d98:	f89a 3000 	ldrb.w	r3, [sl]
 8004d9c:	2b73      	cmp	r3, #115	; 0x73
 8004d9e:	d12b      	bne.n	8004df8 <d_print_comp+0x2388>
 8004da0:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8004da4:	2b50      	cmp	r3, #80	; 0x50
 8004da6:	d127      	bne.n	8004df8 <d_print_comp+0x2388>
 8004da8:	f89a 3002 	ldrb.w	r3, [sl, #2]
 8004dac:	bb23      	cbnz	r3, 8004df8 <d_print_comp+0x2388>
 8004dae:	461e      	mov	r6, r3
 8004db0:	e003      	b.n	8004dba <d_print_comp+0x234a>
 8004db2:	68ff      	ldr	r7, [r7, #12]
 8004db4:	2f00      	cmp	r7, #0
 8004db6:	f000 82fa 	beq.w	80053ae <d_print_comp+0x293e>
 8004dba:	783b      	ldrb	r3, [r7, #0]
 8004dbc:	2b2f      	cmp	r3, #47	; 0x2f
 8004dbe:	f040 82f6 	bne.w	80053ae <d_print_comp+0x293e>
 8004dc2:	68bb      	ldr	r3, [r7, #8]
 8004dc4:	2b00      	cmp	r3, #0
 8004dc6:	f000 82f2 	beq.w	80053ae <d_print_comp+0x293e>
 8004dca:	781a      	ldrb	r2, [r3, #0]
 8004dcc:	2a4b      	cmp	r2, #75	; 0x4b
 8004dce:	bf18      	it	ne
 8004dd0:	3601      	addne	r6, #1
 8004dd2:	d1ee      	bne.n	8004db2 <d_print_comp+0x2342>
 8004dd4:	6899      	ldr	r1, [r3, #8]
 8004dd6:	4620      	mov	r0, r4
 8004dd8:	f7fb fd3a 	bl	8000850 <d_find_pack>
 8004ddc:	4603      	mov	r3, r0
 8004dde:	b148      	cbz	r0, 8004df4 <d_print_comp+0x2384>
 8004de0:	2300      	movs	r3, #0
 8004de2:	e004      	b.n	8004dee <d_print_comp+0x237e>
 8004de4:	6882      	ldr	r2, [r0, #8]
 8004de6:	b12a      	cbz	r2, 8004df4 <d_print_comp+0x2384>
 8004de8:	68c0      	ldr	r0, [r0, #12]
 8004dea:	3301      	adds	r3, #1
 8004dec:	b110      	cbz	r0, 8004df4 <d_print_comp+0x2384>
 8004dee:	7802      	ldrb	r2, [r0, #0]
 8004df0:	2a2f      	cmp	r2, #47	; 0x2f
 8004df2:	d0f7      	beq.n	8004de4 <d_print_comp+0x2374>
 8004df4:	441e      	add	r6, r3
 8004df6:	e7dc      	b.n	8004db2 <d_print_comp+0x2342>
 8004df8:	4642      	mov	r2, r8
 8004dfa:	4631      	mov	r1, r6
 8004dfc:	4620      	mov	r0, r4
 8004dfe:	f001 fc7d 	bl	80066fc <d_print_expr_op>
 8004e02:	f89a 3000 	ldrb.w	r3, [sl]
 8004e06:	2b67      	cmp	r3, #103	; 0x67
 8004e08:	d113      	bne.n	8004e32 <d_print_comp+0x23c2>
 8004e0a:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8004e0e:	2b73      	cmp	r3, #115	; 0x73
 8004e10:	d10f      	bne.n	8004e32 <d_print_comp+0x23c2>
 8004e12:	f89a 3002 	ldrb.w	r3, [sl, #2]
 8004e16:	b963      	cbnz	r3, 8004e32 <d_print_comp+0x23c2>
 8004e18:	463a      	mov	r2, r7
 8004e1a:	4631      	mov	r1, r6
 8004e1c:	4620      	mov	r0, r4
 8004e1e:	f7fd fe27 	bl	8002a70 <d_print_comp>
 8004e22:	686b      	ldr	r3, [r5, #4]
 8004e24:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004e28:	9903      	ldr	r1, [sp, #12]
 8004e2a:	3b01      	subs	r3, #1
 8004e2c:	3a01      	subs	r2, #1
 8004e2e:	f7fd bf19 	b.w	8002c64 <d_print_comp+0x1f4>
 8004e32:	49a3      	ldr	r1, [pc, #652]	; (80050c0 <d_print_comp+0x2650>)
 8004e34:	4650      	mov	r0, sl
 8004e36:	f002 f873 	bl	8006f20 <strcmp>
 8004e3a:	4680      	mov	r8, r0
 8004e3c:	2800      	cmp	r0, #0
 8004e3e:	f47e a9c1 	bne.w	80031c4 <d_print_comp+0x754>
 8004e42:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004e46:	2bff      	cmp	r3, #255	; 0xff
 8004e48:	d10e      	bne.n	8004e68 <d_print_comp+0x23f8>
 8004e4a:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8004e4e:	4619      	mov	r1, r3
 8004e50:	4620      	mov	r0, r4
 8004e52:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004e56:	4798      	blx	r3
 8004e58:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004e5c:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8004e60:	1c5a      	adds	r2, r3, #1
 8004e62:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004e66:	4643      	mov	r3, r8
 8004e68:	1c58      	adds	r0, r3, #1
 8004e6a:	f04f 0c28 	mov.w	ip, #40	; 0x28
 8004e6e:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8004e72:	463a      	mov	r2, r7
 8004e74:	f804 c003 	strb.w	ip, [r4, r3]
 8004e78:	4631      	mov	r1, r6
 8004e7a:	4620      	mov	r0, r4
 8004e7c:	f884 c104 	strb.w	ip, [r4, #260]	; 0x104
 8004e80:	f7fd fdf6 	bl	8002a70 <d_print_comp>
 8004e84:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004e88:	2bff      	cmp	r3, #255	; 0xff
 8004e8a:	d10f      	bne.n	8004eac <d_print_comp+0x243c>
 8004e8c:	2600      	movs	r6, #0
 8004e8e:	4619      	mov	r1, r3
 8004e90:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004e94:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004e98:	4620      	mov	r0, r4
 8004e9a:	4798      	blx	r3
 8004e9c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004ea0:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004ea4:	1c5a      	adds	r2, r3, #1
 8004ea6:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004eaa:	4633      	mov	r3, r6
 8004eac:	1c59      	adds	r1, r3, #1
 8004eae:	2229      	movs	r2, #41	; 0x29
 8004eb0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004eb4:	54e2      	strb	r2, [r4, r3]
 8004eb6:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004eba:	686b      	ldr	r3, [r5, #4]
 8004ebc:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004ec0:	9903      	ldr	r1, [sp, #12]
 8004ec2:	3b01      	subs	r3, #1
 8004ec4:	3a01      	subs	r2, #1
 8004ec6:	f7fd becd 	b.w	8002c64 <d_print_comp+0x1f4>
 8004eca:	4f7e      	ldr	r7, [pc, #504]	; (80050c4 <d_print_comp+0x2654>)
 8004ecc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004ed0:	f107 0902 	add.w	r9, r7, #2
 8004ed4:	e00a      	b.n	8004eec <d_print_comp+0x247c>
 8004ed6:	460b      	mov	r3, r1
 8004ed8:	3101      	adds	r1, #1
 8004eda:	45b9      	cmp	r9, r7
 8004edc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004ee0:	f804 8003 	strb.w	r8, [r4, r3]
 8004ee4:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004ee8:	f43d af30 	beq.w	8002d4c <d_print_comp+0x2dc>
 8004eec:	29ff      	cmp	r1, #255	; 0xff
 8004eee:	f817 8b01 	ldrb.w	r8, [r7], #1
 8004ef2:	d1f0      	bne.n	8004ed6 <d_print_comp+0x2466>
 8004ef4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004ef8:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8004efc:	4620      	mov	r0, r4
 8004efe:	4798      	blx	r3
 8004f00:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004f04:	3301      	adds	r3, #1
 8004f06:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004f0a:	2101      	movs	r1, #1
 8004f0c:	2300      	movs	r3, #0
 8004f0e:	e7e4      	b.n	8004eda <d_print_comp+0x246a>
 8004f10:	4f6d      	ldr	r7, [pc, #436]	; (80050c8 <d_print_comp+0x2658>)
 8004f12:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004f16:	f107 0905 	add.w	r9, r7, #5
 8004f1a:	f04f 0a00 	mov.w	sl, #0
 8004f1e:	e00a      	b.n	8004f36 <d_print_comp+0x24c6>
 8004f20:	460b      	mov	r3, r1
 8004f22:	3101      	adds	r1, #1
 8004f24:	45b9      	cmp	r9, r7
 8004f26:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004f2a:	f804 8003 	strb.w	r8, [r4, r3]
 8004f2e:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004f32:	f43e a8a8 	beq.w	8003086 <d_print_comp+0x616>
 8004f36:	29ff      	cmp	r1, #255	; 0xff
 8004f38:	f817 8b01 	ldrb.w	r8, [r7], #1
 8004f3c:	d1f0      	bne.n	8004f20 <d_print_comp+0x24b0>
 8004f3e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004f42:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8004f46:	4620      	mov	r0, r4
 8004f48:	4798      	blx	r3
 8004f4a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004f4e:	3301      	adds	r3, #1
 8004f50:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004f54:	2101      	movs	r1, #1
 8004f56:	2300      	movs	r3, #0
 8004f58:	e7e4      	b.n	8004f24 <d_print_comp+0x24b4>
 8004f5a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004f5e:	2bff      	cmp	r3, #255	; 0xff
 8004f60:	d10f      	bne.n	8004f82 <d_print_comp+0x2512>
 8004f62:	2700      	movs	r7, #0
 8004f64:	4619      	mov	r1, r3
 8004f66:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8004f6a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004f6e:	4620      	mov	r0, r4
 8004f70:	4798      	blx	r3
 8004f72:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004f76:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8004f7a:	1c5a      	adds	r2, r3, #1
 8004f7c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004f80:	463b      	mov	r3, r7
 8004f82:	1c59      	adds	r1, r3, #1
 8004f84:	225b      	movs	r2, #91	; 0x5b
 8004f86:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004f8a:	54e2      	strb	r2, [r4, r3]
 8004f8c:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004f90:	68ea      	ldr	r2, [r5, #12]
 8004f92:	4631      	mov	r1, r6
 8004f94:	4620      	mov	r0, r4
 8004f96:	f7fd fd6b 	bl	8002a70 <d_print_comp>
 8004f9a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004f9e:	2bff      	cmp	r3, #255	; 0xff
 8004fa0:	d10f      	bne.n	8004fc2 <d_print_comp+0x2552>
 8004fa2:	2600      	movs	r6, #0
 8004fa4:	4619      	mov	r1, r3
 8004fa6:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004faa:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004fae:	4620      	mov	r0, r4
 8004fb0:	4798      	blx	r3
 8004fb2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004fb6:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004fba:	1c5a      	adds	r2, r3, #1
 8004fbc:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004fc0:	4633      	mov	r3, r6
 8004fc2:	1c59      	adds	r1, r3, #1
 8004fc4:	225d      	movs	r2, #93	; 0x5d
 8004fc6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004fca:	54e2      	strb	r2, [r4, r3]
 8004fcc:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004fd0:	686b      	ldr	r3, [r5, #4]
 8004fd2:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004fd6:	9903      	ldr	r1, [sp, #12]
 8004fd8:	3b01      	subs	r3, #1
 8004fda:	3a01      	subs	r2, #1
 8004fdc:	f7fd be42 	b.w	8002c64 <d_print_comp+0x1f4>
 8004fe0:	2f07      	cmp	r7, #7
 8004fe2:	f47d aecc 	bne.w	8002d7e <d_print_comp+0x30e>
 8004fe6:	68eb      	ldr	r3, [r5, #12]
 8004fe8:	7819      	ldrb	r1, [r3, #0]
 8004fea:	2900      	cmp	r1, #0
 8004fec:	f47d aec7 	bne.w	8002d7e <d_print_comp+0x30e>
 8004ff0:	68d9      	ldr	r1, [r3, #12]
 8004ff2:	2901      	cmp	r1, #1
 8004ff4:	f47d aec3 	bne.w	8002d7e <d_print_comp+0x30e>
 8004ff8:	f1bc 0f3d 	cmp.w	ip, #61	; 0x3d
 8004ffc:	f47d aebf 	bne.w	8002d7e <d_print_comp+0x30e>
 8005000:	689b      	ldr	r3, [r3, #8]
 8005002:	781b      	ldrb	r3, [r3, #0]
 8005004:	2b30      	cmp	r3, #48	; 0x30
 8005006:	f000 854a 	beq.w	8005a9e <d_print_comp+0x302e>
 800500a:	2b31      	cmp	r3, #49	; 0x31
 800500c:	f47d aeb7 	bne.w	8002d7e <d_print_comp+0x30e>
 8005010:	492e      	ldr	r1, [pc, #184]	; (80050cc <d_print_comp+0x265c>)
 8005012:	2204      	movs	r2, #4
 8005014:	4620      	mov	r0, r4
 8005016:	f7fb f9a9 	bl	800036c <d_append_buffer>
 800501a:	686b      	ldr	r3, [r5, #4]
 800501c:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005020:	9903      	ldr	r1, [sp, #12]
 8005022:	3b01      	subs	r3, #1
 8005024:	3a01      	subs	r2, #1
 8005026:	f7fd be1d 	b.w	8002c64 <d_print_comp+0x1f4>
 800502a:	2a01      	cmp	r2, #1
 800502c:	f63e a923 	bhi.w	8003276 <d_print_comp+0x806>
 8005030:	2f04      	cmp	r7, #4
 8005032:	f1ac 0b10 	sub.w	fp, ip, #16
 8005036:	f10c 0a10 	add.w	sl, ip, #16
 800503a:	f000 819d 	beq.w	8005378 <d_print_comp+0x2908>
 800503e:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
 8005042:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 8005046:	2300      	movs	r3, #0
 8005048:	f84a 8c1c 	str.w	r8, [sl, #-28]
 800504c:	f84a 3c18 	str.w	r3, [sl, #-24]
 8005050:	f8d8 8008 	ldr.w	r8, [r8, #8]
 8005054:	f8c4 c114 	str.w	ip, [r4, #276]	; 0x114
 8005058:	e94a eb05 	strd	lr, fp, [sl, #-20]
 800505c:	3701      	adds	r7, #1
 800505e:	46d4      	mov	ip, sl
 8005060:	f7fe b8f2 	b.w	8003248 <d_print_comp+0x7d8>
 8005064:	686b      	ldr	r3, [r5, #4]
 8005066:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800506a:	9903      	ldr	r1, [sp, #12]
 800506c:	3b01      	subs	r3, #1
 800506e:	3a01      	subs	r2, #1
 8005070:	f7fd bdf8 	b.w	8002c64 <d_print_comp+0x1f4>
 8005074:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005078:	42bb      	cmp	r3, r7
 800507a:	f47f aba7 	bne.w	80047cc <d_print_comp+0x1d5c>
 800507e:	686b      	ldr	r3, [r5, #4]
 8005080:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005084:	9903      	ldr	r1, [sp, #12]
 8005086:	3f02      	subs	r7, #2
 8005088:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 800508c:	3b01      	subs	r3, #1
 800508e:	3a01      	subs	r2, #1
 8005090:	f7fd bde8 	b.w	8002c64 <d_print_comp+0x1f4>
 8005094:	68aa      	ldr	r2, [r5, #8]
 8005096:	4631      	mov	r1, r6
 8005098:	4620      	mov	r0, r4
 800509a:	f7fd fce9 	bl	8002a70 <d_print_comp>
 800509e:	686b      	ldr	r3, [r5, #4]
 80050a0:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80050a4:	9903      	ldr	r1, [sp, #12]
 80050a6:	3b01      	subs	r3, #1
 80050a8:	3a01      	subs	r2, #1
 80050aa:	f7fd bddb 	b.w	8002c64 <d_print_comp+0x1f4>
 80050ae:	460f      	mov	r7, r1
 80050b0:	46a9      	mov	r9, r5
 80050b2:	f7fd be18 	b.w	8002ce6 <d_print_comp+0x276>
 80050b6:	bf00      	nop
 80050b8:	08013c80 	.word	0x08013c80
 80050bc:	08013c84 	.word	0x08013c84
 80050c0:	08013fac 	.word	0x08013fac
 80050c4:	08013ab4 	.word	0x08013ab4
 80050c8:	08013c4c 	.word	0x08013c4c
 80050cc:	08013cb8 	.word	0x08013cb8
 80050d0:	f026 0660 	bic.w	r6, r6, #96	; 0x60
 80050d4:	f7fd bf25 	b.w	8002f22 <d_print_comp+0x4b2>
 80050d8:	2301      	movs	r3, #1
 80050da:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80050de:	f7fd bfc6 	b.w	800306e <d_print_comp+0x5fe>
 80050e2:	ab06      	add	r3, sp, #24
 80050e4:	f8d4 7114 	ldr.w	r7, [r4, #276]	; 0x114
 80050e8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80050ec:	e9cd 5007 	strd	r5, r0, [sp, #28]
 80050f0:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 80050f4:	9706      	str	r7, [sp, #24]
 80050f6:	4631      	mov	r1, r6
 80050f8:	4620      	mov	r0, r4
 80050fa:	9309      	str	r3, [sp, #36]	; 0x24
 80050fc:	f7fd fcb8 	bl	8002a70 <d_print_comp>
 8005100:	9f08      	ldr	r7, [sp, #32]
 8005102:	9b06      	ldr	r3, [sp, #24]
 8005104:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8005108:	2f00      	cmp	r7, #0
 800510a:	f040 83ea 	bne.w	80058e2 <d_print_comp+0x2e72>
 800510e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005112:	2bff      	cmp	r3, #255	; 0xff
 8005114:	d10e      	bne.n	8005134 <d_print_comp+0x26c4>
 8005116:	4619      	mov	r1, r3
 8005118:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800511c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005120:	4620      	mov	r0, r4
 8005122:	4798      	blx	r3
 8005124:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005128:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 800512c:	1c5a      	adds	r2, r3, #1
 800512e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005132:	463b      	mov	r3, r7
 8005134:	2220      	movs	r2, #32
 8005136:	1c59      	adds	r1, r3, #1
 8005138:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800513c:	54e2      	strb	r2, [r4, r3]
 800513e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005142:	f7fd beee 	b.w	8002f22 <d_print_comp+0x4b2>
 8005146:	4fd2      	ldr	r7, [pc, #840]	; (8005490 <d_print_comp+0x2a20>)
 8005148:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800514c:	f107 0a0d 	add.w	sl, r7, #13
 8005150:	f04f 0b00 	mov.w	fp, #0
 8005154:	e009      	b.n	800516a <d_print_comp+0x26fa>
 8005156:	460b      	mov	r3, r1
 8005158:	3101      	adds	r1, #1
 800515a:	45ba      	cmp	sl, r7
 800515c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005160:	f804 9003 	strb.w	r9, [r4, r3]
 8005164:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8005168:	d011      	beq.n	800518e <d_print_comp+0x271e>
 800516a:	29ff      	cmp	r1, #255	; 0xff
 800516c:	f817 9b01 	ldrb.w	r9, [r7], #1
 8005170:	d1f1      	bne.n	8005156 <d_print_comp+0x26e6>
 8005172:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005176:	f884 b0ff 	strb.w	fp, [r4, #255]	; 0xff
 800517a:	4620      	mov	r0, r4
 800517c:	4798      	blx	r3
 800517e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005182:	3301      	adds	r3, #1
 8005184:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005188:	2101      	movs	r1, #1
 800518a:	2300      	movs	r3, #0
 800518c:	e7e5      	b.n	800515a <d_print_comp+0x26ea>
 800518e:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8005192:	49c0      	ldr	r1, [pc, #768]	; (8005494 <d_print_comp+0x2a24>)
 8005194:	3201      	adds	r2, #1
 8005196:	a806      	add	r0, sp, #24
 8005198:	f009 ffc2 	bl	800f120 <sprintf>
 800519c:	a806      	add	r0, sp, #24
 800519e:	f001 fec9 	bl	8006f34 <strlen>
 80051a2:	b318      	cbz	r0, 80051ec <d_print_comp+0x277c>
 80051a4:	af06      	add	r7, sp, #24
 80051a6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80051aa:	eb07 0900 	add.w	r9, r7, r0
 80051ae:	f04f 0b00 	mov.w	fp, #0
 80051b2:	e009      	b.n	80051c8 <d_print_comp+0x2758>
 80051b4:	460b      	mov	r3, r1
 80051b6:	3101      	adds	r1, #1
 80051b8:	45b9      	cmp	r9, r7
 80051ba:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80051be:	f804 a003 	strb.w	sl, [r4, r3]
 80051c2:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80051c6:	d011      	beq.n	80051ec <d_print_comp+0x277c>
 80051c8:	29ff      	cmp	r1, #255	; 0xff
 80051ca:	f817 ab01 	ldrb.w	sl, [r7], #1
 80051ce:	d1f1      	bne.n	80051b4 <d_print_comp+0x2744>
 80051d0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80051d4:	f884 b0ff 	strb.w	fp, [r4, #255]	; 0xff
 80051d8:	4620      	mov	r0, r4
 80051da:	4798      	blx	r3
 80051dc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80051e0:	3301      	adds	r3, #1
 80051e2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80051e6:	2101      	movs	r1, #1
 80051e8:	2300      	movs	r3, #0
 80051ea:	e7e5      	b.n	80051b8 <d_print_comp+0x2748>
 80051ec:	4faa      	ldr	r7, [pc, #680]	; (8005498 <d_print_comp+0x2a28>)
 80051ee:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80051f2:	f107 0a03 	add.w	sl, r7, #3
 80051f6:	f04f 0b00 	mov.w	fp, #0
 80051fa:	e009      	b.n	8005210 <d_print_comp+0x27a0>
 80051fc:	460b      	mov	r3, r1
 80051fe:	3101      	adds	r1, #1
 8005200:	45ba      	cmp	sl, r7
 8005202:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005206:	f804 9003 	strb.w	r9, [r4, r3]
 800520a:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 800520e:	d011      	beq.n	8005234 <d_print_comp+0x27c4>
 8005210:	29ff      	cmp	r1, #255	; 0xff
 8005212:	f817 9b01 	ldrb.w	r9, [r7], #1
 8005216:	d1f1      	bne.n	80051fc <d_print_comp+0x278c>
 8005218:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800521c:	f884 b0ff 	strb.w	fp, [r4, #255]	; 0xff
 8005220:	4620      	mov	r0, r4
 8005222:	4798      	blx	r3
 8005224:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005228:	3301      	adds	r3, #1
 800522a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800522e:	2101      	movs	r1, #1
 8005230:	2300      	movs	r3, #0
 8005232:	e7e5      	b.n	8005200 <d_print_comp+0x2790>
 8005234:	f8d8 8008 	ldr.w	r8, [r8, #8]
 8005238:	f7fd bd8f 	b.w	8002d5a <d_print_comp+0x2ea>
 800523c:	29ff      	cmp	r1, #255	; 0xff
 800523e:	f47f ad4d 	bne.w	8004cdc <d_print_comp+0x226c>
 8005242:	f04f 0800 	mov.w	r8, #0
 8005246:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800524a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800524e:	4620      	mov	r0, r4
 8005250:	4798      	blx	r3
 8005252:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005256:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 800525a:	3301      	adds	r3, #1
 800525c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005260:	e53c      	b.n	8004cdc <d_print_comp+0x226c>
 8005262:	2a05      	cmp	r2, #5
 8005264:	f200 8365 	bhi.w	8005932 <d_print_comp+0x2ec2>
 8005268:	3f57      	subs	r7, #87	; 0x57
 800526a:	f7ff bb41 	b.w	80048f0 <d_print_comp+0x1e80>
 800526e:	e9d4 c74c 	ldrd	ip, r7, [r4, #304]	; 0x130
 8005272:	2f00      	cmp	r7, #0
 8005274:	f340 81d1 	ble.w	800561a <d_print_comp+0x2baa>
 8005278:	46e6      	mov	lr, ip
 800527a:	4692      	mov	sl, r2
 800527c:	e004      	b.n	8005288 <d_print_comp+0x2818>
 800527e:	429f      	cmp	r7, r3
 8005280:	f10e 0e08 	add.w	lr, lr, #8
 8005284:	f000 81c8 	beq.w	8005618 <d_print_comp+0x2ba8>
 8005288:	f85c 2033 	ldr.w	r2, [ip, r3, lsl #3]
 800528c:	4591      	cmp	r9, r2
 800528e:	f103 0301 	add.w	r3, r3, #1
 8005292:	d1f4      	bne.n	800527e <d_print_comp+0x280e>
 8005294:	4603      	mov	r3, r0
 8005296:	e003      	b.n	80052a0 <d_print_comp+0x2830>
 8005298:	685b      	ldr	r3, [r3, #4]
 800529a:	2b00      	cmp	r3, #0
 800529c:	f000 8293 	beq.w	80057c6 <d_print_comp+0x2d56>
 80052a0:	681a      	ldr	r2, [r3, #0]
 80052a2:	4591      	cmp	r9, r2
 80052a4:	d003      	beq.n	80052ae <d_print_comp+0x283e>
 80052a6:	4295      	cmp	r5, r2
 80052a8:	d1f6      	bne.n	8005298 <d_print_comp+0x2828>
 80052aa:	4283      	cmp	r3, r0
 80052ac:	d0f4      	beq.n	8005298 <d_print_comp+0x2828>
 80052ae:	f109 0108 	add.w	r1, r9, #8
 80052b2:	4620      	mov	r0, r4
 80052b4:	f7fb fabc 	bl	8000830 <d_lookup_template_argument.isra.0>
 80052b8:	4681      	mov	r9, r0
 80052ba:	b1a0      	cbz	r0, 80052e6 <d_print_comp+0x2876>
 80052bc:	2700      	movs	r7, #0
 80052be:	f899 3000 	ldrb.w	r3, [r9]
 80052c2:	2b2f      	cmp	r3, #47	; 0x2f
 80052c4:	f47d ae11 	bne.w	8002eea <d_print_comp+0x47a>
 80052c8:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 80052cc:	2900      	cmp	r1, #0
 80052ce:	f6ff aaa3 	blt.w	8004818 <d_print_comp+0x1da8>
 80052d2:	4648      	mov	r0, r9
 80052d4:	f7fb fa9a 	bl	800080c <d_index_template_argument.part.0>
 80052d8:	4681      	mov	r9, r0
 80052da:	2800      	cmp	r0, #0
 80052dc:	f47d ae05 	bne.w	8002eea <d_print_comp+0x47a>
 80052e0:	b10f      	cbz	r7, 80052e6 <d_print_comp+0x2876>
 80052e2:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
 80052e6:	2301      	movs	r3, #1
 80052e8:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80052ec:	686b      	ldr	r3, [r5, #4]
 80052ee:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80052f2:	9903      	ldr	r1, [sp, #12]
 80052f4:	3b01      	subs	r3, #1
 80052f6:	3a01      	subs	r2, #1
 80052f8:	f7fd bcb4 	b.w	8002c64 <d_print_comp+0x1f4>
 80052fc:	68aa      	ldr	r2, [r5, #8]
 80052fe:	f105 030c 	add.w	r3, r5, #12
 8005302:	4631      	mov	r1, r6
 8005304:	4620      	mov	r0, r4
 8005306:	f001 fa85 	bl	8006814 <d_maybe_print_fold_expression.isra.0>
 800530a:	4607      	mov	r7, r0
 800530c:	2800      	cmp	r0, #0
 800530e:	f040 824a 	bne.w	80057a6 <d_print_comp+0x2d36>
 8005312:	e9d5 a202 	ldrd	sl, r2, [r5, #8]
 8005316:	f8da 1008 	ldr.w	r1, [sl, #8]
 800531a:	68d3      	ldr	r3, [r2, #12]
 800531c:	6808      	ldr	r0, [r1, #0]
 800531e:	495f      	ldr	r1, [pc, #380]	; (800549c <d_print_comp+0x2a2c>)
 8005320:	f8d2 b008 	ldr.w	fp, [r2, #8]
 8005324:	e9d3 9802 	ldrd	r9, r8, [r3, #8]
 8005328:	f001 fdfa 	bl	8006f20 <strcmp>
 800532c:	2800      	cmp	r0, #0
 800532e:	f040 81fe 	bne.w	800572e <d_print_comp+0x2cbe>
 8005332:	465a      	mov	r2, fp
 8005334:	4631      	mov	r1, r6
 8005336:	4620      	mov	r0, r4
 8005338:	f001 fa1c 	bl	8006774 <d_print_subexpr>
 800533c:	4652      	mov	r2, sl
 800533e:	4631      	mov	r1, r6
 8005340:	4620      	mov	r0, r4
 8005342:	f001 f9db 	bl	80066fc <d_print_expr_op>
 8005346:	464a      	mov	r2, r9
 8005348:	4631      	mov	r1, r6
 800534a:	4620      	mov	r0, r4
 800534c:	f001 fa12 	bl	8006774 <d_print_subexpr>
 8005350:	4953      	ldr	r1, [pc, #332]	; (80054a0 <d_print_comp+0x2a30>)
 8005352:	2203      	movs	r2, #3
 8005354:	4620      	mov	r0, r4
 8005356:	f7fb f809 	bl	800036c <d_append_buffer>
 800535a:	4642      	mov	r2, r8
 800535c:	4631      	mov	r1, r6
 800535e:	4620      	mov	r0, r4
 8005360:	f001 fa08 	bl	8006774 <d_print_subexpr>
 8005364:	686b      	ldr	r3, [r5, #4]
 8005366:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800536a:	9903      	ldr	r1, [sp, #12]
 800536c:	3b01      	subs	r3, #1
 800536e:	3a01      	subs	r2, #1
 8005370:	f7fd bc78 	b.w	8002c64 <d_print_comp+0x1f4>
 8005374:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8005378:	2301      	movs	r3, #1
 800537a:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800537e:	f7fd bfb2 	b.w	80032e6 <d_print_comp+0x876>
 8005382:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 8005386:	2900      	cmp	r1, #0
 8005388:	f6ff ab52 	blt.w	8004a30 <d_print_comp+0x1fc0>
 800538c:	f7fb fa3e 	bl	800080c <d_index_template_argument.part.0>
 8005390:	4602      	mov	r2, r0
 8005392:	2800      	cmp	r0, #0
 8005394:	f47f ab4c 	bne.w	8004a30 <d_print_comp+0x1fc0>
 8005398:	2301      	movs	r3, #1
 800539a:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800539e:	686b      	ldr	r3, [r5, #4]
 80053a0:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80053a4:	9903      	ldr	r1, [sp, #12]
 80053a6:	3b01      	subs	r3, #1
 80053a8:	3a01      	subs	r2, #1
 80053aa:	f7fd bc5b 	b.w	8002c64 <d_print_comp+0x1f4>
 80053ae:	4939      	ldr	r1, [pc, #228]	; (8005494 <d_print_comp+0x2a24>)
 80053b0:	4632      	mov	r2, r6
 80053b2:	a806      	add	r0, sp, #24
 80053b4:	f009 feb4 	bl	800f120 <sprintf>
 80053b8:	a806      	add	r0, sp, #24
 80053ba:	f001 fdbb 	bl	8006f34 <strlen>
 80053be:	b308      	cbz	r0, 8005404 <d_print_comp+0x2994>
 80053c0:	ae06      	add	r6, sp, #24
 80053c2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80053c6:	1837      	adds	r7, r6, r0
 80053c8:	f04f 0900 	mov.w	r9, #0
 80053cc:	e009      	b.n	80053e2 <d_print_comp+0x2972>
 80053ce:	460b      	mov	r3, r1
 80053d0:	1c59      	adds	r1, r3, #1
 80053d2:	42b7      	cmp	r7, r6
 80053d4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80053d8:	f804 8003 	strb.w	r8, [r4, r3]
 80053dc:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80053e0:	d010      	beq.n	8005404 <d_print_comp+0x2994>
 80053e2:	29ff      	cmp	r1, #255	; 0xff
 80053e4:	f816 8b01 	ldrb.w	r8, [r6], #1
 80053e8:	d1f1      	bne.n	80053ce <d_print_comp+0x295e>
 80053ea:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80053ee:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80053f2:	4620      	mov	r0, r4
 80053f4:	4798      	blx	r3
 80053f6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80053fa:	3301      	adds	r3, #1
 80053fc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005400:	2300      	movs	r3, #0
 8005402:	e7e5      	b.n	80053d0 <d_print_comp+0x2960>
 8005404:	686b      	ldr	r3, [r5, #4]
 8005406:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800540a:	9903      	ldr	r1, [sp, #12]
 800540c:	3b01      	subs	r3, #1
 800540e:	3a01      	subs	r2, #1
 8005410:	f7fd bc28 	b.w	8002c64 <d_print_comp+0x1f4>
 8005414:	686b      	ldr	r3, [r5, #4]
 8005416:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800541a:	9903      	ldr	r1, [sp, #12]
 800541c:	3b01      	subs	r3, #1
 800541e:	3a01      	subs	r2, #1
 8005420:	f7fd bc20 	b.w	8002c64 <d_print_comp+0x1f4>
 8005424:	781b      	ldrb	r3, [r3, #0]
 8005426:	f1a3 0163 	sub.w	r1, r3, #99	; 0x63
 800542a:	2901      	cmp	r1, #1
 800542c:	d903      	bls.n	8005436 <d_print_comp+0x29c6>
 800542e:	3b72      	subs	r3, #114	; 0x72
 8005430:	2b01      	cmp	r3, #1
 8005432:	f63d aba5 	bhi.w	8002b80 <d_print_comp+0x110>
 8005436:	4631      	mov	r1, r6
 8005438:	4620      	mov	r0, r4
 800543a:	f001 f95f 	bl	80066fc <d_print_expr_op>
 800543e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005442:	2bff      	cmp	r3, #255	; 0xff
 8005444:	d10f      	bne.n	8005466 <d_print_comp+0x29f6>
 8005446:	2700      	movs	r7, #0
 8005448:	4619      	mov	r1, r3
 800544a:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800544e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005452:	4620      	mov	r0, r4
 8005454:	4798      	blx	r3
 8005456:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800545a:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 800545e:	1c5a      	adds	r2, r3, #1
 8005460:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005464:	463b      	mov	r3, r7
 8005466:	1c59      	adds	r1, r3, #1
 8005468:	223c      	movs	r2, #60	; 0x3c
 800546a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800546e:	54e2      	strb	r2, [r4, r3]
 8005470:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005474:	68eb      	ldr	r3, [r5, #12]
 8005476:	4f0b      	ldr	r7, [pc, #44]	; (80054a4 <d_print_comp+0x2a34>)
 8005478:	689a      	ldr	r2, [r3, #8]
 800547a:	4631      	mov	r1, r6
 800547c:	4620      	mov	r0, r4
 800547e:	f7fd faf7 	bl	8002a70 <d_print_comp>
 8005482:	f107 0902 	add.w	r9, r7, #2
 8005486:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800548a:	f04f 0a00 	mov.w	sl, #0
 800548e:	e015      	b.n	80054bc <d_print_comp+0x2a4c>
 8005490:	08013ab8 	.word	0x08013ab8
 8005494:	08013ac8 	.word	0x08013ac8
 8005498:	08013acc 	.word	0x08013acc
 800549c:	08013c94 	.word	0x08013c94
 80054a0:	08013c98 	.word	0x08013c98
 80054a4:	08013c88 	.word	0x08013c88
 80054a8:	460b      	mov	r3, r1
 80054aa:	1c59      	adds	r1, r3, #1
 80054ac:	45b9      	cmp	r9, r7
 80054ae:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80054b2:	f804 8003 	strb.w	r8, [r4, r3]
 80054b6:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80054ba:	d010      	beq.n	80054de <d_print_comp+0x2a6e>
 80054bc:	29ff      	cmp	r1, #255	; 0xff
 80054be:	f817 8b01 	ldrb.w	r8, [r7], #1
 80054c2:	d1f1      	bne.n	80054a8 <d_print_comp+0x2a38>
 80054c4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80054c8:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 80054cc:	4620      	mov	r0, r4
 80054ce:	4798      	blx	r3
 80054d0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80054d4:	3301      	adds	r3, #1
 80054d6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80054da:	2300      	movs	r3, #0
 80054dc:	e7e5      	b.n	80054aa <d_print_comp+0x2a3a>
 80054de:	68eb      	ldr	r3, [r5, #12]
 80054e0:	4631      	mov	r1, r6
 80054e2:	68da      	ldr	r2, [r3, #12]
 80054e4:	4620      	mov	r0, r4
 80054e6:	f7fd fac3 	bl	8002a70 <d_print_comp>
 80054ea:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80054ee:	2bff      	cmp	r3, #255	; 0xff
 80054f0:	d10f      	bne.n	8005512 <d_print_comp+0x2aa2>
 80054f2:	2600      	movs	r6, #0
 80054f4:	4619      	mov	r1, r3
 80054f6:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80054fa:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80054fe:	4620      	mov	r0, r4
 8005500:	4798      	blx	r3
 8005502:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005506:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800550a:	1c5a      	adds	r2, r3, #1
 800550c:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005510:	4633      	mov	r3, r6
 8005512:	1c59      	adds	r1, r3, #1
 8005514:	2229      	movs	r2, #41	; 0x29
 8005516:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800551a:	54e2      	strb	r2, [r4, r3]
 800551c:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005520:	686b      	ldr	r3, [r5, #4]
 8005522:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005526:	9903      	ldr	r1, [sp, #12]
 8005528:	3b01      	subs	r3, #1
 800552a:	3a01      	subs	r2, #1
 800552c:	f7fd bb9a 	b.w	8002c64 <d_print_comp+0x1f4>
 8005530:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8005534:	f7fd bb9f 	b.w	8002c76 <d_print_comp+0x206>
 8005538:	49b5      	ldr	r1, [pc, #724]	; (8005810 <d_print_comp+0x2da0>)
 800553a:	4640      	mov	r0, r8
 800553c:	f001 fcf0 	bl	8006f20 <strcmp>
 8005540:	2800      	cmp	r0, #0
 8005542:	f040 81c8 	bne.w	80058d6 <d_print_comp+0x2e66>
 8005546:	68eb      	ldr	r3, [r5, #12]
 8005548:	4631      	mov	r1, r6
 800554a:	68da      	ldr	r2, [r3, #12]
 800554c:	4620      	mov	r0, r4
 800554e:	f001 f911 	bl	8006774 <d_print_subexpr>
 8005552:	f7fd bb7c 	b.w	8002c4e <d_print_comp+0x1de>
 8005556:	689a      	ldr	r2, [r3, #8]
 8005558:	6891      	ldr	r1, [r2, #8]
 800555a:	2901      	cmp	r1, #1
 800555c:	f47d ab1f 	bne.w	8002b9e <d_print_comp+0x12e>
 8005560:	6852      	ldr	r2, [r2, #4]
 8005562:	7812      	ldrb	r2, [r2, #0]
 8005564:	2a3e      	cmp	r2, #62	; 0x3e
 8005566:	f47d ab1a 	bne.w	8002b9e <d_print_comp+0x12e>
 800556a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800556e:	2bff      	cmp	r3, #255	; 0xff
 8005570:	d10e      	bne.n	8005590 <d_print_comp+0x2b20>
 8005572:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8005576:	4619      	mov	r1, r3
 8005578:	4620      	mov	r0, r4
 800557a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800557e:	4798      	blx	r3
 8005580:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005584:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8005588:	1c5a      	adds	r2, r3, #1
 800558a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 800558e:	463b      	mov	r3, r7
 8005590:	1c59      	adds	r1, r3, #1
 8005592:	2228      	movs	r2, #40	; 0x28
 8005594:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005598:	54e2      	strb	r2, [r4, r3]
 800559a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800559e:	68ab      	ldr	r3, [r5, #8]
 80055a0:	f7fd bafd 	b.w	8002b9e <d_print_comp+0x12e>
 80055a4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80055a8:	2bff      	cmp	r3, #255	; 0xff
 80055aa:	d10f      	bne.n	80055cc <d_print_comp+0x2b5c>
 80055ac:	2600      	movs	r6, #0
 80055ae:	4619      	mov	r1, r3
 80055b0:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80055b4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80055b8:	4620      	mov	r0, r4
 80055ba:	4798      	blx	r3
 80055bc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80055c0:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80055c4:	1c5a      	adds	r2, r3, #1
 80055c6:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80055ca:	4633      	mov	r3, r6
 80055cc:	2220      	movs	r2, #32
 80055ce:	1c59      	adds	r1, r3, #1
 80055d0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80055d4:	54e2      	strb	r2, [r4, r3]
 80055d6:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80055da:	f7ff bb17 	b.w	8004c0c <d_print_comp+0x219c>
 80055de:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80055e2:	2bff      	cmp	r3, #255	; 0xff
 80055e4:	d10f      	bne.n	8005606 <d_print_comp+0x2b96>
 80055e6:	2700      	movs	r7, #0
 80055e8:	4619      	mov	r1, r3
 80055ea:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 80055ee:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80055f2:	4620      	mov	r0, r4
 80055f4:	4798      	blx	r3
 80055f6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80055fa:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 80055fe:	1c5a      	adds	r2, r3, #1
 8005600:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005604:	463b      	mov	r3, r7
 8005606:	2220      	movs	r2, #32
 8005608:	1c59      	adds	r1, r3, #1
 800560a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800560e:	54e2      	strb	r2, [r4, r3]
 8005610:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005614:	f7ff bad4 	b.w	8004bc0 <d_print_comp+0x2150>
 8005618:	4652      	mov	r2, sl
 800561a:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800561e:	429f      	cmp	r7, r3
 8005620:	f280 81aa 	bge.w	8005978 <d_print_comp+0x2f08>
 8005624:	1c7b      	adds	r3, r7, #1
 8005626:	eb0c 0ec7 	add.w	lr, ip, r7, lsl #3
 800562a:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
 800562e:	f84c 9037 	str.w	r9, [ip, r7, lsl #3]
 8005632:	f8d4 7110 	ldr.w	r7, [r4, #272]	; 0x110
 8005636:	f10e 0e04 	add.w	lr, lr, #4
 800563a:	2f00      	cmp	r7, #0
 800563c:	f000 81a3 	beq.w	8005986 <d_print_comp+0x2f16>
 8005640:	e9d4 0350 	ldrd	r0, r3, [r4, #320]	; 0x140
 8005644:	4298      	cmp	r0, r3
 8005646:	f100 0c01 	add.w	ip, r0, #1
 800564a:	f280 8195 	bge.w	8005978 <d_print_comp+0x2f08>
 800564e:	f8d4 313c 	ldr.w	r3, [r4, #316]	; 0x13c
 8005652:	f8c4 c140 	str.w	ip, [r4, #320]	; 0x140
 8005656:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 800565a:	6878      	ldr	r0, [r7, #4]
 800565c:	6058      	str	r0, [r3, #4]
 800565e:	f8ce 3000 	str.w	r3, [lr]
 8005662:	683f      	ldr	r7, [r7, #0]
 8005664:	469e      	mov	lr, r3
 8005666:	e7e8      	b.n	800563a <d_print_comp+0x2bca>
 8005668:	68aa      	ldr	r2, [r5, #8]
 800566a:	4631      	mov	r1, r6
 800566c:	4620      	mov	r0, r4
 800566e:	f001 f881 	bl	8006774 <d_print_subexpr>
 8005672:	4968      	ldr	r1, [pc, #416]	; (8005814 <d_print_comp+0x2da4>)
 8005674:	2203      	movs	r2, #3
 8005676:	4620      	mov	r0, r4
 8005678:	f7fa fe78 	bl	800036c <d_append_buffer>
 800567c:	686b      	ldr	r3, [r5, #4]
 800567e:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005682:	9903      	ldr	r1, [sp, #12]
 8005684:	3b01      	subs	r3, #1
 8005686:	3a01      	subs	r2, #1
 8005688:	f7fd baec 	b.w	8002c64 <d_print_comp+0x1f4>
 800568c:	4962      	ldr	r1, [pc, #392]	; (8005818 <d_print_comp+0x2da8>)
 800568e:	f8d9 0008 	ldr.w	r0, [r9, #8]
 8005692:	f009 fd65 	bl	800f160 <strncmp>
 8005696:	2800      	cmp	r0, #0
 8005698:	f47e aa9a 	bne.w	8003bd0 <d_print_comp+0x1160>
 800569c:	68ea      	ldr	r2, [r5, #12]
 800569e:	4631      	mov	r1, r6
 80056a0:	4620      	mov	r0, r4
 80056a2:	f7fd f9e5 	bl	8002a70 <d_print_comp>
 80056a6:	495d      	ldr	r1, [pc, #372]	; (800581c <d_print_comp+0x2dac>)
 80056a8:	2202      	movs	r2, #2
 80056aa:	4620      	mov	r0, r4
 80056ac:	f7fa fe5e 	bl	800036c <d_append_buffer>
 80056b0:	f7fe bad3 	b.w	8003c5a <d_print_comp+0x11ea>
 80056b4:	689b      	ldr	r3, [r3, #8]
 80056b6:	689a      	ldr	r2, [r3, #8]
 80056b8:	2a01      	cmp	r2, #1
 80056ba:	f47d aacd 	bne.w	8002c58 <d_print_comp+0x1e8>
 80056be:	685b      	ldr	r3, [r3, #4]
 80056c0:	781b      	ldrb	r3, [r3, #0]
 80056c2:	2b3e      	cmp	r3, #62	; 0x3e
 80056c4:	f47d aac8 	bne.w	8002c58 <d_print_comp+0x1e8>
 80056c8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80056cc:	2bff      	cmp	r3, #255	; 0xff
 80056ce:	d10f      	bne.n	80056f0 <d_print_comp+0x2c80>
 80056d0:	2600      	movs	r6, #0
 80056d2:	4619      	mov	r1, r3
 80056d4:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80056d8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80056dc:	4620      	mov	r0, r4
 80056de:	4798      	blx	r3
 80056e0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80056e4:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80056e8:	1c5a      	adds	r2, r3, #1
 80056ea:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80056ee:	4633      	mov	r3, r6
 80056f0:	1c59      	adds	r1, r3, #1
 80056f2:	2229      	movs	r2, #41	; 0x29
 80056f4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80056f8:	54e2      	strb	r2, [r4, r3]
 80056fa:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80056fe:	686b      	ldr	r3, [r5, #4]
 8005700:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005704:	9903      	ldr	r1, [sp, #12]
 8005706:	3b01      	subs	r3, #1
 8005708:	3a01      	subs	r2, #1
 800570a:	f7fd baab 	b.w	8002c64 <d_print_comp+0x1f4>
 800570e:	686b      	ldr	r3, [r5, #4]
 8005710:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005714:	9903      	ldr	r1, [sp, #12]
 8005716:	3b01      	subs	r3, #1
 8005718:	3a01      	subs	r2, #1
 800571a:	f7fd baa3 	b.w	8002c64 <d_print_comp+0x1f4>
 800571e:	686b      	ldr	r3, [r5, #4]
 8005720:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005724:	9903      	ldr	r1, [sp, #12]
 8005726:	3b01      	subs	r3, #1
 8005728:	3a01      	subs	r2, #1
 800572a:	f7fd ba9b 	b.w	8002c64 <d_print_comp+0x1f4>
 800572e:	493c      	ldr	r1, [pc, #240]	; (8005820 <d_print_comp+0x2db0>)
 8005730:	2204      	movs	r2, #4
 8005732:	4620      	mov	r0, r4
 8005734:	f7fa fe1a 	bl	800036c <d_append_buffer>
 8005738:	f8db 3008 	ldr.w	r3, [fp, #8]
 800573c:	b1f3      	cbz	r3, 800577c <d_print_comp+0x2d0c>
 800573e:	465a      	mov	r2, fp
 8005740:	4631      	mov	r1, r6
 8005742:	4620      	mov	r0, r4
 8005744:	f001 f816 	bl	8006774 <d_print_subexpr>
 8005748:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800574c:	2bff      	cmp	r3, #255	; 0xff
 800574e:	d10e      	bne.n	800576e <d_print_comp+0x2cfe>
 8005750:	4619      	mov	r1, r3
 8005752:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005756:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800575a:	4620      	mov	r0, r4
 800575c:	4798      	blx	r3
 800575e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005762:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8005766:	1c5a      	adds	r2, r3, #1
 8005768:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 800576c:	463b      	mov	r3, r7
 800576e:	2220      	movs	r2, #32
 8005770:	1c59      	adds	r1, r3, #1
 8005772:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005776:	54e2      	strb	r2, [r4, r3]
 8005778:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800577c:	464a      	mov	r2, r9
 800577e:	4631      	mov	r1, r6
 8005780:	4620      	mov	r0, r4
 8005782:	f7fd f975 	bl	8002a70 <d_print_comp>
 8005786:	f1b8 0f00 	cmp.w	r8, #0
 800578a:	d014      	beq.n	80057b6 <d_print_comp+0x2d46>
 800578c:	4642      	mov	r2, r8
 800578e:	4631      	mov	r1, r6
 8005790:	4620      	mov	r0, r4
 8005792:	f000 ffef 	bl	8006774 <d_print_subexpr>
 8005796:	686b      	ldr	r3, [r5, #4]
 8005798:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800579c:	9903      	ldr	r1, [sp, #12]
 800579e:	3b01      	subs	r3, #1
 80057a0:	3a01      	subs	r2, #1
 80057a2:	f7fd ba5f 	b.w	8002c64 <d_print_comp+0x1f4>
 80057a6:	686b      	ldr	r3, [r5, #4]
 80057a8:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80057ac:	9903      	ldr	r1, [sp, #12]
 80057ae:	3b01      	subs	r3, #1
 80057b0:	3a01      	subs	r2, #1
 80057b2:	f7fd ba57 	b.w	8002c64 <d_print_comp+0x1f4>
 80057b6:	686b      	ldr	r3, [r5, #4]
 80057b8:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80057bc:	9903      	ldr	r1, [sp, #12]
 80057be:	3b01      	subs	r3, #1
 80057c0:	3a01      	subs	r2, #1
 80057c2:	f7fd ba4f 	b.w	8002c64 <d_print_comp+0x1f4>
 80057c6:	f8de 3004 	ldr.w	r3, [lr, #4]
 80057ca:	f8d4 8110 	ldr.w	r8, [r4, #272]	; 0x110
 80057ce:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80057d2:	f109 0108 	add.w	r1, r9, #8
 80057d6:	4620      	mov	r0, r4
 80057d8:	f7fb f82a 	bl	8000830 <d_lookup_template_argument.isra.0>
 80057dc:	4681      	mov	r9, r0
 80057de:	2800      	cmp	r0, #0
 80057e0:	f43f ad7f 	beq.w	80052e2 <d_print_comp+0x2872>
 80057e4:	2701      	movs	r7, #1
 80057e6:	e56a      	b.n	80052be <d_print_comp+0x284e>
 80057e8:	68d3      	ldr	r3, [r2, #12]
 80057ea:	781b      	ldrb	r3, [r3, #0]
 80057ec:	2b29      	cmp	r3, #41	; 0x29
 80057ee:	bf1c      	itt	ne
 80057f0:	2301      	movne	r3, #1
 80057f2:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
 80057f6:	6892      	ldr	r2, [r2, #8]
 80057f8:	4631      	mov	r1, r6
 80057fa:	4620      	mov	r0, r4
 80057fc:	f000 ffba 	bl	8006774 <d_print_subexpr>
 8005800:	f7fd b9de 	b.w	8002bc0 <d_print_comp+0x150>
 8005804:	4639      	mov	r1, r7
 8005806:	4620      	mov	r0, r4
 8005808:	f7fb f822 	bl	8000850 <d_find_pack>
 800580c:	b980      	cbnz	r0, 8005830 <d_print_comp+0x2dc0>
 800580e:	e012      	b.n	8005836 <d_print_comp+0x2dc6>
 8005810:	08013c8c 	.word	0x08013c8c
 8005814:	08013cdc 	.word	0x08013cdc
 8005818:	08013ad0 	.word	0x08013ad0
 800581c:	08013ad8 	.word	0x08013ad8
 8005820:	08013c9c 	.word	0x08013c9c
 8005824:	6883      	ldr	r3, [r0, #8]
 8005826:	b133      	cbz	r3, 8005836 <d_print_comp+0x2dc6>
 8005828:	68c0      	ldr	r0, [r0, #12]
 800582a:	f109 0901 	add.w	r9, r9, #1
 800582e:	b110      	cbz	r0, 8005836 <d_print_comp+0x2dc6>
 8005830:	7803      	ldrb	r3, [r0, #0]
 8005832:	2b2f      	cmp	r3, #47	; 0x2f
 8005834:	d0f6      	beq.n	8005824 <d_print_comp+0x2db4>
 8005836:	49a4      	ldr	r1, [pc, #656]	; (8005ac8 <d_print_comp+0x3058>)
 8005838:	464a      	mov	r2, r9
 800583a:	a806      	add	r0, sp, #24
 800583c:	f009 fc70 	bl	800f120 <sprintf>
 8005840:	a806      	add	r0, sp, #24
 8005842:	f001 fb77 	bl	8006f34 <strlen>
 8005846:	b300      	cbz	r0, 800588a <d_print_comp+0x2e1a>
 8005848:	ae06      	add	r6, sp, #24
 800584a:	1837      	adds	r7, r6, r0
 800584c:	f04f 0800 	mov.w	r8, #0
 8005850:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005854:	f816 9b01 	ldrb.w	r9, [r6], #1
 8005858:	29ff      	cmp	r1, #255	; 0xff
 800585a:	d10d      	bne.n	8005878 <d_print_comp+0x2e08>
 800585c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005860:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005864:	4620      	mov	r0, r4
 8005866:	4798      	blx	r3
 8005868:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800586c:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8005870:	3301      	adds	r3, #1
 8005872:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005876:	2100      	movs	r1, #0
 8005878:	1c4b      	adds	r3, r1, #1
 800587a:	42b7      	cmp	r7, r6
 800587c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005880:	f804 9001 	strb.w	r9, [r4, r1]
 8005884:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8005888:	d1e2      	bne.n	8005850 <d_print_comp+0x2de0>
 800588a:	686b      	ldr	r3, [r5, #4]
 800588c:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005890:	9903      	ldr	r1, [sp, #12]
 8005892:	3b01      	subs	r3, #1
 8005894:	3a01      	subs	r2, #1
 8005896:	f7fd b9e5 	b.w	8002c64 <d_print_comp+0x1f4>
 800589a:	68ba      	ldr	r2, [r7, #8]
 800589c:	4631      	mov	r1, r6
 800589e:	4620      	mov	r0, r4
 80058a0:	f000 ff68 	bl	8006774 <d_print_subexpr>
 80058a4:	4642      	mov	r2, r8
 80058a6:	4631      	mov	r1, r6
 80058a8:	4620      	mov	r0, r4
 80058aa:	f000 ff27 	bl	80066fc <d_print_expr_op>
 80058ae:	686b      	ldr	r3, [r5, #4]
 80058b0:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80058b4:	9903      	ldr	r1, [sp, #12]
 80058b6:	3b01      	subs	r3, #1
 80058b8:	3a01      	subs	r2, #1
 80058ba:	f7fd b9d3 	b.w	8002c64 <d_print_comp+0x1f4>
 80058be:	68bb      	ldr	r3, [r7, #8]
 80058c0:	781a      	ldrb	r2, [r3, #0]
 80058c2:	2a01      	cmp	r2, #1
 80058c4:	f47f aa60 	bne.w	8004d88 <d_print_comp+0x2318>
 80058c8:	68fa      	ldr	r2, [r7, #12]
 80058ca:	7812      	ldrb	r2, [r2, #0]
 80058cc:	2a29      	cmp	r2, #41	; 0x29
 80058ce:	bf08      	it	eq
 80058d0:	461f      	moveq	r7, r3
 80058d2:	f7ff ba59 	b.w	8004d88 <d_print_comp+0x2318>
 80058d6:	463a      	mov	r2, r7
 80058d8:	4631      	mov	r1, r6
 80058da:	4620      	mov	r0, r4
 80058dc:	f000 ff0e 	bl	80066fc <d_print_expr_op>
 80058e0:	e631      	b.n	8005546 <d_print_comp+0x2ad6>
 80058e2:	686b      	ldr	r3, [r5, #4]
 80058e4:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80058e8:	9903      	ldr	r1, [sp, #12]
 80058ea:	3b01      	subs	r3, #1
 80058ec:	3a01      	subs	r2, #1
 80058ee:	f7fd b9b9 	b.w	8002c64 <d_print_comp+0x1f4>
 80058f2:	f8d8 8008 	ldr.w	r8, [r8, #8]
 80058f6:	f1b8 0f00 	cmp.w	r8, #0
 80058fa:	f43f ad3d 	beq.w	8005378 <d_print_comp+0x2908>
 80058fe:	f7fd bca1 	b.w	8003244 <d_print_comp+0x7d4>
 8005902:	68ea      	ldr	r2, [r5, #12]
 8005904:	4631      	mov	r1, r6
 8005906:	4620      	mov	r0, r4
 8005908:	f7fd f8b2 	bl	8002a70 <d_print_comp>
 800590c:	9b08      	ldr	r3, [sp, #32]
 800590e:	9a00      	ldr	r2, [sp, #0]
 8005910:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8005914:	2b00      	cmp	r3, #0
 8005916:	f43d aba2 	beq.w	800305e <d_print_comp+0x5ee>
 800591a:	f7fd bba8 	b.w	800306e <d_print_comp+0x5fe>
 800591e:	275f      	movs	r7, #95	; 0x5f
 8005920:	f7fe bfc8 	b.w	80048b4 <d_print_comp+0x1e44>
 8005924:	4642      	mov	r2, r8
 8005926:	4631      	mov	r1, r6
 8005928:	4620      	mov	r0, r4
 800592a:	f000 fee7 	bl	80066fc <d_print_expr_op>
 800592e:	f7fd bc49 	b.w	80031c4 <d_print_comp+0x754>
 8005932:	45d0      	cmp	r8, sl
 8005934:	d9f3      	bls.n	800591e <d_print_comp+0x2eae>
 8005936:	2f5f      	cmp	r7, #95	; 0x5f
 8005938:	d1f1      	bne.n	800591e <d_print_comp+0x2eae>
 800593a:	28ff      	cmp	r0, #255	; 0xff
 800593c:	f63e afba 	bhi.w	80048b4 <d_print_comp+0x1e44>
 8005940:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005944:	29ff      	cmp	r1, #255	; 0xff
 8005946:	b2c7      	uxtb	r7, r0
 8005948:	d10d      	bne.n	8005966 <d_print_comp+0x2ef6>
 800594a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800594e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005952:	4620      	mov	r0, r4
 8005954:	4798      	blx	r3
 8005956:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800595a:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 800595e:	3301      	adds	r3, #1
 8005960:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005964:	2100      	movs	r1, #0
 8005966:	1c4b      	adds	r3, r1, #1
 8005968:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800596c:	4656      	mov	r6, sl
 800596e:	5467      	strb	r7, [r4, r1]
 8005970:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8005974:	f7fe bf93 	b.w	800489e <d_print_comp+0x1e2e>
 8005978:	2301      	movs	r3, #1
 800597a:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800597e:	686b      	ldr	r3, [r5, #4]
 8005980:	3b01      	subs	r3, #1
 8005982:	f7fd b96f 	b.w	8002c64 <d_print_comp+0x1f4>
 8005986:	f8ce 7000 	str.w	r7, [lr]
 800598a:	e490      	b.n	80052ae <d_print_comp+0x283e>
 800598c:	494f      	ldr	r1, [pc, #316]	; (8005acc <d_print_comp+0x305c>)
 800598e:	2203      	movs	r2, #3
 8005990:	4620      	mov	r0, r4
 8005992:	f7fa fceb 	bl	800036c <d_append_buffer>
 8005996:	686b      	ldr	r3, [r5, #4]
 8005998:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 800599c:	9903      	ldr	r1, [sp, #12]
 800599e:	3b01      	subs	r3, #1
 80059a0:	3a01      	subs	r2, #1
 80059a2:	f7fd b95f 	b.w	8002c64 <d_print_comp+0x1f4>
 80059a6:	494a      	ldr	r1, [pc, #296]	; (8005ad0 <d_print_comp+0x3060>)
 80059a8:	2202      	movs	r2, #2
 80059aa:	4620      	mov	r0, r4
 80059ac:	f7fa fcde 	bl	800036c <d_append_buffer>
 80059b0:	686b      	ldr	r3, [r5, #4]
 80059b2:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80059b6:	9903      	ldr	r1, [sp, #12]
 80059b8:	3b01      	subs	r3, #1
 80059ba:	3a01      	subs	r2, #1
 80059bc:	f7fd b952 	b.w	8002c64 <d_print_comp+0x1f4>
 80059c0:	4944      	ldr	r1, [pc, #272]	; (8005ad4 <d_print_comp+0x3064>)
 80059c2:	2202      	movs	r2, #2
 80059c4:	4620      	mov	r0, r4
 80059c6:	f7fa fcd1 	bl	800036c <d_append_buffer>
 80059ca:	686b      	ldr	r3, [r5, #4]
 80059cc:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80059d0:	9903      	ldr	r1, [sp, #12]
 80059d2:	3b01      	subs	r3, #1
 80059d4:	3a01      	subs	r2, #1
 80059d6:	f7fd b945 	b.w	8002c64 <d_print_comp+0x1f4>
 80059da:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80059de:	2bff      	cmp	r3, #255	; 0xff
 80059e0:	d10f      	bne.n	8005a02 <d_print_comp+0x2f92>
 80059e2:	2600      	movs	r6, #0
 80059e4:	4619      	mov	r1, r3
 80059e6:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80059ea:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80059ee:	4620      	mov	r0, r4
 80059f0:	4798      	blx	r3
 80059f2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80059f6:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80059fa:	1c5a      	adds	r2, r3, #1
 80059fc:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005a00:	4633      	mov	r3, r6
 8005a02:	1c59      	adds	r1, r3, #1
 8005a04:	226c      	movs	r2, #108	; 0x6c
 8005a06:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005a0a:	54e2      	strb	r2, [r4, r3]
 8005a0c:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005a10:	686b      	ldr	r3, [r5, #4]
 8005a12:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005a16:	9903      	ldr	r1, [sp, #12]
 8005a18:	3b01      	subs	r3, #1
 8005a1a:	3a01      	subs	r2, #1
 8005a1c:	f7fd b922 	b.w	8002c64 <d_print_comp+0x1f4>
 8005a20:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005a24:	2bff      	cmp	r3, #255	; 0xff
 8005a26:	d10f      	bne.n	8005a48 <d_print_comp+0x2fd8>
 8005a28:	2600      	movs	r6, #0
 8005a2a:	4619      	mov	r1, r3
 8005a2c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005a30:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005a34:	4620      	mov	r0, r4
 8005a36:	4798      	blx	r3
 8005a38:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005a3c:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005a40:	1c5a      	adds	r2, r3, #1
 8005a42:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005a46:	4633      	mov	r3, r6
 8005a48:	1c59      	adds	r1, r3, #1
 8005a4a:	2275      	movs	r2, #117	; 0x75
 8005a4c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005a50:	54e2      	strb	r2, [r4, r3]
 8005a52:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005a56:	686b      	ldr	r3, [r5, #4]
 8005a58:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005a5c:	9903      	ldr	r1, [sp, #12]
 8005a5e:	3b01      	subs	r3, #1
 8005a60:	3a01      	subs	r2, #1
 8005a62:	f7fd b8ff 	b.w	8002c64 <d_print_comp+0x1f4>
 8005a66:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005a6a:	2bff      	cmp	r3, #255	; 0xff
 8005a6c:	d10e      	bne.n	8005a8c <d_print_comp+0x301c>
 8005a6e:	4619      	mov	r1, r3
 8005a70:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005a74:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005a78:	4620      	mov	r0, r4
 8005a7a:	4798      	blx	r3
 8005a7c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005a80:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8005a84:	1c5a      	adds	r2, r3, #1
 8005a86:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8005a8a:	4643      	mov	r3, r8
 8005a8c:	222d      	movs	r2, #45	; 0x2d
 8005a8e:	1c59      	adds	r1, r3, #1
 8005a90:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005a94:	54e2      	strb	r2, [r4, r3]
 8005a96:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005a9a:	f7ff b8f0 	b.w	8004c7e <d_print_comp+0x220e>
 8005a9e:	490e      	ldr	r1, [pc, #56]	; (8005ad8 <d_print_comp+0x3068>)
 8005aa0:	2205      	movs	r2, #5
 8005aa2:	4620      	mov	r0, r4
 8005aa4:	f7fa fc62 	bl	800036c <d_append_buffer>
 8005aa8:	686b      	ldr	r3, [r5, #4]
 8005aaa:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005aae:	9903      	ldr	r1, [sp, #12]
 8005ab0:	3b01      	subs	r3, #1
 8005ab2:	3a01      	subs	r2, #1
 8005ab4:	f7fd b8d6 	b.w	8002c64 <d_print_comp+0x1f4>
 8005ab8:	686b      	ldr	r3, [r5, #4]
 8005aba:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005abe:	9903      	ldr	r1, [sp, #12]
 8005ac0:	3b01      	subs	r3, #1
 8005ac2:	3a01      	subs	r2, #1
 8005ac4:	f7fd b8ce 	b.w	8002c64 <d_print_comp+0x1f4>
 8005ac8:	08013ac8 	.word	0x08013ac8
 8005acc:	08013cac 	.word	0x08013cac
 8005ad0:	08013ca8 	.word	0x08013ca8
 8005ad4:	08013ca4 	.word	0x08013ca4
 8005ad8:	08013cb0 	.word	0x08013cb0

08005adc <d_print_mod>:
 8005adc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ae0:	7813      	ldrb	r3, [r2, #0]
 8005ae2:	3b03      	subs	r3, #3
 8005ae4:	4615      	mov	r5, r2
 8005ae6:	4604      	mov	r4, r0
 8005ae8:	460e      	mov	r6, r1
 8005aea:	2b4d      	cmp	r3, #77	; 0x4d
 8005aec:	d84f      	bhi.n	8005b8e <d_print_mod+0xb2>
 8005aee:	e8df f013 	tbh	[pc, r3, lsl #1]
 8005af2:	00bd      	.short	0x00bd
 8005af4:	004e004e 	.word	0x004e004e
 8005af8:	004e004e 	.word	0x004e004e
 8005afc:	004e004e 	.word	0x004e004e
 8005b00:	004e004e 	.word	0x004e004e
 8005b04:	004e004e 	.word	0x004e004e
 8005b08:	004e004e 	.word	0x004e004e
 8005b0c:	004e004e 	.word	0x004e004e
 8005b10:	004e004e 	.word	0x004e004e
 8005b14:	004e004e 	.word	0x004e004e
 8005b18:	004e004e 	.word	0x004e004e
 8005b1c:	0053004e 	.word	0x0053004e
 8005b20:	009a0077 	.word	0x009a0077
 8005b24:	00770053 	.word	0x00770053
 8005b28:	00c2009a 	.word	0x00c2009a
 8005b2c:	00dc00cf 	.word	0x00dc00cf
 8005b30:	013800ef 	.word	0x013800ef
 8005b34:	01690146 	.word	0x01690146
 8005b38:	004e018c 	.word	0x004e018c
 8005b3c:	004e004e 	.word	0x004e004e
 8005b40:	0100004e 	.word	0x0100004e
 8005b44:	0235004e 	.word	0x0235004e
 8005b48:	004e004e 	.word	0x004e004e
 8005b4c:	004e004e 	.word	0x004e004e
 8005b50:	004e004e 	.word	0x004e004e
 8005b54:	004e004e 	.word	0x004e004e
 8005b58:	004e004e 	.word	0x004e004e
 8005b5c:	004e004e 	.word	0x004e004e
 8005b60:	004e004e 	.word	0x004e004e
 8005b64:	004e004e 	.word	0x004e004e
 8005b68:	004e004e 	.word	0x004e004e
 8005b6c:	004e004e 	.word	0x004e004e
 8005b70:	004e004e 	.word	0x004e004e
 8005b74:	004e004e 	.word	0x004e004e
 8005b78:	004e004e 	.word	0x004e004e
 8005b7c:	004e004e 	.word	0x004e004e
 8005b80:	004e004e 	.word	0x004e004e
 8005b84:	01b0004e 	.word	0x01b0004e
 8005b88:	01d4004e 	.word	0x01d4004e
 8005b8c:	01fa      	.short	0x01fa
 8005b8e:	462a      	mov	r2, r5
 8005b90:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b94:	f7fc bf6c 	b.w	8002a70 <d_print_comp>
 8005b98:	4ed8      	ldr	r6, [pc, #864]	; (8005efc <d_print_mod+0x420>)
 8005b9a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005b9e:	f106 0808 	add.w	r8, r6, #8
 8005ba2:	2520      	movs	r5, #32
 8005ba4:	2700      	movs	r7, #0
 8005ba6:	e00b      	b.n	8005bc0 <d_print_mod+0xe4>
 8005ba8:	460b      	mov	r3, r1
 8005baa:	3101      	adds	r1, #1
 8005bac:	45b0      	cmp	r8, r6
 8005bae:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005bb2:	54e5      	strb	r5, [r4, r3]
 8005bb4:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005bb8:	f000 8099 	beq.w	8005cee <d_print_mod+0x212>
 8005bbc:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005bc0:	29ff      	cmp	r1, #255	; 0xff
 8005bc2:	d1f1      	bne.n	8005ba8 <d_print_mod+0xcc>
 8005bc4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005bc8:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005bcc:	4620      	mov	r0, r4
 8005bce:	4798      	blx	r3
 8005bd0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005bd4:	3301      	adds	r3, #1
 8005bd6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005bda:	2101      	movs	r1, #1
 8005bdc:	2300      	movs	r3, #0
 8005bde:	e7e5      	b.n	8005bac <d_print_mod+0xd0>
 8005be0:	4ec7      	ldr	r6, [pc, #796]	; (8005f00 <d_print_mod+0x424>)
 8005be2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005be6:	f106 0808 	add.w	r8, r6, #8
 8005bea:	2520      	movs	r5, #32
 8005bec:	2700      	movs	r7, #0
 8005bee:	e00a      	b.n	8005c06 <d_print_mod+0x12a>
 8005bf0:	460b      	mov	r3, r1
 8005bf2:	3101      	adds	r1, #1
 8005bf4:	45b0      	cmp	r8, r6
 8005bf6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005bfa:	54e5      	strb	r5, [r4, r3]
 8005bfc:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005c00:	d075      	beq.n	8005cee <d_print_mod+0x212>
 8005c02:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005c06:	29ff      	cmp	r1, #255	; 0xff
 8005c08:	d1f2      	bne.n	8005bf0 <d_print_mod+0x114>
 8005c0a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005c0e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005c12:	4620      	mov	r0, r4
 8005c14:	4798      	blx	r3
 8005c16:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005c1a:	3301      	adds	r3, #1
 8005c1c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005c20:	2101      	movs	r1, #1
 8005c22:	2300      	movs	r3, #0
 8005c24:	e7e6      	b.n	8005bf4 <d_print_mod+0x118>
 8005c26:	4eb7      	ldr	r6, [pc, #732]	; (8005f04 <d_print_mod+0x428>)
 8005c28:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005c2c:	f106 0805 	add.w	r8, r6, #5
 8005c30:	2520      	movs	r5, #32
 8005c32:	2700      	movs	r7, #0
 8005c34:	e00a      	b.n	8005c4c <d_print_mod+0x170>
 8005c36:	460b      	mov	r3, r1
 8005c38:	3101      	adds	r1, #1
 8005c3a:	45b0      	cmp	r8, r6
 8005c3c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005c40:	54e5      	strb	r5, [r4, r3]
 8005c42:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005c46:	d052      	beq.n	8005cee <d_print_mod+0x212>
 8005c48:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005c4c:	29ff      	cmp	r1, #255	; 0xff
 8005c4e:	d1f2      	bne.n	8005c36 <d_print_mod+0x15a>
 8005c50:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005c54:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005c58:	4620      	mov	r0, r4
 8005c5a:	4798      	blx	r3
 8005c5c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005c60:	3301      	adds	r3, #1
 8005c62:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005c66:	2101      	movs	r1, #1
 8005c68:	2300      	movs	r3, #0
 8005c6a:	e7e6      	b.n	8005c3a <d_print_mod+0x15e>
 8005c6c:	68aa      	ldr	r2, [r5, #8]
 8005c6e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c72:	f7fc befd 	b.w	8002a70 <d_print_comp>
 8005c76:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005c7a:	2bff      	cmp	r3, #255	; 0xff
 8005c7c:	f000 81e6 	beq.w	800604c <d_print_mod+0x570>
 8005c80:	2220      	movs	r2, #32
 8005c82:	1c59      	adds	r1, r3, #1
 8005c84:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
 8005c88:	54c2      	strb	r2, [r0, r3]
 8005c8a:	f880 2104 	strb.w	r2, [r0, #260]	; 0x104
 8005c8e:	e06a      	b.n	8005d66 <d_print_mod+0x28a>
 8005c90:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005c94:	2bff      	cmp	r3, #255	; 0xff
 8005c96:	f000 81ca 	beq.w	800602e <d_print_mod+0x552>
 8005c9a:	1c59      	adds	r1, r3, #1
 8005c9c:	2220      	movs	r2, #32
 8005c9e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005ca2:	54e2      	strb	r2, [r4, r3]
 8005ca4:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005ca8:	e06b      	b.n	8005d82 <d_print_mod+0x2a6>
 8005caa:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005cae:	29ff      	cmp	r1, #255	; 0xff
 8005cb0:	f000 81af 	beq.w	8006012 <d_print_mod+0x536>
 8005cb4:	1c4a      	adds	r2, r1, #1
 8005cb6:	2320      	movs	r3, #32
 8005cb8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005cbc:	5463      	strb	r3, [r4, r1]
 8005cbe:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005cc2:	68ea      	ldr	r2, [r5, #12]
 8005cc4:	4631      	mov	r1, r6
 8005cc6:	4620      	mov	r0, r4
 8005cc8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ccc:	f7fc bed0 	b.w	8002a70 <d_print_comp>
 8005cd0:	f011 0604 	ands.w	r6, r1, #4
 8005cd4:	d10b      	bne.n	8005cee <d_print_mod+0x212>
 8005cd6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005cda:	29ff      	cmp	r1, #255	; 0xff
 8005cdc:	f000 81f4 	beq.w	80060c8 <d_print_mod+0x5ec>
 8005ce0:	1c4a      	adds	r2, r1, #1
 8005ce2:	232a      	movs	r3, #42	; 0x2a
 8005ce4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005ce8:	5463      	strb	r3, [r4, r1]
 8005cea:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005cee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005cf2:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
 8005cf6:	2b28      	cmp	r3, #40	; 0x28
 8005cf8:	d00b      	beq.n	8005d12 <d_print_mod+0x236>
 8005cfa:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005cfe:	29ff      	cmp	r1, #255	; 0xff
 8005d00:	f000 81d4 	beq.w	80060ac <d_print_mod+0x5d0>
 8005d04:	1c4a      	adds	r2, r1, #1
 8005d06:	2320      	movs	r3, #32
 8005d08:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005d0c:	5463      	strb	r3, [r4, r1]
 8005d0e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005d12:	4f7d      	ldr	r7, [pc, #500]	; (8005f08 <d_print_mod+0x42c>)
 8005d14:	68aa      	ldr	r2, [r5, #8]
 8005d16:	4631      	mov	r1, r6
 8005d18:	4620      	mov	r0, r4
 8005d1a:	f7fc fea9 	bl	8002a70 <d_print_comp>
 8005d1e:	f107 0802 	add.w	r8, r7, #2
 8005d22:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005d26:	253a      	movs	r5, #58	; 0x3a
 8005d28:	2600      	movs	r6, #0
 8005d2a:	e00a      	b.n	8005d42 <d_print_mod+0x266>
 8005d2c:	460b      	mov	r3, r1
 8005d2e:	3101      	adds	r1, #1
 8005d30:	4547      	cmp	r7, r8
 8005d32:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005d36:	54e5      	strb	r5, [r4, r3]
 8005d38:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005d3c:	d0d7      	beq.n	8005cee <d_print_mod+0x212>
 8005d3e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8005d42:	29ff      	cmp	r1, #255	; 0xff
 8005d44:	d1f2      	bne.n	8005d2c <d_print_mod+0x250>
 8005d46:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005d4a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005d4e:	4620      	mov	r0, r4
 8005d50:	4798      	blx	r3
 8005d52:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005d56:	3301      	adds	r3, #1
 8005d58:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005d5c:	2101      	movs	r1, #1
 8005d5e:	2300      	movs	r3, #0
 8005d60:	e7e6      	b.n	8005d30 <d_print_mod+0x254>
 8005d62:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005d66:	29ff      	cmp	r1, #255	; 0xff
 8005d68:	f000 8180 	beq.w	800606c <d_print_mod+0x590>
 8005d6c:	1c4a      	adds	r2, r1, #1
 8005d6e:	2326      	movs	r3, #38	; 0x26
 8005d70:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005d74:	5463      	strb	r3, [r4, r1]
 8005d76:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005d7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005d7e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005d82:	4e62      	ldr	r6, [pc, #392]	; (8005f0c <d_print_mod+0x430>)
 8005d84:	2526      	movs	r5, #38	; 0x26
 8005d86:	f106 0801 	add.w	r8, r6, #1
 8005d8a:	2700      	movs	r7, #0
 8005d8c:	e00a      	b.n	8005da4 <d_print_mod+0x2c8>
 8005d8e:	460b      	mov	r3, r1
 8005d90:	3101      	adds	r1, #1
 8005d92:	45b0      	cmp	r8, r6
 8005d94:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005d98:	54e5      	strb	r5, [r4, r3]
 8005d9a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005d9e:	d0a6      	beq.n	8005cee <d_print_mod+0x212>
 8005da0:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005da4:	29ff      	cmp	r1, #255	; 0xff
 8005da6:	d1f2      	bne.n	8005d8e <d_print_mod+0x2b2>
 8005da8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005dac:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005db0:	4620      	mov	r0, r4
 8005db2:	4798      	blx	r3
 8005db4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005db8:	3301      	adds	r3, #1
 8005dba:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005dbe:	2101      	movs	r1, #1
 8005dc0:	2300      	movs	r3, #0
 8005dc2:	e7e6      	b.n	8005d92 <d_print_mod+0x2b6>
 8005dc4:	4e52      	ldr	r6, [pc, #328]	; (8005f10 <d_print_mod+0x434>)
 8005dc6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005dca:	f106 0807 	add.w	r8, r6, #7
 8005dce:	2563      	movs	r5, #99	; 0x63
 8005dd0:	2700      	movs	r7, #0
 8005dd2:	e00a      	b.n	8005dea <d_print_mod+0x30e>
 8005dd4:	460b      	mov	r3, r1
 8005dd6:	3101      	adds	r1, #1
 8005dd8:	4546      	cmp	r6, r8
 8005dda:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005dde:	54e5      	strb	r5, [r4, r3]
 8005de0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005de4:	d083      	beq.n	8005cee <d_print_mod+0x212>
 8005de6:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005dea:	29ff      	cmp	r1, #255	; 0xff
 8005dec:	d1f2      	bne.n	8005dd4 <d_print_mod+0x2f8>
 8005dee:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005df2:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005df6:	4620      	mov	r0, r4
 8005df8:	4798      	blx	r3
 8005dfa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005dfe:	3301      	adds	r3, #1
 8005e00:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005e04:	2101      	movs	r1, #1
 8005e06:	2300      	movs	r3, #0
 8005e08:	e7e6      	b.n	8005dd8 <d_print_mod+0x2fc>
 8005e0a:	4e42      	ldr	r6, [pc, #264]	; (8005f14 <d_print_mod+0x438>)
 8005e0c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005e10:	f106 0809 	add.w	r8, r6, #9
 8005e14:	2569      	movs	r5, #105	; 0x69
 8005e16:	2700      	movs	r7, #0
 8005e18:	e00b      	b.n	8005e32 <d_print_mod+0x356>
 8005e1a:	460b      	mov	r3, r1
 8005e1c:	3101      	adds	r1, #1
 8005e1e:	45b0      	cmp	r8, r6
 8005e20:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005e24:	54e5      	strb	r5, [r4, r3]
 8005e26:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005e2a:	f43f af60 	beq.w	8005cee <d_print_mod+0x212>
 8005e2e:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005e32:	29ff      	cmp	r1, #255	; 0xff
 8005e34:	d1f1      	bne.n	8005e1a <d_print_mod+0x33e>
 8005e36:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005e3a:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005e3e:	4620      	mov	r0, r4
 8005e40:	4798      	blx	r3
 8005e42:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005e46:	3301      	adds	r3, #1
 8005e48:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005e4c:	2101      	movs	r1, #1
 8005e4e:	2300      	movs	r3, #0
 8005e50:	e7e5      	b.n	8005e1e <d_print_mod+0x342>
 8005e52:	4e31      	ldr	r6, [pc, #196]	; (8005f18 <d_print_mod+0x43c>)
 8005e54:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005e58:	f106 0810 	add.w	r8, r6, #16
 8005e5c:	2520      	movs	r5, #32
 8005e5e:	2700      	movs	r7, #0
 8005e60:	e00b      	b.n	8005e7a <d_print_mod+0x39e>
 8005e62:	460b      	mov	r3, r1
 8005e64:	3101      	adds	r1, #1
 8005e66:	45b0      	cmp	r8, r6
 8005e68:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005e6c:	54e5      	strb	r5, [r4, r3]
 8005e6e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005e72:	f43f af3c 	beq.w	8005cee <d_print_mod+0x212>
 8005e76:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005e7a:	29ff      	cmp	r1, #255	; 0xff
 8005e7c:	d1f1      	bne.n	8005e62 <d_print_mod+0x386>
 8005e7e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005e82:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005e86:	4620      	mov	r0, r4
 8005e88:	4798      	blx	r3
 8005e8a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005e8e:	3301      	adds	r3, #1
 8005e90:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005e94:	2101      	movs	r1, #1
 8005e96:	2300      	movs	r3, #0
 8005e98:	e7e5      	b.n	8005e66 <d_print_mod+0x38a>
 8005e9a:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8005f1c <d_print_mod+0x440>
 8005e9e:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005ea2:	f108 0a08 	add.w	sl, r8, #8
 8005ea6:	2720      	movs	r7, #32
 8005ea8:	f04f 0900 	mov.w	r9, #0
 8005eac:	e00a      	b.n	8005ec4 <d_print_mod+0x3e8>
 8005eae:	461a      	mov	r2, r3
 8005eb0:	3301      	adds	r3, #1
 8005eb2:	45d0      	cmp	r8, sl
 8005eb4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005eb8:	54a7      	strb	r7, [r4, r2]
 8005eba:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8005ebe:	d072      	beq.n	8005fa6 <d_print_mod+0x4ca>
 8005ec0:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8005ec4:	2bff      	cmp	r3, #255	; 0xff
 8005ec6:	d1f2      	bne.n	8005eae <d_print_mod+0x3d2>
 8005ec8:	4619      	mov	r1, r3
 8005eca:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005ece:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005ed2:	4620      	mov	r0, r4
 8005ed4:	4798      	blx	r3
 8005ed6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005eda:	3301      	adds	r3, #1
 8005edc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005ee0:	2200      	movs	r2, #0
 8005ee2:	2301      	movs	r3, #1
 8005ee4:	e7e5      	b.n	8005eb2 <d_print_mod+0x3d6>
 8005ee6:	f8df 8038 	ldr.w	r8, [pc, #56]	; 8005f20 <d_print_mod+0x444>
 8005eea:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005eee:	f108 0a05 	add.w	sl, r8, #5
 8005ef2:	2720      	movs	r7, #32
 8005ef4:	f04f 0900 	mov.w	r9, #0
 8005ef8:	e01f      	b.n	8005f3a <d_print_mod+0x45e>
 8005efa:	bf00      	nop
 8005efc:	08013d5c 	.word	0x08013d5c
 8005f00:	08013d68 	.word	0x08013d68
 8005f04:	08013d74 	.word	0x08013d74
 8005f08:	08013dc0 	.word	0x08013dc0
 8005f0c:	08013da4 	.word	0x08013da4
 8005f10:	08013da8 	.word	0x08013da8
 8005f14:	08013db4 	.word	0x08013db4
 8005f18:	08013d7c 	.word	0x08013d7c
 8005f1c:	08013d90 	.word	0x08013d90
 8005f20:	08013d9c 	.word	0x08013d9c
 8005f24:	461a      	mov	r2, r3
 8005f26:	3301      	adds	r3, #1
 8005f28:	45c2      	cmp	sl, r8
 8005f2a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005f2e:	54a7      	strb	r7, [r4, r2]
 8005f30:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8005f34:	d037      	beq.n	8005fa6 <d_print_mod+0x4ca>
 8005f36:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8005f3a:	2bff      	cmp	r3, #255	; 0xff
 8005f3c:	d1f2      	bne.n	8005f24 <d_print_mod+0x448>
 8005f3e:	4619      	mov	r1, r3
 8005f40:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005f44:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005f48:	4620      	mov	r0, r4
 8005f4a:	4798      	blx	r3
 8005f4c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005f50:	3301      	adds	r3, #1
 8005f52:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005f56:	2200      	movs	r2, #0
 8005f58:	2301      	movs	r3, #1
 8005f5a:	e7e5      	b.n	8005f28 <d_print_mod+0x44c>
 8005f5c:	f8df 8184 	ldr.w	r8, [pc, #388]	; 80060e4 <d_print_mod+0x608>
 8005f60:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005f64:	f108 0a09 	add.w	sl, r8, #9
 8005f68:	2720      	movs	r7, #32
 8005f6a:	f04f 0900 	mov.w	r9, #0
 8005f6e:	e00a      	b.n	8005f86 <d_print_mod+0x4aa>
 8005f70:	460a      	mov	r2, r1
 8005f72:	3101      	adds	r1, #1
 8005f74:	45c2      	cmp	sl, r8
 8005f76:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005f7a:	54a7      	strb	r7, [r4, r2]
 8005f7c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8005f80:	d02f      	beq.n	8005fe2 <d_print_mod+0x506>
 8005f82:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8005f86:	29ff      	cmp	r1, #255	; 0xff
 8005f88:	d1f2      	bne.n	8005f70 <d_print_mod+0x494>
 8005f8a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005f8e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005f92:	4620      	mov	r0, r4
 8005f94:	4798      	blx	r3
 8005f96:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005f9a:	3301      	adds	r3, #1
 8005f9c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005fa0:	2101      	movs	r1, #1
 8005fa2:	2200      	movs	r2, #0
 8005fa4:	e7e6      	b.n	8005f74 <d_print_mod+0x498>
 8005fa6:	68ea      	ldr	r2, [r5, #12]
 8005fa8:	2a00      	cmp	r2, #0
 8005faa:	f43f aea0 	beq.w	8005cee <d_print_mod+0x212>
 8005fae:	2bff      	cmp	r3, #255	; 0xff
 8005fb0:	d06b      	beq.n	800608a <d_print_mod+0x5ae>
 8005fb2:	1c59      	adds	r1, r3, #1
 8005fb4:	2528      	movs	r5, #40	; 0x28
 8005fb6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005fba:	4620      	mov	r0, r4
 8005fbc:	54e5      	strb	r5, [r4, r3]
 8005fbe:	4631      	mov	r1, r6
 8005fc0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005fc4:	f7fc fd54 	bl	8002a70 <d_print_comp>
 8005fc8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005fcc:	29ff      	cmp	r1, #255	; 0xff
 8005fce:	d011      	beq.n	8005ff4 <d_print_mod+0x518>
 8005fd0:	1c4a      	adds	r2, r1, #1
 8005fd2:	2329      	movs	r3, #41	; 0x29
 8005fd4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005fd8:	5463      	strb	r3, [r4, r1]
 8005fda:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005fde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005fe2:	4631      	mov	r1, r6
 8005fe4:	68aa      	ldr	r2, [r5, #8]
 8005fe6:	4620      	mov	r0, r4
 8005fe8:	f7fc fd42 	bl	8002a70 <d_print_comp>
 8005fec:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005ff0:	29ff      	cmp	r1, #255	; 0xff
 8005ff2:	d1ed      	bne.n	8005fd0 <d_print_mod+0x4f4>
 8005ff4:	2500      	movs	r5, #0
 8005ff6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005ffa:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005ffe:	4620      	mov	r0, r4
 8006000:	4798      	blx	r3
 8006002:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006006:	3301      	adds	r3, #1
 8006008:	4629      	mov	r1, r5
 800600a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800600e:	2201      	movs	r2, #1
 8006010:	e7df      	b.n	8005fd2 <d_print_mod+0x4f6>
 8006012:	2700      	movs	r7, #0
 8006014:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8006018:	f880 70ff 	strb.w	r7, [r0, #255]	; 0xff
 800601c:	4798      	blx	r3
 800601e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006022:	3301      	adds	r3, #1
 8006024:	4639      	mov	r1, r7
 8006026:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800602a:	2201      	movs	r2, #1
 800602c:	e643      	b.n	8005cb6 <d_print_mod+0x1da>
 800602e:	2500      	movs	r5, #0
 8006030:	4619      	mov	r1, r3
 8006032:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8006036:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 800603a:	4798      	blx	r3
 800603c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006040:	1c5a      	adds	r2, r3, #1
 8006042:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8006046:	462b      	mov	r3, r5
 8006048:	2101      	movs	r1, #1
 800604a:	e627      	b.n	8005c9c <d_print_mod+0x1c0>
 800604c:	2200      	movs	r2, #0
 800604e:	4619      	mov	r1, r3
 8006050:	f880 20ff 	strb.w	r2, [r0, #255]	; 0xff
 8006054:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8006058:	4798      	blx	r3
 800605a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800605e:	2220      	movs	r2, #32
 8006060:	3301      	adds	r3, #1
 8006062:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006066:	7022      	strb	r2, [r4, #0]
 8006068:	2101      	movs	r1, #1
 800606a:	e67f      	b.n	8005d6c <d_print_mod+0x290>
 800606c:	2500      	movs	r5, #0
 800606e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006072:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006076:	4620      	mov	r0, r4
 8006078:	4798      	blx	r3
 800607a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800607e:	3301      	adds	r3, #1
 8006080:	4629      	mov	r1, r5
 8006082:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006086:	2201      	movs	r2, #1
 8006088:	e671      	b.n	8005d6e <d_print_mod+0x292>
 800608a:	2700      	movs	r7, #0
 800608c:	4619      	mov	r1, r3
 800608e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8006092:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006096:	4620      	mov	r0, r4
 8006098:	4798      	blx	r3
 800609a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800609e:	68ea      	ldr	r2, [r5, #12]
 80060a0:	1c59      	adds	r1, r3, #1
 80060a2:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 80060a6:	463b      	mov	r3, r7
 80060a8:	2101      	movs	r1, #1
 80060aa:	e783      	b.n	8005fb4 <d_print_mod+0x4d8>
 80060ac:	2700      	movs	r7, #0
 80060ae:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 80060b2:	f880 70ff 	strb.w	r7, [r0, #255]	; 0xff
 80060b6:	4798      	blx	r3
 80060b8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80060bc:	3301      	adds	r3, #1
 80060be:	4639      	mov	r1, r7
 80060c0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80060c4:	2201      	movs	r2, #1
 80060c6:	e61e      	b.n	8005d06 <d_print_mod+0x22a>
 80060c8:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 80060cc:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 80060d0:	4798      	blx	r3
 80060d2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80060d6:	3301      	adds	r3, #1
 80060d8:	4631      	mov	r1, r6
 80060da:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80060de:	2201      	movs	r2, #1
 80060e0:	e5ff      	b.n	8005ce2 <d_print_mod+0x206>
 80060e2:	bf00      	nop
 80060e4:	08013dc4 	.word	0x08013dc4

080060e8 <d_print_function_type.isra.0>:
 80060e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80060ec:	4604      	mov	r4, r0
 80060ee:	460e      	mov	r6, r1
 80060f0:	4617      	mov	r7, r2
 80060f2:	461d      	mov	r5, r3
 80060f4:	2b00      	cmp	r3, #0
 80060f6:	d062      	beq.n	80061be <d_print_function_type.isra.0+0xd6>
 80060f8:	689a      	ldr	r2, [r3, #8]
 80060fa:	2a00      	cmp	r2, #0
 80060fc:	d15f      	bne.n	80061be <d_print_function_type.isra.0+0xd6>
 80060fe:	685a      	ldr	r2, [r3, #4]
 8006100:	7810      	ldrb	r0, [r2, #0]
 8006102:	3819      	subs	r0, #25
 8006104:	2812      	cmp	r0, #18
 8006106:	d857      	bhi.n	80061b8 <d_print_function_type.isra.0+0xd0>
 8006108:	e8df f000 	tbb	[pc, r0]
 800610c:	560a0a0a 	.word	0x560a0a0a
 8006110:	56565656 	.word	0x56565656
 8006114:	8989890a 	.word	0x8989890a
 8006118:	56560a0a 	.word	0x56560a0a
 800611c:	5656      	.short	0x5656
 800611e:	0a          	.byte	0x0a
 800611f:	00          	.byte	0x00
 8006120:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8006124:	2b20      	cmp	r3, #32
 8006126:	f000 8081 	beq.w	800622c <d_print_function_type.isra.0+0x144>
 800612a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800612e:	2bff      	cmp	r3, #255	; 0xff
 8006130:	f000 80a0 	beq.w	8006274 <d_print_function_type.isra.0+0x18c>
 8006134:	1c59      	adds	r1, r3, #1
 8006136:	2220      	movs	r2, #32
 8006138:	29ff      	cmp	r1, #255	; 0xff
 800613a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800613e:	54e2      	strb	r2, [r4, r3]
 8006140:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8006144:	d076      	beq.n	8006234 <d_print_function_type.isra.0+0x14c>
 8006146:	1c4b      	adds	r3, r1, #1
 8006148:	f04f 0928 	mov.w	r9, #40	; 0x28
 800614c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006150:	f804 9001 	strb.w	r9, [r4, r1]
 8006154:	f04f 0a00 	mov.w	sl, #0
 8006158:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 800615c:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8006160:	462a      	mov	r2, r5
 8006162:	f8c4 a114 	str.w	sl, [r4, #276]	; 0x114
 8006166:	4653      	mov	r3, sl
 8006168:	4631      	mov	r1, r6
 800616a:	4620      	mov	r0, r4
 800616c:	f000 f8ac 	bl	80062c8 <d_print_mod_list>
 8006170:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8006174:	2aff      	cmp	r2, #255	; 0xff
 8006176:	f000 808e 	beq.w	8006296 <d_print_function_type.isra.0+0x1ae>
 800617a:	1c51      	adds	r1, r2, #1
 800617c:	2329      	movs	r3, #41	; 0x29
 800617e:	29ff      	cmp	r1, #255	; 0xff
 8006180:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006184:	54a3      	strb	r3, [r4, r2]
 8006186:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800618a:	d126      	bne.n	80061da <d_print_function_type.isra.0+0xf2>
 800618c:	2300      	movs	r3, #0
 800618e:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 8006192:	4620      	mov	r0, r4
 8006194:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006198:	4798      	blx	r3
 800619a:	2328      	movs	r3, #40	; 0x28
 800619c:	7023      	strb	r3, [r4, #0]
 800619e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80061a2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80061a6:	683a      	ldr	r2, [r7, #0]
 80061a8:	1c59      	adds	r1, r3, #1
 80061aa:	2301      	movs	r3, #1
 80061ac:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 80061b0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80061b4:	b9d2      	cbnz	r2, 80061ec <d_print_function_type.isra.0+0x104>
 80061b6:	e021      	b.n	80061fc <d_print_function_type.isra.0+0x114>
 80061b8:	681b      	ldr	r3, [r3, #0]
 80061ba:	2b00      	cmp	r3, #0
 80061bc:	d19c      	bne.n	80060f8 <d_print_function_type.isra.0+0x10>
 80061be:	2300      	movs	r3, #0
 80061c0:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 80061c4:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80061c8:	4631      	mov	r1, r6
 80061ca:	462a      	mov	r2, r5
 80061cc:	4620      	mov	r0, r4
 80061ce:	f000 f87b 	bl	80062c8 <d_print_mod_list>
 80061d2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80061d6:	29ff      	cmp	r1, #255	; 0xff
 80061d8:	d0d8      	beq.n	800618c <d_print_function_type.isra.0+0xa4>
 80061da:	2228      	movs	r2, #40	; 0x28
 80061dc:	1c4b      	adds	r3, r1, #1
 80061de:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80061e2:	5462      	strb	r2, [r4, r1]
 80061e4:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80061e8:	683a      	ldr	r2, [r7, #0]
 80061ea:	b12a      	cbz	r2, 80061f8 <d_print_function_type.isra.0+0x110>
 80061ec:	4631      	mov	r1, r6
 80061ee:	4620      	mov	r0, r4
 80061f0:	f7fc fc3e 	bl	8002a70 <d_print_comp>
 80061f4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80061f8:	2bff      	cmp	r3, #255	; 0xff
 80061fa:	d02b      	beq.n	8006254 <d_print_function_type.isra.0+0x16c>
 80061fc:	1c5a      	adds	r2, r3, #1
 80061fe:	2029      	movs	r0, #41	; 0x29
 8006200:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8006204:	4631      	mov	r1, r6
 8006206:	54e0      	strb	r0, [r4, r3]
 8006208:	462a      	mov	r2, r5
 800620a:	f884 0104 	strb.w	r0, [r4, #260]	; 0x104
 800620e:	2301      	movs	r3, #1
 8006210:	4620      	mov	r0, r4
 8006212:	f000 f859 	bl	80062c8 <d_print_mod_list>
 8006216:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
 800621a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800621e:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8006222:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
 8006226:	2a28      	cmp	r2, #40	; 0x28
 8006228:	f47f af7c 	bne.w	8006124 <d_print_function_type.isra.0+0x3c>
 800622c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006230:	29ff      	cmp	r1, #255	; 0xff
 8006232:	d188      	bne.n	8006146 <d_print_function_type.isra.0+0x5e>
 8006234:	f04f 0800 	mov.w	r8, #0
 8006238:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800623c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8006240:	4620      	mov	r0, r4
 8006242:	4798      	blx	r3
 8006244:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006248:	3301      	adds	r3, #1
 800624a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800624e:	4641      	mov	r1, r8
 8006250:	2301      	movs	r3, #1
 8006252:	e779      	b.n	8006148 <d_print_function_type.isra.0+0x60>
 8006254:	2700      	movs	r7, #0
 8006256:	4619      	mov	r1, r3
 8006258:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800625c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006260:	4620      	mov	r0, r4
 8006262:	4798      	blx	r3
 8006264:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006268:	1c5a      	adds	r2, r3, #1
 800626a:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 800626e:	463b      	mov	r3, r7
 8006270:	2201      	movs	r2, #1
 8006272:	e7c4      	b.n	80061fe <d_print_function_type.isra.0+0x116>
 8006274:	2200      	movs	r2, #0
 8006276:	4619      	mov	r1, r3
 8006278:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 800627c:	4620      	mov	r0, r4
 800627e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006282:	4798      	blx	r3
 8006284:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006288:	2220      	movs	r2, #32
 800628a:	3301      	adds	r3, #1
 800628c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006290:	7022      	strb	r2, [r4, #0]
 8006292:	2101      	movs	r1, #1
 8006294:	e757      	b.n	8006146 <d_print_function_type.isra.0+0x5e>
 8006296:	4611      	mov	r1, r2
 8006298:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 800629c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80062a0:	4620      	mov	r0, r4
 80062a2:	4798      	blx	r3
 80062a4:	f642 0329 	movw	r3, #10281	; 0x2829
 80062a8:	8023      	strh	r3, [r4, #0]
 80062aa:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80062ae:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80062b2:	683a      	ldr	r2, [r7, #0]
 80062b4:	1c59      	adds	r1, r3, #1
 80062b6:	2302      	movs	r3, #2
 80062b8:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 80062bc:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80062c0:	2a00      	cmp	r2, #0
 80062c2:	d193      	bne.n	80061ec <d_print_function_type.isra.0+0x104>
 80062c4:	e79a      	b.n	80061fc <d_print_function_type.isra.0+0x114>
 80062c6:	bf00      	nop

080062c8 <d_print_mod_list>:
 80062c8:	2a00      	cmp	r2, #0
 80062ca:	f000 80bb 	beq.w	8006444 <d_print_mod_list+0x17c>
 80062ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80062d2:	4605      	mov	r5, r0
 80062d4:	b089      	sub	sp, #36	; 0x24
 80062d6:	460f      	mov	r7, r1
 80062d8:	461e      	mov	r6, r3
 80062da:	4614      	mov	r4, r2
 80062dc:	f04f 0801 	mov.w	r8, #1
 80062e0:	e019      	b.n	8006316 <d_print_mod_list+0x4e>
 80062e2:	f1a0 031c 	sub.w	r3, r0, #28
 80062e6:	2b04      	cmp	r3, #4
 80062e8:	d912      	bls.n	8006310 <d_print_mod_list+0x48>
 80062ea:	68e3      	ldr	r3, [r4, #12]
 80062ec:	f8d5 9110 	ldr.w	r9, [r5, #272]	; 0x110
 80062f0:	f8c4 8008 	str.w	r8, [r4, #8]
 80062f4:	2829      	cmp	r0, #41	; 0x29
 80062f6:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
 80062fa:	d057      	beq.n	80063ac <d_print_mod_list+0xe4>
 80062fc:	282a      	cmp	r0, #42	; 0x2a
 80062fe:	d060      	beq.n	80063c2 <d_print_mod_list+0xfa>
 8006300:	2802      	cmp	r0, #2
 8006302:	d021      	beq.n	8006348 <d_print_mod_list+0x80>
 8006304:	4639      	mov	r1, r7
 8006306:	4628      	mov	r0, r5
 8006308:	f7ff fbe8 	bl	8005adc <d_print_mod>
 800630c:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 8006310:	6824      	ldr	r4, [r4, #0]
 8006312:	2c00      	cmp	r4, #0
 8006314:	d047      	beq.n	80063a6 <d_print_mod_list+0xde>
 8006316:	f8d5 2118 	ldr.w	r2, [r5, #280]	; 0x118
 800631a:	2a00      	cmp	r2, #0
 800631c:	d143      	bne.n	80063a6 <d_print_mod_list+0xde>
 800631e:	68a3      	ldr	r3, [r4, #8]
 8006320:	2b00      	cmp	r3, #0
 8006322:	d1f5      	bne.n	8006310 <d_print_mod_list+0x48>
 8006324:	6862      	ldr	r2, [r4, #4]
 8006326:	7810      	ldrb	r0, [r2, #0]
 8006328:	2e00      	cmp	r6, #0
 800632a:	d1de      	bne.n	80062ea <d_print_mod_list+0x22>
 800632c:	284d      	cmp	r0, #77	; 0x4d
 800632e:	d0ef      	beq.n	8006310 <d_print_mod_list+0x48>
 8006330:	d9d7      	bls.n	80062e2 <d_print_mod_list+0x1a>
 8006332:	384f      	subs	r0, #79	; 0x4f
 8006334:	2801      	cmp	r0, #1
 8006336:	d9eb      	bls.n	8006310 <d_print_mod_list+0x48>
 8006338:	68e3      	ldr	r3, [r4, #12]
 800633a:	f8d5 9110 	ldr.w	r9, [r5, #272]	; 0x110
 800633e:	f8c4 8008 	str.w	r8, [r4, #8]
 8006342:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
 8006346:	e7dd      	b.n	8006304 <d_print_mod_list+0x3c>
 8006348:	2600      	movs	r6, #0
 800634a:	f8d5 8114 	ldr.w	r8, [r5, #276]	; 0x114
 800634e:	6892      	ldr	r2, [r2, #8]
 8006350:	f8c5 6114 	str.w	r6, [r5, #276]	; 0x114
 8006354:	4639      	mov	r1, r7
 8006356:	4628      	mov	r0, r5
 8006358:	f7fc fb8a 	bl	8002a70 <d_print_comp>
 800635c:	f017 0a04 	ands.w	sl, r7, #4
 8006360:	f8c5 8114 	str.w	r8, [r5, #276]	; 0x114
 8006364:	d03d      	beq.n	80063e2 <d_print_mod_list+0x11a>
 8006366:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 800636a:	29ff      	cmp	r1, #255	; 0xff
 800636c:	d05c      	beq.n	8006428 <d_print_mod_list+0x160>
 800636e:	1c4a      	adds	r2, r1, #1
 8006370:	232e      	movs	r3, #46	; 0x2e
 8006372:	f8c5 2100 	str.w	r2, [r5, #256]	; 0x100
 8006376:	546b      	strb	r3, [r5, r1]
 8006378:	f885 3104 	strb.w	r3, [r5, #260]	; 0x104
 800637c:	6863      	ldr	r3, [r4, #4]
 800637e:	68dc      	ldr	r4, [r3, #12]
 8006380:	7823      	ldrb	r3, [r4, #0]
 8006382:	2b47      	cmp	r3, #71	; 0x47
 8006384:	d05f      	beq.n	8006446 <d_print_mod_list+0x17e>
 8006386:	2b4d      	cmp	r3, #77	; 0x4d
 8006388:	f1a3 024f 	sub.w	r2, r3, #79	; 0x4f
 800638c:	f1a3 011c 	sub.w	r1, r3, #28
 8006390:	d024      	beq.n	80063dc <d_print_mod_list+0x114>
 8006392:	d821      	bhi.n	80063d8 <d_print_mod_list+0x110>
 8006394:	2904      	cmp	r1, #4
 8006396:	d921      	bls.n	80063dc <d_print_mod_list+0x114>
 8006398:	4622      	mov	r2, r4
 800639a:	4639      	mov	r1, r7
 800639c:	4628      	mov	r0, r5
 800639e:	f7fc fb67 	bl	8002a70 <d_print_comp>
 80063a2:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 80063a6:	b009      	add	sp, #36	; 0x24
 80063a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80063ac:	6823      	ldr	r3, [r4, #0]
 80063ae:	320c      	adds	r2, #12
 80063b0:	4639      	mov	r1, r7
 80063b2:	4628      	mov	r0, r5
 80063b4:	f7ff fe98 	bl	80060e8 <d_print_function_type.isra.0>
 80063b8:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 80063bc:	b009      	add	sp, #36	; 0x24
 80063be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80063c2:	6823      	ldr	r3, [r4, #0]
 80063c4:	3208      	adds	r2, #8
 80063c6:	4639      	mov	r1, r7
 80063c8:	4628      	mov	r0, r5
 80063ca:	f000 f8bd 	bl	8006548 <d_print_array_type.isra.0>
 80063ce:	f8c5 9110 	str.w	r9, [r5, #272]	; 0x110
 80063d2:	b009      	add	sp, #36	; 0x24
 80063d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80063d8:	2a01      	cmp	r2, #1
 80063da:	d8dd      	bhi.n	8006398 <d_print_mod_list+0xd0>
 80063dc:	68a4      	ldr	r4, [r4, #8]
 80063de:	7823      	ldrb	r3, [r4, #0]
 80063e0:	e7d1      	b.n	8006386 <d_print_mod_list+0xbe>
 80063e2:	f8df 8158 	ldr.w	r8, [pc, #344]	; 800653c <d_print_mod_list+0x274>
 80063e6:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 80063ea:	f108 0b01 	add.w	fp, r8, #1
 80063ee:	263a      	movs	r6, #58	; 0x3a
 80063f0:	e00a      	b.n	8006408 <d_print_mod_list+0x140>
 80063f2:	460b      	mov	r3, r1
 80063f4:	3101      	adds	r1, #1
 80063f6:	45d8      	cmp	r8, fp
 80063f8:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 80063fc:	54ee      	strb	r6, [r5, r3]
 80063fe:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
 8006402:	d0bb      	beq.n	800637c <d_print_mod_list+0xb4>
 8006404:	f818 6f01 	ldrb.w	r6, [r8, #1]!
 8006408:	29ff      	cmp	r1, #255	; 0xff
 800640a:	d1f2      	bne.n	80063f2 <d_print_mod_list+0x12a>
 800640c:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
 8006410:	f885 a0ff 	strb.w	sl, [r5, #255]	; 0xff
 8006414:	4628      	mov	r0, r5
 8006416:	4798      	blx	r3
 8006418:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 800641c:	3301      	adds	r3, #1
 800641e:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 8006422:	2101      	movs	r1, #1
 8006424:	2300      	movs	r3, #0
 8006426:	e7e6      	b.n	80063f6 <d_print_mod_list+0x12e>
 8006428:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
 800642c:	f885 60ff 	strb.w	r6, [r5, #255]	; 0xff
 8006430:	4628      	mov	r0, r5
 8006432:	4798      	blx	r3
 8006434:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 8006438:	3301      	adds	r3, #1
 800643a:	4631      	mov	r1, r6
 800643c:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 8006440:	2201      	movs	r2, #1
 8006442:	e795      	b.n	8006370 <d_print_mod_list+0xa8>
 8006444:	4770      	bx	lr
 8006446:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 8006540 <d_print_mod_list+0x278>
 800644a:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 800644e:	f108 0b0c 	add.w	fp, r8, #12
 8006452:	267b      	movs	r6, #123	; 0x7b
 8006454:	f04f 0a00 	mov.w	sl, #0
 8006458:	e00a      	b.n	8006470 <d_print_mod_list+0x1a8>
 800645a:	460b      	mov	r3, r1
 800645c:	3101      	adds	r1, #1
 800645e:	45d8      	cmp	r8, fp
 8006460:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 8006464:	54ee      	strb	r6, [r5, r3]
 8006466:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
 800646a:	d011      	beq.n	8006490 <d_print_mod_list+0x1c8>
 800646c:	f818 6f01 	ldrb.w	r6, [r8, #1]!
 8006470:	29ff      	cmp	r1, #255	; 0xff
 8006472:	d1f2      	bne.n	800645a <d_print_mod_list+0x192>
 8006474:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
 8006478:	f885 a0ff 	strb.w	sl, [r5, #255]	; 0xff
 800647c:	4628      	mov	r0, r5
 800647e:	4798      	blx	r3
 8006480:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 8006484:	3301      	adds	r3, #1
 8006486:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 800648a:	2101      	movs	r1, #1
 800648c:	2300      	movs	r3, #0
 800648e:	e7e6      	b.n	800645e <d_print_mod_list+0x196>
 8006490:	68e2      	ldr	r2, [r4, #12]
 8006492:	4929      	ldr	r1, [pc, #164]	; (8006538 <d_print_mod_list+0x270>)
 8006494:	3201      	adds	r2, #1
 8006496:	a801      	add	r0, sp, #4
 8006498:	f008 fe42 	bl	800f120 <sprintf>
 800649c:	a801      	add	r0, sp, #4
 800649e:	f000 fd49 	bl	8006f34 <strlen>
 80064a2:	b318      	cbz	r0, 80064ec <d_print_mod_list+0x224>
 80064a4:	ae01      	add	r6, sp, #4
 80064a6:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 80064aa:	eb06 0b00 	add.w	fp, r6, r0
 80064ae:	f04f 0a00 	mov.w	sl, #0
 80064b2:	e009      	b.n	80064c8 <d_print_mod_list+0x200>
 80064b4:	460b      	mov	r3, r1
 80064b6:	3101      	adds	r1, #1
 80064b8:	45b3      	cmp	fp, r6
 80064ba:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 80064be:	f805 8003 	strb.w	r8, [r5, r3]
 80064c2:	f885 8104 	strb.w	r8, [r5, #260]	; 0x104
 80064c6:	d013      	beq.n	80064f0 <d_print_mod_list+0x228>
 80064c8:	29ff      	cmp	r1, #255	; 0xff
 80064ca:	f816 8b01 	ldrb.w	r8, [r6], #1
 80064ce:	d1f1      	bne.n	80064b4 <d_print_mod_list+0x1ec>
 80064d0:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
 80064d4:	f885 a0ff 	strb.w	sl, [r5, #255]	; 0xff
 80064d8:	4628      	mov	r0, r5
 80064da:	4798      	blx	r3
 80064dc:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 80064e0:	3301      	adds	r3, #1
 80064e2:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 80064e6:	2101      	movs	r1, #1
 80064e8:	2300      	movs	r3, #0
 80064ea:	e7e5      	b.n	80064b8 <d_print_mod_list+0x1f0>
 80064ec:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 80064f0:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8006544 <d_print_mod_list+0x27c>
 80064f4:	267d      	movs	r6, #125	; 0x7d
 80064f6:	f108 0b02 	add.w	fp, r8, #2
 80064fa:	f04f 0a00 	mov.w	sl, #0
 80064fe:	e00b      	b.n	8006518 <d_print_mod_list+0x250>
 8006500:	460b      	mov	r3, r1
 8006502:	3101      	adds	r1, #1
 8006504:	45c3      	cmp	fp, r8
 8006506:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 800650a:	54ee      	strb	r6, [r5, r3]
 800650c:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
 8006510:	f43f af64 	beq.w	80063dc <d_print_mod_list+0x114>
 8006514:	f818 6f01 	ldrb.w	r6, [r8, #1]!
 8006518:	29ff      	cmp	r1, #255	; 0xff
 800651a:	d1f1      	bne.n	8006500 <d_print_mod_list+0x238>
 800651c:	e9d5 3242 	ldrd	r3, r2, [r5, #264]	; 0x108
 8006520:	f885 a0ff 	strb.w	sl, [r5, #255]	; 0xff
 8006524:	4628      	mov	r0, r5
 8006526:	4798      	blx	r3
 8006528:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 800652c:	3301      	adds	r3, #1
 800652e:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 8006532:	2101      	movs	r1, #1
 8006534:	2300      	movs	r3, #0
 8006536:	e7e5      	b.n	8006504 <d_print_mod_list+0x23c>
 8006538:	08013ac8 	.word	0x08013ac8
 800653c:	08013ab4 	.word	0x08013ab4
 8006540:	08013ab8 	.word	0x08013ab8
 8006544:	08013acc 	.word	0x08013acc

08006548 <d_print_array_type.isra.0>:
 8006548:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800654c:	4604      	mov	r4, r0
 800654e:	460e      	mov	r6, r1
 8006550:	4691      	mov	r9, r2
 8006552:	b16b      	cbz	r3, 8006570 <d_print_array_type.isra.0+0x28>
 8006554:	461d      	mov	r5, r3
 8006556:	461a      	mov	r2, r3
 8006558:	6893      	ldr	r3, [r2, #8]
 800655a:	2b00      	cmp	r3, #0
 800655c:	d058      	beq.n	8006610 <d_print_array_type.isra.0+0xc8>
 800655e:	6812      	ldr	r2, [r2, #0]
 8006560:	2a00      	cmp	r2, #0
 8006562:	d1f9      	bne.n	8006558 <d_print_array_type.isra.0+0x10>
 8006564:	4613      	mov	r3, r2
 8006566:	4631      	mov	r1, r6
 8006568:	462a      	mov	r2, r5
 800656a:	4620      	mov	r0, r4
 800656c:	f7ff feac 	bl	80062c8 <d_print_mod_list>
 8006570:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8006574:	2bff      	cmp	r3, #255	; 0xff
 8006576:	d057      	beq.n	8006628 <d_print_array_type.isra.0+0xe0>
 8006578:	2220      	movs	r2, #32
 800657a:	1c59      	adds	r1, r3, #1
 800657c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006580:	54e2      	strb	r2, [r4, r3]
 8006582:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8006586:	29ff      	cmp	r1, #255	; 0xff
 8006588:	d01a      	beq.n	80065c0 <d_print_array_type.isra.0+0x78>
 800658a:	225b      	movs	r2, #91	; 0x5b
 800658c:	1c4b      	adds	r3, r1, #1
 800658e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006592:	5462      	strb	r2, [r4, r1]
 8006594:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8006598:	f8d9 2000 	ldr.w	r2, [r9]
 800659c:	b12a      	cbz	r2, 80065aa <d_print_array_type.isra.0+0x62>
 800659e:	4631      	mov	r1, r6
 80065a0:	4620      	mov	r0, r4
 80065a2:	f7fc fa65 	bl	8002a70 <d_print_comp>
 80065a6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80065aa:	2bff      	cmp	r3, #255	; 0xff
 80065ac:	d020      	beq.n	80065f0 <d_print_array_type.isra.0+0xa8>
 80065ae:	1c59      	adds	r1, r3, #1
 80065b0:	225d      	movs	r2, #93	; 0x5d
 80065b2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80065b6:	54e2      	strb	r2, [r4, r3]
 80065b8:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80065bc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065c0:	2300      	movs	r3, #0
 80065c2:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80065c6:	4620      	mov	r0, r4
 80065c8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80065cc:	4798      	blx	r3
 80065ce:	235b      	movs	r3, #91	; 0x5b
 80065d0:	7023      	strb	r3, [r4, #0]
 80065d2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80065d6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80065da:	f8d9 2000 	ldr.w	r2, [r9]
 80065de:	1c59      	adds	r1, r3, #1
 80065e0:	2301      	movs	r3, #1
 80065e2:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 80065e6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80065ea:	2a00      	cmp	r2, #0
 80065ec:	d1d7      	bne.n	800659e <d_print_array_type.isra.0+0x56>
 80065ee:	e7de      	b.n	80065ae <d_print_array_type.isra.0+0x66>
 80065f0:	2500      	movs	r5, #0
 80065f2:	4619      	mov	r1, r3
 80065f4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80065f8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80065fc:	4620      	mov	r0, r4
 80065fe:	4798      	blx	r3
 8006600:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006604:	1c5a      	adds	r2, r3, #1
 8006606:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 800660a:	462b      	mov	r3, r5
 800660c:	2101      	movs	r1, #1
 800660e:	e7cf      	b.n	80065b0 <d_print_array_type.isra.0+0x68>
 8006610:	6852      	ldr	r2, [r2, #4]
 8006612:	7812      	ldrb	r2, [r2, #0]
 8006614:	2a2a      	cmp	r2, #42	; 0x2a
 8006616:	d122      	bne.n	800665e <d_print_array_type.isra.0+0x116>
 8006618:	4631      	mov	r1, r6
 800661a:	462a      	mov	r2, r5
 800661c:	4620      	mov	r0, r4
 800661e:	f7ff fe53 	bl	80062c8 <d_print_mod_list>
 8006622:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006626:	e7ae      	b.n	8006586 <d_print_array_type.isra.0+0x3e>
 8006628:	2200      	movs	r2, #0
 800662a:	4619      	mov	r1, r3
 800662c:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 8006630:	4620      	mov	r0, r4
 8006632:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006636:	4798      	blx	r3
 8006638:	f645 3220 	movw	r2, #23328	; 0x5b20
 800663c:	235b      	movs	r3, #91	; 0x5b
 800663e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006642:	8022      	strh	r2, [r4, #0]
 8006644:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006648:	f8d9 2000 	ldr.w	r2, [r9]
 800664c:	1c59      	adds	r1, r3, #1
 800664e:	2302      	movs	r3, #2
 8006650:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 8006654:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006658:	2a00      	cmp	r2, #0
 800665a:	d1a0      	bne.n	800659e <d_print_array_type.isra.0+0x56>
 800665c:	e7a7      	b.n	80065ae <d_print_array_type.isra.0+0x66>
 800665e:	f8df 8098 	ldr.w	r8, [pc, #152]	; 80066f8 <d_print_array_type.isra.0+0x1b0>
 8006662:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006666:	469b      	mov	fp, r3
 8006668:	f108 0a01 	add.w	sl, r8, #1
 800666c:	2720      	movs	r7, #32
 800666e:	e00b      	b.n	8006688 <d_print_array_type.isra.0+0x140>
 8006670:	460b      	mov	r3, r1
 8006672:	45c2      	cmp	sl, r8
 8006674:	f101 0101 	add.w	r1, r1, #1
 8006678:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800667c:	54e7      	strb	r7, [r4, r3]
 800667e:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8006682:	d017      	beq.n	80066b4 <d_print_array_type.isra.0+0x16c>
 8006684:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8006688:	29ff      	cmp	r1, #255	; 0xff
 800668a:	d1f1      	bne.n	8006670 <d_print_array_type.isra.0+0x128>
 800668c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006690:	f884 b0ff 	strb.w	fp, [r4, #255]	; 0xff
 8006694:	4620      	mov	r0, r4
 8006696:	4798      	blx	r3
 8006698:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800669c:	3301      	adds	r3, #1
 800669e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80066a2:	2300      	movs	r3, #0
 80066a4:	2101      	movs	r1, #1
 80066a6:	45c2      	cmp	sl, r8
 80066a8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80066ac:	54e7      	strb	r7, [r4, r3]
 80066ae:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80066b2:	d1e7      	bne.n	8006684 <d_print_array_type.isra.0+0x13c>
 80066b4:	4631      	mov	r1, r6
 80066b6:	462a      	mov	r2, r5
 80066b8:	2300      	movs	r3, #0
 80066ba:	4620      	mov	r0, r4
 80066bc:	f7ff fe04 	bl	80062c8 <d_print_mod_list>
 80066c0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80066c4:	29ff      	cmp	r1, #255	; 0xff
 80066c6:	d007      	beq.n	80066d8 <d_print_array_type.isra.0+0x190>
 80066c8:	2229      	movs	r2, #41	; 0x29
 80066ca:	1c4b      	adds	r3, r1, #1
 80066cc:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80066d0:	5462      	strb	r2, [r4, r1]
 80066d2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80066d6:	e74d      	b.n	8006574 <d_print_array_type.isra.0+0x2c>
 80066d8:	2300      	movs	r3, #0
 80066da:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80066de:	4620      	mov	r0, r4
 80066e0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80066e4:	4798      	blx	r3
 80066e6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80066ea:	2229      	movs	r2, #41	; 0x29
 80066ec:	3301      	adds	r3, #1
 80066ee:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80066f2:	7022      	strb	r2, [r4, #0]
 80066f4:	2301      	movs	r3, #1
 80066f6:	e73f      	b.n	8006578 <d_print_array_type.isra.0+0x30>
 80066f8:	08013cd8 	.word	0x08013cd8

080066fc <d_print_expr_op>:
 80066fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006700:	7815      	ldrb	r5, [r2, #0]
 8006702:	2d32      	cmp	r5, #50	; 0x32
 8006704:	d003      	beq.n	800670e <d_print_expr_op+0x12>
 8006706:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800670a:	f7fc b9b1 	b.w	8002a70 <d_print_comp>
 800670e:	6893      	ldr	r3, [r2, #8]
 8006710:	e9d3 5601 	ldrd	r5, r6, [r3, #4]
 8006714:	b35e      	cbz	r6, 800676e <d_print_expr_op+0x72>
 8006716:	442e      	add	r6, r5
 8006718:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800671c:	4604      	mov	r4, r0
 800671e:	3e01      	subs	r6, #1
 8006720:	3d01      	subs	r5, #1
 8006722:	2700      	movs	r7, #0
 8006724:	e00a      	b.n	800673c <d_print_expr_op+0x40>
 8006726:	460b      	mov	r3, r1
 8006728:	42b5      	cmp	r5, r6
 800672a:	f101 0101 	add.w	r1, r1, #1
 800672e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006732:	f804 8003 	strb.w	r8, [r4, r3]
 8006736:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800673a:	d018      	beq.n	800676e <d_print_expr_op+0x72>
 800673c:	29ff      	cmp	r1, #255	; 0xff
 800673e:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8006742:	d1f0      	bne.n	8006726 <d_print_expr_op+0x2a>
 8006744:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8006748:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800674c:	4620      	mov	r0, r4
 800674e:	4798      	blx	r3
 8006750:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006754:	3301      	adds	r3, #1
 8006756:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800675a:	2300      	movs	r3, #0
 800675c:	2101      	movs	r1, #1
 800675e:	42b5      	cmp	r5, r6
 8006760:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006764:	f804 8003 	strb.w	r8, [r4, r3]
 8006768:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800676c:	d1e6      	bne.n	800673c <d_print_expr_op+0x40>
 800676e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006772:	bf00      	nop

08006774 <d_print_subexpr>:
 8006774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006778:	7813      	ldrb	r3, [r2, #0]
 800677a:	2b01      	cmp	r3, #1
 800677c:	4615      	mov	r5, r2
 800677e:	460e      	mov	r6, r1
 8006780:	4604      	mov	r4, r0
 8006782:	d920      	bls.n	80067c6 <d_print_subexpr+0x52>
 8006784:	2b31      	cmp	r3, #49	; 0x31
 8006786:	d01e      	beq.n	80067c6 <d_print_subexpr+0x52>
 8006788:	2b06      	cmp	r3, #6
 800678a:	d01c      	beq.n	80067c6 <d_print_subexpr+0x52>
 800678c:	f8d0 7100 	ldr.w	r7, [r0, #256]	; 0x100
 8006790:	2fff      	cmp	r7, #255	; 0xff
 8006792:	d01f      	beq.n	80067d4 <d_print_subexpr+0x60>
 8006794:	1c7a      	adds	r2, r7, #1
 8006796:	2328      	movs	r3, #40	; 0x28
 8006798:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800679c:	4631      	mov	r1, r6
 800679e:	55e3      	strb	r3, [r4, r7]
 80067a0:	462a      	mov	r2, r5
 80067a2:	4620      	mov	r0, r4
 80067a4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80067a8:	f7fc f962 	bl	8002a70 <d_print_comp>
 80067ac:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80067b0:	29ff      	cmp	r1, #255	; 0xff
 80067b2:	d01f      	beq.n	80067f4 <d_print_subexpr+0x80>
 80067b4:	1c4a      	adds	r2, r1, #1
 80067b6:	2329      	movs	r3, #41	; 0x29
 80067b8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80067bc:	5463      	strb	r3, [r4, r1]
 80067be:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80067c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80067c6:	462a      	mov	r2, r5
 80067c8:	4631      	mov	r1, r6
 80067ca:	4620      	mov	r0, r4
 80067cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80067d0:	f7fc b94e 	b.w	8002a70 <d_print_comp>
 80067d4:	f04f 0800 	mov.w	r8, #0
 80067d8:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 80067dc:	4639      	mov	r1, r7
 80067de:	f880 80ff 	strb.w	r8, [r0, #255]	; 0xff
 80067e2:	4798      	blx	r3
 80067e4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80067e8:	3301      	adds	r3, #1
 80067ea:	4647      	mov	r7, r8
 80067ec:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80067f0:	2201      	movs	r2, #1
 80067f2:	e7d0      	b.n	8006796 <d_print_subexpr+0x22>
 80067f4:	2500      	movs	r5, #0
 80067f6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80067fa:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80067fe:	4620      	mov	r0, r4
 8006800:	4798      	blx	r3
 8006802:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006806:	3301      	adds	r3, #1
 8006808:	4629      	mov	r1, r5
 800680a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800680e:	2201      	movs	r2, #1
 8006810:	e7d1      	b.n	80067b6 <d_print_subexpr+0x42>
 8006812:	bf00      	nop

08006814 <d_maybe_print_fold_expression.isra.0>:
 8006814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006818:	6892      	ldr	r2, [r2, #8]
 800681a:	6812      	ldr	r2, [r2, #0]
 800681c:	7815      	ldrb	r5, [r2, #0]
 800681e:	2d66      	cmp	r5, #102	; 0x66
 8006820:	b083      	sub	sp, #12
 8006822:	d17a      	bne.n	800691a <d_maybe_print_fold_expression.isra.0+0x106>
 8006824:	681b      	ldr	r3, [r3, #0]
 8006826:	e9d3 8a02 	ldrd	r8, sl, [r3, #8]
 800682a:	f89a 3000 	ldrb.w	r3, [sl]
 800682e:	2b3c      	cmp	r3, #60	; 0x3c
 8006830:	f04f 33ff 	mov.w	r3, #4294967295
 8006834:	bf08      	it	eq
 8006836:	e9da a902 	ldrdeq	sl, r9, [sl, #8]
 800683a:	460c      	mov	r4, r1
 800683c:	f8d0 1124 	ldr.w	r1, [r0, #292]	; 0x124
 8006840:	f8c0 3124 	str.w	r3, [r0, #292]	; 0x124
 8006844:	7853      	ldrb	r3, [r2, #1]
 8006846:	9101      	str	r1, [sp, #4]
 8006848:	bf18      	it	ne
 800684a:	f04f 0900 	movne.w	r9, #0
 800684e:	2b6c      	cmp	r3, #108	; 0x6c
 8006850:	4607      	mov	r7, r0
 8006852:	f000 80a0 	beq.w	8006996 <d_maybe_print_fold_expression.isra.0+0x182>
 8006856:	d864      	bhi.n	8006922 <d_maybe_print_fold_expression.isra.0+0x10e>
 8006858:	2b4c      	cmp	r3, #76	; 0x4c
 800685a:	d001      	beq.n	8006860 <d_maybe_print_fold_expression.isra.0+0x4c>
 800685c:	2b52      	cmp	r3, #82	; 0x52
 800685e:	d155      	bne.n	800690c <d_maybe_print_fold_expression.isra.0+0xf8>
 8006860:	f8d7 1100 	ldr.w	r1, [r7, #256]	; 0x100
 8006864:	29ff      	cmp	r1, #255	; 0xff
 8006866:	f000 80e5 	beq.w	8006a34 <d_maybe_print_fold_expression.isra.0+0x220>
 800686a:	1c4a      	adds	r2, r1, #1
 800686c:	2328      	movs	r3, #40	; 0x28
 800686e:	f8c7 2100 	str.w	r2, [r7, #256]	; 0x100
 8006872:	4638      	mov	r0, r7
 8006874:	547b      	strb	r3, [r7, r1]
 8006876:	4652      	mov	r2, sl
 8006878:	4621      	mov	r1, r4
 800687a:	f887 3104 	strb.w	r3, [r7, #260]	; 0x104
 800687e:	4d75      	ldr	r5, [pc, #468]	; (8006a54 <d_maybe_print_fold_expression.isra.0+0x240>)
 8006880:	f7ff ff78 	bl	8006774 <d_print_subexpr>
 8006884:	4621      	mov	r1, r4
 8006886:	4642      	mov	r2, r8
 8006888:	4638      	mov	r0, r7
 800688a:	f7ff ff37 	bl	80066fc <d_print_expr_op>
 800688e:	f105 0b02 	add.w	fp, r5, #2
 8006892:	f8d7 1100 	ldr.w	r1, [r7, #256]	; 0x100
 8006896:	262e      	movs	r6, #46	; 0x2e
 8006898:	f04f 0a00 	mov.w	sl, #0
 800689c:	e00b      	b.n	80068b6 <d_maybe_print_fold_expression.isra.0+0xa2>
 800689e:	460b      	mov	r3, r1
 80068a0:	45ab      	cmp	fp, r5
 80068a2:	f101 0101 	add.w	r1, r1, #1
 80068a6:	f8c7 1100 	str.w	r1, [r7, #256]	; 0x100
 80068aa:	54fe      	strb	r6, [r7, r3]
 80068ac:	f887 6104 	strb.w	r6, [r7, #260]	; 0x104
 80068b0:	d017      	beq.n	80068e2 <d_maybe_print_fold_expression.isra.0+0xce>
 80068b2:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 80068b6:	29ff      	cmp	r1, #255	; 0xff
 80068b8:	d1f1      	bne.n	800689e <d_maybe_print_fold_expression.isra.0+0x8a>
 80068ba:	e9d7 3242 	ldrd	r3, r2, [r7, #264]	; 0x108
 80068be:	f887 a0ff 	strb.w	sl, [r7, #255]	; 0xff
 80068c2:	4638      	mov	r0, r7
 80068c4:	4798      	blx	r3
 80068c6:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 80068ca:	3301      	adds	r3, #1
 80068cc:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 80068d0:	2300      	movs	r3, #0
 80068d2:	2101      	movs	r1, #1
 80068d4:	45ab      	cmp	fp, r5
 80068d6:	f8c7 1100 	str.w	r1, [r7, #256]	; 0x100
 80068da:	54fe      	strb	r6, [r7, r3]
 80068dc:	f887 6104 	strb.w	r6, [r7, #260]	; 0x104
 80068e0:	d1e7      	bne.n	80068b2 <d_maybe_print_fold_expression.isra.0+0x9e>
 80068e2:	4642      	mov	r2, r8
 80068e4:	4621      	mov	r1, r4
 80068e6:	4638      	mov	r0, r7
 80068e8:	f7ff ff08 	bl	80066fc <d_print_expr_op>
 80068ec:	464a      	mov	r2, r9
 80068ee:	4621      	mov	r1, r4
 80068f0:	4638      	mov	r0, r7
 80068f2:	f7ff ff3f 	bl	8006774 <d_print_subexpr>
 80068f6:	f8d7 1100 	ldr.w	r1, [r7, #256]	; 0x100
 80068fa:	29ff      	cmp	r1, #255	; 0xff
 80068fc:	d07d      	beq.n	80069fa <d_maybe_print_fold_expression.isra.0+0x1e6>
 80068fe:	1c4a      	adds	r2, r1, #1
 8006900:	2329      	movs	r3, #41	; 0x29
 8006902:	f8c7 2100 	str.w	r2, [r7, #256]	; 0x100
 8006906:	547b      	strb	r3, [r7, r1]
 8006908:	f887 3104 	strb.w	r3, [r7, #260]	; 0x104
 800690c:	9b01      	ldr	r3, [sp, #4]
 800690e:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8006912:	2001      	movs	r0, #1
 8006914:	b003      	add	sp, #12
 8006916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800691a:	2000      	movs	r0, #0
 800691c:	b003      	add	sp, #12
 800691e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006922:	2b72      	cmp	r3, #114	; 0x72
 8006924:	d1f2      	bne.n	800690c <d_maybe_print_fold_expression.isra.0+0xf8>
 8006926:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800692a:	29ff      	cmp	r1, #255	; 0xff
 800692c:	d074      	beq.n	8006a18 <d_maybe_print_fold_expression.isra.0+0x204>
 800692e:	1c4a      	adds	r2, r1, #1
 8006930:	2328      	movs	r3, #40	; 0x28
 8006932:	f8c7 2100 	str.w	r2, [r7, #256]	; 0x100
 8006936:	4638      	mov	r0, r7
 8006938:	547b      	strb	r3, [r7, r1]
 800693a:	4652      	mov	r2, sl
 800693c:	4621      	mov	r1, r4
 800693e:	f887 3104 	strb.w	r3, [r7, #260]	; 0x104
 8006942:	f7ff ff17 	bl	8006774 <d_print_subexpr>
 8006946:	4621      	mov	r1, r4
 8006948:	4c43      	ldr	r4, [pc, #268]	; (8006a58 <d_maybe_print_fold_expression.isra.0+0x244>)
 800694a:	4642      	mov	r2, r8
 800694c:	4638      	mov	r0, r7
 800694e:	f7ff fed5 	bl	80066fc <d_print_expr_op>
 8006952:	f104 0803 	add.w	r8, r4, #3
 8006956:	f8d7 1100 	ldr.w	r1, [r7, #256]	; 0x100
 800695a:	252e      	movs	r5, #46	; 0x2e
 800695c:	2600      	movs	r6, #0
 800695e:	e00a      	b.n	8006976 <d_maybe_print_fold_expression.isra.0+0x162>
 8006960:	460b      	mov	r3, r1
 8006962:	3101      	adds	r1, #1
 8006964:	4544      	cmp	r4, r8
 8006966:	f8c7 1100 	str.w	r1, [r7, #256]	; 0x100
 800696a:	54fd      	strb	r5, [r7, r3]
 800696c:	f887 5104 	strb.w	r5, [r7, #260]	; 0x104
 8006970:	d0cc      	beq.n	800690c <d_maybe_print_fold_expression.isra.0+0xf8>
 8006972:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8006976:	29ff      	cmp	r1, #255	; 0xff
 8006978:	d1f2      	bne.n	8006960 <d_maybe_print_fold_expression.isra.0+0x14c>
 800697a:	e9d7 3242 	ldrd	r3, r2, [r7, #264]	; 0x108
 800697e:	f887 60ff 	strb.w	r6, [r7, #255]	; 0xff
 8006982:	4638      	mov	r0, r7
 8006984:	4798      	blx	r3
 8006986:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 800698a:	3301      	adds	r3, #1
 800698c:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8006990:	2101      	movs	r1, #1
 8006992:	2300      	movs	r3, #0
 8006994:	e7e6      	b.n	8006964 <d_maybe_print_fold_expression.isra.0+0x150>
 8006996:	4d31      	ldr	r5, [pc, #196]	; (8006a5c <d_maybe_print_fold_expression.isra.0+0x248>)
 8006998:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800699c:	f105 0b03 	add.w	fp, r5, #3
 80069a0:	2628      	movs	r6, #40	; 0x28
 80069a2:	f04f 0900 	mov.w	r9, #0
 80069a6:	e00b      	b.n	80069c0 <d_maybe_print_fold_expression.isra.0+0x1ac>
 80069a8:	460b      	mov	r3, r1
 80069aa:	45ab      	cmp	fp, r5
 80069ac:	f101 0101 	add.w	r1, r1, #1
 80069b0:	f8c7 1100 	str.w	r1, [r7, #256]	; 0x100
 80069b4:	54fe      	strb	r6, [r7, r3]
 80069b6:	f887 6104 	strb.w	r6, [r7, #260]	; 0x104
 80069ba:	d017      	beq.n	80069ec <d_maybe_print_fold_expression.isra.0+0x1d8>
 80069bc:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 80069c0:	29ff      	cmp	r1, #255	; 0xff
 80069c2:	d1f1      	bne.n	80069a8 <d_maybe_print_fold_expression.isra.0+0x194>
 80069c4:	e9d7 3242 	ldrd	r3, r2, [r7, #264]	; 0x108
 80069c8:	f887 90ff 	strb.w	r9, [r7, #255]	; 0xff
 80069cc:	4638      	mov	r0, r7
 80069ce:	4798      	blx	r3
 80069d0:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 80069d4:	3301      	adds	r3, #1
 80069d6:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 80069da:	2300      	movs	r3, #0
 80069dc:	2101      	movs	r1, #1
 80069de:	45ab      	cmp	fp, r5
 80069e0:	f8c7 1100 	str.w	r1, [r7, #256]	; 0x100
 80069e4:	54fe      	strb	r6, [r7, r3]
 80069e6:	f887 6104 	strb.w	r6, [r7, #260]	; 0x104
 80069ea:	d1e7      	bne.n	80069bc <d_maybe_print_fold_expression.isra.0+0x1a8>
 80069ec:	4642      	mov	r2, r8
 80069ee:	4621      	mov	r1, r4
 80069f0:	4638      	mov	r0, r7
 80069f2:	f7ff fe83 	bl	80066fc <d_print_expr_op>
 80069f6:	4652      	mov	r2, sl
 80069f8:	e779      	b.n	80068ee <d_maybe_print_fold_expression.isra.0+0xda>
 80069fa:	2400      	movs	r4, #0
 80069fc:	e9d7 3242 	ldrd	r3, r2, [r7, #264]	; 0x108
 8006a00:	f887 40ff 	strb.w	r4, [r7, #255]	; 0xff
 8006a04:	4638      	mov	r0, r7
 8006a06:	4798      	blx	r3
 8006a08:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8006a0c:	3301      	adds	r3, #1
 8006a0e:	4621      	mov	r1, r4
 8006a10:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8006a14:	2201      	movs	r2, #1
 8006a16:	e773      	b.n	8006900 <d_maybe_print_fold_expression.isra.0+0xec>
 8006a18:	2500      	movs	r5, #0
 8006a1a:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8006a1e:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8006a22:	4798      	blx	r3
 8006a24:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8006a28:	3301      	adds	r3, #1
 8006a2a:	4629      	mov	r1, r5
 8006a2c:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8006a30:	2201      	movs	r2, #1
 8006a32:	e77d      	b.n	8006930 <d_maybe_print_fold_expression.isra.0+0x11c>
 8006a34:	2500      	movs	r5, #0
 8006a36:	e9d7 3242 	ldrd	r3, r2, [r7, #264]	; 0x108
 8006a3a:	f887 50ff 	strb.w	r5, [r7, #255]	; 0xff
 8006a3e:	4638      	mov	r0, r7
 8006a40:	4798      	blx	r3
 8006a42:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8006a46:	3301      	adds	r3, #1
 8006a48:	4629      	mov	r1, r5
 8006a4a:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8006a4e:	2201      	movs	r2, #1
 8006a50:	e70c      	b.n	800686c <d_maybe_print_fold_expression.isra.0+0x58>
 8006a52:	bf00      	nop
 8006a54:	08013cdc 	.word	0x08013cdc
 8006a58:	08013dd8 	.word	0x08013dd8
 8006a5c:	08013dd0 	.word	0x08013dd0

08006a60 <d_demangle_callback.constprop.0>:
 8006a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a64:	b0e5      	sub	sp, #404	; 0x194
 8006a66:	f890 9000 	ldrb.w	r9, [r0]
 8006a6a:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
 8006a6e:	af00      	add	r7, sp, #0
 8006a70:	4604      	mov	r4, r0
 8006a72:	4688      	mov	r8, r1
 8006a74:	4616      	mov	r6, r2
 8006a76:	f000 80f2 	beq.w	8006c5e <d_demangle_callback.constprop.0+0x1fe>
 8006a7a:	49c4      	ldr	r1, [pc, #784]	; (8006d8c <d_demangle_callback.constprop.0+0x32c>)
 8006a7c:	2208      	movs	r2, #8
 8006a7e:	4620      	mov	r0, r4
 8006a80:	f008 fb6e 	bl	800f160 <strncmp>
 8006a84:	b948      	cbnz	r0, 8006a9a <d_demangle_callback.constprop.0+0x3a>
 8006a86:	7a23      	ldrb	r3, [r4, #8]
 8006a88:	2b2e      	cmp	r3, #46	; 0x2e
 8006a8a:	f000 80d7 	beq.w	8006c3c <d_demangle_callback.constprop.0+0x1dc>
 8006a8e:	2b5f      	cmp	r3, #95	; 0x5f
 8006a90:	f000 80d4 	beq.w	8006c3c <d_demangle_callback.constprop.0+0x1dc>
 8006a94:	2b24      	cmp	r3, #36	; 0x24
 8006a96:	f000 80d1 	beq.w	8006c3c <d_demangle_callback.constprop.0+0x1dc>
 8006a9a:	f04f 0a00 	mov.w	sl, #0
 8006a9e:	4620      	mov	r0, r4
 8006aa0:	f000 fa48 	bl	8006f34 <strlen>
 8006aa4:	1822      	adds	r2, r4, r0
 8006aa6:	ea4f 0b40 	mov.w	fp, r0, lsl #1
 8006aaa:	2311      	movs	r3, #17
 8006aac:	60fa      	str	r2, [r7, #12]
 8006aae:	f5bb 6f00 	cmp.w	fp, #2048	; 0x800
 8006ab2:	f04f 0200 	mov.w	r2, #0
 8006ab6:	e9c7 3404 	strd	r3, r4, [r7, #16]
 8006aba:	e9c7 2b07 	strd	r2, fp, [r7, #28]
 8006abe:	e9c7 220c 	strd	r2, r2, [r7, #48]	; 0x30
 8006ac2:	e9c7 220e 	strd	r2, r2, [r7, #56]	; 0x38
 8006ac6:	62f8      	str	r0, [r7, #44]	; 0x2c
 8006ac8:	60bc      	str	r4, [r7, #8]
 8006aca:	62ba      	str	r2, [r7, #40]	; 0x28
 8006acc:	643a      	str	r2, [r7, #64]	; 0x40
 8006ace:	f200 80af 	bhi.w	8006c30 <d_demangle_callback.constprop.0+0x1d0>
 8006ad2:	466d      	mov	r5, sp
 8006ad4:	0081      	lsls	r1, r0, #2
 8006ad6:	eba5 1340 	sub.w	r3, r5, r0, lsl #5
 8006ada:	3107      	adds	r1, #7
 8006adc:	f021 0107 	bic.w	r1, r1, #7
 8006ae0:	469d      	mov	sp, r3
 8006ae2:	ebad 0d01 	sub.w	sp, sp, r1
 8006ae6:	f1ba 0f01 	cmp.w	sl, #1
 8006aea:	f8c7 d024 	str.w	sp, [r7, #36]	; 0x24
 8006aee:	61bb      	str	r3, [r7, #24]
 8006af0:	f000 80c9 	beq.w	8006c86 <d_demangle_callback.constprop.0+0x226>
 8006af4:	f1aa 0102 	sub.w	r1, sl, #2
 8006af8:	2901      	cmp	r1, #1
 8006afa:	f200 80ca 	bhi.w	8006c92 <d_demangle_callback.constprop.0+0x232>
 8006afe:	7ae1      	ldrb	r1, [r4, #11]
 8006b00:	f1ba 0f02 	cmp.w	sl, #2
 8006b04:	bf08      	it	eq
 8006b06:	f04f 0944 	moveq.w	r9, #68	; 0x44
 8006b0a:	f104 0a0b 	add.w	sl, r4, #11
 8006b0e:	bf18      	it	ne
 8006b10:	f04f 0945 	movne.w	r9, #69	; 0x45
 8006b14:	295f      	cmp	r1, #95	; 0x5f
 8006b16:	f8c7 a014 	str.w	sl, [r7, #20]
 8006b1a:	f000 80a7 	beq.w	8006c6c <d_demangle_callback.constprop.0+0x20c>
 8006b1e:	4650      	mov	r0, sl
 8006b20:	607b      	str	r3, [r7, #4]
 8006b22:	f000 fa07 	bl	8006f34 <strlen>
 8006b26:	f1bb 0f00 	cmp.w	fp, #0
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	f340 811a 	ble.w	8006d64 <d_demangle_callback.constprop.0+0x304>
 8006b30:	2200      	movs	r2, #0
 8006b32:	2101      	movs	r1, #1
 8006b34:	605a      	str	r2, [r3, #4]
 8006b36:	61f9      	str	r1, [r7, #28]
 8006b38:	2800      	cmp	r0, #0
 8006b3a:	f000 8113 	beq.w	8006d64 <d_demangle_callback.constprop.0+0x304>
 8006b3e:	e9c3 a002 	strd	sl, r0, [r3, #8]
 8006b42:	701a      	strb	r2, [r3, #0]
 8006b44:	461a      	mov	r2, r3
 8006b46:	4649      	mov	r1, r9
 8006b48:	2300      	movs	r3, #0
 8006b4a:	f107 0008 	add.w	r0, r7, #8
 8006b4e:	f7f9 fb3f 	bl	80001d0 <d_make_comp>
 8006b52:	697c      	ldr	r4, [r7, #20]
 8006b54:	4681      	mov	r9, r0
 8006b56:	4620      	mov	r0, r4
 8006b58:	f000 f9ec 	bl	8006f34 <strlen>
 8006b5c:	1823      	adds	r3, r4, r0
 8006b5e:	617b      	str	r3, [r7, #20]
 8006b60:	5c23      	ldrb	r3, [r4, r0]
 8006b62:	2b00      	cmp	r3, #0
 8006b64:	f040 8092 	bne.w	8006c8c <d_demangle_callback.constprop.0+0x22c>
 8006b68:	f1b9 0f00 	cmp.w	r9, #0
 8006b6c:	f000 808e 	beq.w	8006c8c <d_demangle_callback.constprop.0+0x22c>
 8006b70:	f107 0444 	add.w	r4, r7, #68	; 0x44
 8006b74:	4620      	mov	r0, r4
 8006b76:	4649      	mov	r1, r9
 8006b78:	e9c4 3344 	strd	r3, r3, [r4, #272]	; 0x110
 8006b7c:	e9c4 3349 	strd	r3, r3, [r4, #292]	; 0x124
 8006b80:	e9c4 3346 	strd	r3, r3, [r4, #280]	; 0x118
 8006b84:	e9c4 334b 	strd	r3, r3, [r4, #300]	; 0x12c
 8006b88:	e9c4 334d 	strd	r3, r3, [r4, #308]	; 0x134
 8006b8c:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
 8006b90:	607b      	str	r3, [r7, #4]
 8006b92:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006b96:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006b9a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8006b9e:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8006ba2:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
 8006ba6:	f8c4 610c 	str.w	r6, [r4, #268]	; 0x10c
 8006baa:	f7f9 fb77 	bl	800029c <d_count_templates_scopes>
 8006bae:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8006bb2:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8006bb6:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 8006bba:	bfbc      	itt	lt
 8006bbc:	687b      	ldrlt	r3, [r7, #4]
 8006bbe:	f8c4 311c 	strlt.w	r3, [r4, #284]	; 0x11c
 8006bc2:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8006bc6:	2a01      	cmp	r2, #1
 8006bc8:	4610      	mov	r0, r2
 8006bca:	46e8      	mov	r8, sp
 8006bcc:	bfb8      	it	lt
 8006bce:	2001      	movlt	r0, #1
 8006bd0:	fb03 f302 	mul.w	r3, r3, r2
 8006bd4:	eba8 02c0 	sub.w	r2, r8, r0, lsl #3
 8006bd8:	2b01      	cmp	r3, #1
 8006bda:	4695      	mov	sp, r2
 8006bdc:	46ec      	mov	ip, sp
 8006bde:	4619      	mov	r1, r3
 8006be0:	bfb8      	it	lt
 8006be2:	2101      	movlt	r1, #1
 8006be4:	ebac 01c1 	sub.w	r1, ip, r1, lsl #3
 8006be8:	468d      	mov	sp, r1
 8006bea:	464a      	mov	r2, r9
 8006bec:	2600      	movs	r6, #0
 8006bee:	2111      	movs	r1, #17
 8006bf0:	4620      	mov	r0, r4
 8006bf2:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8006bf6:	f8c4 c130 	str.w	ip, [r4, #304]	; 0x130
 8006bfa:	f8c4 d13c 	str.w	sp, [r4, #316]	; 0x13c
 8006bfe:	f8c4 6148 	str.w	r6, [r4, #328]	; 0x148
 8006c02:	f7fb ff35 	bl	8002a70 <d_print_comp>
 8006c06:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006c0a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006c0e:	5466      	strb	r6, [r4, r1]
 8006c10:	46c5      	mov	sp, r8
 8006c12:	4620      	mov	r0, r4
 8006c14:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006c18:	4798      	blx	r3
 8006c1a:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
 8006c1e:	fab0 f080 	clz	r0, r0
 8006c22:	0940      	lsrs	r0, r0, #5
 8006c24:	46ad      	mov	sp, r5
 8006c26:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8006c2a:	46bd      	mov	sp, r7
 8006c2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c30:	4610      	mov	r0, r2
 8006c32:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8006c36:	46bd      	mov	sp, r7
 8006c38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c3c:	7a63      	ldrb	r3, [r4, #9]
 8006c3e:	2b44      	cmp	r3, #68	; 0x44
 8006c40:	d002      	beq.n	8006c48 <d_demangle_callback.constprop.0+0x1e8>
 8006c42:	2b49      	cmp	r3, #73	; 0x49
 8006c44:	f47f af29 	bne.w	8006a9a <d_demangle_callback.constprop.0+0x3a>
 8006c48:	7aa2      	ldrb	r2, [r4, #10]
 8006c4a:	2a5f      	cmp	r2, #95	; 0x5f
 8006c4c:	f47f af25 	bne.w	8006a9a <d_demangle_callback.constprop.0+0x3a>
 8006c50:	2b49      	cmp	r3, #73	; 0x49
 8006c52:	bf0c      	ite	eq
 8006c54:	f04f 0a02 	moveq.w	sl, #2
 8006c58:	f04f 0a03 	movne.w	sl, #3
 8006c5c:	e71f      	b.n	8006a9e <d_demangle_callback.constprop.0+0x3e>
 8006c5e:	7843      	ldrb	r3, [r0, #1]
 8006c60:	2b5a      	cmp	r3, #90	; 0x5a
 8006c62:	f47f af0a 	bne.w	8006a7a <d_demangle_callback.constprop.0+0x1a>
 8006c66:	f04f 0a01 	mov.w	sl, #1
 8006c6a:	e718      	b.n	8006a9e <d_demangle_callback.constprop.0+0x3e>
 8006c6c:	7b21      	ldrb	r1, [r4, #12]
 8006c6e:	295a      	cmp	r1, #90	; 0x5a
 8006c70:	f47f af55 	bne.w	8006b1e <d_demangle_callback.constprop.0+0xbe>
 8006c74:	340d      	adds	r4, #13
 8006c76:	4611      	mov	r1, r2
 8006c78:	f107 0008 	add.w	r0, r7, #8
 8006c7c:	617c      	str	r4, [r7, #20]
 8006c7e:	f7fa fb47 	bl	8001310 <d_encoding>
 8006c82:	4603      	mov	r3, r0
 8006c84:	e75e      	b.n	8006b44 <d_demangle_callback.constprop.0+0xe4>
 8006c86:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
 8006c8a:	d00a      	beq.n	8006ca2 <d_demangle_callback.constprop.0+0x242>
 8006c8c:	2000      	movs	r0, #0
 8006c8e:	46ad      	mov	sp, r5
 8006c90:	e7c9      	b.n	8006c26 <d_demangle_callback.constprop.0+0x1c6>
 8006c92:	f107 0008 	add.w	r0, r7, #8
 8006c96:	f7fa ff67 	bl	8001b68 <d_type>
 8006c9a:	697b      	ldr	r3, [r7, #20]
 8006c9c:	4681      	mov	r9, r0
 8006c9e:	781b      	ldrb	r3, [r3, #0]
 8006ca0:	e75f      	b.n	8006b62 <d_demangle_callback.constprop.0+0x102>
 8006ca2:	7863      	ldrb	r3, [r4, #1]
 8006ca4:	2b5a      	cmp	r3, #90	; 0x5a
 8006ca6:	d1f1      	bne.n	8006c8c <d_demangle_callback.constprop.0+0x22c>
 8006ca8:	3402      	adds	r4, #2
 8006caa:	4651      	mov	r1, sl
 8006cac:	f107 0008 	add.w	r0, r7, #8
 8006cb0:	617c      	str	r4, [r7, #20]
 8006cb2:	f7fa fb2d 	bl	8001310 <d_encoding>
 8006cb6:	693b      	ldr	r3, [r7, #16]
 8006cb8:	f013 0f01 	tst.w	r3, #1
 8006cbc:	4681      	mov	r9, r0
 8006cbe:	f04f 0200 	mov.w	r2, #0
 8006cc2:	d05f      	beq.n	8006d84 <d_demangle_callback.constprop.0+0x324>
 8006cc4:	f8d7 c014 	ldr.w	ip, [r7, #20]
 8006cc8:	f89c 3000 	ldrb.w	r3, [ip]
 8006ccc:	2b2e      	cmp	r3, #46	; 0x2e
 8006cce:	f47f af48 	bne.w	8006b62 <d_demangle_callback.constprop.0+0x102>
 8006cd2:	4614      	mov	r4, r2
 8006cd4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8006cd8:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8006cdc:	2a19      	cmp	r2, #25
 8006cde:	d945      	bls.n	8006d6c <d_demangle_callback.constprop.0+0x30c>
 8006ce0:	2b5f      	cmp	r3, #95	; 0x5f
 8006ce2:	d043      	beq.n	8006d6c <d_demangle_callback.constprop.0+0x30c>
 8006ce4:	3b30      	subs	r3, #48	; 0x30
 8006ce6:	2b09      	cmp	r3, #9
 8006ce8:	d84c      	bhi.n	8006d84 <d_demangle_callback.constprop.0+0x324>
 8006cea:	f89c 1000 	ldrb.w	r1, [ip]
 8006cee:	4663      	mov	r3, ip
 8006cf0:	292e      	cmp	r1, #46	; 0x2e
 8006cf2:	d112      	bne.n	8006d1a <d_demangle_callback.constprop.0+0x2ba>
 8006cf4:	785a      	ldrb	r2, [r3, #1]
 8006cf6:	3a30      	subs	r2, #48	; 0x30
 8006cf8:	2a09      	cmp	r2, #9
 8006cfa:	d80e      	bhi.n	8006d1a <d_demangle_callback.constprop.0+0x2ba>
 8006cfc:	789a      	ldrb	r2, [r3, #2]
 8006cfe:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8006d02:	2909      	cmp	r1, #9
 8006d04:	f103 0302 	add.w	r3, r3, #2
 8006d08:	d805      	bhi.n	8006d16 <d_demangle_callback.constprop.0+0x2b6>
 8006d0a:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8006d0e:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8006d12:	2909      	cmp	r1, #9
 8006d14:	d9f9      	bls.n	8006d0a <d_demangle_callback.constprop.0+0x2aa>
 8006d16:	2a2e      	cmp	r2, #46	; 0x2e
 8006d18:	d0ec      	beq.n	8006cf4 <d_demangle_callback.constprop.0+0x294>
 8006d1a:	e9d7 0107 	ldrd	r0, r1, [r7, #28]
 8006d1e:	4288      	cmp	r0, r1
 8006d20:	617b      	str	r3, [r7, #20]
 8006d22:	eba3 020c 	sub.w	r2, r3, ip
 8006d26:	da1f      	bge.n	8006d68 <d_demangle_callback.constprop.0+0x308>
 8006d28:	69b9      	ldr	r1, [r7, #24]
 8006d2a:	eb01 1300 	add.w	r3, r1, r0, lsl #4
 8006d2e:	f100 0e01 	add.w	lr, r0, #1
 8006d32:	2a00      	cmp	r2, #0
 8006d34:	605c      	str	r4, [r3, #4]
 8006d36:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8006d3a:	f8c7 e01c 	str.w	lr, [r7, #28]
 8006d3e:	dd13      	ble.n	8006d68 <d_demangle_callback.constprop.0+0x308>
 8006d40:	605c      	str	r4, [r3, #4]
 8006d42:	540c      	strb	r4, [r1, r0]
 8006d44:	e9c3 c202 	strd	ip, r2, [r3, #8]
 8006d48:	464a      	mov	r2, r9
 8006d4a:	214e      	movs	r1, #78	; 0x4e
 8006d4c:	f107 0008 	add.w	r0, r7, #8
 8006d50:	f7f9 fa3e 	bl	80001d0 <d_make_comp>
 8006d54:	f8d7 c014 	ldr.w	ip, [r7, #20]
 8006d58:	f89c 3000 	ldrb.w	r3, [ip]
 8006d5c:	2b2e      	cmp	r3, #46	; 0x2e
 8006d5e:	4681      	mov	r9, r0
 8006d60:	d0b8      	beq.n	8006cd4 <d_demangle_callback.constprop.0+0x274>
 8006d62:	e6fe      	b.n	8006b62 <d_demangle_callback.constprop.0+0x102>
 8006d64:	2300      	movs	r3, #0
 8006d66:	e6ed      	b.n	8006b44 <d_demangle_callback.constprop.0+0xe4>
 8006d68:	2300      	movs	r3, #0
 8006d6a:	e7ed      	b.n	8006d48 <d_demangle_callback.constprop.0+0x2e8>
 8006d6c:	f10c 0202 	add.w	r2, ip, #2
 8006d70:	4613      	mov	r3, r2
 8006d72:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006d76:	f1a1 0061 	sub.w	r0, r1, #97	; 0x61
 8006d7a:	2819      	cmp	r0, #25
 8006d7c:	d9f8      	bls.n	8006d70 <d_demangle_callback.constprop.0+0x310>
 8006d7e:	295f      	cmp	r1, #95	; 0x5f
 8006d80:	d0f6      	beq.n	8006d70 <d_demangle_callback.constprop.0+0x310>
 8006d82:	e7b5      	b.n	8006cf0 <d_demangle_callback.constprop.0+0x290>
 8006d84:	697b      	ldr	r3, [r7, #20]
 8006d86:	781b      	ldrb	r3, [r3, #0]
 8006d88:	e6eb      	b.n	8006b62 <d_demangle_callback.constprop.0+0x102>
 8006d8a:	bf00      	nop
 8006d8c:	08013a5c 	.word	0x08013a5c

08006d90 <__cxa_demangle>:
 8006d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d94:	461e      	mov	r6, r3
 8006d96:	b084      	sub	sp, #16
 8006d98:	2800      	cmp	r0, #0
 8006d9a:	d040      	beq.n	8006e1e <__cxa_demangle+0x8e>
 8006d9c:	460c      	mov	r4, r1
 8006d9e:	4615      	mov	r5, r2
 8006da0:	b109      	cbz	r1, 8006da6 <__cxa_demangle+0x16>
 8006da2:	2a00      	cmp	r2, #0
 8006da4:	d03b      	beq.n	8006e1e <__cxa_demangle+0x8e>
 8006da6:	2300      	movs	r3, #0
 8006da8:	4929      	ldr	r1, [pc, #164]	; (8006e50 <__cxa_demangle+0xc0>)
 8006daa:	466a      	mov	r2, sp
 8006dac:	e9cd 3300 	strd	r3, r3, [sp]
 8006db0:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8006db4:	f7ff fe54 	bl	8006a60 <d_demangle_callback.constprop.0>
 8006db8:	2800      	cmp	r0, #0
 8006dba:	d039      	beq.n	8006e30 <__cxa_demangle+0xa0>
 8006dbc:	9b03      	ldr	r3, [sp, #12]
 8006dbe:	9f00      	ldr	r7, [sp, #0]
 8006dc0:	b9d3      	cbnz	r3, 8006df8 <__cxa_demangle+0x68>
 8006dc2:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8006dc6:	2f00      	cmp	r7, #0
 8006dc8:	d03c      	beq.n	8006e44 <__cxa_demangle+0xb4>
 8006dca:	b32c      	cbz	r4, 8006e18 <__cxa_demangle+0x88>
 8006dcc:	4638      	mov	r0, r7
 8006dce:	f000 f8b1 	bl	8006f34 <strlen>
 8006dd2:	682b      	ldr	r3, [r5, #0]
 8006dd4:	4298      	cmp	r0, r3
 8006dd6:	d219      	bcs.n	8006e0c <__cxa_demangle+0x7c>
 8006dd8:	1c42      	adds	r2, r0, #1
 8006dda:	4639      	mov	r1, r7
 8006ddc:	4620      	mov	r0, r4
 8006dde:	f007 ff2b 	bl	800ec38 <memcpy>
 8006de2:	4638      	mov	r0, r7
 8006de4:	f007 fcd0 	bl	800e788 <free>
 8006de8:	4627      	mov	r7, r4
 8006dea:	b10e      	cbz	r6, 8006df0 <__cxa_demangle+0x60>
 8006dec:	2300      	movs	r3, #0
 8006dee:	6033      	str	r3, [r6, #0]
 8006df0:	4638      	mov	r0, r7
 8006df2:	b004      	add	sp, #16
 8006df4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006df8:	f04f 0801 	mov.w	r8, #1
 8006dfc:	2f00      	cmp	r7, #0
 8006dfe:	d1e4      	bne.n	8006dca <__cxa_demangle+0x3a>
 8006e00:	b18e      	cbz	r6, 8006e26 <__cxa_demangle+0x96>
 8006e02:	f04f 33ff 	mov.w	r3, #4294967295
 8006e06:	6033      	str	r3, [r6, #0]
 8006e08:	2700      	movs	r7, #0
 8006e0a:	e7f1      	b.n	8006df0 <__cxa_demangle+0x60>
 8006e0c:	4620      	mov	r0, r4
 8006e0e:	f007 fcbb 	bl	800e788 <free>
 8006e12:	f8c5 8000 	str.w	r8, [r5]
 8006e16:	e7e8      	b.n	8006dea <__cxa_demangle+0x5a>
 8006e18:	2d00      	cmp	r5, #0
 8006e1a:	d1fa      	bne.n	8006e12 <__cxa_demangle+0x82>
 8006e1c:	e7e5      	b.n	8006dea <__cxa_demangle+0x5a>
 8006e1e:	b116      	cbz	r6, 8006e26 <__cxa_demangle+0x96>
 8006e20:	f06f 0302 	mvn.w	r3, #2
 8006e24:	6033      	str	r3, [r6, #0]
 8006e26:	2700      	movs	r7, #0
 8006e28:	4638      	mov	r0, r7
 8006e2a:	b004      	add	sp, #16
 8006e2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006e30:	9800      	ldr	r0, [sp, #0]
 8006e32:	f007 fca9 	bl	800e788 <free>
 8006e36:	2e00      	cmp	r6, #0
 8006e38:	d0f5      	beq.n	8006e26 <__cxa_demangle+0x96>
 8006e3a:	f06f 0301 	mvn.w	r3, #1
 8006e3e:	6033      	str	r3, [r6, #0]
 8006e40:	2700      	movs	r7, #0
 8006e42:	e7d5      	b.n	8006df0 <__cxa_demangle+0x60>
 8006e44:	2e00      	cmp	r6, #0
 8006e46:	d0ee      	beq.n	8006e26 <__cxa_demangle+0x96>
 8006e48:	f1b8 0f01 	cmp.w	r8, #1
 8006e4c:	d0d9      	beq.n	8006e02 <__cxa_demangle+0x72>
 8006e4e:	e7f4      	b.n	8006e3a <__cxa_demangle+0xaa>
 8006e50:	080008e1 	.word	0x080008e1

08006e54 <__gcclibcxx_demangle_callback>:
 8006e54:	b160      	cbz	r0, 8006e70 <__gcclibcxx_demangle_callback+0x1c>
 8006e56:	b508      	push	{r3, lr}
 8006e58:	b139      	cbz	r1, 8006e6a <__gcclibcxx_demangle_callback+0x16>
 8006e5a:	f7ff fe01 	bl	8006a60 <d_demangle_callback.constprop.0>
 8006e5e:	2800      	cmp	r0, #0
 8006e60:	bf14      	ite	ne
 8006e62:	2000      	movne	r0, #0
 8006e64:	f06f 0001 	mvneq.w	r0, #1
 8006e68:	bd08      	pop	{r3, pc}
 8006e6a:	f06f 0002 	mvn.w	r0, #2
 8006e6e:	bd08      	pop	{r3, pc}
 8006e70:	f06f 0002 	mvn.w	r0, #2
 8006e74:	4770      	bx	lr
 8006e76:	bf00      	nop
	...

08006e80 <memchr>:
 8006e80:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006e84:	2a10      	cmp	r2, #16
 8006e86:	db2b      	blt.n	8006ee0 <memchr+0x60>
 8006e88:	f010 0f07 	tst.w	r0, #7
 8006e8c:	d008      	beq.n	8006ea0 <memchr+0x20>
 8006e8e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006e92:	3a01      	subs	r2, #1
 8006e94:	428b      	cmp	r3, r1
 8006e96:	d02d      	beq.n	8006ef4 <memchr+0x74>
 8006e98:	f010 0f07 	tst.w	r0, #7
 8006e9c:	b342      	cbz	r2, 8006ef0 <memchr+0x70>
 8006e9e:	d1f6      	bne.n	8006e8e <memchr+0xe>
 8006ea0:	b4f0      	push	{r4, r5, r6, r7}
 8006ea2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8006ea6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8006eaa:	f022 0407 	bic.w	r4, r2, #7
 8006eae:	f07f 0700 	mvns.w	r7, #0
 8006eb2:	2300      	movs	r3, #0
 8006eb4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8006eb8:	3c08      	subs	r4, #8
 8006eba:	ea85 0501 	eor.w	r5, r5, r1
 8006ebe:	ea86 0601 	eor.w	r6, r6, r1
 8006ec2:	fa85 f547 	uadd8	r5, r5, r7
 8006ec6:	faa3 f587 	sel	r5, r3, r7
 8006eca:	fa86 f647 	uadd8	r6, r6, r7
 8006ece:	faa5 f687 	sel	r6, r5, r7
 8006ed2:	b98e      	cbnz	r6, 8006ef8 <memchr+0x78>
 8006ed4:	d1ee      	bne.n	8006eb4 <memchr+0x34>
 8006ed6:	bcf0      	pop	{r4, r5, r6, r7}
 8006ed8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006edc:	f002 0207 	and.w	r2, r2, #7
 8006ee0:	b132      	cbz	r2, 8006ef0 <memchr+0x70>
 8006ee2:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006ee6:	3a01      	subs	r2, #1
 8006ee8:	ea83 0301 	eor.w	r3, r3, r1
 8006eec:	b113      	cbz	r3, 8006ef4 <memchr+0x74>
 8006eee:	d1f8      	bne.n	8006ee2 <memchr+0x62>
 8006ef0:	2000      	movs	r0, #0
 8006ef2:	4770      	bx	lr
 8006ef4:	3801      	subs	r0, #1
 8006ef6:	4770      	bx	lr
 8006ef8:	2d00      	cmp	r5, #0
 8006efa:	bf06      	itte	eq
 8006efc:	4635      	moveq	r5, r6
 8006efe:	3803      	subeq	r0, #3
 8006f00:	3807      	subne	r0, #7
 8006f02:	f015 0f01 	tst.w	r5, #1
 8006f06:	d107      	bne.n	8006f18 <memchr+0x98>
 8006f08:	3001      	adds	r0, #1
 8006f0a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8006f0e:	bf02      	ittt	eq
 8006f10:	3001      	addeq	r0, #1
 8006f12:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8006f16:	3001      	addeq	r0, #1
 8006f18:	bcf0      	pop	{r4, r5, r6, r7}
 8006f1a:	3801      	subs	r0, #1
 8006f1c:	4770      	bx	lr
 8006f1e:	bf00      	nop

08006f20 <strcmp>:
 8006f20:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006f24:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006f28:	2a01      	cmp	r2, #1
 8006f2a:	bf28      	it	cs
 8006f2c:	429a      	cmpcs	r2, r3
 8006f2e:	d0f7      	beq.n	8006f20 <strcmp>
 8006f30:	1ad0      	subs	r0, r2, r3
 8006f32:	4770      	bx	lr

08006f34 <strlen>:
 8006f34:	4603      	mov	r3, r0
 8006f36:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006f3a:	2a00      	cmp	r2, #0
 8006f3c:	d1fb      	bne.n	8006f36 <strlen+0x2>
 8006f3e:	1a18      	subs	r0, r3, r0
 8006f40:	3801      	subs	r0, #1
 8006f42:	4770      	bx	lr

08006f44 <__aeabi_drsub>:
 8006f44:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8006f48:	e002      	b.n	8006f50 <__adddf3>
 8006f4a:	bf00      	nop

08006f4c <__aeabi_dsub>:
 8006f4c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08006f50 <__adddf3>:
 8006f50:	b530      	push	{r4, r5, lr}
 8006f52:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8006f56:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8006f5a:	ea94 0f05 	teq	r4, r5
 8006f5e:	bf08      	it	eq
 8006f60:	ea90 0f02 	teqeq	r0, r2
 8006f64:	bf1f      	itttt	ne
 8006f66:	ea54 0c00 	orrsne.w	ip, r4, r0
 8006f6a:	ea55 0c02 	orrsne.w	ip, r5, r2
 8006f6e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8006f72:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8006f76:	f000 80e2 	beq.w	800713e <__adddf3+0x1ee>
 8006f7a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8006f7e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8006f82:	bfb8      	it	lt
 8006f84:	426d      	neglt	r5, r5
 8006f86:	dd0c      	ble.n	8006fa2 <__adddf3+0x52>
 8006f88:	442c      	add	r4, r5
 8006f8a:	ea80 0202 	eor.w	r2, r0, r2
 8006f8e:	ea81 0303 	eor.w	r3, r1, r3
 8006f92:	ea82 0000 	eor.w	r0, r2, r0
 8006f96:	ea83 0101 	eor.w	r1, r3, r1
 8006f9a:	ea80 0202 	eor.w	r2, r0, r2
 8006f9e:	ea81 0303 	eor.w	r3, r1, r3
 8006fa2:	2d36      	cmp	r5, #54	; 0x36
 8006fa4:	bf88      	it	hi
 8006fa6:	bd30      	pophi	{r4, r5, pc}
 8006fa8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8006fac:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8006fb0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8006fb4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8006fb8:	d002      	beq.n	8006fc0 <__adddf3+0x70>
 8006fba:	4240      	negs	r0, r0
 8006fbc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8006fc0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8006fc4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8006fc8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8006fcc:	d002      	beq.n	8006fd4 <__adddf3+0x84>
 8006fce:	4252      	negs	r2, r2
 8006fd0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8006fd4:	ea94 0f05 	teq	r4, r5
 8006fd8:	f000 80a7 	beq.w	800712a <__adddf3+0x1da>
 8006fdc:	f1a4 0401 	sub.w	r4, r4, #1
 8006fe0:	f1d5 0e20 	rsbs	lr, r5, #32
 8006fe4:	db0d      	blt.n	8007002 <__adddf3+0xb2>
 8006fe6:	fa02 fc0e 	lsl.w	ip, r2, lr
 8006fea:	fa22 f205 	lsr.w	r2, r2, r5
 8006fee:	1880      	adds	r0, r0, r2
 8006ff0:	f141 0100 	adc.w	r1, r1, #0
 8006ff4:	fa03 f20e 	lsl.w	r2, r3, lr
 8006ff8:	1880      	adds	r0, r0, r2
 8006ffa:	fa43 f305 	asr.w	r3, r3, r5
 8006ffe:	4159      	adcs	r1, r3
 8007000:	e00e      	b.n	8007020 <__adddf3+0xd0>
 8007002:	f1a5 0520 	sub.w	r5, r5, #32
 8007006:	f10e 0e20 	add.w	lr, lr, #32
 800700a:	2a01      	cmp	r2, #1
 800700c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007010:	bf28      	it	cs
 8007012:	f04c 0c02 	orrcs.w	ip, ip, #2
 8007016:	fa43 f305 	asr.w	r3, r3, r5
 800701a:	18c0      	adds	r0, r0, r3
 800701c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007020:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007024:	d507      	bpl.n	8007036 <__adddf3+0xe6>
 8007026:	f04f 0e00 	mov.w	lr, #0
 800702a:	f1dc 0c00 	rsbs	ip, ip, #0
 800702e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8007032:	eb6e 0101 	sbc.w	r1, lr, r1
 8007036:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800703a:	d31b      	bcc.n	8007074 <__adddf3+0x124>
 800703c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8007040:	d30c      	bcc.n	800705c <__adddf3+0x10c>
 8007042:	0849      	lsrs	r1, r1, #1
 8007044:	ea5f 0030 	movs.w	r0, r0, rrx
 8007048:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800704c:	f104 0401 	add.w	r4, r4, #1
 8007050:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8007054:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8007058:	f080 809a 	bcs.w	8007190 <__adddf3+0x240>
 800705c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007060:	bf08      	it	eq
 8007062:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8007066:	f150 0000 	adcs.w	r0, r0, #0
 800706a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800706e:	ea41 0105 	orr.w	r1, r1, r5
 8007072:	bd30      	pop	{r4, r5, pc}
 8007074:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8007078:	4140      	adcs	r0, r0
 800707a:	eb41 0101 	adc.w	r1, r1, r1
 800707e:	3c01      	subs	r4, #1
 8007080:	bf28      	it	cs
 8007082:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8007086:	d2e9      	bcs.n	800705c <__adddf3+0x10c>
 8007088:	f091 0f00 	teq	r1, #0
 800708c:	bf04      	itt	eq
 800708e:	4601      	moveq	r1, r0
 8007090:	2000      	moveq	r0, #0
 8007092:	fab1 f381 	clz	r3, r1
 8007096:	bf08      	it	eq
 8007098:	3320      	addeq	r3, #32
 800709a:	f1a3 030b 	sub.w	r3, r3, #11
 800709e:	f1b3 0220 	subs.w	r2, r3, #32
 80070a2:	da0c      	bge.n	80070be <__adddf3+0x16e>
 80070a4:	320c      	adds	r2, #12
 80070a6:	dd08      	ble.n	80070ba <__adddf3+0x16a>
 80070a8:	f102 0c14 	add.w	ip, r2, #20
 80070ac:	f1c2 020c 	rsb	r2, r2, #12
 80070b0:	fa01 f00c 	lsl.w	r0, r1, ip
 80070b4:	fa21 f102 	lsr.w	r1, r1, r2
 80070b8:	e00c      	b.n	80070d4 <__adddf3+0x184>
 80070ba:	f102 0214 	add.w	r2, r2, #20
 80070be:	bfd8      	it	le
 80070c0:	f1c2 0c20 	rsble	ip, r2, #32
 80070c4:	fa01 f102 	lsl.w	r1, r1, r2
 80070c8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80070cc:	bfdc      	itt	le
 80070ce:	ea41 010c 	orrle.w	r1, r1, ip
 80070d2:	4090      	lslle	r0, r2
 80070d4:	1ae4      	subs	r4, r4, r3
 80070d6:	bfa2      	ittt	ge
 80070d8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80070dc:	4329      	orrge	r1, r5
 80070de:	bd30      	popge	{r4, r5, pc}
 80070e0:	ea6f 0404 	mvn.w	r4, r4
 80070e4:	3c1f      	subs	r4, #31
 80070e6:	da1c      	bge.n	8007122 <__adddf3+0x1d2>
 80070e8:	340c      	adds	r4, #12
 80070ea:	dc0e      	bgt.n	800710a <__adddf3+0x1ba>
 80070ec:	f104 0414 	add.w	r4, r4, #20
 80070f0:	f1c4 0220 	rsb	r2, r4, #32
 80070f4:	fa20 f004 	lsr.w	r0, r0, r4
 80070f8:	fa01 f302 	lsl.w	r3, r1, r2
 80070fc:	ea40 0003 	orr.w	r0, r0, r3
 8007100:	fa21 f304 	lsr.w	r3, r1, r4
 8007104:	ea45 0103 	orr.w	r1, r5, r3
 8007108:	bd30      	pop	{r4, r5, pc}
 800710a:	f1c4 040c 	rsb	r4, r4, #12
 800710e:	f1c4 0220 	rsb	r2, r4, #32
 8007112:	fa20 f002 	lsr.w	r0, r0, r2
 8007116:	fa01 f304 	lsl.w	r3, r1, r4
 800711a:	ea40 0003 	orr.w	r0, r0, r3
 800711e:	4629      	mov	r1, r5
 8007120:	bd30      	pop	{r4, r5, pc}
 8007122:	fa21 f004 	lsr.w	r0, r1, r4
 8007126:	4629      	mov	r1, r5
 8007128:	bd30      	pop	{r4, r5, pc}
 800712a:	f094 0f00 	teq	r4, #0
 800712e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8007132:	bf06      	itte	eq
 8007134:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8007138:	3401      	addeq	r4, #1
 800713a:	3d01      	subne	r5, #1
 800713c:	e74e      	b.n	8006fdc <__adddf3+0x8c>
 800713e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007142:	bf18      	it	ne
 8007144:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007148:	d029      	beq.n	800719e <__adddf3+0x24e>
 800714a:	ea94 0f05 	teq	r4, r5
 800714e:	bf08      	it	eq
 8007150:	ea90 0f02 	teqeq	r0, r2
 8007154:	d005      	beq.n	8007162 <__adddf3+0x212>
 8007156:	ea54 0c00 	orrs.w	ip, r4, r0
 800715a:	bf04      	itt	eq
 800715c:	4619      	moveq	r1, r3
 800715e:	4610      	moveq	r0, r2
 8007160:	bd30      	pop	{r4, r5, pc}
 8007162:	ea91 0f03 	teq	r1, r3
 8007166:	bf1e      	ittt	ne
 8007168:	2100      	movne	r1, #0
 800716a:	2000      	movne	r0, #0
 800716c:	bd30      	popne	{r4, r5, pc}
 800716e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8007172:	d105      	bne.n	8007180 <__adddf3+0x230>
 8007174:	0040      	lsls	r0, r0, #1
 8007176:	4149      	adcs	r1, r1
 8007178:	bf28      	it	cs
 800717a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800717e:	bd30      	pop	{r4, r5, pc}
 8007180:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8007184:	bf3c      	itt	cc
 8007186:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800718a:	bd30      	popcc	{r4, r5, pc}
 800718c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007190:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8007194:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007198:	f04f 0000 	mov.w	r0, #0
 800719c:	bd30      	pop	{r4, r5, pc}
 800719e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80071a2:	bf1a      	itte	ne
 80071a4:	4619      	movne	r1, r3
 80071a6:	4610      	movne	r0, r2
 80071a8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80071ac:	bf1c      	itt	ne
 80071ae:	460b      	movne	r3, r1
 80071b0:	4602      	movne	r2, r0
 80071b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80071b6:	bf06      	itte	eq
 80071b8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80071bc:	ea91 0f03 	teqeq	r1, r3
 80071c0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80071c4:	bd30      	pop	{r4, r5, pc}
 80071c6:	bf00      	nop

080071c8 <__aeabi_ui2d>:
 80071c8:	f090 0f00 	teq	r0, #0
 80071cc:	bf04      	itt	eq
 80071ce:	2100      	moveq	r1, #0
 80071d0:	4770      	bxeq	lr
 80071d2:	b530      	push	{r4, r5, lr}
 80071d4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80071d8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80071dc:	f04f 0500 	mov.w	r5, #0
 80071e0:	f04f 0100 	mov.w	r1, #0
 80071e4:	e750      	b.n	8007088 <__adddf3+0x138>
 80071e6:	bf00      	nop

080071e8 <__aeabi_i2d>:
 80071e8:	f090 0f00 	teq	r0, #0
 80071ec:	bf04      	itt	eq
 80071ee:	2100      	moveq	r1, #0
 80071f0:	4770      	bxeq	lr
 80071f2:	b530      	push	{r4, r5, lr}
 80071f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80071f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80071fc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8007200:	bf48      	it	mi
 8007202:	4240      	negmi	r0, r0
 8007204:	f04f 0100 	mov.w	r1, #0
 8007208:	e73e      	b.n	8007088 <__adddf3+0x138>
 800720a:	bf00      	nop

0800720c <__aeabi_f2d>:
 800720c:	0042      	lsls	r2, r0, #1
 800720e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8007212:	ea4f 0131 	mov.w	r1, r1, rrx
 8007216:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800721a:	bf1f      	itttt	ne
 800721c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8007220:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8007224:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8007228:	4770      	bxne	lr
 800722a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800722e:	bf08      	it	eq
 8007230:	4770      	bxeq	lr
 8007232:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8007236:	bf04      	itt	eq
 8007238:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800723c:	4770      	bxeq	lr
 800723e:	b530      	push	{r4, r5, lr}
 8007240:	f44f 7460 	mov.w	r4, #896	; 0x380
 8007244:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007248:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800724c:	e71c      	b.n	8007088 <__adddf3+0x138>
 800724e:	bf00      	nop

08007250 <__aeabi_ul2d>:
 8007250:	ea50 0201 	orrs.w	r2, r0, r1
 8007254:	bf08      	it	eq
 8007256:	4770      	bxeq	lr
 8007258:	b530      	push	{r4, r5, lr}
 800725a:	f04f 0500 	mov.w	r5, #0
 800725e:	e00a      	b.n	8007276 <__aeabi_l2d+0x16>

08007260 <__aeabi_l2d>:
 8007260:	ea50 0201 	orrs.w	r2, r0, r1
 8007264:	bf08      	it	eq
 8007266:	4770      	bxeq	lr
 8007268:	b530      	push	{r4, r5, lr}
 800726a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800726e:	d502      	bpl.n	8007276 <__aeabi_l2d+0x16>
 8007270:	4240      	negs	r0, r0
 8007272:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007276:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800727a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800727e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8007282:	f43f aed8 	beq.w	8007036 <__adddf3+0xe6>
 8007286:	f04f 0203 	mov.w	r2, #3
 800728a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800728e:	bf18      	it	ne
 8007290:	3203      	addne	r2, #3
 8007292:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007296:	bf18      	it	ne
 8007298:	3203      	addne	r2, #3
 800729a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800729e:	f1c2 0320 	rsb	r3, r2, #32
 80072a2:	fa00 fc03 	lsl.w	ip, r0, r3
 80072a6:	fa20 f002 	lsr.w	r0, r0, r2
 80072aa:	fa01 fe03 	lsl.w	lr, r1, r3
 80072ae:	ea40 000e 	orr.w	r0, r0, lr
 80072b2:	fa21 f102 	lsr.w	r1, r1, r2
 80072b6:	4414      	add	r4, r2
 80072b8:	e6bd      	b.n	8007036 <__adddf3+0xe6>
 80072ba:	bf00      	nop

080072bc <__aeabi_dmul>:
 80072bc:	b570      	push	{r4, r5, r6, lr}
 80072be:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80072c2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80072c6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80072ca:	bf1d      	ittte	ne
 80072cc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80072d0:	ea94 0f0c 	teqne	r4, ip
 80072d4:	ea95 0f0c 	teqne	r5, ip
 80072d8:	f000 f8de 	bleq	8007498 <__aeabi_dmul+0x1dc>
 80072dc:	442c      	add	r4, r5
 80072de:	ea81 0603 	eor.w	r6, r1, r3
 80072e2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80072e6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80072ea:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80072ee:	bf18      	it	ne
 80072f0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80072f4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80072f8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80072fc:	d038      	beq.n	8007370 <__aeabi_dmul+0xb4>
 80072fe:	fba0 ce02 	umull	ip, lr, r0, r2
 8007302:	f04f 0500 	mov.w	r5, #0
 8007306:	fbe1 e502 	umlal	lr, r5, r1, r2
 800730a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800730e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8007312:	f04f 0600 	mov.w	r6, #0
 8007316:	fbe1 5603 	umlal	r5, r6, r1, r3
 800731a:	f09c 0f00 	teq	ip, #0
 800731e:	bf18      	it	ne
 8007320:	f04e 0e01 	orrne.w	lr, lr, #1
 8007324:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8007328:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800732c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8007330:	d204      	bcs.n	800733c <__aeabi_dmul+0x80>
 8007332:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8007336:	416d      	adcs	r5, r5
 8007338:	eb46 0606 	adc.w	r6, r6, r6
 800733c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8007340:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8007344:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8007348:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 800734c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8007350:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8007354:	bf88      	it	hi
 8007356:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800735a:	d81e      	bhi.n	800739a <__aeabi_dmul+0xde>
 800735c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8007360:	bf08      	it	eq
 8007362:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8007366:	f150 0000 	adcs.w	r0, r0, #0
 800736a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800736e:	bd70      	pop	{r4, r5, r6, pc}
 8007370:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8007374:	ea46 0101 	orr.w	r1, r6, r1
 8007378:	ea40 0002 	orr.w	r0, r0, r2
 800737c:	ea81 0103 	eor.w	r1, r1, r3
 8007380:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8007384:	bfc2      	ittt	gt
 8007386:	ebd4 050c 	rsbsgt	r5, r4, ip
 800738a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800738e:	bd70      	popgt	{r4, r5, r6, pc}
 8007390:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007394:	f04f 0e00 	mov.w	lr, #0
 8007398:	3c01      	subs	r4, #1
 800739a:	f300 80ab 	bgt.w	80074f4 <__aeabi_dmul+0x238>
 800739e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80073a2:	bfde      	ittt	le
 80073a4:	2000      	movle	r0, #0
 80073a6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80073aa:	bd70      	pople	{r4, r5, r6, pc}
 80073ac:	f1c4 0400 	rsb	r4, r4, #0
 80073b0:	3c20      	subs	r4, #32
 80073b2:	da35      	bge.n	8007420 <__aeabi_dmul+0x164>
 80073b4:	340c      	adds	r4, #12
 80073b6:	dc1b      	bgt.n	80073f0 <__aeabi_dmul+0x134>
 80073b8:	f104 0414 	add.w	r4, r4, #20
 80073bc:	f1c4 0520 	rsb	r5, r4, #32
 80073c0:	fa00 f305 	lsl.w	r3, r0, r5
 80073c4:	fa20 f004 	lsr.w	r0, r0, r4
 80073c8:	fa01 f205 	lsl.w	r2, r1, r5
 80073cc:	ea40 0002 	orr.w	r0, r0, r2
 80073d0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80073d4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80073d8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80073dc:	fa21 f604 	lsr.w	r6, r1, r4
 80073e0:	eb42 0106 	adc.w	r1, r2, r6
 80073e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80073e8:	bf08      	it	eq
 80073ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80073ee:	bd70      	pop	{r4, r5, r6, pc}
 80073f0:	f1c4 040c 	rsb	r4, r4, #12
 80073f4:	f1c4 0520 	rsb	r5, r4, #32
 80073f8:	fa00 f304 	lsl.w	r3, r0, r4
 80073fc:	fa20 f005 	lsr.w	r0, r0, r5
 8007400:	fa01 f204 	lsl.w	r2, r1, r4
 8007404:	ea40 0002 	orr.w	r0, r0, r2
 8007408:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800740c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8007410:	f141 0100 	adc.w	r1, r1, #0
 8007414:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8007418:	bf08      	it	eq
 800741a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800741e:	bd70      	pop	{r4, r5, r6, pc}
 8007420:	f1c4 0520 	rsb	r5, r4, #32
 8007424:	fa00 f205 	lsl.w	r2, r0, r5
 8007428:	ea4e 0e02 	orr.w	lr, lr, r2
 800742c:	fa20 f304 	lsr.w	r3, r0, r4
 8007430:	fa01 f205 	lsl.w	r2, r1, r5
 8007434:	ea43 0302 	orr.w	r3, r3, r2
 8007438:	fa21 f004 	lsr.w	r0, r1, r4
 800743c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8007440:	fa21 f204 	lsr.w	r2, r1, r4
 8007444:	ea20 0002 	bic.w	r0, r0, r2
 8007448:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 800744c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8007450:	bf08      	it	eq
 8007452:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8007456:	bd70      	pop	{r4, r5, r6, pc}
 8007458:	f094 0f00 	teq	r4, #0
 800745c:	d10f      	bne.n	800747e <__aeabi_dmul+0x1c2>
 800745e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8007462:	0040      	lsls	r0, r0, #1
 8007464:	eb41 0101 	adc.w	r1, r1, r1
 8007468:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800746c:	bf08      	it	eq
 800746e:	3c01      	subeq	r4, #1
 8007470:	d0f7      	beq.n	8007462 <__aeabi_dmul+0x1a6>
 8007472:	ea41 0106 	orr.w	r1, r1, r6
 8007476:	f095 0f00 	teq	r5, #0
 800747a:	bf18      	it	ne
 800747c:	4770      	bxne	lr
 800747e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8007482:	0052      	lsls	r2, r2, #1
 8007484:	eb43 0303 	adc.w	r3, r3, r3
 8007488:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 800748c:	bf08      	it	eq
 800748e:	3d01      	subeq	r5, #1
 8007490:	d0f7      	beq.n	8007482 <__aeabi_dmul+0x1c6>
 8007492:	ea43 0306 	orr.w	r3, r3, r6
 8007496:	4770      	bx	lr
 8007498:	ea94 0f0c 	teq	r4, ip
 800749c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80074a0:	bf18      	it	ne
 80074a2:	ea95 0f0c 	teqne	r5, ip
 80074a6:	d00c      	beq.n	80074c2 <__aeabi_dmul+0x206>
 80074a8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80074ac:	bf18      	it	ne
 80074ae:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80074b2:	d1d1      	bne.n	8007458 <__aeabi_dmul+0x19c>
 80074b4:	ea81 0103 	eor.w	r1, r1, r3
 80074b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80074bc:	f04f 0000 	mov.w	r0, #0
 80074c0:	bd70      	pop	{r4, r5, r6, pc}
 80074c2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80074c6:	bf06      	itte	eq
 80074c8:	4610      	moveq	r0, r2
 80074ca:	4619      	moveq	r1, r3
 80074cc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80074d0:	d019      	beq.n	8007506 <__aeabi_dmul+0x24a>
 80074d2:	ea94 0f0c 	teq	r4, ip
 80074d6:	d102      	bne.n	80074de <__aeabi_dmul+0x222>
 80074d8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80074dc:	d113      	bne.n	8007506 <__aeabi_dmul+0x24a>
 80074de:	ea95 0f0c 	teq	r5, ip
 80074e2:	d105      	bne.n	80074f0 <__aeabi_dmul+0x234>
 80074e4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80074e8:	bf1c      	itt	ne
 80074ea:	4610      	movne	r0, r2
 80074ec:	4619      	movne	r1, r3
 80074ee:	d10a      	bne.n	8007506 <__aeabi_dmul+0x24a>
 80074f0:	ea81 0103 	eor.w	r1, r1, r3
 80074f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80074f8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80074fc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007500:	f04f 0000 	mov.w	r0, #0
 8007504:	bd70      	pop	{r4, r5, r6, pc}
 8007506:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800750a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800750e:	bd70      	pop	{r4, r5, r6, pc}

08007510 <__aeabi_ddiv>:
 8007510:	b570      	push	{r4, r5, r6, lr}
 8007512:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007516:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800751a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800751e:	bf1d      	ittte	ne
 8007520:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8007524:	ea94 0f0c 	teqne	r4, ip
 8007528:	ea95 0f0c 	teqne	r5, ip
 800752c:	f000 f8a7 	bleq	800767e <__aeabi_ddiv+0x16e>
 8007530:	eba4 0405 	sub.w	r4, r4, r5
 8007534:	ea81 0e03 	eor.w	lr, r1, r3
 8007538:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800753c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007540:	f000 8088 	beq.w	8007654 <__aeabi_ddiv+0x144>
 8007544:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007548:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 800754c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8007550:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8007554:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8007558:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 800755c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8007560:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8007564:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8007568:	429d      	cmp	r5, r3
 800756a:	bf08      	it	eq
 800756c:	4296      	cmpeq	r6, r2
 800756e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8007572:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8007576:	d202      	bcs.n	800757e <__aeabi_ddiv+0x6e>
 8007578:	085b      	lsrs	r3, r3, #1
 800757a:	ea4f 0232 	mov.w	r2, r2, rrx
 800757e:	1ab6      	subs	r6, r6, r2
 8007580:	eb65 0503 	sbc.w	r5, r5, r3
 8007584:	085b      	lsrs	r3, r3, #1
 8007586:	ea4f 0232 	mov.w	r2, r2, rrx
 800758a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800758e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8007592:	ebb6 0e02 	subs.w	lr, r6, r2
 8007596:	eb75 0e03 	sbcs.w	lr, r5, r3
 800759a:	bf22      	ittt	cs
 800759c:	1ab6      	subcs	r6, r6, r2
 800759e:	4675      	movcs	r5, lr
 80075a0:	ea40 000c 	orrcs.w	r0, r0, ip
 80075a4:	085b      	lsrs	r3, r3, #1
 80075a6:	ea4f 0232 	mov.w	r2, r2, rrx
 80075aa:	ebb6 0e02 	subs.w	lr, r6, r2
 80075ae:	eb75 0e03 	sbcs.w	lr, r5, r3
 80075b2:	bf22      	ittt	cs
 80075b4:	1ab6      	subcs	r6, r6, r2
 80075b6:	4675      	movcs	r5, lr
 80075b8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80075bc:	085b      	lsrs	r3, r3, #1
 80075be:	ea4f 0232 	mov.w	r2, r2, rrx
 80075c2:	ebb6 0e02 	subs.w	lr, r6, r2
 80075c6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80075ca:	bf22      	ittt	cs
 80075cc:	1ab6      	subcs	r6, r6, r2
 80075ce:	4675      	movcs	r5, lr
 80075d0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80075d4:	085b      	lsrs	r3, r3, #1
 80075d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80075da:	ebb6 0e02 	subs.w	lr, r6, r2
 80075de:	eb75 0e03 	sbcs.w	lr, r5, r3
 80075e2:	bf22      	ittt	cs
 80075e4:	1ab6      	subcs	r6, r6, r2
 80075e6:	4675      	movcs	r5, lr
 80075e8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80075ec:	ea55 0e06 	orrs.w	lr, r5, r6
 80075f0:	d018      	beq.n	8007624 <__aeabi_ddiv+0x114>
 80075f2:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80075f6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80075fa:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80075fe:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8007602:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8007606:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800760a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800760e:	d1c0      	bne.n	8007592 <__aeabi_ddiv+0x82>
 8007610:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8007614:	d10b      	bne.n	800762e <__aeabi_ddiv+0x11e>
 8007616:	ea41 0100 	orr.w	r1, r1, r0
 800761a:	f04f 0000 	mov.w	r0, #0
 800761e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8007622:	e7b6      	b.n	8007592 <__aeabi_ddiv+0x82>
 8007624:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8007628:	bf04      	itt	eq
 800762a:	4301      	orreq	r1, r0
 800762c:	2000      	moveq	r0, #0
 800762e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8007632:	bf88      	it	hi
 8007634:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8007638:	f63f aeaf 	bhi.w	800739a <__aeabi_dmul+0xde>
 800763c:	ebb5 0c03 	subs.w	ip, r5, r3
 8007640:	bf04      	itt	eq
 8007642:	ebb6 0c02 	subseq.w	ip, r6, r2
 8007646:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800764a:	f150 0000 	adcs.w	r0, r0, #0
 800764e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8007652:	bd70      	pop	{r4, r5, r6, pc}
 8007654:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8007658:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 800765c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8007660:	bfc2      	ittt	gt
 8007662:	ebd4 050c 	rsbsgt	r5, r4, ip
 8007666:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800766a:	bd70      	popgt	{r4, r5, r6, pc}
 800766c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007670:	f04f 0e00 	mov.w	lr, #0
 8007674:	3c01      	subs	r4, #1
 8007676:	e690      	b.n	800739a <__aeabi_dmul+0xde>
 8007678:	ea45 0e06 	orr.w	lr, r5, r6
 800767c:	e68d      	b.n	800739a <__aeabi_dmul+0xde>
 800767e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8007682:	ea94 0f0c 	teq	r4, ip
 8007686:	bf08      	it	eq
 8007688:	ea95 0f0c 	teqeq	r5, ip
 800768c:	f43f af3b 	beq.w	8007506 <__aeabi_dmul+0x24a>
 8007690:	ea94 0f0c 	teq	r4, ip
 8007694:	d10a      	bne.n	80076ac <__aeabi_ddiv+0x19c>
 8007696:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800769a:	f47f af34 	bne.w	8007506 <__aeabi_dmul+0x24a>
 800769e:	ea95 0f0c 	teq	r5, ip
 80076a2:	f47f af25 	bne.w	80074f0 <__aeabi_dmul+0x234>
 80076a6:	4610      	mov	r0, r2
 80076a8:	4619      	mov	r1, r3
 80076aa:	e72c      	b.n	8007506 <__aeabi_dmul+0x24a>
 80076ac:	ea95 0f0c 	teq	r5, ip
 80076b0:	d106      	bne.n	80076c0 <__aeabi_ddiv+0x1b0>
 80076b2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80076b6:	f43f aefd 	beq.w	80074b4 <__aeabi_dmul+0x1f8>
 80076ba:	4610      	mov	r0, r2
 80076bc:	4619      	mov	r1, r3
 80076be:	e722      	b.n	8007506 <__aeabi_dmul+0x24a>
 80076c0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80076c4:	bf18      	it	ne
 80076c6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80076ca:	f47f aec5 	bne.w	8007458 <__aeabi_dmul+0x19c>
 80076ce:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80076d2:	f47f af0d 	bne.w	80074f0 <__aeabi_dmul+0x234>
 80076d6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80076da:	f47f aeeb 	bne.w	80074b4 <__aeabi_dmul+0x1f8>
 80076de:	e712      	b.n	8007506 <__aeabi_dmul+0x24a>

080076e0 <__gedf2>:
 80076e0:	f04f 3cff 	mov.w	ip, #4294967295
 80076e4:	e006      	b.n	80076f4 <__cmpdf2+0x4>
 80076e6:	bf00      	nop

080076e8 <__ledf2>:
 80076e8:	f04f 0c01 	mov.w	ip, #1
 80076ec:	e002      	b.n	80076f4 <__cmpdf2+0x4>
 80076ee:	bf00      	nop

080076f0 <__cmpdf2>:
 80076f0:	f04f 0c01 	mov.w	ip, #1
 80076f4:	f84d cd04 	str.w	ip, [sp, #-4]!
 80076f8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80076fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8007700:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8007704:	bf18      	it	ne
 8007706:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800770a:	d01b      	beq.n	8007744 <__cmpdf2+0x54>
 800770c:	b001      	add	sp, #4
 800770e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8007712:	bf0c      	ite	eq
 8007714:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8007718:	ea91 0f03 	teqne	r1, r3
 800771c:	bf02      	ittt	eq
 800771e:	ea90 0f02 	teqeq	r0, r2
 8007722:	2000      	moveq	r0, #0
 8007724:	4770      	bxeq	lr
 8007726:	f110 0f00 	cmn.w	r0, #0
 800772a:	ea91 0f03 	teq	r1, r3
 800772e:	bf58      	it	pl
 8007730:	4299      	cmppl	r1, r3
 8007732:	bf08      	it	eq
 8007734:	4290      	cmpeq	r0, r2
 8007736:	bf2c      	ite	cs
 8007738:	17d8      	asrcs	r0, r3, #31
 800773a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800773e:	f040 0001 	orr.w	r0, r0, #1
 8007742:	4770      	bx	lr
 8007744:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8007748:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800774c:	d102      	bne.n	8007754 <__cmpdf2+0x64>
 800774e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8007752:	d107      	bne.n	8007764 <__cmpdf2+0x74>
 8007754:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8007758:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800775c:	d1d6      	bne.n	800770c <__cmpdf2+0x1c>
 800775e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8007762:	d0d3      	beq.n	800770c <__cmpdf2+0x1c>
 8007764:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007768:	4770      	bx	lr
 800776a:	bf00      	nop

0800776c <__aeabi_cdrcmple>:
 800776c:	4684      	mov	ip, r0
 800776e:	4610      	mov	r0, r2
 8007770:	4662      	mov	r2, ip
 8007772:	468c      	mov	ip, r1
 8007774:	4619      	mov	r1, r3
 8007776:	4663      	mov	r3, ip
 8007778:	e000      	b.n	800777c <__aeabi_cdcmpeq>
 800777a:	bf00      	nop

0800777c <__aeabi_cdcmpeq>:
 800777c:	b501      	push	{r0, lr}
 800777e:	f7ff ffb7 	bl	80076f0 <__cmpdf2>
 8007782:	2800      	cmp	r0, #0
 8007784:	bf48      	it	mi
 8007786:	f110 0f00 	cmnmi.w	r0, #0
 800778a:	bd01      	pop	{r0, pc}

0800778c <__aeabi_dcmpeq>:
 800778c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007790:	f7ff fff4 	bl	800777c <__aeabi_cdcmpeq>
 8007794:	bf0c      	ite	eq
 8007796:	2001      	moveq	r0, #1
 8007798:	2000      	movne	r0, #0
 800779a:	f85d fb08 	ldr.w	pc, [sp], #8
 800779e:	bf00      	nop

080077a0 <__aeabi_dcmplt>:
 80077a0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80077a4:	f7ff ffea 	bl	800777c <__aeabi_cdcmpeq>
 80077a8:	bf34      	ite	cc
 80077aa:	2001      	movcc	r0, #1
 80077ac:	2000      	movcs	r0, #0
 80077ae:	f85d fb08 	ldr.w	pc, [sp], #8
 80077b2:	bf00      	nop

080077b4 <__aeabi_dcmple>:
 80077b4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80077b8:	f7ff ffe0 	bl	800777c <__aeabi_cdcmpeq>
 80077bc:	bf94      	ite	ls
 80077be:	2001      	movls	r0, #1
 80077c0:	2000      	movhi	r0, #0
 80077c2:	f85d fb08 	ldr.w	pc, [sp], #8
 80077c6:	bf00      	nop

080077c8 <__aeabi_dcmpge>:
 80077c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80077cc:	f7ff ffce 	bl	800776c <__aeabi_cdrcmple>
 80077d0:	bf94      	ite	ls
 80077d2:	2001      	movls	r0, #1
 80077d4:	2000      	movhi	r0, #0
 80077d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80077da:	bf00      	nop

080077dc <__aeabi_dcmpgt>:
 80077dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80077e0:	f7ff ffc4 	bl	800776c <__aeabi_cdrcmple>
 80077e4:	bf34      	ite	cc
 80077e6:	2001      	movcc	r0, #1
 80077e8:	2000      	movcs	r0, #0
 80077ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80077ee:	bf00      	nop

080077f0 <__aeabi_dcmpun>:
 80077f0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80077f4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80077f8:	d102      	bne.n	8007800 <__aeabi_dcmpun+0x10>
 80077fa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80077fe:	d10a      	bne.n	8007816 <__aeabi_dcmpun+0x26>
 8007800:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8007804:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8007808:	d102      	bne.n	8007810 <__aeabi_dcmpun+0x20>
 800780a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800780e:	d102      	bne.n	8007816 <__aeabi_dcmpun+0x26>
 8007810:	f04f 0000 	mov.w	r0, #0
 8007814:	4770      	bx	lr
 8007816:	f04f 0001 	mov.w	r0, #1
 800781a:	4770      	bx	lr

0800781c <__aeabi_d2iz>:
 800781c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007820:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8007824:	d215      	bcs.n	8007852 <__aeabi_d2iz+0x36>
 8007826:	d511      	bpl.n	800784c <__aeabi_d2iz+0x30>
 8007828:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 800782c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8007830:	d912      	bls.n	8007858 <__aeabi_d2iz+0x3c>
 8007832:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007836:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800783a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800783e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007842:	fa23 f002 	lsr.w	r0, r3, r2
 8007846:	bf18      	it	ne
 8007848:	4240      	negne	r0, r0
 800784a:	4770      	bx	lr
 800784c:	f04f 0000 	mov.w	r0, #0
 8007850:	4770      	bx	lr
 8007852:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8007856:	d105      	bne.n	8007864 <__aeabi_d2iz+0x48>
 8007858:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 800785c:	bf08      	it	eq
 800785e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007862:	4770      	bx	lr
 8007864:	f04f 0000 	mov.w	r0, #0
 8007868:	4770      	bx	lr
 800786a:	bf00      	nop

0800786c <__aeabi_uldivmod>:
 800786c:	b953      	cbnz	r3, 8007884 <__aeabi_uldivmod+0x18>
 800786e:	b94a      	cbnz	r2, 8007884 <__aeabi_uldivmod+0x18>
 8007870:	2900      	cmp	r1, #0
 8007872:	bf08      	it	eq
 8007874:	2800      	cmpeq	r0, #0
 8007876:	bf1c      	itt	ne
 8007878:	f04f 31ff 	movne.w	r1, #4294967295
 800787c:	f04f 30ff 	movne.w	r0, #4294967295
 8007880:	f001 b8c0 	b.w	8008a04 <__aeabi_idiv0>
 8007884:	f1ad 0c08 	sub.w	ip, sp, #8
 8007888:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800788c:	f000 f806 	bl	800789c <__udivmoddi4>
 8007890:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007894:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007898:	b004      	add	sp, #16
 800789a:	4770      	bx	lr

0800789c <__udivmoddi4>:
 800789c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80078a0:	9d08      	ldr	r5, [sp, #32]
 80078a2:	4604      	mov	r4, r0
 80078a4:	468c      	mov	ip, r1
 80078a6:	2b00      	cmp	r3, #0
 80078a8:	f040 8083 	bne.w	80079b2 <__udivmoddi4+0x116>
 80078ac:	428a      	cmp	r2, r1
 80078ae:	4617      	mov	r7, r2
 80078b0:	d947      	bls.n	8007942 <__udivmoddi4+0xa6>
 80078b2:	fab2 f282 	clz	r2, r2
 80078b6:	b142      	cbz	r2, 80078ca <__udivmoddi4+0x2e>
 80078b8:	f1c2 0020 	rsb	r0, r2, #32
 80078bc:	fa24 f000 	lsr.w	r0, r4, r0
 80078c0:	4091      	lsls	r1, r2
 80078c2:	4097      	lsls	r7, r2
 80078c4:	ea40 0c01 	orr.w	ip, r0, r1
 80078c8:	4094      	lsls	r4, r2
 80078ca:	ea4f 4817 	mov.w	r8, r7, lsr #16
 80078ce:	0c23      	lsrs	r3, r4, #16
 80078d0:	fbbc f6f8 	udiv	r6, ip, r8
 80078d4:	fa1f fe87 	uxth.w	lr, r7
 80078d8:	fb08 c116 	mls	r1, r8, r6, ip
 80078dc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80078e0:	fb06 f10e 	mul.w	r1, r6, lr
 80078e4:	4299      	cmp	r1, r3
 80078e6:	d909      	bls.n	80078fc <__udivmoddi4+0x60>
 80078e8:	18fb      	adds	r3, r7, r3
 80078ea:	f106 30ff 	add.w	r0, r6, #4294967295
 80078ee:	f080 8119 	bcs.w	8007b24 <__udivmoddi4+0x288>
 80078f2:	4299      	cmp	r1, r3
 80078f4:	f240 8116 	bls.w	8007b24 <__udivmoddi4+0x288>
 80078f8:	3e02      	subs	r6, #2
 80078fa:	443b      	add	r3, r7
 80078fc:	1a5b      	subs	r3, r3, r1
 80078fe:	b2a4      	uxth	r4, r4
 8007900:	fbb3 f0f8 	udiv	r0, r3, r8
 8007904:	fb08 3310 	mls	r3, r8, r0, r3
 8007908:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800790c:	fb00 fe0e 	mul.w	lr, r0, lr
 8007910:	45a6      	cmp	lr, r4
 8007912:	d909      	bls.n	8007928 <__udivmoddi4+0x8c>
 8007914:	193c      	adds	r4, r7, r4
 8007916:	f100 33ff 	add.w	r3, r0, #4294967295
 800791a:	f080 8105 	bcs.w	8007b28 <__udivmoddi4+0x28c>
 800791e:	45a6      	cmp	lr, r4
 8007920:	f240 8102 	bls.w	8007b28 <__udivmoddi4+0x28c>
 8007924:	3802      	subs	r0, #2
 8007926:	443c      	add	r4, r7
 8007928:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800792c:	eba4 040e 	sub.w	r4, r4, lr
 8007930:	2600      	movs	r6, #0
 8007932:	b11d      	cbz	r5, 800793c <__udivmoddi4+0xa0>
 8007934:	40d4      	lsrs	r4, r2
 8007936:	2300      	movs	r3, #0
 8007938:	e9c5 4300 	strd	r4, r3, [r5]
 800793c:	4631      	mov	r1, r6
 800793e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007942:	b902      	cbnz	r2, 8007946 <__udivmoddi4+0xaa>
 8007944:	deff      	udf	#255	; 0xff
 8007946:	fab2 f282 	clz	r2, r2
 800794a:	2a00      	cmp	r2, #0
 800794c:	d150      	bne.n	80079f0 <__udivmoddi4+0x154>
 800794e:	1bcb      	subs	r3, r1, r7
 8007950:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8007954:	fa1f f887 	uxth.w	r8, r7
 8007958:	2601      	movs	r6, #1
 800795a:	fbb3 fcfe 	udiv	ip, r3, lr
 800795e:	0c21      	lsrs	r1, r4, #16
 8007960:	fb0e 331c 	mls	r3, lr, ip, r3
 8007964:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8007968:	fb08 f30c 	mul.w	r3, r8, ip
 800796c:	428b      	cmp	r3, r1
 800796e:	d907      	bls.n	8007980 <__udivmoddi4+0xe4>
 8007970:	1879      	adds	r1, r7, r1
 8007972:	f10c 30ff 	add.w	r0, ip, #4294967295
 8007976:	d202      	bcs.n	800797e <__udivmoddi4+0xe2>
 8007978:	428b      	cmp	r3, r1
 800797a:	f200 80e9 	bhi.w	8007b50 <__udivmoddi4+0x2b4>
 800797e:	4684      	mov	ip, r0
 8007980:	1ac9      	subs	r1, r1, r3
 8007982:	b2a3      	uxth	r3, r4
 8007984:	fbb1 f0fe 	udiv	r0, r1, lr
 8007988:	fb0e 1110 	mls	r1, lr, r0, r1
 800798c:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8007990:	fb08 f800 	mul.w	r8, r8, r0
 8007994:	45a0      	cmp	r8, r4
 8007996:	d907      	bls.n	80079a8 <__udivmoddi4+0x10c>
 8007998:	193c      	adds	r4, r7, r4
 800799a:	f100 33ff 	add.w	r3, r0, #4294967295
 800799e:	d202      	bcs.n	80079a6 <__udivmoddi4+0x10a>
 80079a0:	45a0      	cmp	r8, r4
 80079a2:	f200 80d9 	bhi.w	8007b58 <__udivmoddi4+0x2bc>
 80079a6:	4618      	mov	r0, r3
 80079a8:	eba4 0408 	sub.w	r4, r4, r8
 80079ac:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80079b0:	e7bf      	b.n	8007932 <__udivmoddi4+0x96>
 80079b2:	428b      	cmp	r3, r1
 80079b4:	d909      	bls.n	80079ca <__udivmoddi4+0x12e>
 80079b6:	2d00      	cmp	r5, #0
 80079b8:	f000 80b1 	beq.w	8007b1e <__udivmoddi4+0x282>
 80079bc:	2600      	movs	r6, #0
 80079be:	e9c5 0100 	strd	r0, r1, [r5]
 80079c2:	4630      	mov	r0, r6
 80079c4:	4631      	mov	r1, r6
 80079c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80079ca:	fab3 f683 	clz	r6, r3
 80079ce:	2e00      	cmp	r6, #0
 80079d0:	d14a      	bne.n	8007a68 <__udivmoddi4+0x1cc>
 80079d2:	428b      	cmp	r3, r1
 80079d4:	d302      	bcc.n	80079dc <__udivmoddi4+0x140>
 80079d6:	4282      	cmp	r2, r0
 80079d8:	f200 80b8 	bhi.w	8007b4c <__udivmoddi4+0x2b0>
 80079dc:	1a84      	subs	r4, r0, r2
 80079de:	eb61 0103 	sbc.w	r1, r1, r3
 80079e2:	2001      	movs	r0, #1
 80079e4:	468c      	mov	ip, r1
 80079e6:	2d00      	cmp	r5, #0
 80079e8:	d0a8      	beq.n	800793c <__udivmoddi4+0xa0>
 80079ea:	e9c5 4c00 	strd	r4, ip, [r5]
 80079ee:	e7a5      	b.n	800793c <__udivmoddi4+0xa0>
 80079f0:	f1c2 0320 	rsb	r3, r2, #32
 80079f4:	fa20 f603 	lsr.w	r6, r0, r3
 80079f8:	4097      	lsls	r7, r2
 80079fa:	fa01 f002 	lsl.w	r0, r1, r2
 80079fe:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8007a02:	40d9      	lsrs	r1, r3
 8007a04:	4330      	orrs	r0, r6
 8007a06:	0c03      	lsrs	r3, r0, #16
 8007a08:	fbb1 f6fe 	udiv	r6, r1, lr
 8007a0c:	fa1f f887 	uxth.w	r8, r7
 8007a10:	fb0e 1116 	mls	r1, lr, r6, r1
 8007a14:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8007a18:	fb06 f108 	mul.w	r1, r6, r8
 8007a1c:	4299      	cmp	r1, r3
 8007a1e:	fa04 f402 	lsl.w	r4, r4, r2
 8007a22:	d909      	bls.n	8007a38 <__udivmoddi4+0x19c>
 8007a24:	18fb      	adds	r3, r7, r3
 8007a26:	f106 3cff 	add.w	ip, r6, #4294967295
 8007a2a:	f080 808d 	bcs.w	8007b48 <__udivmoddi4+0x2ac>
 8007a2e:	4299      	cmp	r1, r3
 8007a30:	f240 808a 	bls.w	8007b48 <__udivmoddi4+0x2ac>
 8007a34:	3e02      	subs	r6, #2
 8007a36:	443b      	add	r3, r7
 8007a38:	1a5b      	subs	r3, r3, r1
 8007a3a:	b281      	uxth	r1, r0
 8007a3c:	fbb3 f0fe 	udiv	r0, r3, lr
 8007a40:	fb0e 3310 	mls	r3, lr, r0, r3
 8007a44:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8007a48:	fb00 f308 	mul.w	r3, r0, r8
 8007a4c:	428b      	cmp	r3, r1
 8007a4e:	d907      	bls.n	8007a60 <__udivmoddi4+0x1c4>
 8007a50:	1879      	adds	r1, r7, r1
 8007a52:	f100 3cff 	add.w	ip, r0, #4294967295
 8007a56:	d273      	bcs.n	8007b40 <__udivmoddi4+0x2a4>
 8007a58:	428b      	cmp	r3, r1
 8007a5a:	d971      	bls.n	8007b40 <__udivmoddi4+0x2a4>
 8007a5c:	3802      	subs	r0, #2
 8007a5e:	4439      	add	r1, r7
 8007a60:	1acb      	subs	r3, r1, r3
 8007a62:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8007a66:	e778      	b.n	800795a <__udivmoddi4+0xbe>
 8007a68:	f1c6 0c20 	rsb	ip, r6, #32
 8007a6c:	fa03 f406 	lsl.w	r4, r3, r6
 8007a70:	fa22 f30c 	lsr.w	r3, r2, ip
 8007a74:	431c      	orrs	r4, r3
 8007a76:	fa20 f70c 	lsr.w	r7, r0, ip
 8007a7a:	fa01 f306 	lsl.w	r3, r1, r6
 8007a7e:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8007a82:	fa21 f10c 	lsr.w	r1, r1, ip
 8007a86:	431f      	orrs	r7, r3
 8007a88:	0c3b      	lsrs	r3, r7, #16
 8007a8a:	fbb1 f9fe 	udiv	r9, r1, lr
 8007a8e:	fa1f f884 	uxth.w	r8, r4
 8007a92:	fb0e 1119 	mls	r1, lr, r9, r1
 8007a96:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8007a9a:	fb09 fa08 	mul.w	sl, r9, r8
 8007a9e:	458a      	cmp	sl, r1
 8007aa0:	fa02 f206 	lsl.w	r2, r2, r6
 8007aa4:	fa00 f306 	lsl.w	r3, r0, r6
 8007aa8:	d908      	bls.n	8007abc <__udivmoddi4+0x220>
 8007aaa:	1861      	adds	r1, r4, r1
 8007aac:	f109 30ff 	add.w	r0, r9, #4294967295
 8007ab0:	d248      	bcs.n	8007b44 <__udivmoddi4+0x2a8>
 8007ab2:	458a      	cmp	sl, r1
 8007ab4:	d946      	bls.n	8007b44 <__udivmoddi4+0x2a8>
 8007ab6:	f1a9 0902 	sub.w	r9, r9, #2
 8007aba:	4421      	add	r1, r4
 8007abc:	eba1 010a 	sub.w	r1, r1, sl
 8007ac0:	b2bf      	uxth	r7, r7
 8007ac2:	fbb1 f0fe 	udiv	r0, r1, lr
 8007ac6:	fb0e 1110 	mls	r1, lr, r0, r1
 8007aca:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8007ace:	fb00 f808 	mul.w	r8, r0, r8
 8007ad2:	45b8      	cmp	r8, r7
 8007ad4:	d907      	bls.n	8007ae6 <__udivmoddi4+0x24a>
 8007ad6:	19e7      	adds	r7, r4, r7
 8007ad8:	f100 31ff 	add.w	r1, r0, #4294967295
 8007adc:	d22e      	bcs.n	8007b3c <__udivmoddi4+0x2a0>
 8007ade:	45b8      	cmp	r8, r7
 8007ae0:	d92c      	bls.n	8007b3c <__udivmoddi4+0x2a0>
 8007ae2:	3802      	subs	r0, #2
 8007ae4:	4427      	add	r7, r4
 8007ae6:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8007aea:	eba7 0708 	sub.w	r7, r7, r8
 8007aee:	fba0 8902 	umull	r8, r9, r0, r2
 8007af2:	454f      	cmp	r7, r9
 8007af4:	46c6      	mov	lr, r8
 8007af6:	4649      	mov	r1, r9
 8007af8:	d31a      	bcc.n	8007b30 <__udivmoddi4+0x294>
 8007afa:	d017      	beq.n	8007b2c <__udivmoddi4+0x290>
 8007afc:	b15d      	cbz	r5, 8007b16 <__udivmoddi4+0x27a>
 8007afe:	ebb3 020e 	subs.w	r2, r3, lr
 8007b02:	eb67 0701 	sbc.w	r7, r7, r1
 8007b06:	fa07 fc0c 	lsl.w	ip, r7, ip
 8007b0a:	40f2      	lsrs	r2, r6
 8007b0c:	ea4c 0202 	orr.w	r2, ip, r2
 8007b10:	40f7      	lsrs	r7, r6
 8007b12:	e9c5 2700 	strd	r2, r7, [r5]
 8007b16:	2600      	movs	r6, #0
 8007b18:	4631      	mov	r1, r6
 8007b1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007b1e:	462e      	mov	r6, r5
 8007b20:	4628      	mov	r0, r5
 8007b22:	e70b      	b.n	800793c <__udivmoddi4+0xa0>
 8007b24:	4606      	mov	r6, r0
 8007b26:	e6e9      	b.n	80078fc <__udivmoddi4+0x60>
 8007b28:	4618      	mov	r0, r3
 8007b2a:	e6fd      	b.n	8007928 <__udivmoddi4+0x8c>
 8007b2c:	4543      	cmp	r3, r8
 8007b2e:	d2e5      	bcs.n	8007afc <__udivmoddi4+0x260>
 8007b30:	ebb8 0e02 	subs.w	lr, r8, r2
 8007b34:	eb69 0104 	sbc.w	r1, r9, r4
 8007b38:	3801      	subs	r0, #1
 8007b3a:	e7df      	b.n	8007afc <__udivmoddi4+0x260>
 8007b3c:	4608      	mov	r0, r1
 8007b3e:	e7d2      	b.n	8007ae6 <__udivmoddi4+0x24a>
 8007b40:	4660      	mov	r0, ip
 8007b42:	e78d      	b.n	8007a60 <__udivmoddi4+0x1c4>
 8007b44:	4681      	mov	r9, r0
 8007b46:	e7b9      	b.n	8007abc <__udivmoddi4+0x220>
 8007b48:	4666      	mov	r6, ip
 8007b4a:	e775      	b.n	8007a38 <__udivmoddi4+0x19c>
 8007b4c:	4630      	mov	r0, r6
 8007b4e:	e74a      	b.n	80079e6 <__udivmoddi4+0x14a>
 8007b50:	f1ac 0c02 	sub.w	ip, ip, #2
 8007b54:	4439      	add	r1, r7
 8007b56:	e713      	b.n	8007980 <__udivmoddi4+0xe4>
 8007b58:	3802      	subs	r0, #2
 8007b5a:	443c      	add	r4, r7
 8007b5c:	e724      	b.n	80079a8 <__udivmoddi4+0x10c>
 8007b5e:	bf00      	nop

08007b60 <selfrel_offset31>:
 8007b60:	6803      	ldr	r3, [r0, #0]
 8007b62:	005a      	lsls	r2, r3, #1
 8007b64:	bf4c      	ite	mi
 8007b66:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8007b6a:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 8007b6e:	4418      	add	r0, r3
 8007b70:	4770      	bx	lr
 8007b72:	bf00      	nop

08007b74 <search_EIT_table>:
 8007b74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007b78:	b329      	cbz	r1, 8007bc6 <search_EIT_table+0x52>
 8007b7a:	1e4f      	subs	r7, r1, #1
 8007b7c:	4604      	mov	r4, r0
 8007b7e:	4615      	mov	r5, r2
 8007b80:	463e      	mov	r6, r7
 8007b82:	f04f 0800 	mov.w	r8, #0
 8007b86:	eb08 0106 	add.w	r1, r8, r6
 8007b8a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8007b8e:	1049      	asrs	r1, r1, #1
 8007b90:	eb04 09c1 	add.w	r9, r4, r1, lsl #3
 8007b94:	4648      	mov	r0, r9
 8007b96:	f7ff ffe3 	bl	8007b60 <selfrel_offset31>
 8007b9a:	4603      	mov	r3, r0
 8007b9c:	00c8      	lsls	r0, r1, #3
 8007b9e:	3008      	adds	r0, #8
 8007ba0:	428f      	cmp	r7, r1
 8007ba2:	4420      	add	r0, r4
 8007ba4:	d009      	beq.n	8007bba <search_EIT_table+0x46>
 8007ba6:	42ab      	cmp	r3, r5
 8007ba8:	d809      	bhi.n	8007bbe <search_EIT_table+0x4a>
 8007baa:	f7ff ffd9 	bl	8007b60 <selfrel_offset31>
 8007bae:	3801      	subs	r0, #1
 8007bb0:	42a8      	cmp	r0, r5
 8007bb2:	d20a      	bcs.n	8007bca <search_EIT_table+0x56>
 8007bb4:	f101 0801 	add.w	r8, r1, #1
 8007bb8:	e7e5      	b.n	8007b86 <search_EIT_table+0x12>
 8007bba:	42ab      	cmp	r3, r5
 8007bbc:	d905      	bls.n	8007bca <search_EIT_table+0x56>
 8007bbe:	4588      	cmp	r8, r1
 8007bc0:	d001      	beq.n	8007bc6 <search_EIT_table+0x52>
 8007bc2:	1e4e      	subs	r6, r1, #1
 8007bc4:	e7df      	b.n	8007b86 <search_EIT_table+0x12>
 8007bc6:	f04f 0900 	mov.w	r9, #0
 8007bca:	4648      	mov	r0, r9
 8007bcc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08007bd0 <__gnu_unwind_get_pr_addr>:
 8007bd0:	2801      	cmp	r0, #1
 8007bd2:	d007      	beq.n	8007be4 <__gnu_unwind_get_pr_addr+0x14>
 8007bd4:	2802      	cmp	r0, #2
 8007bd6:	d007      	beq.n	8007be8 <__gnu_unwind_get_pr_addr+0x18>
 8007bd8:	4b04      	ldr	r3, [pc, #16]	; (8007bec <__gnu_unwind_get_pr_addr+0x1c>)
 8007bda:	2800      	cmp	r0, #0
 8007bdc:	bf0c      	ite	eq
 8007bde:	4618      	moveq	r0, r3
 8007be0:	2000      	movne	r0, #0
 8007be2:	4770      	bx	lr
 8007be4:	4802      	ldr	r0, [pc, #8]	; (8007bf0 <__gnu_unwind_get_pr_addr+0x20>)
 8007be6:	4770      	bx	lr
 8007be8:	4802      	ldr	r0, [pc, #8]	; (8007bf4 <__gnu_unwind_get_pr_addr+0x24>)
 8007bea:	4770      	bx	lr
 8007bec:	08008295 	.word	0x08008295
 8007bf0:	08008299 	.word	0x08008299
 8007bf4:	0800829d 	.word	0x0800829d

08007bf8 <get_eit_entry>:
 8007bf8:	b530      	push	{r4, r5, lr}
 8007bfa:	4b23      	ldr	r3, [pc, #140]	; (8007c88 <get_eit_entry+0x90>)
 8007bfc:	b083      	sub	sp, #12
 8007bfe:	4604      	mov	r4, r0
 8007c00:	1e8d      	subs	r5, r1, #2
 8007c02:	b33b      	cbz	r3, 8007c54 <get_eit_entry+0x5c>
 8007c04:	a901      	add	r1, sp, #4
 8007c06:	4628      	mov	r0, r5
 8007c08:	f3af 8000 	nop.w
 8007c0c:	b1e8      	cbz	r0, 8007c4a <get_eit_entry+0x52>
 8007c0e:	9901      	ldr	r1, [sp, #4]
 8007c10:	462a      	mov	r2, r5
 8007c12:	f7ff ffaf 	bl	8007b74 <search_EIT_table>
 8007c16:	4601      	mov	r1, r0
 8007c18:	b1b8      	cbz	r0, 8007c4a <get_eit_entry+0x52>
 8007c1a:	f7ff ffa1 	bl	8007b60 <selfrel_offset31>
 8007c1e:	684b      	ldr	r3, [r1, #4]
 8007c20:	64a0      	str	r0, [r4, #72]	; 0x48
 8007c22:	2b01      	cmp	r3, #1
 8007c24:	d02b      	beq.n	8007c7e <get_eit_entry+0x86>
 8007c26:	2b00      	cmp	r3, #0
 8007c28:	f101 0004 	add.w	r0, r1, #4
 8007c2c:	db23      	blt.n	8007c76 <get_eit_entry+0x7e>
 8007c2e:	f7ff ff97 	bl	8007b60 <selfrel_offset31>
 8007c32:	2300      	movs	r3, #0
 8007c34:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8007c38:	6803      	ldr	r3, [r0, #0]
 8007c3a:	2b00      	cmp	r3, #0
 8007c3c:	db10      	blt.n	8007c60 <get_eit_entry+0x68>
 8007c3e:	f7ff ff8f 	bl	8007b60 <selfrel_offset31>
 8007c42:	6120      	str	r0, [r4, #16]
 8007c44:	2000      	movs	r0, #0
 8007c46:	b003      	add	sp, #12
 8007c48:	bd30      	pop	{r4, r5, pc}
 8007c4a:	2300      	movs	r3, #0
 8007c4c:	2009      	movs	r0, #9
 8007c4e:	6123      	str	r3, [r4, #16]
 8007c50:	b003      	add	sp, #12
 8007c52:	bd30      	pop	{r4, r5, pc}
 8007c54:	490d      	ldr	r1, [pc, #52]	; (8007c8c <get_eit_entry+0x94>)
 8007c56:	480e      	ldr	r0, [pc, #56]	; (8007c90 <get_eit_entry+0x98>)
 8007c58:	1a09      	subs	r1, r1, r0
 8007c5a:	10c9      	asrs	r1, r1, #3
 8007c5c:	9101      	str	r1, [sp, #4]
 8007c5e:	e7d7      	b.n	8007c10 <get_eit_entry+0x18>
 8007c60:	f3c3 6003 	ubfx	r0, r3, #24, #4
 8007c64:	f7ff ffb4 	bl	8007bd0 <__gnu_unwind_get_pr_addr>
 8007c68:	2800      	cmp	r0, #0
 8007c6a:	6120      	str	r0, [r4, #16]
 8007c6c:	bf14      	ite	ne
 8007c6e:	2000      	movne	r0, #0
 8007c70:	2009      	moveq	r0, #9
 8007c72:	b003      	add	sp, #12
 8007c74:	bd30      	pop	{r4, r5, pc}
 8007c76:	2301      	movs	r3, #1
 8007c78:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8007c7c:	e7dc      	b.n	8007c38 <get_eit_entry+0x40>
 8007c7e:	2300      	movs	r3, #0
 8007c80:	6123      	str	r3, [r4, #16]
 8007c82:	2005      	movs	r0, #5
 8007c84:	e7df      	b.n	8007c46 <get_eit_entry+0x4e>
 8007c86:	bf00      	nop
 8007c88:	00000000 	.word	0x00000000
 8007c8c:	08014904 	.word	0x08014904
 8007c90:	08014774 	.word	0x08014774

08007c94 <restore_non_core_regs>:
 8007c94:	6803      	ldr	r3, [r0, #0]
 8007c96:	07da      	lsls	r2, r3, #31
 8007c98:	b510      	push	{r4, lr}
 8007c9a:	4604      	mov	r4, r0
 8007c9c:	d406      	bmi.n	8007cac <restore_non_core_regs+0x18>
 8007c9e:	079b      	lsls	r3, r3, #30
 8007ca0:	f100 0048 	add.w	r0, r0, #72	; 0x48
 8007ca4:	d509      	bpl.n	8007cba <restore_non_core_regs+0x26>
 8007ca6:	f000 fc4b 	bl	8008540 <__gnu_Unwind_Restore_VFP_D>
 8007caa:	6823      	ldr	r3, [r4, #0]
 8007cac:	0759      	lsls	r1, r3, #29
 8007cae:	d509      	bpl.n	8007cc4 <restore_non_core_regs+0x30>
 8007cb0:	071a      	lsls	r2, r3, #28
 8007cb2:	d50e      	bpl.n	8007cd2 <restore_non_core_regs+0x3e>
 8007cb4:	06db      	lsls	r3, r3, #27
 8007cb6:	d513      	bpl.n	8007ce0 <restore_non_core_regs+0x4c>
 8007cb8:	bd10      	pop	{r4, pc}
 8007cba:	f000 fc39 	bl	8008530 <__gnu_Unwind_Restore_VFP>
 8007cbe:	6823      	ldr	r3, [r4, #0]
 8007cc0:	0759      	lsls	r1, r3, #29
 8007cc2:	d4f5      	bmi.n	8007cb0 <restore_non_core_regs+0x1c>
 8007cc4:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8007cc8:	f000 fc42 	bl	8008550 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8007ccc:	6823      	ldr	r3, [r4, #0]
 8007cce:	071a      	lsls	r2, r3, #28
 8007cd0:	d4f0      	bmi.n	8007cb4 <restore_non_core_regs+0x20>
 8007cd2:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8007cd6:	f000 fc43 	bl	8008560 <__gnu_Unwind_Restore_WMMXD>
 8007cda:	6823      	ldr	r3, [r4, #0]
 8007cdc:	06db      	lsls	r3, r3, #27
 8007cde:	d4eb      	bmi.n	8007cb8 <restore_non_core_regs+0x24>
 8007ce0:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 8007ce4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007ce8:	f000 bc7e 	b.w	80085e8 <__gnu_Unwind_Restore_WMMXC>

08007cec <_Unwind_decode_typeinfo_ptr.isra.0>:
 8007cec:	4603      	mov	r3, r0
 8007cee:	6800      	ldr	r0, [r0, #0]
 8007cf0:	b100      	cbz	r0, 8007cf4 <_Unwind_decode_typeinfo_ptr.isra.0+0x8>
 8007cf2:	4418      	add	r0, r3
 8007cf4:	4770      	bx	lr
 8007cf6:	bf00      	nop

08007cf8 <__gnu_unwind_24bit.isra.0>:
 8007cf8:	2009      	movs	r0, #9
 8007cfa:	4770      	bx	lr

08007cfc <_Unwind_DebugHook>:
 8007cfc:	4770      	bx	lr
 8007cfe:	bf00      	nop

08007d00 <unwind_phase2>:
 8007d00:	b570      	push	{r4, r5, r6, lr}
 8007d02:	4604      	mov	r4, r0
 8007d04:	460e      	mov	r6, r1
 8007d06:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8007d08:	4620      	mov	r0, r4
 8007d0a:	f7ff ff75 	bl	8007bf8 <get_eit_entry>
 8007d0e:	4605      	mov	r5, r0
 8007d10:	b988      	cbnz	r0, 8007d36 <unwind_phase2+0x36>
 8007d12:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8007d14:	6163      	str	r3, [r4, #20]
 8007d16:	4632      	mov	r2, r6
 8007d18:	6923      	ldr	r3, [r4, #16]
 8007d1a:	4621      	mov	r1, r4
 8007d1c:	2001      	movs	r0, #1
 8007d1e:	4798      	blx	r3
 8007d20:	2808      	cmp	r0, #8
 8007d22:	d0f0      	beq.n	8007d06 <unwind_phase2+0x6>
 8007d24:	2807      	cmp	r0, #7
 8007d26:	d106      	bne.n	8007d36 <unwind_phase2+0x36>
 8007d28:	4628      	mov	r0, r5
 8007d2a:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8007d2c:	f7ff ffe6 	bl	8007cfc <_Unwind_DebugHook>
 8007d30:	1d30      	adds	r0, r6, #4
 8007d32:	f000 fbf1 	bl	8008518 <__restore_core_regs>
 8007d36:	f006 fad9 	bl	800e2ec <abort>
 8007d3a:	bf00      	nop

08007d3c <unwind_phase2_forced>:
 8007d3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007d40:	1d0d      	adds	r5, r1, #4
 8007d42:	4606      	mov	r6, r0
 8007d44:	4614      	mov	r4, r2
 8007d46:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007d48:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 8007d4c:	f10d 0c0c 	add.w	ip, sp, #12
 8007d50:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8007d54:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007d56:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8007d5a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007d5c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8007d60:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8007d64:	ad02      	add	r5, sp, #8
 8007d66:	68f7      	ldr	r7, [r6, #12]
 8007d68:	f8d6 8018 	ldr.w	r8, [r6, #24]
 8007d6c:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 8007d70:	2300      	movs	r3, #0
 8007d72:	602b      	str	r3, [r5, #0]
 8007d74:	e021      	b.n	8007dba <unwind_phase2_forced+0x7e>
 8007d76:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8007d78:	6173      	str	r3, [r6, #20]
 8007d7a:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8007d7e:	4629      	mov	r1, r5
 8007d80:	a87a      	add	r0, sp, #488	; 0x1e8
 8007d82:	f006 ff59 	bl	800ec38 <memcpy>
 8007d86:	6933      	ldr	r3, [r6, #16]
 8007d88:	aa7a      	add	r2, sp, #488	; 0x1e8
 8007d8a:	4631      	mov	r1, r6
 8007d8c:	4650      	mov	r0, sl
 8007d8e:	4798      	blx	r3
 8007d90:	9b88      	ldr	r3, [sp, #544]	; 0x220
 8007d92:	e9cd 5800 	strd	r5, r8, [sp]
 8007d96:	4621      	mov	r1, r4
 8007d98:	646b      	str	r3, [r5, #68]	; 0x44
 8007d9a:	4681      	mov	r9, r0
 8007d9c:	4633      	mov	r3, r6
 8007d9e:	4632      	mov	r2, r6
 8007da0:	2001      	movs	r0, #1
 8007da2:	47b8      	blx	r7
 8007da4:	4604      	mov	r4, r0
 8007da6:	b9e8      	cbnz	r0, 8007de4 <unwind_phase2_forced+0xa8>
 8007da8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8007dac:	a97a      	add	r1, sp, #488	; 0x1e8
 8007dae:	4628      	mov	r0, r5
 8007db0:	f006 ff42 	bl	800ec38 <memcpy>
 8007db4:	f1b9 0f08 	cmp.w	r9, #8
 8007db8:	d11b      	bne.n	8007df2 <unwind_phase2_forced+0xb6>
 8007dba:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007dbc:	4630      	mov	r0, r6
 8007dbe:	f7ff ff1b 	bl	8007bf8 <get_eit_entry>
 8007dc2:	3409      	adds	r4, #9
 8007dc4:	fa5f fa84 	uxtb.w	sl, r4
 8007dc8:	4681      	mov	r9, r0
 8007dca:	2800      	cmp	r0, #0
 8007dcc:	d0d3      	beq.n	8007d76 <unwind_phase2_forced+0x3a>
 8007dce:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8007dd0:	f04a 0110 	orr.w	r1, sl, #16
 8007dd4:	e9cd 5800 	strd	r5, r8, [sp]
 8007dd8:	4632      	mov	r2, r6
 8007dda:	646b      	str	r3, [r5, #68]	; 0x44
 8007ddc:	2001      	movs	r0, #1
 8007dde:	4633      	mov	r3, r6
 8007de0:	47b8      	blx	r7
 8007de2:	b108      	cbz	r0, 8007de8 <unwind_phase2_forced+0xac>
 8007de4:	f04f 0909 	mov.w	r9, #9
 8007de8:	4648      	mov	r0, r9
 8007dea:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 8007dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007df2:	f1b9 0f07 	cmp.w	r9, #7
 8007df6:	d1f5      	bne.n	8007de4 <unwind_phase2_forced+0xa8>
 8007df8:	4620      	mov	r0, r4
 8007dfa:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007dfc:	f7ff ff7e 	bl	8007cfc <_Unwind_DebugHook>
 8007e00:	a803      	add	r0, sp, #12
 8007e02:	f000 fb89 	bl	8008518 <__restore_core_regs>
 8007e06:	bf00      	nop

08007e08 <_Unwind_GetCFA>:
 8007e08:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8007e0a:	4770      	bx	lr

08007e0c <__gnu_Unwind_RaiseException>:
 8007e0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e0e:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8007e10:	640b      	str	r3, [r1, #64]	; 0x40
 8007e12:	1d0e      	adds	r6, r1, #4
 8007e14:	460f      	mov	r7, r1
 8007e16:	4605      	mov	r5, r0
 8007e18:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8007e1a:	b0f9      	sub	sp, #484	; 0x1e4
 8007e1c:	ac01      	add	r4, sp, #4
 8007e1e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007e20:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8007e22:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007e24:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8007e26:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007e28:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8007e2c:	f04f 36ff 	mov.w	r6, #4294967295
 8007e30:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8007e34:	9600      	str	r6, [sp, #0]
 8007e36:	e006      	b.n	8007e46 <__gnu_Unwind_RaiseException+0x3a>
 8007e38:	692b      	ldr	r3, [r5, #16]
 8007e3a:	466a      	mov	r2, sp
 8007e3c:	4629      	mov	r1, r5
 8007e3e:	4798      	blx	r3
 8007e40:	2808      	cmp	r0, #8
 8007e42:	4604      	mov	r4, r0
 8007e44:	d108      	bne.n	8007e58 <__gnu_Unwind_RaiseException+0x4c>
 8007e46:	9910      	ldr	r1, [sp, #64]	; 0x40
 8007e48:	4628      	mov	r0, r5
 8007e4a:	f7ff fed5 	bl	8007bf8 <get_eit_entry>
 8007e4e:	2800      	cmp	r0, #0
 8007e50:	d0f2      	beq.n	8007e38 <__gnu_Unwind_RaiseException+0x2c>
 8007e52:	2009      	movs	r0, #9
 8007e54:	b079      	add	sp, #484	; 0x1e4
 8007e56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007e58:	4668      	mov	r0, sp
 8007e5a:	f7ff ff1b 	bl	8007c94 <restore_non_core_regs>
 8007e5e:	2c06      	cmp	r4, #6
 8007e60:	d1f7      	bne.n	8007e52 <__gnu_Unwind_RaiseException+0x46>
 8007e62:	4639      	mov	r1, r7
 8007e64:	4628      	mov	r0, r5
 8007e66:	f7ff ff4b 	bl	8007d00 <unwind_phase2>
 8007e6a:	bf00      	nop

08007e6c <__gnu_Unwind_ForcedUnwind>:
 8007e6c:	b430      	push	{r4, r5}
 8007e6e:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8007e70:	60c1      	str	r1, [r0, #12]
 8007e72:	6182      	str	r2, [r0, #24]
 8007e74:	4619      	mov	r1, r3
 8007e76:	641d      	str	r5, [r3, #64]	; 0x40
 8007e78:	2200      	movs	r2, #0
 8007e7a:	bc30      	pop	{r4, r5}
 8007e7c:	e75e      	b.n	8007d3c <unwind_phase2_forced>
 8007e7e:	bf00      	nop

08007e80 <__gnu_Unwind_Resume>:
 8007e80:	b570      	push	{r4, r5, r6, lr}
 8007e82:	68c6      	ldr	r6, [r0, #12]
 8007e84:	6943      	ldr	r3, [r0, #20]
 8007e86:	640b      	str	r3, [r1, #64]	; 0x40
 8007e88:	b9ae      	cbnz	r6, 8007eb6 <__gnu_Unwind_Resume+0x36>
 8007e8a:	6903      	ldr	r3, [r0, #16]
 8007e8c:	460a      	mov	r2, r1
 8007e8e:	4604      	mov	r4, r0
 8007e90:	460d      	mov	r5, r1
 8007e92:	4601      	mov	r1, r0
 8007e94:	2002      	movs	r0, #2
 8007e96:	4798      	blx	r3
 8007e98:	2807      	cmp	r0, #7
 8007e9a:	d005      	beq.n	8007ea8 <__gnu_Unwind_Resume+0x28>
 8007e9c:	2808      	cmp	r0, #8
 8007e9e:	d10f      	bne.n	8007ec0 <__gnu_Unwind_Resume+0x40>
 8007ea0:	4629      	mov	r1, r5
 8007ea2:	4620      	mov	r0, r4
 8007ea4:	f7ff ff2c 	bl	8007d00 <unwind_phase2>
 8007ea8:	4630      	mov	r0, r6
 8007eaa:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007eac:	f7ff ff26 	bl	8007cfc <_Unwind_DebugHook>
 8007eb0:	1d28      	adds	r0, r5, #4
 8007eb2:	f000 fb31 	bl	8008518 <__restore_core_regs>
 8007eb6:	2201      	movs	r2, #1
 8007eb8:	f7ff ff40 	bl	8007d3c <unwind_phase2_forced>
 8007ebc:	f006 fa16 	bl	800e2ec <abort>
 8007ec0:	f006 fa14 	bl	800e2ec <abort>

08007ec4 <__gnu_Unwind_Resume_or_Rethrow>:
 8007ec4:	68c2      	ldr	r2, [r0, #12]
 8007ec6:	b11a      	cbz	r2, 8007ed0 <__gnu_Unwind_Resume_or_Rethrow+0xc>
 8007ec8:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8007eca:	640a      	str	r2, [r1, #64]	; 0x40
 8007ecc:	2200      	movs	r2, #0
 8007ece:	e735      	b.n	8007d3c <unwind_phase2_forced>
 8007ed0:	e79c      	b.n	8007e0c <__gnu_Unwind_RaiseException>
 8007ed2:	bf00      	nop

08007ed4 <_Unwind_Complete>:
 8007ed4:	4770      	bx	lr
 8007ed6:	bf00      	nop

08007ed8 <_Unwind_DeleteException>:
 8007ed8:	6883      	ldr	r3, [r0, #8]
 8007eda:	4601      	mov	r1, r0
 8007edc:	b10b      	cbz	r3, 8007ee2 <_Unwind_DeleteException+0xa>
 8007ede:	2001      	movs	r0, #1
 8007ee0:	4718      	bx	r3
 8007ee2:	4770      	bx	lr

08007ee4 <_Unwind_VRS_Get>:
 8007ee4:	2901      	cmp	r1, #1
 8007ee6:	d012      	beq.n	8007f0e <_Unwind_VRS_Get+0x2a>
 8007ee8:	d809      	bhi.n	8007efe <_Unwind_VRS_Get+0x1a>
 8007eea:	b973      	cbnz	r3, 8007f0a <_Unwind_VRS_Get+0x26>
 8007eec:	2a0f      	cmp	r2, #15
 8007eee:	d80c      	bhi.n	8007f0a <_Unwind_VRS_Get+0x26>
 8007ef0:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8007ef4:	4618      	mov	r0, r3
 8007ef6:	6853      	ldr	r3, [r2, #4]
 8007ef8:	9a00      	ldr	r2, [sp, #0]
 8007efa:	6013      	str	r3, [r2, #0]
 8007efc:	4770      	bx	lr
 8007efe:	3903      	subs	r1, #3
 8007f00:	2901      	cmp	r1, #1
 8007f02:	bf94      	ite	ls
 8007f04:	2001      	movls	r0, #1
 8007f06:	2002      	movhi	r0, #2
 8007f08:	4770      	bx	lr
 8007f0a:	2002      	movs	r0, #2
 8007f0c:	4770      	bx	lr
 8007f0e:	4608      	mov	r0, r1
 8007f10:	4770      	bx	lr
 8007f12:	bf00      	nop

08007f14 <_Unwind_GetGR>:
 8007f14:	b510      	push	{r4, lr}
 8007f16:	b084      	sub	sp, #16
 8007f18:	2300      	movs	r3, #0
 8007f1a:	ac03      	add	r4, sp, #12
 8007f1c:	460a      	mov	r2, r1
 8007f1e:	9400      	str	r4, [sp, #0]
 8007f20:	4619      	mov	r1, r3
 8007f22:	f7ff ffdf 	bl	8007ee4 <_Unwind_VRS_Get>
 8007f26:	9803      	ldr	r0, [sp, #12]
 8007f28:	b004      	add	sp, #16
 8007f2a:	bd10      	pop	{r4, pc}

08007f2c <_Unwind_VRS_Set>:
 8007f2c:	2901      	cmp	r1, #1
 8007f2e:	d012      	beq.n	8007f56 <_Unwind_VRS_Set+0x2a>
 8007f30:	d809      	bhi.n	8007f46 <_Unwind_VRS_Set+0x1a>
 8007f32:	b973      	cbnz	r3, 8007f52 <_Unwind_VRS_Set+0x26>
 8007f34:	2a0f      	cmp	r2, #15
 8007f36:	d80c      	bhi.n	8007f52 <_Unwind_VRS_Set+0x26>
 8007f38:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8007f3c:	9a00      	ldr	r2, [sp, #0]
 8007f3e:	6812      	ldr	r2, [r2, #0]
 8007f40:	6042      	str	r2, [r0, #4]
 8007f42:	4618      	mov	r0, r3
 8007f44:	4770      	bx	lr
 8007f46:	3903      	subs	r1, #3
 8007f48:	2901      	cmp	r1, #1
 8007f4a:	bf94      	ite	ls
 8007f4c:	2001      	movls	r0, #1
 8007f4e:	2002      	movhi	r0, #2
 8007f50:	4770      	bx	lr
 8007f52:	2002      	movs	r0, #2
 8007f54:	4770      	bx	lr
 8007f56:	4608      	mov	r0, r1
 8007f58:	4770      	bx	lr
 8007f5a:	bf00      	nop

08007f5c <_Unwind_SetGR>:
 8007f5c:	b510      	push	{r4, lr}
 8007f5e:	b084      	sub	sp, #16
 8007f60:	2300      	movs	r3, #0
 8007f62:	ac03      	add	r4, sp, #12
 8007f64:	9203      	str	r2, [sp, #12]
 8007f66:	9400      	str	r4, [sp, #0]
 8007f68:	460a      	mov	r2, r1
 8007f6a:	4619      	mov	r1, r3
 8007f6c:	f7ff ffde 	bl	8007f2c <_Unwind_VRS_Set>
 8007f70:	b004      	add	sp, #16
 8007f72:	bd10      	pop	{r4, pc}

08007f74 <__gnu_Unwind_Backtrace>:
 8007f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007f76:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8007f78:	6413      	str	r3, [r2, #64]	; 0x40
 8007f7a:	1d15      	adds	r5, r2, #4
 8007f7c:	468c      	mov	ip, r1
 8007f7e:	4606      	mov	r6, r0
 8007f80:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007f82:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
 8007f86:	ac17      	add	r4, sp, #92	; 0x5c
 8007f88:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007f8a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007f8c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007f8e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007f90:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007f92:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8007f96:	f04f 37ff 	mov.w	r7, #4294967295
 8007f9a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8007f9e:	4665      	mov	r5, ip
 8007fa0:	9716      	str	r7, [sp, #88]	; 0x58
 8007fa2:	e010      	b.n	8007fc6 <__gnu_Unwind_Backtrace+0x52>
 8007fa4:	f7ff ffda 	bl	8007f5c <_Unwind_SetGR>
 8007fa8:	4629      	mov	r1, r5
 8007faa:	a816      	add	r0, sp, #88	; 0x58
 8007fac:	47b0      	blx	r6
 8007fae:	4603      	mov	r3, r0
 8007fb0:	aa16      	add	r2, sp, #88	; 0x58
 8007fb2:	4669      	mov	r1, sp
 8007fb4:	2008      	movs	r0, #8
 8007fb6:	b983      	cbnz	r3, 8007fda <__gnu_Unwind_Backtrace+0x66>
 8007fb8:	9b04      	ldr	r3, [sp, #16]
 8007fba:	4798      	blx	r3
 8007fbc:	2805      	cmp	r0, #5
 8007fbe:	4604      	mov	r4, r0
 8007fc0:	d00c      	beq.n	8007fdc <__gnu_Unwind_Backtrace+0x68>
 8007fc2:	2809      	cmp	r0, #9
 8007fc4:	d009      	beq.n	8007fda <__gnu_Unwind_Backtrace+0x66>
 8007fc6:	9926      	ldr	r1, [sp, #152]	; 0x98
 8007fc8:	4668      	mov	r0, sp
 8007fca:	f7ff fe15 	bl	8007bf8 <get_eit_entry>
 8007fce:	4603      	mov	r3, r0
 8007fd0:	466a      	mov	r2, sp
 8007fd2:	210c      	movs	r1, #12
 8007fd4:	a816      	add	r0, sp, #88	; 0x58
 8007fd6:	2b00      	cmp	r3, #0
 8007fd8:	d0e4      	beq.n	8007fa4 <__gnu_Unwind_Backtrace+0x30>
 8007fda:	2409      	movs	r4, #9
 8007fdc:	a816      	add	r0, sp, #88	; 0x58
 8007fde:	f7ff fe59 	bl	8007c94 <restore_non_core_regs>
 8007fe2:	4620      	mov	r0, r4
 8007fe4:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 8007fe8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007fea:	bf00      	nop

08007fec <__gnu_unwind_pr_common>:
 8007fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ff0:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
 8007ff2:	b089      	sub	sp, #36	; 0x24
 8007ff4:	460d      	mov	r5, r1
 8007ff6:	f854 1b04 	ldr.w	r1, [r4], #4
 8007ffa:	9406      	str	r4, [sp, #24]
 8007ffc:	4617      	mov	r7, r2
 8007ffe:	f000 0803 	and.w	r8, r0, #3
 8008002:	461e      	mov	r6, r3
 8008004:	2b00      	cmp	r3, #0
 8008006:	d079      	beq.n	80080fc <__gnu_unwind_pr_common+0x110>
 8008008:	0c0b      	lsrs	r3, r1, #16
 800800a:	b2da      	uxtb	r2, r3
 800800c:	0409      	lsls	r1, r1, #16
 800800e:	f88d 301d 	strb.w	r3, [sp, #29]
 8008012:	2302      	movs	r3, #2
 8008014:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8008018:	9105      	str	r1, [sp, #20]
 800801a:	f88d 301c 	strb.w	r3, [sp, #28]
 800801e:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8008020:	f1b8 0f02 	cmp.w	r8, #2
 8008024:	bf08      	it	eq
 8008026:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8008028:	f013 0301 	ands.w	r3, r3, #1
 800802c:	d00c      	beq.n	8008048 <__gnu_unwind_pr_common+0x5c>
 800802e:	4638      	mov	r0, r7
 8008030:	a905      	add	r1, sp, #20
 8008032:	f000 fb73 	bl	800871c <__gnu_unwind_execute>
 8008036:	b918      	cbnz	r0, 8008040 <__gnu_unwind_pr_common+0x54>
 8008038:	2008      	movs	r0, #8
 800803a:	b009      	add	sp, #36	; 0x24
 800803c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008040:	2009      	movs	r0, #9
 8008042:	b009      	add	sp, #36	; 0x24
 8008044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008048:	f8d4 a000 	ldr.w	sl, [r4]
 800804c:	f1ba 0f00 	cmp.w	sl, #0
 8008050:	d0ed      	beq.n	800802e <__gnu_unwind_pr_common+0x42>
 8008052:	9301      	str	r3, [sp, #4]
 8008054:	f000 0308 	and.w	r3, r0, #8
 8008058:	9302      	str	r3, [sp, #8]
 800805a:	2e02      	cmp	r6, #2
 800805c:	d04a      	beq.n	80080f4 <__gnu_unwind_pr_common+0x108>
 800805e:	f8b4 a000 	ldrh.w	sl, [r4]
 8008062:	f8b4 9002 	ldrh.w	r9, [r4, #2]
 8008066:	3404      	adds	r4, #4
 8008068:	6caa      	ldr	r2, [r5, #72]	; 0x48
 800806a:	f029 0b01 	bic.w	fp, r9, #1
 800806e:	210f      	movs	r1, #15
 8008070:	4638      	mov	r0, r7
 8008072:	4493      	add	fp, r2
 8008074:	f7ff ff4e 	bl	8007f14 <_Unwind_GetGR>
 8008078:	4583      	cmp	fp, r0
 800807a:	d839      	bhi.n	80080f0 <__gnu_unwind_pr_common+0x104>
 800807c:	f02a 0201 	bic.w	r2, sl, #1
 8008080:	445a      	add	r2, fp
 8008082:	4282      	cmp	r2, r0
 8008084:	bf94      	ite	ls
 8008086:	2000      	movls	r0, #0
 8008088:	2001      	movhi	r0, #1
 800808a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 800808e:	f003 0302 	and.w	r3, r3, #2
 8008092:	f00a 0a01 	and.w	sl, sl, #1
 8008096:	ea43 030a 	orr.w	r3, r3, sl
 800809a:	2b01      	cmp	r3, #1
 800809c:	d049      	beq.n	8008132 <__gnu_unwind_pr_common+0x146>
 800809e:	2b02      	cmp	r3, #2
 80080a0:	d032      	beq.n	8008108 <__gnu_unwind_pr_common+0x11c>
 80080a2:	2b00      	cmp	r3, #0
 80080a4:	d1cc      	bne.n	8008040 <__gnu_unwind_pr_common+0x54>
 80080a6:	f1b8 0f00 	cmp.w	r8, #0
 80080aa:	d002      	beq.n	80080b2 <__gnu_unwind_pr_common+0xc6>
 80080ac:	2800      	cmp	r0, #0
 80080ae:	f040 80cd 	bne.w	800824c <__gnu_unwind_pr_common+0x260>
 80080b2:	3404      	adds	r4, #4
 80080b4:	f8d4 a000 	ldr.w	sl, [r4]
 80080b8:	f1ba 0f00 	cmp.w	sl, #0
 80080bc:	d1cd      	bne.n	800805a <__gnu_unwind_pr_common+0x6e>
 80080be:	a905      	add	r1, sp, #20
 80080c0:	4638      	mov	r0, r7
 80080c2:	f000 fb2b 	bl	800871c <__gnu_unwind_execute>
 80080c6:	2800      	cmp	r0, #0
 80080c8:	d1ba      	bne.n	8008040 <__gnu_unwind_pr_common+0x54>
 80080ca:	9b01      	ldr	r3, [sp, #4]
 80080cc:	2b00      	cmp	r3, #0
 80080ce:	d0b3      	beq.n	8008038 <__gnu_unwind_pr_common+0x4c>
 80080d0:	210f      	movs	r1, #15
 80080d2:	4638      	mov	r0, r7
 80080d4:	f7ff ff1e 	bl	8007f14 <_Unwind_GetGR>
 80080d8:	210e      	movs	r1, #14
 80080da:	4602      	mov	r2, r0
 80080dc:	4638      	mov	r0, r7
 80080de:	f7ff ff3d 	bl	8007f5c <_Unwind_SetGR>
 80080e2:	4638      	mov	r0, r7
 80080e4:	4a6a      	ldr	r2, [pc, #424]	; (8008290 <__gnu_unwind_pr_common+0x2a4>)
 80080e6:	210f      	movs	r1, #15
 80080e8:	f7ff ff38 	bl	8007f5c <_Unwind_SetGR>
 80080ec:	2007      	movs	r0, #7
 80080ee:	e7a8      	b.n	8008042 <__gnu_unwind_pr_common+0x56>
 80080f0:	2000      	movs	r0, #0
 80080f2:	e7ca      	b.n	800808a <__gnu_unwind_pr_common+0x9e>
 80080f4:	f8d4 9004 	ldr.w	r9, [r4, #4]
 80080f8:	3408      	adds	r4, #8
 80080fa:	e7b5      	b.n	8008068 <__gnu_unwind_pr_common+0x7c>
 80080fc:	0209      	lsls	r1, r1, #8
 80080fe:	2303      	movs	r3, #3
 8008100:	9105      	str	r1, [sp, #20]
 8008102:	f8ad 301c 	strh.w	r3, [sp, #28]
 8008106:	e78a      	b.n	800801e <__gnu_unwind_pr_common+0x32>
 8008108:	6823      	ldr	r3, [r4, #0]
 800810a:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
 800810e:	f1b8 0f00 	cmp.w	r8, #0
 8008112:	d145      	bne.n	80081a0 <__gnu_unwind_pr_common+0x1b4>
 8008114:	b128      	cbz	r0, 8008122 <__gnu_unwind_pr_common+0x136>
 8008116:	9a02      	ldr	r2, [sp, #8]
 8008118:	2a00      	cmp	r2, #0
 800811a:	d05c      	beq.n	80081d6 <__gnu_unwind_pr_common+0x1ea>
 800811c:	f1bb 0f00 	cmp.w	fp, #0
 8008120:	d074      	beq.n	800820c <__gnu_unwind_pr_common+0x220>
 8008122:	2b00      	cmp	r3, #0
 8008124:	da00      	bge.n	8008128 <__gnu_unwind_pr_common+0x13c>
 8008126:	3404      	adds	r4, #4
 8008128:	f10b 0b01 	add.w	fp, fp, #1
 800812c:	eb04 048b 	add.w	r4, r4, fp, lsl #2
 8008130:	e7c0      	b.n	80080b4 <__gnu_unwind_pr_common+0xc8>
 8008132:	f1b8 0f00 	cmp.w	r8, #0
 8008136:	d119      	bne.n	800816c <__gnu_unwind_pr_common+0x180>
 8008138:	b1b0      	cbz	r0, 8008168 <__gnu_unwind_pr_common+0x17c>
 800813a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800813e:	1c99      	adds	r1, r3, #2
 8008140:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8008144:	f43f af7c 	beq.w	8008040 <__gnu_unwind_pr_common+0x54>
 8008148:	f105 0158 	add.w	r1, r5, #88	; 0x58
 800814c:	3301      	adds	r3, #1
 800814e:	9104      	str	r1, [sp, #16]
 8008150:	f000 8090 	beq.w	8008274 <__gnu_unwind_pr_common+0x288>
 8008154:	1d20      	adds	r0, r4, #4
 8008156:	f7ff fdc9 	bl	8007cec <_Unwind_decode_typeinfo_ptr.isra.0>
 800815a:	ab04      	add	r3, sp, #16
 800815c:	4601      	mov	r1, r0
 800815e:	4628      	mov	r0, r5
 8008160:	f005 fb96 	bl	800d890 <__cxa_type_match>
 8008164:	2800      	cmp	r0, #0
 8008166:	d15b      	bne.n	8008220 <__gnu_unwind_pr_common+0x234>
 8008168:	3408      	adds	r4, #8
 800816a:	e7a3      	b.n	80080b4 <__gnu_unwind_pr_common+0xc8>
 800816c:	210d      	movs	r1, #13
 800816e:	4638      	mov	r0, r7
 8008170:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8008174:	f7ff fece 	bl	8007f14 <_Unwind_GetGR>
 8008178:	4581      	cmp	r9, r0
 800817a:	d1f5      	bne.n	8008168 <__gnu_unwind_pr_common+0x17c>
 800817c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800817e:	429c      	cmp	r4, r3
 8008180:	d1f2      	bne.n	8008168 <__gnu_unwind_pr_common+0x17c>
 8008182:	4620      	mov	r0, r4
 8008184:	f7ff fcec 	bl	8007b60 <selfrel_offset31>
 8008188:	210f      	movs	r1, #15
 800818a:	4602      	mov	r2, r0
 800818c:	4638      	mov	r0, r7
 800818e:	f7ff fee5 	bl	8007f5c <_Unwind_SetGR>
 8008192:	4638      	mov	r0, r7
 8008194:	462a      	mov	r2, r5
 8008196:	2100      	movs	r1, #0
 8008198:	f7ff fee0 	bl	8007f5c <_Unwind_SetGR>
 800819c:	2007      	movs	r0, #7
 800819e:	e750      	b.n	8008042 <__gnu_unwind_pr_common+0x56>
 80081a0:	210d      	movs	r1, #13
 80081a2:	4638      	mov	r0, r7
 80081a4:	f8d5 9020 	ldr.w	r9, [r5, #32]
 80081a8:	f7ff feb4 	bl	8007f14 <_Unwind_GetGR>
 80081ac:	4581      	cmp	r9, r0
 80081ae:	d001      	beq.n	80081b4 <__gnu_unwind_pr_common+0x1c8>
 80081b0:	6823      	ldr	r3, [r4, #0]
 80081b2:	e7b6      	b.n	8008122 <__gnu_unwind_pr_common+0x136>
 80081b4:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80081b6:	429c      	cmp	r4, r3
 80081b8:	d1fa      	bne.n	80081b0 <__gnu_unwind_pr_common+0x1c4>
 80081ba:	2204      	movs	r2, #4
 80081bc:	2100      	movs	r1, #0
 80081be:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
 80081c2:	18a3      	adds	r3, r4, r2
 80081c4:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
 80081c8:	636b      	str	r3, [r5, #52]	; 0x34
 80081ca:	6823      	ldr	r3, [r4, #0]
 80081cc:	428b      	cmp	r3, r1
 80081ce:	db59      	blt.n	8008284 <__gnu_unwind_pr_common+0x298>
 80081d0:	2301      	movs	r3, #1
 80081d2:	9301      	str	r3, [sp, #4]
 80081d4:	e7a8      	b.n	8008128 <__gnu_unwind_pr_common+0x13c>
 80081d6:	f105 0358 	add.w	r3, r5, #88	; 0x58
 80081da:	f8cd 800c 	str.w	r8, [sp, #12]
 80081de:	f104 0a04 	add.w	sl, r4, #4
 80081e2:	46b0      	mov	r8, r6
 80081e4:	4691      	mov	r9, r2
 80081e6:	461e      	mov	r6, r3
 80081e8:	e00d      	b.n	8008206 <__gnu_unwind_pr_common+0x21a>
 80081ea:	9604      	str	r6, [sp, #16]
 80081ec:	f7ff fd7e 	bl	8007cec <_Unwind_decode_typeinfo_ptr.isra.0>
 80081f0:	ab04      	add	r3, sp, #16
 80081f2:	4601      	mov	r1, r0
 80081f4:	2200      	movs	r2, #0
 80081f6:	4628      	mov	r0, r5
 80081f8:	f005 fb4a 	bl	800d890 <__cxa_type_match>
 80081fc:	f109 0901 	add.w	r9, r9, #1
 8008200:	f10a 0a04 	add.w	sl, sl, #4
 8008204:	b9e8      	cbnz	r0, 8008242 <__gnu_unwind_pr_common+0x256>
 8008206:	45d9      	cmp	r9, fp
 8008208:	4650      	mov	r0, sl
 800820a:	d1ee      	bne.n	80081ea <__gnu_unwind_pr_common+0x1fe>
 800820c:	4638      	mov	r0, r7
 800820e:	210d      	movs	r1, #13
 8008210:	f7ff fe80 	bl	8007f14 <_Unwind_GetGR>
 8008214:	9b04      	ldr	r3, [sp, #16]
 8008216:	6228      	str	r0, [r5, #32]
 8008218:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
 800821c:	2006      	movs	r0, #6
 800821e:	e710      	b.n	8008042 <__gnu_unwind_pr_common+0x56>
 8008220:	4681      	mov	r9, r0
 8008222:	210d      	movs	r1, #13
 8008224:	4638      	mov	r0, r7
 8008226:	f7ff fe75 	bl	8007f14 <_Unwind_GetGR>
 800822a:	f1b9 0f02 	cmp.w	r9, #2
 800822e:	6228      	str	r0, [r5, #32]
 8008230:	d125      	bne.n	800827e <__gnu_unwind_pr_common+0x292>
 8008232:	462b      	mov	r3, r5
 8008234:	9a04      	ldr	r2, [sp, #16]
 8008236:	f843 2f2c 	str.w	r2, [r3, #44]!
 800823a:	626b      	str	r3, [r5, #36]	; 0x24
 800823c:	62ac      	str	r4, [r5, #40]	; 0x28
 800823e:	2006      	movs	r0, #6
 8008240:	e6ff      	b.n	8008042 <__gnu_unwind_pr_common+0x56>
 8008242:	4646      	mov	r6, r8
 8008244:	6823      	ldr	r3, [r4, #0]
 8008246:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800824a:	e76a      	b.n	8008122 <__gnu_unwind_pr_common+0x136>
 800824c:	4620      	mov	r0, r4
 800824e:	f7ff fc87 	bl	8007b60 <selfrel_offset31>
 8008252:	3404      	adds	r4, #4
 8008254:	4602      	mov	r2, r0
 8008256:	63ac      	str	r4, [r5, #56]	; 0x38
 8008258:	4628      	mov	r0, r5
 800825a:	4614      	mov	r4, r2
 800825c:	f005 fb78 	bl	800d950 <__cxa_begin_cleanup>
 8008260:	2800      	cmp	r0, #0
 8008262:	f43f aeed 	beq.w	8008040 <__gnu_unwind_pr_common+0x54>
 8008266:	4638      	mov	r0, r7
 8008268:	4622      	mov	r2, r4
 800826a:	210f      	movs	r1, #15
 800826c:	f7ff fe76 	bl	8007f5c <_Unwind_SetGR>
 8008270:	2007      	movs	r0, #7
 8008272:	e6e6      	b.n	8008042 <__gnu_unwind_pr_common+0x56>
 8008274:	4638      	mov	r0, r7
 8008276:	210d      	movs	r1, #13
 8008278:	f7ff fe4c 	bl	8007f14 <_Unwind_GetGR>
 800827c:	6228      	str	r0, [r5, #32]
 800827e:	9b04      	ldr	r3, [sp, #16]
 8008280:	626b      	str	r3, [r5, #36]	; 0x24
 8008282:	e7db      	b.n	800823c <__gnu_unwind_pr_common+0x250>
 8008284:	f10b 0001 	add.w	r0, fp, #1
 8008288:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 800828c:	e77a      	b.n	8008184 <__gnu_unwind_pr_common+0x198>
 800828e:	bf00      	nop
 8008290:	0800da81 	.word	0x0800da81

08008294 <__aeabi_unwind_cpp_pr0>:
 8008294:	2300      	movs	r3, #0
 8008296:	e6a9      	b.n	8007fec <__gnu_unwind_pr_common>

08008298 <__aeabi_unwind_cpp_pr1>:
 8008298:	2301      	movs	r3, #1
 800829a:	e6a7      	b.n	8007fec <__gnu_unwind_pr_common>

0800829c <__aeabi_unwind_cpp_pr2>:
 800829c:	2302      	movs	r3, #2
 800829e:	e6a5      	b.n	8007fec <__gnu_unwind_pr_common>

080082a0 <_Unwind_VRS_Pop>:
 80082a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80082a4:	4606      	mov	r6, r0
 80082a6:	b0c3      	sub	sp, #268	; 0x10c
 80082a8:	4615      	mov	r5, r2
 80082aa:	461c      	mov	r4, r3
 80082ac:	2904      	cmp	r1, #4
 80082ae:	f200 80b9 	bhi.w	8008424 <_Unwind_VRS_Pop+0x184>
 80082b2:	e8df f001 	tbb	[pc, r1]
 80082b6:	539a      	.short	0x539a
 80082b8:	29b7      	.short	0x29b7
 80082ba:	03          	.byte	0x03
 80082bb:	00          	.byte	0x00
 80082bc:	2c00      	cmp	r4, #0
 80082be:	f040 80b1 	bne.w	8008424 <_Unwind_VRS_Pop+0x184>
 80082c2:	2a10      	cmp	r2, #16
 80082c4:	f200 80ae 	bhi.w	8008424 <_Unwind_VRS_Pop+0x184>
 80082c8:	6803      	ldr	r3, [r0, #0]
 80082ca:	06d8      	lsls	r0, r3, #27
 80082cc:	f100 80f3 	bmi.w	80084b6 <_Unwind_VRS_Pop+0x216>
 80082d0:	af20      	add	r7, sp, #128	; 0x80
 80082d2:	4638      	mov	r0, r7
 80082d4:	f000 f992 	bl	80085fc <__gnu_Unwind_Save_WMMXC>
 80082d8:	6bb0      	ldr	r0, [r6, #56]	; 0x38
 80082da:	2300      	movs	r3, #0
 80082dc:	2401      	movs	r4, #1
 80082de:	fa04 f203 	lsl.w	r2, r4, r3
 80082e2:	422a      	tst	r2, r5
 80082e4:	4601      	mov	r1, r0
 80082e6:	d004      	beq.n	80082f2 <_Unwind_VRS_Pop+0x52>
 80082e8:	f851 2b04 	ldr.w	r2, [r1], #4
 80082ec:	f847 2023 	str.w	r2, [r7, r3, lsl #2]
 80082f0:	4608      	mov	r0, r1
 80082f2:	3301      	adds	r3, #1
 80082f4:	2b04      	cmp	r3, #4
 80082f6:	d1f2      	bne.n	80082de <_Unwind_VRS_Pop+0x3e>
 80082f8:	63b0      	str	r0, [r6, #56]	; 0x38
 80082fa:	4638      	mov	r0, r7
 80082fc:	f000 f974 	bl	80085e8 <__gnu_Unwind_Restore_WMMXC>
 8008300:	2000      	movs	r0, #0
 8008302:	b043      	add	sp, #268	; 0x10c
 8008304:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008308:	2c03      	cmp	r4, #3
 800830a:	f040 808b 	bne.w	8008424 <_Unwind_VRS_Pop+0x184>
 800830e:	b294      	uxth	r4, r2
 8008310:	eb04 4312 	add.w	r3, r4, r2, lsr #16
 8008314:	2b10      	cmp	r3, #16
 8008316:	ea4f 4512 	mov.w	r5, r2, lsr #16
 800831a:	f200 8083 	bhi.w	8008424 <_Unwind_VRS_Pop+0x184>
 800831e:	6803      	ldr	r3, [r0, #0]
 8008320:	071f      	lsls	r7, r3, #28
 8008322:	f100 80d0 	bmi.w	80084c6 <_Unwind_VRS_Pop+0x226>
 8008326:	af20      	add	r7, sp, #128	; 0x80
 8008328:	4638      	mov	r0, r7
 800832a:	f000 f93b 	bl	80085a4 <__gnu_Unwind_Save_WMMXD>
 800832e:	eb07 01c5 	add.w	r1, r7, r5, lsl #3
 8008332:	6bb5      	ldr	r5, [r6, #56]	; 0x38
 8008334:	b154      	cbz	r4, 800834c <_Unwind_VRS_Pop+0xac>
 8008336:	460b      	mov	r3, r1
 8008338:	1ae8      	subs	r0, r5, r3
 800833a:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 800833e:	00e4      	lsls	r4, r4, #3
 8008340:	581a      	ldr	r2, [r3, r0]
 8008342:	f843 2b04 	str.w	r2, [r3], #4
 8008346:	428b      	cmp	r3, r1
 8008348:	d1fa      	bne.n	8008340 <_Unwind_VRS_Pop+0xa0>
 800834a:	4425      	add	r5, r4
 800834c:	4638      	mov	r0, r7
 800834e:	63b5      	str	r5, [r6, #56]	; 0x38
 8008350:	f000 f906 	bl	8008560 <__gnu_Unwind_Restore_WMMXD>
 8008354:	2000      	movs	r0, #0
 8008356:	b043      	add	sp, #268	; 0x10c
 8008358:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800835c:	2c01      	cmp	r4, #1
 800835e:	ea4f 4812 	mov.w	r8, r2, lsr #16
 8008362:	b295      	uxth	r5, r2
 8008364:	d05a      	beq.n	800841c <_Unwind_VRS_Pop+0x17c>
 8008366:	2c05      	cmp	r4, #5
 8008368:	d15c      	bne.n	8008424 <_Unwind_VRS_Pop+0x184>
 800836a:	eb08 0905 	add.w	r9, r8, r5
 800836e:	f1b9 0f20 	cmp.w	r9, #32
 8008372:	d857      	bhi.n	8008424 <_Unwind_VRS_Pop+0x184>
 8008374:	f1b8 0f0f 	cmp.w	r8, #15
 8008378:	d977      	bls.n	800846a <_Unwind_VRS_Pop+0x1ca>
 800837a:	46a9      	mov	r9, r5
 800837c:	2d00      	cmp	r5, #0
 800837e:	f040 8088 	bne.w	8008492 <_Unwind_VRS_Pop+0x1f2>
 8008382:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8008384:	b36d      	cbz	r5, 80083e2 <_Unwind_VRS_Pop+0x142>
 8008386:	af20      	add	r7, sp, #128	; 0x80
 8008388:	f04f 0900 	mov.w	r9, #0
 800838c:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
 8008390:	3f04      	subs	r7, #4
 8008392:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8008396:	f853 1b04 	ldr.w	r1, [r3], #4
 800839a:	f847 1f04 	str.w	r1, [r7, #4]!
 800839e:	42ab      	cmp	r3, r5
 80083a0:	d1f9      	bne.n	8008396 <_Unwind_VRS_Pop+0xf6>
 80083a2:	f1b9 0f00 	cmp.w	r9, #0
 80083a6:	d00f      	beq.n	80083c8 <_Unwind_VRS_Pop+0x128>
 80083a8:	466f      	mov	r7, sp
 80083aa:	4641      	mov	r1, r8
 80083ac:	2910      	cmp	r1, #16
 80083ae:	bf38      	it	cc
 80083b0:	2110      	movcc	r1, #16
 80083b2:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
 80083b6:	3984      	subs	r1, #132	; 0x84
 80083b8:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
 80083bc:	f853 0b04 	ldr.w	r0, [r3], #4
 80083c0:	f841 0f04 	str.w	r0, [r1, #4]!
 80083c4:	42ab      	cmp	r3, r5
 80083c6:	d1f9      	bne.n	80083bc <_Unwind_VRS_Pop+0x11c>
 80083c8:	2c01      	cmp	r4, #1
 80083ca:	f000 8084 	beq.w	80084d6 <_Unwind_VRS_Pop+0x236>
 80083ce:	f1b8 0f0f 	cmp.w	r8, #15
 80083d2:	63b5      	str	r5, [r6, #56]	; 0x38
 80083d4:	d945      	bls.n	8008462 <_Unwind_VRS_Pop+0x1c2>
 80083d6:	f1b9 0f00 	cmp.w	r9, #0
 80083da:	d002      	beq.n	80083e2 <_Unwind_VRS_Pop+0x142>
 80083dc:	4668      	mov	r0, sp
 80083de:	f000 f8b7 	bl	8008550 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 80083e2:	2000      	movs	r0, #0
 80083e4:	b043      	add	sp, #268	; 0x10c
 80083e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80083ea:	b9dc      	cbnz	r4, 8008424 <_Unwind_VRS_Pop+0x184>
 80083ec:	6b87      	ldr	r7, [r0, #56]	; 0x38
 80083ee:	4623      	mov	r3, r4
 80083f0:	2001      	movs	r0, #1
 80083f2:	b294      	uxth	r4, r2
 80083f4:	f106 0c04 	add.w	ip, r6, #4
 80083f8:	fa00 f203 	lsl.w	r2, r0, r3
 80083fc:	4222      	tst	r2, r4
 80083fe:	4639      	mov	r1, r7
 8008400:	d004      	beq.n	800840c <_Unwind_VRS_Pop+0x16c>
 8008402:	f851 2b04 	ldr.w	r2, [r1], #4
 8008406:	f84c 2023 	str.w	r2, [ip, r3, lsl #2]
 800840a:	460f      	mov	r7, r1
 800840c:	3301      	adds	r3, #1
 800840e:	2b10      	cmp	r3, #16
 8008410:	d1f2      	bne.n	80083f8 <_Unwind_VRS_Pop+0x158>
 8008412:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
 8008416:	d1e4      	bne.n	80083e2 <_Unwind_VRS_Pop+0x142>
 8008418:	63b7      	str	r7, [r6, #56]	; 0x38
 800841a:	e004      	b.n	8008426 <_Unwind_VRS_Pop+0x186>
 800841c:	eb08 0305 	add.w	r3, r8, r5
 8008420:	2b10      	cmp	r3, #16
 8008422:	d903      	bls.n	800842c <_Unwind_VRS_Pop+0x18c>
 8008424:	2002      	movs	r0, #2
 8008426:	b043      	add	sp, #268	; 0x10c
 8008428:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800842c:	f1b8 0f0f 	cmp.w	r8, #15
 8008430:	d8f8      	bhi.n	8008424 <_Unwind_VRS_Pop+0x184>
 8008432:	6833      	ldr	r3, [r6, #0]
 8008434:	07da      	lsls	r2, r3, #31
 8008436:	d506      	bpl.n	8008446 <_Unwind_VRS_Pop+0x1a6>
 8008438:	4630      	mov	r0, r6
 800843a:	f023 0303 	bic.w	r3, r3, #3
 800843e:	f840 3b48 	str.w	r3, [r0], #72
 8008442:	f000 f879 	bl	8008538 <__gnu_Unwind_Save_VFP>
 8008446:	af20      	add	r7, sp, #128	; 0x80
 8008448:	4638      	mov	r0, r7
 800844a:	f000 f875 	bl	8008538 <__gnu_Unwind_Save_VFP>
 800844e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8008450:	2d00      	cmp	r5, #0
 8008452:	d199      	bne.n	8008388 <_Unwind_VRS_Pop+0xe8>
 8008454:	461d      	mov	r5, r3
 8008456:	3504      	adds	r5, #4
 8008458:	63b5      	str	r5, [r6, #56]	; 0x38
 800845a:	4638      	mov	r0, r7
 800845c:	f000 f868 	bl	8008530 <__gnu_Unwind_Restore_VFP>
 8008460:	e7bf      	b.n	80083e2 <_Unwind_VRS_Pop+0x142>
 8008462:	a820      	add	r0, sp, #128	; 0x80
 8008464:	f000 f86c 	bl	8008540 <__gnu_Unwind_Restore_VFP_D>
 8008468:	e7b5      	b.n	80083d6 <_Unwind_VRS_Pop+0x136>
 800846a:	f1b9 0f10 	cmp.w	r9, #16
 800846e:	d940      	bls.n	80084f2 <_Unwind_VRS_Pop+0x252>
 8008470:	f1a9 0910 	sub.w	r9, r9, #16
 8008474:	6833      	ldr	r3, [r6, #0]
 8008476:	07d9      	lsls	r1, r3, #31
 8008478:	d508      	bpl.n	800848c <_Unwind_VRS_Pop+0x1ec>
 800847a:	f023 0301 	bic.w	r3, r3, #1
 800847e:	4630      	mov	r0, r6
 8008480:	f043 0302 	orr.w	r3, r3, #2
 8008484:	f840 3b48 	str.w	r3, [r0], #72
 8008488:	f000 f85e 	bl	8008548 <__gnu_Unwind_Save_VFP_D>
 800848c:	f1b9 0f00 	cmp.w	r9, #0
 8008490:	d032      	beq.n	80084f8 <_Unwind_VRS_Pop+0x258>
 8008492:	6833      	ldr	r3, [r6, #0]
 8008494:	075a      	lsls	r2, r3, #29
 8008496:	d420      	bmi.n	80084da <_Unwind_VRS_Pop+0x23a>
 8008498:	f1b8 0f0f 	cmp.w	r8, #15
 800849c:	d925      	bls.n	80084ea <_Unwind_VRS_Pop+0x24a>
 800849e:	466f      	mov	r7, sp
 80084a0:	4638      	mov	r0, r7
 80084a2:	f1c8 0510 	rsb	r5, r8, #16
 80084a6:	f000 f857 	bl	8008558 <__gnu_Unwind_Save_VFP_D_16_to_31>
 80084aa:	2d00      	cmp	r5, #0
 80084ac:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 80084ae:	f77f af7c 	ble.w	80083aa <_Unwind_VRS_Pop+0x10a>
 80084b2:	af20      	add	r7, sp, #128	; 0x80
 80084b4:	e76a      	b.n	800838c <_Unwind_VRS_Pop+0xec>
 80084b6:	f023 0310 	bic.w	r3, r3, #16
 80084ba:	6033      	str	r3, [r6, #0]
 80084bc:	f506 70e8 	add.w	r0, r6, #464	; 0x1d0
 80084c0:	f000 f89c 	bl	80085fc <__gnu_Unwind_Save_WMMXC>
 80084c4:	e704      	b.n	80082d0 <_Unwind_VRS_Pop+0x30>
 80084c6:	f023 0308 	bic.w	r3, r3, #8
 80084ca:	6003      	str	r3, [r0, #0]
 80084cc:	f500 70a8 	add.w	r0, r0, #336	; 0x150
 80084d0:	f000 f868 	bl	80085a4 <__gnu_Unwind_Save_WMMXD>
 80084d4:	e727      	b.n	8008326 <_Unwind_VRS_Pop+0x86>
 80084d6:	af20      	add	r7, sp, #128	; 0x80
 80084d8:	e7bd      	b.n	8008456 <_Unwind_VRS_Pop+0x1b6>
 80084da:	4630      	mov	r0, r6
 80084dc:	f023 0304 	bic.w	r3, r3, #4
 80084e0:	f840 3bd0 	str.w	r3, [r0], #208
 80084e4:	f000 f838 	bl	8008558 <__gnu_Unwind_Save_VFP_D_16_to_31>
 80084e8:	e7d6      	b.n	8008498 <_Unwind_VRS_Pop+0x1f8>
 80084ea:	a820      	add	r0, sp, #128	; 0x80
 80084ec:	f000 f82c 	bl	8008548 <__gnu_Unwind_Save_VFP_D>
 80084f0:	e7d5      	b.n	800849e <_Unwind_VRS_Pop+0x1fe>
 80084f2:	f04f 0900 	mov.w	r9, #0
 80084f6:	e7bd      	b.n	8008474 <_Unwind_VRS_Pop+0x1d4>
 80084f8:	f1b8 0f0f 	cmp.w	r8, #15
 80084fc:	f63f af41 	bhi.w	8008382 <_Unwind_VRS_Pop+0xe2>
 8008500:	af20      	add	r7, sp, #128	; 0x80
 8008502:	4638      	mov	r0, r7
 8008504:	f000 f820 	bl	8008548 <__gnu_Unwind_Save_VFP_D>
 8008508:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800850a:	2d00      	cmp	r5, #0
 800850c:	f47f af3c 	bne.w	8008388 <_Unwind_VRS_Pop+0xe8>
 8008510:	4638      	mov	r0, r7
 8008512:	f000 f815 	bl	8008540 <__gnu_Unwind_Restore_VFP_D>
 8008516:	e764      	b.n	80083e2 <_Unwind_VRS_Pop+0x142>

08008518 <__restore_core_regs>:
 8008518:	f100 0134 	add.w	r1, r0, #52	; 0x34
 800851c:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 8008520:	469c      	mov	ip, r3
 8008522:	46a6      	mov	lr, r4
 8008524:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8008528:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 800852c:	46e5      	mov	sp, ip
 800852e:	bd00      	pop	{pc}

08008530 <__gnu_Unwind_Restore_VFP>:
 8008530:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 8008534:	4770      	bx	lr
 8008536:	bf00      	nop

08008538 <__gnu_Unwind_Save_VFP>:
 8008538:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 800853c:	4770      	bx	lr
 800853e:	bf00      	nop

08008540 <__gnu_Unwind_Restore_VFP_D>:
 8008540:	ec90 0b20 	vldmia	r0, {d0-d15}
 8008544:	4770      	bx	lr
 8008546:	bf00      	nop

08008548 <__gnu_Unwind_Save_VFP_D>:
 8008548:	ec80 0b20 	vstmia	r0, {d0-d15}
 800854c:	4770      	bx	lr
 800854e:	bf00      	nop

08008550 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 8008550:	ecd0 0b20 	vldmia	r0, {d16-d31}
 8008554:	4770      	bx	lr
 8008556:	bf00      	nop

08008558 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8008558:	ecc0 0b20 	vstmia	r0, {d16-d31}
 800855c:	4770      	bx	lr
 800855e:	bf00      	nop

08008560 <__gnu_Unwind_Restore_WMMXD>:
 8008560:	ecf0 0102 	ldfe	f0, [r0], #8
 8008564:	ecf0 1102 	ldfe	f1, [r0], #8
 8008568:	ecf0 2102 	ldfe	f2, [r0], #8
 800856c:	ecf0 3102 	ldfe	f3, [r0], #8
 8008570:	ecf0 4102 	ldfe	f4, [r0], #8
 8008574:	ecf0 5102 	ldfe	f5, [r0], #8
 8008578:	ecf0 6102 	ldfe	f6, [r0], #8
 800857c:	ecf0 7102 	ldfe	f7, [r0], #8
 8008580:	ecf0 8102 	ldfp	f0, [r0], #8
 8008584:	ecf0 9102 	ldfp	f1, [r0], #8
 8008588:	ecf0 a102 	ldfp	f2, [r0], #8
 800858c:	ecf0 b102 	ldfp	f3, [r0], #8
 8008590:	ecf0 c102 	ldfp	f4, [r0], #8
 8008594:	ecf0 d102 	ldfp	f5, [r0], #8
 8008598:	ecf0 e102 	ldfp	f6, [r0], #8
 800859c:	ecf0 f102 	ldfp	f7, [r0], #8
 80085a0:	4770      	bx	lr
 80085a2:	bf00      	nop

080085a4 <__gnu_Unwind_Save_WMMXD>:
 80085a4:	ece0 0102 	stfe	f0, [r0], #8
 80085a8:	ece0 1102 	stfe	f1, [r0], #8
 80085ac:	ece0 2102 	stfe	f2, [r0], #8
 80085b0:	ece0 3102 	stfe	f3, [r0], #8
 80085b4:	ece0 4102 	stfe	f4, [r0], #8
 80085b8:	ece0 5102 	stfe	f5, [r0], #8
 80085bc:	ece0 6102 	stfe	f6, [r0], #8
 80085c0:	ece0 7102 	stfe	f7, [r0], #8
 80085c4:	ece0 8102 	stfp	f0, [r0], #8
 80085c8:	ece0 9102 	stfp	f1, [r0], #8
 80085cc:	ece0 a102 	stfp	f2, [r0], #8
 80085d0:	ece0 b102 	stfp	f3, [r0], #8
 80085d4:	ece0 c102 	stfp	f4, [r0], #8
 80085d8:	ece0 d102 	stfp	f5, [r0], #8
 80085dc:	ece0 e102 	stfp	f6, [r0], #8
 80085e0:	ece0 f102 	stfp	f7, [r0], #8
 80085e4:	4770      	bx	lr
 80085e6:	bf00      	nop

080085e8 <__gnu_Unwind_Restore_WMMXC>:
 80085e8:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 80085ec:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 80085f0:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 80085f4:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 80085f8:	4770      	bx	lr
 80085fa:	bf00      	nop

080085fc <__gnu_Unwind_Save_WMMXC>:
 80085fc:	fca0 8101 	stc2	1, cr8, [r0], #4
 8008600:	fca0 9101 	stc2	1, cr9, [r0], #4
 8008604:	fca0 a101 	stc2	1, cr10, [r0], #4
 8008608:	fca0 b101 	stc2	1, cr11, [r0], #4
 800860c:	4770      	bx	lr
 800860e:	bf00      	nop

08008610 <_Unwind_RaiseException>:
 8008610:	46ec      	mov	ip, sp
 8008612:	b500      	push	{lr}
 8008614:	e92d 5000 	stmdb	sp!, {ip, lr}
 8008618:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 800861c:	f04f 0300 	mov.w	r3, #0
 8008620:	e92d 000c 	stmdb	sp!, {r2, r3}
 8008624:	a901      	add	r1, sp, #4
 8008626:	f7ff fbf1 	bl	8007e0c <__gnu_Unwind_RaiseException>
 800862a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800862e:	b012      	add	sp, #72	; 0x48
 8008630:	4770      	bx	lr
 8008632:	bf00      	nop

08008634 <_Unwind_Resume>:
 8008634:	46ec      	mov	ip, sp
 8008636:	b500      	push	{lr}
 8008638:	e92d 5000 	stmdb	sp!, {ip, lr}
 800863c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8008640:	f04f 0300 	mov.w	r3, #0
 8008644:	e92d 000c 	stmdb	sp!, {r2, r3}
 8008648:	a901      	add	r1, sp, #4
 800864a:	f7ff fc19 	bl	8007e80 <__gnu_Unwind_Resume>
 800864e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8008652:	b012      	add	sp, #72	; 0x48
 8008654:	4770      	bx	lr
 8008656:	bf00      	nop

08008658 <_Unwind_Resume_or_Rethrow>:
 8008658:	46ec      	mov	ip, sp
 800865a:	b500      	push	{lr}
 800865c:	e92d 5000 	stmdb	sp!, {ip, lr}
 8008660:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8008664:	f04f 0300 	mov.w	r3, #0
 8008668:	e92d 000c 	stmdb	sp!, {r2, r3}
 800866c:	a901      	add	r1, sp, #4
 800866e:	f7ff fc29 	bl	8007ec4 <__gnu_Unwind_Resume_or_Rethrow>
 8008672:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8008676:	b012      	add	sp, #72	; 0x48
 8008678:	4770      	bx	lr
 800867a:	bf00      	nop

0800867c <_Unwind_ForcedUnwind>:
 800867c:	46ec      	mov	ip, sp
 800867e:	b500      	push	{lr}
 8008680:	e92d 5000 	stmdb	sp!, {ip, lr}
 8008684:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8008688:	f04f 0300 	mov.w	r3, #0
 800868c:	e92d 000c 	stmdb	sp!, {r2, r3}
 8008690:	ab01      	add	r3, sp, #4
 8008692:	f7ff fbeb 	bl	8007e6c <__gnu_Unwind_ForcedUnwind>
 8008696:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800869a:	b012      	add	sp, #72	; 0x48
 800869c:	4770      	bx	lr
 800869e:	bf00      	nop

080086a0 <_Unwind_Backtrace>:
 80086a0:	46ec      	mov	ip, sp
 80086a2:	b500      	push	{lr}
 80086a4:	e92d 5000 	stmdb	sp!, {ip, lr}
 80086a8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80086ac:	f04f 0300 	mov.w	r3, #0
 80086b0:	e92d 000c 	stmdb	sp!, {r2, r3}
 80086b4:	aa01      	add	r2, sp, #4
 80086b6:	f7ff fc5d 	bl	8007f74 <__gnu_Unwind_Backtrace>
 80086ba:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80086be:	b012      	add	sp, #72	; 0x48
 80086c0:	4770      	bx	lr
 80086c2:	bf00      	nop

080086c4 <next_unwind_byte>:
 80086c4:	7a02      	ldrb	r2, [r0, #8]
 80086c6:	b97a      	cbnz	r2, 80086e8 <next_unwind_byte+0x24>
 80086c8:	7a43      	ldrb	r3, [r0, #9]
 80086ca:	b1a3      	cbz	r3, 80086f6 <next_unwind_byte+0x32>
 80086cc:	6842      	ldr	r2, [r0, #4]
 80086ce:	3b01      	subs	r3, #1
 80086d0:	b410      	push	{r4}
 80086d2:	7243      	strb	r3, [r0, #9]
 80086d4:	6813      	ldr	r3, [r2, #0]
 80086d6:	2103      	movs	r1, #3
 80086d8:	1d14      	adds	r4, r2, #4
 80086da:	7201      	strb	r1, [r0, #8]
 80086dc:	021a      	lsls	r2, r3, #8
 80086de:	6044      	str	r4, [r0, #4]
 80086e0:	6002      	str	r2, [r0, #0]
 80086e2:	bc10      	pop	{r4}
 80086e4:	0e18      	lsrs	r0, r3, #24
 80086e6:	4770      	bx	lr
 80086e8:	6803      	ldr	r3, [r0, #0]
 80086ea:	3a01      	subs	r2, #1
 80086ec:	7202      	strb	r2, [r0, #8]
 80086ee:	021a      	lsls	r2, r3, #8
 80086f0:	6002      	str	r2, [r0, #0]
 80086f2:	0e18      	lsrs	r0, r3, #24
 80086f4:	4770      	bx	lr
 80086f6:	20b0      	movs	r0, #176	; 0xb0
 80086f8:	4770      	bx	lr
 80086fa:	bf00      	nop

080086fc <_Unwind_GetGR.constprop.0>:
 80086fc:	b500      	push	{lr}
 80086fe:	b085      	sub	sp, #20
 8008700:	aa03      	add	r2, sp, #12
 8008702:	2300      	movs	r3, #0
 8008704:	9200      	str	r2, [sp, #0]
 8008706:	4619      	mov	r1, r3
 8008708:	220c      	movs	r2, #12
 800870a:	f7ff fbeb 	bl	8007ee4 <_Unwind_VRS_Get>
 800870e:	9803      	ldr	r0, [sp, #12]
 8008710:	b005      	add	sp, #20
 8008712:	f85d fb04 	ldr.w	pc, [sp], #4
 8008716:	bf00      	nop

08008718 <unwind_UCB_from_context>:
 8008718:	e7f0      	b.n	80086fc <_Unwind_GetGR.constprop.0>
 800871a:	bf00      	nop

0800871c <__gnu_unwind_execute>:
 800871c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008720:	4605      	mov	r5, r0
 8008722:	b085      	sub	sp, #20
 8008724:	460e      	mov	r6, r1
 8008726:	f04f 0800 	mov.w	r8, #0
 800872a:	4630      	mov	r0, r6
 800872c:	f7ff ffca 	bl	80086c4 <next_unwind_byte>
 8008730:	28b0      	cmp	r0, #176	; 0xb0
 8008732:	4604      	mov	r4, r0
 8008734:	f000 80b2 	beq.w	800889c <__gnu_unwind_execute+0x180>
 8008738:	0607      	lsls	r7, r0, #24
 800873a:	d520      	bpl.n	800877e <__gnu_unwind_execute+0x62>
 800873c:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 8008740:	2b80      	cmp	r3, #128	; 0x80
 8008742:	d04d      	beq.n	80087e0 <__gnu_unwind_execute+0xc4>
 8008744:	2b90      	cmp	r3, #144	; 0x90
 8008746:	d036      	beq.n	80087b6 <__gnu_unwind_execute+0x9a>
 8008748:	2ba0      	cmp	r3, #160	; 0xa0
 800874a:	d060      	beq.n	800880e <__gnu_unwind_execute+0xf2>
 800874c:	2bb0      	cmp	r3, #176	; 0xb0
 800874e:	d074      	beq.n	800883a <__gnu_unwind_execute+0x11e>
 8008750:	2bc0      	cmp	r3, #192	; 0xc0
 8008752:	f000 808b 	beq.w	800886c <__gnu_unwind_execute+0x150>
 8008756:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 800875a:	2bd0      	cmp	r3, #208	; 0xd0
 800875c:	d10b      	bne.n	8008776 <__gnu_unwind_execute+0x5a>
 800875e:	f000 0207 	and.w	r2, r0, #7
 8008762:	3201      	adds	r2, #1
 8008764:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8008768:	2305      	movs	r3, #5
 800876a:	2101      	movs	r1, #1
 800876c:	4628      	mov	r0, r5
 800876e:	f7ff fd97 	bl	80082a0 <_Unwind_VRS_Pop>
 8008772:	2800      	cmp	r0, #0
 8008774:	d0d9      	beq.n	800872a <__gnu_unwind_execute+0xe>
 8008776:	2009      	movs	r0, #9
 8008778:	b005      	add	sp, #20
 800877a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800877e:	f10d 090c 	add.w	r9, sp, #12
 8008782:	2300      	movs	r3, #0
 8008784:	4619      	mov	r1, r3
 8008786:	0087      	lsls	r7, r0, #2
 8008788:	f8cd 9000 	str.w	r9, [sp]
 800878c:	220d      	movs	r2, #13
 800878e:	4628      	mov	r0, r5
 8008790:	f7ff fba8 	bl	8007ee4 <_Unwind_VRS_Get>
 8008794:	b2ff      	uxtb	r7, r7
 8008796:	9b03      	ldr	r3, [sp, #12]
 8008798:	f8cd 9000 	str.w	r9, [sp]
 800879c:	3704      	adds	r7, #4
 800879e:	0660      	lsls	r0, r4, #25
 80087a0:	bf4c      	ite	mi
 80087a2:	1bdf      	submi	r7, r3, r7
 80087a4:	18ff      	addpl	r7, r7, r3
 80087a6:	2300      	movs	r3, #0
 80087a8:	4619      	mov	r1, r3
 80087aa:	220d      	movs	r2, #13
 80087ac:	4628      	mov	r0, r5
 80087ae:	9703      	str	r7, [sp, #12]
 80087b0:	f7ff fbbc 	bl	8007f2c <_Unwind_VRS_Set>
 80087b4:	e7b9      	b.n	800872a <__gnu_unwind_execute+0xe>
 80087b6:	f000 030d 	and.w	r3, r0, #13
 80087ba:	2b0d      	cmp	r3, #13
 80087bc:	d0db      	beq.n	8008776 <__gnu_unwind_execute+0x5a>
 80087be:	af03      	add	r7, sp, #12
 80087c0:	2300      	movs	r3, #0
 80087c2:	f000 020f 	and.w	r2, r0, #15
 80087c6:	4619      	mov	r1, r3
 80087c8:	9700      	str	r7, [sp, #0]
 80087ca:	4628      	mov	r0, r5
 80087cc:	f7ff fb8a 	bl	8007ee4 <_Unwind_VRS_Get>
 80087d0:	2300      	movs	r3, #0
 80087d2:	9700      	str	r7, [sp, #0]
 80087d4:	4619      	mov	r1, r3
 80087d6:	220d      	movs	r2, #13
 80087d8:	4628      	mov	r0, r5
 80087da:	f7ff fba7 	bl	8007f2c <_Unwind_VRS_Set>
 80087de:	e7a4      	b.n	800872a <__gnu_unwind_execute+0xe>
 80087e0:	4630      	mov	r0, r6
 80087e2:	f7ff ff6f 	bl	80086c4 <next_unwind_byte>
 80087e6:	0224      	lsls	r4, r4, #8
 80087e8:	4320      	orrs	r0, r4
 80087ea:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 80087ee:	d0c2      	beq.n	8008776 <__gnu_unwind_execute+0x5a>
 80087f0:	0104      	lsls	r4, r0, #4
 80087f2:	2300      	movs	r3, #0
 80087f4:	b2a2      	uxth	r2, r4
 80087f6:	4619      	mov	r1, r3
 80087f8:	4628      	mov	r0, r5
 80087fa:	f7ff fd51 	bl	80082a0 <_Unwind_VRS_Pop>
 80087fe:	2800      	cmp	r0, #0
 8008800:	d1b9      	bne.n	8008776 <__gnu_unwind_execute+0x5a>
 8008802:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8008806:	bf18      	it	ne
 8008808:	f04f 0801 	movne.w	r8, #1
 800880c:	e78d      	b.n	800872a <__gnu_unwind_execute+0xe>
 800880e:	43c2      	mvns	r2, r0
 8008810:	f002 0307 	and.w	r3, r2, #7
 8008814:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8008818:	411a      	asrs	r2, r3
 800881a:	0701      	lsls	r1, r0, #28
 800881c:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 8008820:	f04f 0300 	mov.w	r3, #0
 8008824:	bf48      	it	mi
 8008826:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 800882a:	4619      	mov	r1, r3
 800882c:	4628      	mov	r0, r5
 800882e:	f7ff fd37 	bl	80082a0 <_Unwind_VRS_Pop>
 8008832:	2800      	cmp	r0, #0
 8008834:	f43f af79 	beq.w	800872a <__gnu_unwind_execute+0xe>
 8008838:	e79d      	b.n	8008776 <__gnu_unwind_execute+0x5a>
 800883a:	28b1      	cmp	r0, #177	; 0xb1
 800883c:	d033      	beq.n	80088a6 <__gnu_unwind_execute+0x18a>
 800883e:	28b2      	cmp	r0, #178	; 0xb2
 8008840:	f000 808b 	beq.w	800895a <__gnu_unwind_execute+0x23e>
 8008844:	28b3      	cmp	r0, #179	; 0xb3
 8008846:	d039      	beq.n	80088bc <__gnu_unwind_execute+0x1a0>
 8008848:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 800884c:	2bb4      	cmp	r3, #180	; 0xb4
 800884e:	d092      	beq.n	8008776 <__gnu_unwind_execute+0x5a>
 8008850:	f000 0207 	and.w	r2, r0, #7
 8008854:	3201      	adds	r2, #1
 8008856:	2301      	movs	r3, #1
 8008858:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 800885c:	4619      	mov	r1, r3
 800885e:	4628      	mov	r0, r5
 8008860:	f7ff fd1e 	bl	80082a0 <_Unwind_VRS_Pop>
 8008864:	2800      	cmp	r0, #0
 8008866:	f43f af60 	beq.w	800872a <__gnu_unwind_execute+0xe>
 800886a:	e784      	b.n	8008776 <__gnu_unwind_execute+0x5a>
 800886c:	28c6      	cmp	r0, #198	; 0xc6
 800886e:	d042      	beq.n	80088f6 <__gnu_unwind_execute+0x1da>
 8008870:	28c7      	cmp	r0, #199	; 0xc7
 8008872:	d04c      	beq.n	800890e <__gnu_unwind_execute+0x1f2>
 8008874:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8008878:	2bc0      	cmp	r3, #192	; 0xc0
 800887a:	d05b      	beq.n	8008934 <__gnu_unwind_execute+0x218>
 800887c:	28c8      	cmp	r0, #200	; 0xc8
 800887e:	d060      	beq.n	8008942 <__gnu_unwind_execute+0x226>
 8008880:	28c9      	cmp	r0, #201	; 0xc9
 8008882:	f47f af78 	bne.w	8008776 <__gnu_unwind_execute+0x5a>
 8008886:	4630      	mov	r0, r6
 8008888:	f7ff ff1c 	bl	80086c4 <next_unwind_byte>
 800888c:	0302      	lsls	r2, r0, #12
 800888e:	f000 000f 	and.w	r0, r0, #15
 8008892:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8008896:	3001      	adds	r0, #1
 8008898:	4302      	orrs	r2, r0
 800889a:	e765      	b.n	8008768 <__gnu_unwind_execute+0x4c>
 800889c:	f1b8 0f00 	cmp.w	r8, #0
 80088a0:	d018      	beq.n	80088d4 <__gnu_unwind_execute+0x1b8>
 80088a2:	2000      	movs	r0, #0
 80088a4:	e768      	b.n	8008778 <__gnu_unwind_execute+0x5c>
 80088a6:	4630      	mov	r0, r6
 80088a8:	f7ff ff0c 	bl	80086c4 <next_unwind_byte>
 80088ac:	4602      	mov	r2, r0
 80088ae:	2800      	cmp	r0, #0
 80088b0:	f43f af61 	beq.w	8008776 <__gnu_unwind_execute+0x5a>
 80088b4:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 80088b8:	d0d0      	beq.n	800885c <__gnu_unwind_execute+0x140>
 80088ba:	e75c      	b.n	8008776 <__gnu_unwind_execute+0x5a>
 80088bc:	4630      	mov	r0, r6
 80088be:	f7ff ff01 	bl	80086c4 <next_unwind_byte>
 80088c2:	0301      	lsls	r1, r0, #12
 80088c4:	f000 000f 	and.w	r0, r0, #15
 80088c8:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 80088cc:	1c42      	adds	r2, r0, #1
 80088ce:	2301      	movs	r3, #1
 80088d0:	430a      	orrs	r2, r1
 80088d2:	e7c3      	b.n	800885c <__gnu_unwind_execute+0x140>
 80088d4:	ac03      	add	r4, sp, #12
 80088d6:	4643      	mov	r3, r8
 80088d8:	220e      	movs	r2, #14
 80088da:	4641      	mov	r1, r8
 80088dc:	9400      	str	r4, [sp, #0]
 80088de:	4628      	mov	r0, r5
 80088e0:	f7ff fb00 	bl	8007ee4 <_Unwind_VRS_Get>
 80088e4:	9400      	str	r4, [sp, #0]
 80088e6:	4628      	mov	r0, r5
 80088e8:	4643      	mov	r3, r8
 80088ea:	220f      	movs	r2, #15
 80088ec:	4641      	mov	r1, r8
 80088ee:	f7ff fb1d 	bl	8007f2c <_Unwind_VRS_Set>
 80088f2:	4640      	mov	r0, r8
 80088f4:	e740      	b.n	8008778 <__gnu_unwind_execute+0x5c>
 80088f6:	4630      	mov	r0, r6
 80088f8:	f7ff fee4 	bl	80086c4 <next_unwind_byte>
 80088fc:	0301      	lsls	r1, r0, #12
 80088fe:	f000 000f 	and.w	r0, r0, #15
 8008902:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8008906:	1c42      	adds	r2, r0, #1
 8008908:	2303      	movs	r3, #3
 800890a:	430a      	orrs	r2, r1
 800890c:	e7a6      	b.n	800885c <__gnu_unwind_execute+0x140>
 800890e:	4630      	mov	r0, r6
 8008910:	f7ff fed8 	bl	80086c4 <next_unwind_byte>
 8008914:	4602      	mov	r2, r0
 8008916:	2800      	cmp	r0, #0
 8008918:	f43f af2d 	beq.w	8008776 <__gnu_unwind_execute+0x5a>
 800891c:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8008920:	f47f af29 	bne.w	8008776 <__gnu_unwind_execute+0x5a>
 8008924:	2104      	movs	r1, #4
 8008926:	4628      	mov	r0, r5
 8008928:	f7ff fcba 	bl	80082a0 <_Unwind_VRS_Pop>
 800892c:	2800      	cmp	r0, #0
 800892e:	f43f aefc 	beq.w	800872a <__gnu_unwind_execute+0xe>
 8008932:	e720      	b.n	8008776 <__gnu_unwind_execute+0x5a>
 8008934:	f000 020f 	and.w	r2, r0, #15
 8008938:	3201      	adds	r2, #1
 800893a:	2303      	movs	r3, #3
 800893c:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 8008940:	e78c      	b.n	800885c <__gnu_unwind_execute+0x140>
 8008942:	4630      	mov	r0, r6
 8008944:	f7ff febe 	bl	80086c4 <next_unwind_byte>
 8008948:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 800894c:	f000 030f 	and.w	r3, r0, #15
 8008950:	3210      	adds	r2, #16
 8008952:	3301      	adds	r3, #1
 8008954:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 8008958:	e706      	b.n	8008768 <__gnu_unwind_execute+0x4c>
 800895a:	2300      	movs	r3, #0
 800895c:	f10d 090c 	add.w	r9, sp, #12
 8008960:	220d      	movs	r2, #13
 8008962:	4619      	mov	r1, r3
 8008964:	f8cd 9000 	str.w	r9, [sp]
 8008968:	4628      	mov	r0, r5
 800896a:	f7ff fabb 	bl	8007ee4 <_Unwind_VRS_Get>
 800896e:	4630      	mov	r0, r6
 8008970:	f7ff fea8 	bl	80086c4 <next_unwind_byte>
 8008974:	0602      	lsls	r2, r0, #24
 8008976:	f04f 0702 	mov.w	r7, #2
 800897a:	d50c      	bpl.n	8008996 <__gnu_unwind_execute+0x27a>
 800897c:	9b03      	ldr	r3, [sp, #12]
 800897e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8008982:	40b8      	lsls	r0, r7
 8008984:	4403      	add	r3, r0
 8008986:	4630      	mov	r0, r6
 8008988:	9303      	str	r3, [sp, #12]
 800898a:	f7ff fe9b 	bl	80086c4 <next_unwind_byte>
 800898e:	0603      	lsls	r3, r0, #24
 8008990:	f107 0707 	add.w	r7, r7, #7
 8008994:	d4f2      	bmi.n	800897c <__gnu_unwind_execute+0x260>
 8008996:	9b03      	ldr	r3, [sp, #12]
 8008998:	f8cd 9000 	str.w	r9, [sp]
 800899c:	f000 047f 	and.w	r4, r0, #127	; 0x7f
 80089a0:	f503 7201 	add.w	r2, r3, #516	; 0x204
 80089a4:	40bc      	lsls	r4, r7
 80089a6:	2300      	movs	r3, #0
 80089a8:	4414      	add	r4, r2
 80089aa:	4619      	mov	r1, r3
 80089ac:	220d      	movs	r2, #13
 80089ae:	4628      	mov	r0, r5
 80089b0:	9403      	str	r4, [sp, #12]
 80089b2:	f7ff fabb 	bl	8007f2c <_Unwind_VRS_Set>
 80089b6:	e6b8      	b.n	800872a <__gnu_unwind_execute+0xe>

080089b8 <__gnu_unwind_frame>:
 80089b8:	b510      	push	{r4, lr}
 80089ba:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80089bc:	b084      	sub	sp, #16
 80089be:	6853      	ldr	r3, [r2, #4]
 80089c0:	2403      	movs	r4, #3
 80089c2:	f88d 400c 	strb.w	r4, [sp, #12]
 80089c6:	021b      	lsls	r3, r3, #8
 80089c8:	f102 0408 	add.w	r4, r2, #8
 80089cc:	4608      	mov	r0, r1
 80089ce:	79d2      	ldrb	r2, [r2, #7]
 80089d0:	9301      	str	r3, [sp, #4]
 80089d2:	a901      	add	r1, sp, #4
 80089d4:	9402      	str	r4, [sp, #8]
 80089d6:	f88d 200d 	strb.w	r2, [sp, #13]
 80089da:	f7ff fe9f 	bl	800871c <__gnu_unwind_execute>
 80089de:	b004      	add	sp, #16
 80089e0:	bd10      	pop	{r4, pc}
 80089e2:	bf00      	nop

080089e4 <_Unwind_GetRegionStart>:
 80089e4:	b508      	push	{r3, lr}
 80089e6:	f7ff fe97 	bl	8008718 <unwind_UCB_from_context>
 80089ea:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80089ec:	bd08      	pop	{r3, pc}
 80089ee:	bf00      	nop

080089f0 <_Unwind_GetLanguageSpecificData>:
 80089f0:	b508      	push	{r3, lr}
 80089f2:	f7ff fe91 	bl	8008718 <unwind_UCB_from_context>
 80089f6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80089f8:	79c3      	ldrb	r3, [r0, #7]
 80089fa:	3302      	adds	r3, #2
 80089fc:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8008a00:	bd08      	pop	{r3, pc}
 8008a02:	bf00      	nop

08008a04 <__aeabi_idiv0>:
 8008a04:	4770      	bx	lr
 8008a06:	bf00      	nop

08008a08 <_ZN14Task_Scheduler4TaskEv>:

extern Timer_PWM *Timer1;
extern Timer_PWM *Timer8;
extern Usart *Usart1;
void Task_Scheduler::Task()
{
 8008a08:	b580      	push	{r7, lr}
 8008a0a:	b082      	sub	sp, #8
 8008a0c:	af00      	add	r7, sp, #0
 8008a0e:	6078      	str	r0, [r7, #4]
	if(this->fre_1000hz == 1){
 8008a10:	687b      	ldr	r3, [r7, #4]
 8008a12:	7d1b      	ldrb	r3, [r3, #20]
 8008a14:	2b01      	cmp	r3, #1
 8008a16:	d105      	bne.n	8008a24 <_ZN14Task_Scheduler4TaskEv+0x1c>
		this->Task_1000hz();
 8008a18:	6878      	ldr	r0, [r7, #4]
 8008a1a:	f000 f839 	bl	8008a90 <_ZN14Task_Scheduler11Task_1000hzEv>
		this->fre_1000hz = 0;
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	2200      	movs	r2, #0
 8008a22:	751a      	strb	r2, [r3, #20]
	}
	if(this->fre_500hz == 1){
 8008a24:	687b      	ldr	r3, [r7, #4]
 8008a26:	7d5b      	ldrb	r3, [r3, #21]
 8008a28:	2b01      	cmp	r3, #1
 8008a2a:	d105      	bne.n	8008a38 <_ZN14Task_Scheduler4TaskEv+0x30>
		this->Task_500hz();
 8008a2c:	6878      	ldr	r0, [r7, #4]
 8008a2e:	f000 f841 	bl	8008ab4 <_ZN14Task_Scheduler10Task_500hzEv>
		this->fre_500hz = 0;
 8008a32:	687b      	ldr	r3, [r7, #4]
 8008a34:	2200      	movs	r2, #0
 8008a36:	755a      	strb	r2, [r3, #21]
	}
	if(this->fre_200hz == 1){
 8008a38:	687b      	ldr	r3, [r7, #4]
 8008a3a:	7d9b      	ldrb	r3, [r3, #22]
 8008a3c:	2b01      	cmp	r3, #1
 8008a3e:	d105      	bne.n	8008a4c <_ZN14Task_Scheduler4TaskEv+0x44>
		this->Task_200hz();
 8008a40:	6878      	ldr	r0, [r7, #4]
 8008a42:	f000 f849 	bl	8008ad8 <_ZN14Task_Scheduler10Task_200hzEv>
		this->fre_200hz = 0;
 8008a46:	687b      	ldr	r3, [r7, #4]
 8008a48:	2200      	movs	r2, #0
 8008a4a:	759a      	strb	r2, [r3, #22]
	}
	if(this->fre_100hz == 1){
 8008a4c:	687b      	ldr	r3, [r7, #4]
 8008a4e:	7ddb      	ldrb	r3, [r3, #23]
 8008a50:	2b01      	cmp	r3, #1
 8008a52:	d105      	bne.n	8008a60 <_ZN14Task_Scheduler4TaskEv+0x58>
		this->Task_100hz();
 8008a54:	6878      	ldr	r0, [r7, #4]
 8008a56:	f000 f851 	bl	8008afc <_ZN14Task_Scheduler10Task_100hzEv>
		this->fre_100hz = 0;
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	2200      	movs	r2, #0
 8008a5e:	75da      	strb	r2, [r3, #23]
	}
	if(this->fre_10hz == 1){
 8008a60:	687b      	ldr	r3, [r7, #4]
 8008a62:	7e1b      	ldrb	r3, [r3, #24]
 8008a64:	2b01      	cmp	r3, #1
 8008a66:	d105      	bne.n	8008a74 <_ZN14Task_Scheduler4TaskEv+0x6c>
		this->Task_10hz();
 8008a68:	6878      	ldr	r0, [r7, #4]
 8008a6a:	f000 f859 	bl	8008b20 <_ZN14Task_Scheduler9Task_10hzEv>
		this->fre_10hz = 0;
 8008a6e:	687b      	ldr	r3, [r7, #4]
 8008a70:	2200      	movs	r2, #0
 8008a72:	761a      	strb	r2, [r3, #24]
	}
	if(this->fre_1hz == 1){
 8008a74:	687b      	ldr	r3, [r7, #4]
 8008a76:	7e5b      	ldrb	r3, [r3, #25]
 8008a78:	2b01      	cmp	r3, #1
 8008a7a:	d105      	bne.n	8008a88 <_ZN14Task_Scheduler4TaskEv+0x80>
		this->Task_1hz();
 8008a7c:	6878      	ldr	r0, [r7, #4]
 8008a7e:	f000 f861 	bl	8008b44 <_ZN14Task_Scheduler8Task_1hzEv>
		this->fre_1hz = 0;
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	2200      	movs	r2, #0
 8008a86:	765a      	strb	r2, [r3, #25]
	}
}
 8008a88:	bf00      	nop
 8008a8a:	3708      	adds	r7, #8
 8008a8c:	46bd      	mov	sp, r7
 8008a8e:	bd80      	pop	{r7, pc}

08008a90 <_ZN14Task_Scheduler11Task_1000hzEv>:
void Task_Scheduler::Task_1000hz()
{
 8008a90:	b580      	push	{r7, lr}
 8008a92:	b082      	sub	sp, #8
 8008a94:	af00      	add	r7, sp, #0
 8008a96:	6078      	str	r0, [r7, #4]
	Timer1->PWM_Out(1, 100);
 8008a98:	4b05      	ldr	r3, [pc, #20]	; (8008ab0 <_ZN14Task_Scheduler11Task_1000hzEv+0x20>)
 8008a9a:	681b      	ldr	r3, [r3, #0]
 8008a9c:	2264      	movs	r2, #100	; 0x64
 8008a9e:	2101      	movs	r1, #1
 8008aa0:	4618      	mov	r0, r3
 8008aa2:	f004 f869 	bl	800cb78 <_ZN9Timer_PWM7PWM_OutEhj>
}
 8008aa6:	bf00      	nop
 8008aa8:	3708      	adds	r7, #8
 8008aaa:	46bd      	mov	sp, r7
 8008aac:	bd80      	pop	{r7, pc}
 8008aae:	bf00      	nop
 8008ab0:	20000a20 	.word	0x20000a20

08008ab4 <_ZN14Task_Scheduler10Task_500hzEv>:
void Task_Scheduler::Task_500hz()
{
 8008ab4:	b580      	push	{r7, lr}
 8008ab6:	b082      	sub	sp, #8
 8008ab8:	af00      	add	r7, sp, #0
 8008aba:	6078      	str	r0, [r7, #4]
	Timer1->PWM_Out(2, 200);
 8008abc:	4b05      	ldr	r3, [pc, #20]	; (8008ad4 <_ZN14Task_Scheduler10Task_500hzEv+0x20>)
 8008abe:	681b      	ldr	r3, [r3, #0]
 8008ac0:	22c8      	movs	r2, #200	; 0xc8
 8008ac2:	2102      	movs	r1, #2
 8008ac4:	4618      	mov	r0, r3
 8008ac6:	f004 f857 	bl	800cb78 <_ZN9Timer_PWM7PWM_OutEhj>
}
 8008aca:	bf00      	nop
 8008acc:	3708      	adds	r7, #8
 8008ace:	46bd      	mov	sp, r7
 8008ad0:	bd80      	pop	{r7, pc}
 8008ad2:	bf00      	nop
 8008ad4:	20000a20 	.word	0x20000a20

08008ad8 <_ZN14Task_Scheduler10Task_200hzEv>:
void Task_Scheduler::Task_200hz()
{
 8008ad8:	b580      	push	{r7, lr}
 8008ada:	b082      	sub	sp, #8
 8008adc:	af00      	add	r7, sp, #0
 8008ade:	6078      	str	r0, [r7, #4]
	Timer1->PWM_Out(3, 300);
 8008ae0:	4b05      	ldr	r3, [pc, #20]	; (8008af8 <_ZN14Task_Scheduler10Task_200hzEv+0x20>)
 8008ae2:	681b      	ldr	r3, [r3, #0]
 8008ae4:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8008ae8:	2103      	movs	r1, #3
 8008aea:	4618      	mov	r0, r3
 8008aec:	f004 f844 	bl	800cb78 <_ZN9Timer_PWM7PWM_OutEhj>
}
 8008af0:	bf00      	nop
 8008af2:	3708      	adds	r7, #8
 8008af4:	46bd      	mov	sp, r7
 8008af6:	bd80      	pop	{r7, pc}
 8008af8:	20000a20 	.word	0x20000a20

08008afc <_ZN14Task_Scheduler10Task_100hzEv>:
void Task_Scheduler::Task_100hz()
{
 8008afc:	b580      	push	{r7, lr}
 8008afe:	b082      	sub	sp, #8
 8008b00:	af00      	add	r7, sp, #0
 8008b02:	6078      	str	r0, [r7, #4]
	Timer1->PWM_Out(4, 400);
 8008b04:	4b05      	ldr	r3, [pc, #20]	; (8008b1c <_ZN14Task_Scheduler10Task_100hzEv+0x20>)
 8008b06:	681b      	ldr	r3, [r3, #0]
 8008b08:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8008b0c:	2104      	movs	r1, #4
 8008b0e:	4618      	mov	r0, r3
 8008b10:	f004 f832 	bl	800cb78 <_ZN9Timer_PWM7PWM_OutEhj>
}
 8008b14:	bf00      	nop
 8008b16:	3708      	adds	r7, #8
 8008b18:	46bd      	mov	sp, r7
 8008b1a:	bd80      	pop	{r7, pc}
 8008b1c:	20000a20 	.word	0x20000a20

08008b20 <_ZN14Task_Scheduler9Task_10hzEv>:
void Task_Scheduler::Task_10hz()
{
 8008b20:	b580      	push	{r7, lr}
 8008b22:	b082      	sub	sp, #8
 8008b24:	af00      	add	r7, sp, #0
 8008b26:	6078      	str	r0, [r7, #4]
	Timer8->PWM_Out(1, 500);
 8008b28:	4b05      	ldr	r3, [pc, #20]	; (8008b40 <_ZN14Task_Scheduler9Task_10hzEv+0x20>)
 8008b2a:	681b      	ldr	r3, [r3, #0]
 8008b2c:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8008b30:	2101      	movs	r1, #1
 8008b32:	4618      	mov	r0, r3
 8008b34:	f004 f820 	bl	800cb78 <_ZN9Timer_PWM7PWM_OutEhj>
}
 8008b38:	bf00      	nop
 8008b3a:	3708      	adds	r7, #8
 8008b3c:	46bd      	mov	sp, r7
 8008b3e:	bd80      	pop	{r7, pc}
 8008b40:	20000a24 	.word	0x20000a24

08008b44 <_ZN14Task_Scheduler8Task_1hzEv>:
void Task_Scheduler::Task_1hz()
{
 8008b44:	b580      	push	{r7, lr}
 8008b46:	b082      	sub	sp, #8
 8008b48:	af00      	add	r7, sp, #0
 8008b4a:	6078      	str	r0, [r7, #4]
	Timer8->PWM_Out(2, 600);
 8008b4c:	4b0a      	ldr	r3, [pc, #40]	; (8008b78 <_ZN14Task_Scheduler8Task_1hzEv+0x34>)
 8008b4e:	681b      	ldr	r3, [r3, #0]
 8008b50:	f44f 7216 	mov.w	r2, #600	; 0x258
 8008b54:	2102      	movs	r1, #2
 8008b56:	4618      	mov	r0, r3
 8008b58:	f004 f80e 	bl	800cb78 <_ZN9Timer_PWM7PWM_OutEhj>
//	Usart1->Send_String((uint8_t *)"串口测试\n");
	HAL_UART_Transmit(Usart1->usart, (uint8_t *)("HelloWorld\n"), 11, 1000);
 8008b5c:	4b07      	ldr	r3, [pc, #28]	; (8008b7c <_ZN14Task_Scheduler8Task_1hzEv+0x38>)
 8008b5e:	681b      	ldr	r3, [r3, #0]
 8008b60:	6818      	ldr	r0, [r3, #0]
 8008b62:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008b66:	220b      	movs	r2, #11
 8008b68:	4905      	ldr	r1, [pc, #20]	; (8008b80 <_ZN14Task_Scheduler8Task_1hzEv+0x3c>)
 8008b6a:	f002 fec5 	bl	800b8f8 <HAL_UART_Transmit>
}
 8008b6e:	bf00      	nop
 8008b70:	3708      	adds	r7, #8
 8008b72:	46bd      	mov	sp, r7
 8008b74:	bd80      	pop	{r7, pc}
 8008b76:	bf00      	nop
 8008b78:	20000a24 	.word	0x20000a24
 8008b7c:	20000a2c 	.word	0x20000a2c
 8008b80:	08012fd0 	.word	0x08012fd0

08008b84 <_ZN14Task_SchedulerC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj>:

Task_Scheduler::Task_Scheduler(TIM_HandleTypeDef *tim, TIM_TypeDef *Tim_Num, u16 arr, u16 pcs):Timer(tim, Tim_Num, arr, pcs)
 8008b84:	b580      	push	{r7, lr}
 8008b86:	b088      	sub	sp, #32
 8008b88:	af02      	add	r7, sp, #8
 8008b8a:	60f8      	str	r0, [r7, #12]
 8008b8c:	60b9      	str	r1, [r7, #8]
 8008b8e:	607a      	str	r2, [r7, #4]
 8008b90:	603b      	str	r3, [r7, #0]
 8008b92:	68f8      	ldr	r0, [r7, #12]
 8008b94:	6a3b      	ldr	r3, [r7, #32]
 8008b96:	9300      	str	r3, [sp, #0]
 8008b98:	683b      	ldr	r3, [r7, #0]
 8008b9a:	687a      	ldr	r2, [r7, #4]
 8008b9c:	68b9      	ldr	r1, [r7, #8]
 8008b9e:	f003 fbfd 	bl	800c39c <_ZN5TimerC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj>
 8008ba2:	4a23      	ldr	r2, [pc, #140]	; (8008c30 <_ZN14Task_SchedulerC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0xac>)
 8008ba4:	68fb      	ldr	r3, [r7, #12]
 8008ba6:	601a      	str	r2, [r3, #0]
{
	TIM_MasterConfigTypeDef sMasterConfig = {0};
 8008ba8:	f107 0310 	add.w	r3, r7, #16
 8008bac:	2200      	movs	r2, #0
 8008bae:	601a      	str	r2, [r3, #0]
 8008bb0:	605a      	str	r2, [r3, #4]

	this->tim->Init.Prescaler = this->pcs;
 8008bb2:	68fb      	ldr	r3, [r7, #12]
 8008bb4:	68db      	ldr	r3, [r3, #12]
 8008bb6:	68fa      	ldr	r2, [r7, #12]
 8008bb8:	6892      	ldr	r2, [r2, #8]
 8008bba:	605a      	str	r2, [r3, #4]
	this->tim->Init.CounterMode = TIM_COUNTERMODE_UP;
 8008bbc:	68fb      	ldr	r3, [r7, #12]
 8008bbe:	68db      	ldr	r3, [r3, #12]
 8008bc0:	2200      	movs	r2, #0
 8008bc2:	609a      	str	r2, [r3, #8]
	this->tim->Init.Period = this->arr;
 8008bc4:	68fb      	ldr	r3, [r7, #12]
 8008bc6:	68db      	ldr	r3, [r3, #12]
 8008bc8:	68fa      	ldr	r2, [r7, #12]
 8008bca:	6852      	ldr	r2, [r2, #4]
 8008bcc:	60da      	str	r2, [r3, #12]
	this->tim->Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8008bce:	68fb      	ldr	r3, [r7, #12]
 8008bd0:	68db      	ldr	r3, [r3, #12]
 8008bd2:	2280      	movs	r2, #128	; 0x80
 8008bd4:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(this->tim) != HAL_OK){
 8008bd6:	68fb      	ldr	r3, [r7, #12]
 8008bd8:	68db      	ldr	r3, [r3, #12]
 8008bda:	4618      	mov	r0, r3
 8008bdc:	f001 fdfe 	bl	800a7dc <HAL_TIM_Base_Init>
 8008be0:	4603      	mov	r3, r0
 8008be2:	2b00      	cmp	r3, #0
 8008be4:	bf14      	ite	ne
 8008be6:	2301      	movne	r3, #1
 8008be8:	2300      	moveq	r3, #0
 8008bea:	b2db      	uxtb	r3, r3
 8008bec:	2b00      	cmp	r3, #0
 8008bee:	d001      	beq.n	8008bf4 <_ZN14Task_SchedulerC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0x70>
		Error_Handler();
 8008bf0:	f000 fa1c 	bl	800902c <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8008bf4:	2300      	movs	r3, #0
 8008bf6:	613b      	str	r3, [r7, #16]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8008bf8:	2300      	movs	r3, #0
 8008bfa:	617b      	str	r3, [r7, #20]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK){
 8008bfc:	f107 0310 	add.w	r3, r7, #16
 8008c00:	4619      	mov	r1, r3
 8008c02:	480c      	ldr	r0, [pc, #48]	; (8008c34 <_ZN14Task_SchedulerC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0xb0>)
 8008c04:	f002 fd96 	bl	800b734 <HAL_TIMEx_MasterConfigSynchronization>
 8008c08:	4603      	mov	r3, r0
 8008c0a:	2b00      	cmp	r3, #0
 8008c0c:	bf14      	ite	ne
 8008c0e:	2301      	movne	r3, #1
 8008c10:	2300      	moveq	r3, #0
 8008c12:	b2db      	uxtb	r3, r3
 8008c14:	2b00      	cmp	r3, #0
 8008c16:	d001      	beq.n	8008c1c <_ZN14Task_SchedulerC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0x98>
		Error_Handler();
 8008c18:	f000 fa08 	bl	800902c <Error_Handler>
	}
	HAL_TIM_Base_Start_IT(this->tim);
 8008c1c:	68fb      	ldr	r3, [r7, #12]
 8008c1e:	68db      	ldr	r3, [r3, #12]
 8008c20:	4618      	mov	r0, r3
 8008c22:	f001 fe2b 	bl	800a87c <HAL_TIM_Base_Start_IT>
}
 8008c26:	68fb      	ldr	r3, [r7, #12]
 8008c28:	4618      	mov	r0, r3
 8008c2a:	3718      	adds	r7, #24
 8008c2c:	46bd      	mov	sp, r7
 8008c2e:	bd80      	pop	{r7, pc}
 8008c30:	08013790 	.word	0x08013790
 8008c34:	20000b64 	.word	0x20000b64

08008c38 <_ZN14Task_Scheduler15Timer_InterruptEv>:

void Task_Scheduler::Timer_Interrupt()
{
 8008c38:	b480      	push	{r7}
 8008c3a:	b083      	sub	sp, #12
 8008c3c:	af00      	add	r7, sp, #0
 8008c3e:	6078      	str	r0, [r7, #4]
	this->count_1ms++;
 8008c40:	687b      	ldr	r3, [r7, #4]
 8008c42:	7e9b      	ldrb	r3, [r3, #26]
 8008c44:	3301      	adds	r3, #1
 8008c46:	b2da      	uxtb	r2, r3
 8008c48:	687b      	ldr	r3, [r7, #4]
 8008c4a:	769a      	strb	r2, [r3, #26]
	this->count_2ms++;
 8008c4c:	687b      	ldr	r3, [r7, #4]
 8008c4e:	7edb      	ldrb	r3, [r3, #27]
 8008c50:	3301      	adds	r3, #1
 8008c52:	b2da      	uxtb	r2, r3
 8008c54:	687b      	ldr	r3, [r7, #4]
 8008c56:	76da      	strb	r2, [r3, #27]
	this->count_5ms++;
 8008c58:	687b      	ldr	r3, [r7, #4]
 8008c5a:	7f1b      	ldrb	r3, [r3, #28]
 8008c5c:	3301      	adds	r3, #1
 8008c5e:	b2da      	uxtb	r2, r3
 8008c60:	687b      	ldr	r3, [r7, #4]
 8008c62:	771a      	strb	r2, [r3, #28]
	this->count_10ms++;
 8008c64:	687b      	ldr	r3, [r7, #4]
 8008c66:	7f5b      	ldrb	r3, [r3, #29]
 8008c68:	3301      	adds	r3, #1
 8008c6a:	b2da      	uxtb	r2, r3
 8008c6c:	687b      	ldr	r3, [r7, #4]
 8008c6e:	775a      	strb	r2, [r3, #29]
	this->count_100ms++;
 8008c70:	687b      	ldr	r3, [r7, #4]
 8008c72:	7f9b      	ldrb	r3, [r3, #30]
 8008c74:	3301      	adds	r3, #1
 8008c76:	b2da      	uxtb	r2, r3
 8008c78:	687b      	ldr	r3, [r7, #4]
 8008c7a:	779a      	strb	r2, [r3, #30]
	this->count_1s++;
 8008c7c:	687b      	ldr	r3, [r7, #4]
 8008c7e:	6a1b      	ldr	r3, [r3, #32]
 8008c80:	1c5a      	adds	r2, r3, #1
 8008c82:	687b      	ldr	r3, [r7, #4]
 8008c84:	621a      	str	r2, [r3, #32]
	if(this->count_1ms >= 1){
 8008c86:	687b      	ldr	r3, [r7, #4]
 8008c88:	7e9b      	ldrb	r3, [r3, #26]
 8008c8a:	2b00      	cmp	r3, #0
 8008c8c:	d005      	beq.n	8008c9a <_ZN14Task_Scheduler15Timer_InterruptEv+0x62>
		this->fre_1000hz = 1;
 8008c8e:	687b      	ldr	r3, [r7, #4]
 8008c90:	2201      	movs	r2, #1
 8008c92:	751a      	strb	r2, [r3, #20]
		this->count_1ms = 0;
 8008c94:	687b      	ldr	r3, [r7, #4]
 8008c96:	2200      	movs	r2, #0
 8008c98:	769a      	strb	r2, [r3, #26]
	}
	if(this->count_2ms >= 2){
 8008c9a:	687b      	ldr	r3, [r7, #4]
 8008c9c:	7edb      	ldrb	r3, [r3, #27]
 8008c9e:	2b01      	cmp	r3, #1
 8008ca0:	d905      	bls.n	8008cae <_ZN14Task_Scheduler15Timer_InterruptEv+0x76>
		this->fre_500hz = 1;
 8008ca2:	687b      	ldr	r3, [r7, #4]
 8008ca4:	2201      	movs	r2, #1
 8008ca6:	755a      	strb	r2, [r3, #21]
		this->count_2ms = 0;
 8008ca8:	687b      	ldr	r3, [r7, #4]
 8008caa:	2200      	movs	r2, #0
 8008cac:	76da      	strb	r2, [r3, #27]
	}
	if(this->count_5ms >= 5){
 8008cae:	687b      	ldr	r3, [r7, #4]
 8008cb0:	7f1b      	ldrb	r3, [r3, #28]
 8008cb2:	2b04      	cmp	r3, #4
 8008cb4:	d905      	bls.n	8008cc2 <_ZN14Task_Scheduler15Timer_InterruptEv+0x8a>
		this->fre_200hz = 1;
 8008cb6:	687b      	ldr	r3, [r7, #4]
 8008cb8:	2201      	movs	r2, #1
 8008cba:	759a      	strb	r2, [r3, #22]
		this->count_5ms = 0;
 8008cbc:	687b      	ldr	r3, [r7, #4]
 8008cbe:	2200      	movs	r2, #0
 8008cc0:	771a      	strb	r2, [r3, #28]
	}
	if(this->count_10ms >= 10){
 8008cc2:	687b      	ldr	r3, [r7, #4]
 8008cc4:	7f5b      	ldrb	r3, [r3, #29]
 8008cc6:	2b09      	cmp	r3, #9
 8008cc8:	d905      	bls.n	8008cd6 <_ZN14Task_Scheduler15Timer_InterruptEv+0x9e>
		this->fre_100hz = 1;
 8008cca:	687b      	ldr	r3, [r7, #4]
 8008ccc:	2201      	movs	r2, #1
 8008cce:	75da      	strb	r2, [r3, #23]
		this->count_10ms = 0;
 8008cd0:	687b      	ldr	r3, [r7, #4]
 8008cd2:	2200      	movs	r2, #0
 8008cd4:	775a      	strb	r2, [r3, #29]
	}
	if(this->count_100ms >= 100){
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	7f9b      	ldrb	r3, [r3, #30]
 8008cda:	2b63      	cmp	r3, #99	; 0x63
 8008cdc:	d905      	bls.n	8008cea <_ZN14Task_Scheduler15Timer_InterruptEv+0xb2>
		this->fre_10hz = 1;
 8008cde:	687b      	ldr	r3, [r7, #4]
 8008ce0:	2201      	movs	r2, #1
 8008ce2:	761a      	strb	r2, [r3, #24]
		this->count_100ms = 0;
 8008ce4:	687b      	ldr	r3, [r7, #4]
 8008ce6:	2200      	movs	r2, #0
 8008ce8:	779a      	strb	r2, [r3, #30]
	}
	if(this->count_1s >= 1000){
 8008cea:	687b      	ldr	r3, [r7, #4]
 8008cec:	6a1b      	ldr	r3, [r3, #32]
 8008cee:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8008cf2:	d305      	bcc.n	8008d00 <_ZN14Task_Scheduler15Timer_InterruptEv+0xc8>
		this->fre_1hz = 1;
 8008cf4:	687b      	ldr	r3, [r7, #4]
 8008cf6:	2201      	movs	r2, #1
 8008cf8:	765a      	strb	r2, [r3, #25]
		this->count_1s = 0;
 8008cfa:	687b      	ldr	r3, [r7, #4]
 8008cfc:	2200      	movs	r2, #0
 8008cfe:	621a      	str	r2, [r3, #32]
	}
}
 8008d00:	bf00      	nop
 8008d02:	370c      	adds	r7, #12
 8008d04:	46bd      	mov	sp, r7
 8008d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d0a:	4770      	bx	lr

08008d0c <_ZN14Task_SchedulerD1Ev>:

Task_Scheduler::~Task_Scheduler()
 8008d0c:	b580      	push	{r7, lr}
 8008d0e:	b082      	sub	sp, #8
 8008d10:	af00      	add	r7, sp, #0
 8008d12:	6078      	str	r0, [r7, #4]
 8008d14:	4a05      	ldr	r2, [pc, #20]	; (8008d2c <_ZN14Task_SchedulerD1Ev+0x20>)
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	601a      	str	r2, [r3, #0]
 8008d1a:	687b      	ldr	r3, [r7, #4]
 8008d1c:	4618      	mov	r0, r3
 8008d1e:	f003 fb5d 	bl	800c3dc <_ZN5TimerD1Ev>
{

}
 8008d22:	687b      	ldr	r3, [r7, #4]
 8008d24:	4618      	mov	r0, r3
 8008d26:	3708      	adds	r7, #8
 8008d28:	46bd      	mov	sp, r7
 8008d2a:	bd80      	pop	{r7, pc}
 8008d2c:	08013790 	.word	0x08013790

08008d30 <_ZN14Task_SchedulerD0Ev>:
Task_Scheduler::~Task_Scheduler()
 8008d30:	b580      	push	{r7, lr}
 8008d32:	b082      	sub	sp, #8
 8008d34:	af00      	add	r7, sp, #0
 8008d36:	6078      	str	r0, [r7, #4]
}
 8008d38:	6878      	ldr	r0, [r7, #4]
 8008d3a:	f7ff ffe7 	bl	8008d0c <_ZN14Task_SchedulerD1Ev>
 8008d3e:	2124      	movs	r1, #36	; 0x24
 8008d40:	6878      	ldr	r0, [r7, #4]
 8008d42:	f004 fa0f 	bl	800d164 <_ZdlPvj>
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	4618      	mov	r0, r3
 8008d4a:	3708      	adds	r7, #8
 8008d4c:	46bd      	mov	sp, r7
 8008d4e:	bd80      	pop	{r7, pc}

08008d50 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8008d50:	b580      	push	{r7, lr}
 8008d52:	b08c      	sub	sp, #48	; 0x30
 8008d54:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8008d56:	f107 031c 	add.w	r3, r7, #28
 8008d5a:	2200      	movs	r2, #0
 8008d5c:	601a      	str	r2, [r3, #0]
 8008d5e:	605a      	str	r2, [r3, #4]
 8008d60:	609a      	str	r2, [r3, #8]
 8008d62:	60da      	str	r2, [r3, #12]
 8008d64:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8008d66:	2300      	movs	r3, #0
 8008d68:	61bb      	str	r3, [r7, #24]
 8008d6a:	4b35      	ldr	r3, [pc, #212]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008d6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008d6e:	4a34      	ldr	r2, [pc, #208]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008d70:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008d74:	6313      	str	r3, [r2, #48]	; 0x30
 8008d76:	4b32      	ldr	r3, [pc, #200]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008d78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008d7a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008d7e:	61bb      	str	r3, [r7, #24]
 8008d80:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8008d82:	2300      	movs	r3, #0
 8008d84:	617b      	str	r3, [r7, #20]
 8008d86:	4b2e      	ldr	r3, [pc, #184]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008d88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008d8a:	4a2d      	ldr	r2, [pc, #180]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008d8c:	f043 0301 	orr.w	r3, r3, #1
 8008d90:	6313      	str	r3, [r2, #48]	; 0x30
 8008d92:	4b2b      	ldr	r3, [pc, #172]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008d94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008d96:	f003 0301 	and.w	r3, r3, #1
 8008d9a:	617b      	str	r3, [r7, #20]
 8008d9c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8008d9e:	2300      	movs	r3, #0
 8008da0:	613b      	str	r3, [r7, #16]
 8008da2:	4b27      	ldr	r3, [pc, #156]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008da4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008da6:	4a26      	ldr	r2, [pc, #152]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008da8:	f043 0302 	orr.w	r3, r3, #2
 8008dac:	6313      	str	r3, [r2, #48]	; 0x30
 8008dae:	4b24      	ldr	r3, [pc, #144]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008db0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008db2:	f003 0302 	and.w	r3, r3, #2
 8008db6:	613b      	str	r3, [r7, #16]
 8008db8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8008dba:	2300      	movs	r3, #0
 8008dbc:	60fb      	str	r3, [r7, #12]
 8008dbe:	4b20      	ldr	r3, [pc, #128]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008dc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008dc2:	4a1f      	ldr	r2, [pc, #124]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008dc4:	f043 0310 	orr.w	r3, r3, #16
 8008dc8:	6313      	str	r3, [r2, #48]	; 0x30
 8008dca:	4b1d      	ldr	r3, [pc, #116]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008dcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008dce:	f003 0310 	and.w	r3, r3, #16
 8008dd2:	60fb      	str	r3, [r7, #12]
 8008dd4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8008dd6:	2300      	movs	r3, #0
 8008dd8:	60bb      	str	r3, [r7, #8]
 8008dda:	4b19      	ldr	r3, [pc, #100]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008ddc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008dde:	4a18      	ldr	r2, [pc, #96]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008de0:	f043 0308 	orr.w	r3, r3, #8
 8008de4:	6313      	str	r3, [r2, #48]	; 0x30
 8008de6:	4b16      	ldr	r3, [pc, #88]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008de8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008dea:	f003 0308 	and.w	r3, r3, #8
 8008dee:	60bb      	str	r3, [r7, #8]
 8008df0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8008df2:	2300      	movs	r3, #0
 8008df4:	607b      	str	r3, [r7, #4]
 8008df6:	4b12      	ldr	r3, [pc, #72]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008df8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008dfa:	4a11      	ldr	r2, [pc, #68]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008dfc:	f043 0304 	orr.w	r3, r3, #4
 8008e00:	6313      	str	r3, [r2, #48]	; 0x30
 8008e02:	4b0f      	ldr	r3, [pc, #60]	; (8008e40 <MX_GPIO_Init+0xf0>)
 8008e04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008e06:	f003 0304 	and.w	r3, r3, #4
 8008e0a:	607b      	str	r3, [r7, #4]
 8008e0c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 8008e0e:	2200      	movs	r2, #0
 8008e10:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008e14:	480b      	ldr	r0, [pc, #44]	; (8008e44 <MX_GPIO_Init+0xf4>)
 8008e16:	f001 f87f 	bl	8009f18 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8008e1a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008e1e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8008e20:	2301      	movs	r3, #1
 8008e22:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8008e24:	2300      	movs	r3, #0
 8008e26:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8008e28:	2300      	movs	r3, #0
 8008e2a:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8008e2c:	f107 031c 	add.w	r3, r7, #28
 8008e30:	4619      	mov	r1, r3
 8008e32:	4804      	ldr	r0, [pc, #16]	; (8008e44 <MX_GPIO_Init+0xf4>)
 8008e34:	f000 fdd8 	bl	80099e8 <HAL_GPIO_Init>

}
 8008e38:	bf00      	nop
 8008e3a:	3730      	adds	r7, #48	; 0x30
 8008e3c:	46bd      	mov	sp, r7
 8008e3e:	bd80      	pop	{r7, pc}
 8008e40:	40023800 	.word	0x40023800
 8008e44:	40020000 	.word	0x40020000

08008e48 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8008e48:	b590      	push	{r4, r7, lr}
 8008e4a:	b083      	sub	sp, #12
 8008e4c:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8008e4e:	f000 fb83 	bl	8009558 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8008e52:	f000 f85f 	bl	8008f14 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8008e56:	f7ff ff7b 	bl	8008d50 <MX_GPIO_Init>

  /* USER CODE BEGIN 2 */
  Timer1 = new Timer_PWM(&htim1, TIM1, 1000 - 1, 168 - 1);
 8008e5a:	2018      	movs	r0, #24
 8008e5c:	f004 f984 	bl	800d168 <_Znwj>
 8008e60:	4603      	mov	r3, r0
 8008e62:	461c      	mov	r4, r3
 8008e64:	23a7      	movs	r3, #167	; 0xa7
 8008e66:	9300      	str	r3, [sp, #0]
 8008e68:	f240 33e7 	movw	r3, #999	; 0x3e7
 8008e6c:	4a1c      	ldr	r2, [pc, #112]	; (8008ee0 <main+0x98>)
 8008e6e:	491d      	ldr	r1, [pc, #116]	; (8008ee4 <main+0x9c>)
 8008e70:	4620      	mov	r0, r4
 8008e72:	f003 fd31 	bl	800c8d8 <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj>
 8008e76:	4b1c      	ldr	r3, [pc, #112]	; (8008ee8 <main+0xa0>)
 8008e78:	601c      	str	r4, [r3, #0]
  Timer8 = new Timer_PWM(&htim8, TIM8, 1000 - 1, 168 - 1);
 8008e7a:	2018      	movs	r0, #24
 8008e7c:	f004 f974 	bl	800d168 <_Znwj>
 8008e80:	4603      	mov	r3, r0
 8008e82:	461c      	mov	r4, r3
 8008e84:	23a7      	movs	r3, #167	; 0xa7
 8008e86:	9300      	str	r3, [sp, #0]
 8008e88:	f240 33e7 	movw	r3, #999	; 0x3e7
 8008e8c:	4a17      	ldr	r2, [pc, #92]	; (8008eec <main+0xa4>)
 8008e8e:	4918      	ldr	r1, [pc, #96]	; (8008ef0 <main+0xa8>)
 8008e90:	4620      	mov	r0, r4
 8008e92:	f003 fd21 	bl	800c8d8 <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj>
 8008e96:	4b17      	ldr	r3, [pc, #92]	; (8008ef4 <main+0xac>)
 8008e98:	601c      	str	r4, [r3, #0]
  Timer6 = new Task_Scheduler(&htim6, TIM6, 1000 - 1, 84 - 1);
 8008e9a:	2024      	movs	r0, #36	; 0x24
 8008e9c:	f004 f964 	bl	800d168 <_Znwj>
 8008ea0:	4603      	mov	r3, r0
 8008ea2:	461c      	mov	r4, r3
 8008ea4:	2353      	movs	r3, #83	; 0x53
 8008ea6:	9300      	str	r3, [sp, #0]
 8008ea8:	f240 33e7 	movw	r3, #999	; 0x3e7
 8008eac:	4a12      	ldr	r2, [pc, #72]	; (8008ef8 <main+0xb0>)
 8008eae:	4913      	ldr	r1, [pc, #76]	; (8008efc <main+0xb4>)
 8008eb0:	4620      	mov	r0, r4
 8008eb2:	f7ff fe67 	bl	8008b84 <_ZN14Task_SchedulerC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj>
 8008eb6:	4b12      	ldr	r3, [pc, #72]	; (8008f00 <main+0xb8>)
 8008eb8:	601c      	str	r4, [r3, #0]
  Usart1 = new Usart(&husart1, USART1, 500000);
 8008eba:	200c      	movs	r0, #12
 8008ebc:	f004 f954 	bl	800d168 <_Znwj>
 8008ec0:	4603      	mov	r3, r0
 8008ec2:	461c      	mov	r4, r3
 8008ec4:	4b0f      	ldr	r3, [pc, #60]	; (8008f04 <main+0xbc>)
 8008ec6:	4a10      	ldr	r2, [pc, #64]	; (8008f08 <main+0xc0>)
 8008ec8:	4910      	ldr	r1, [pc, #64]	; (8008f0c <main+0xc4>)
 8008eca:	4620      	mov	r0, r4
 8008ecc:	f003 fe90 	bl	800cbf0 <_ZN5UsartC1EP20__UART_HandleTypeDefP13USART_TypeDefj>
 8008ed0:	4b0f      	ldr	r3, [pc, #60]	; (8008f10 <main+0xc8>)
 8008ed2:	601c      	str	r4, [r3, #0]
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  Timer6->Task();
 8008ed4:	4b0a      	ldr	r3, [pc, #40]	; (8008f00 <main+0xb8>)
 8008ed6:	681b      	ldr	r3, [r3, #0]
 8008ed8:	4618      	mov	r0, r3
 8008eda:	f7ff fd95 	bl	8008a08 <_ZN14Task_Scheduler4TaskEv>
 8008ede:	e7f9      	b.n	8008ed4 <main+0x8c>
 8008ee0:	40010000 	.word	0x40010000
 8008ee4:	20000bac 	.word	0x20000bac
 8008ee8:	20000a20 	.word	0x20000a20
 8008eec:	40010400 	.word	0x40010400
 8008ef0:	20000a8c 	.word	0x20000a8c
 8008ef4:	20000a24 	.word	0x20000a24
 8008ef8:	40001000 	.word	0x40001000
 8008efc:	20000b64 	.word	0x20000b64
 8008f00:	20000a28 	.word	0x20000a28
 8008f04:	0007a120 	.word	0x0007a120
 8008f08:	40011000 	.word	0x40011000
 8008f0c:	200009dc 	.word	0x200009dc
 8008f10:	20000a2c 	.word	0x20000a2c

08008f14 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8008f14:	b580      	push	{r7, lr}
 8008f16:	b094      	sub	sp, #80	; 0x50
 8008f18:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8008f1a:	f107 0320 	add.w	r3, r7, #32
 8008f1e:	2230      	movs	r2, #48	; 0x30
 8008f20:	2100      	movs	r1, #0
 8008f22:	4618      	mov	r0, r3
 8008f24:	f005 feb0 	bl	800ec88 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8008f28:	f107 030c 	add.w	r3, r7, #12
 8008f2c:	2200      	movs	r2, #0
 8008f2e:	601a      	str	r2, [r3, #0]
 8008f30:	605a      	str	r2, [r3, #4]
 8008f32:	609a      	str	r2, [r3, #8]
 8008f34:	60da      	str	r2, [r3, #12]
 8008f36:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8008f38:	2300      	movs	r3, #0
 8008f3a:	60bb      	str	r3, [r7, #8]
 8008f3c:	4b2d      	ldr	r3, [pc, #180]	; (8008ff4 <_Z18SystemClock_Configv+0xe0>)
 8008f3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008f40:	4a2c      	ldr	r2, [pc, #176]	; (8008ff4 <_Z18SystemClock_Configv+0xe0>)
 8008f42:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008f46:	6413      	str	r3, [r2, #64]	; 0x40
 8008f48:	4b2a      	ldr	r3, [pc, #168]	; (8008ff4 <_Z18SystemClock_Configv+0xe0>)
 8008f4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008f4c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008f50:	60bb      	str	r3, [r7, #8]
 8008f52:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8008f54:	2300      	movs	r3, #0
 8008f56:	607b      	str	r3, [r7, #4]
 8008f58:	4b27      	ldr	r3, [pc, #156]	; (8008ff8 <_Z18SystemClock_Configv+0xe4>)
 8008f5a:	681b      	ldr	r3, [r3, #0]
 8008f5c:	4a26      	ldr	r2, [pc, #152]	; (8008ff8 <_Z18SystemClock_Configv+0xe4>)
 8008f5e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8008f62:	6013      	str	r3, [r2, #0]
 8008f64:	4b24      	ldr	r3, [pc, #144]	; (8008ff8 <_Z18SystemClock_Configv+0xe4>)
 8008f66:	681b      	ldr	r3, [r3, #0]
 8008f68:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8008f6c:	607b      	str	r3, [r7, #4]
 8008f6e:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8008f70:	2301      	movs	r3, #1
 8008f72:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8008f74:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8008f78:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8008f7a:	2302      	movs	r3, #2
 8008f7c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8008f7e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8008f82:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 8008f84:	2319      	movs	r3, #25
 8008f86:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8008f88:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8008f8c:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8008f8e:	2302      	movs	r3, #2
 8008f90:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8008f92:	2304      	movs	r3, #4
 8008f94:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8008f96:	f107 0320 	add.w	r3, r7, #32
 8008f9a:	4618      	mov	r0, r3
 8008f9c:	f000 ffd6 	bl	8009f4c <HAL_RCC_OscConfig>
 8008fa0:	4603      	mov	r3, r0
 8008fa2:	2b00      	cmp	r3, #0
 8008fa4:	bf14      	ite	ne
 8008fa6:	2301      	movne	r3, #1
 8008fa8:	2300      	moveq	r3, #0
 8008faa:	b2db      	uxtb	r3, r3
 8008fac:	2b00      	cmp	r3, #0
 8008fae:	d001      	beq.n	8008fb4 <_Z18SystemClock_Configv+0xa0>
  {
    Error_Handler();
 8008fb0:	f000 f83c 	bl	800902c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8008fb4:	230f      	movs	r3, #15
 8008fb6:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8008fb8:	2302      	movs	r3, #2
 8008fba:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8008fbc:	2300      	movs	r3, #0
 8008fbe:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8008fc0:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8008fc4:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8008fc6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8008fca:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8008fcc:	f107 030c 	add.w	r3, r7, #12
 8008fd0:	2105      	movs	r1, #5
 8008fd2:	4618      	mov	r0, r3
 8008fd4:	f001 fa32 	bl	800a43c <HAL_RCC_ClockConfig>
 8008fd8:	4603      	mov	r3, r0
 8008fda:	2b00      	cmp	r3, #0
 8008fdc:	bf14      	ite	ne
 8008fde:	2301      	movne	r3, #1
 8008fe0:	2300      	moveq	r3, #0
 8008fe2:	b2db      	uxtb	r3, r3
 8008fe4:	2b00      	cmp	r3, #0
 8008fe6:	d001      	beq.n	8008fec <_Z18SystemClock_Configv+0xd8>
  {
    Error_Handler();
 8008fe8:	f000 f820 	bl	800902c <Error_Handler>
  }
}
 8008fec:	bf00      	nop
 8008fee:	3750      	adds	r7, #80	; 0x50
 8008ff0:	46bd      	mov	sp, r7
 8008ff2:	bd80      	pop	{r7, pc}
 8008ff4:	40023800 	.word	0x40023800
 8008ff8:	40007000 	.word	0x40007000

08008ffc <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8008ffc:	b580      	push	{r7, lr}
 8008ffe:	b082      	sub	sp, #8
 8009000:	af00      	add	r7, sp, #0
 8009002:	6078      	str	r0, [r7, #4]
    if(htim->Instance == htim6.Instance){
 8009004:	687b      	ldr	r3, [r7, #4]
 8009006:	681a      	ldr	r2, [r3, #0]
 8009008:	4b06      	ldr	r3, [pc, #24]	; (8009024 <HAL_TIM_PeriodElapsedCallback+0x28>)
 800900a:	681b      	ldr	r3, [r3, #0]
 800900c:	429a      	cmp	r2, r3
 800900e:	d104      	bne.n	800901a <HAL_TIM_PeriodElapsedCallback+0x1e>
    	Timer6->Timer_Interrupt();
 8009010:	4b05      	ldr	r3, [pc, #20]	; (8009028 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8009012:	681b      	ldr	r3, [r3, #0]
 8009014:	4618      	mov	r0, r3
 8009016:	f7ff fe0f 	bl	8008c38 <_ZN14Task_Scheduler15Timer_InterruptEv>
    }
}
 800901a:	bf00      	nop
 800901c:	3708      	adds	r7, #8
 800901e:	46bd      	mov	sp, r7
 8009020:	bd80      	pop	{r7, pc}
 8009022:	bf00      	nop
 8009024:	20000b64 	.word	0x20000b64
 8009028:	20000a28 	.word	0x20000a28

0800902c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800902c:	b480      	push	{r7}
 800902e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8009030:	b672      	cpsid	i
}
 8009032:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8009034:	e7fe      	b.n	8009034 <Error_Handler+0x8>
	...

08009038 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8009038:	b580      	push	{r7, lr}
 800903a:	b082      	sub	sp, #8
 800903c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800903e:	2300      	movs	r3, #0
 8009040:	607b      	str	r3, [r7, #4]
 8009042:	4b13      	ldr	r3, [pc, #76]	; (8009090 <HAL_MspInit+0x58>)
 8009044:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009046:	4a12      	ldr	r2, [pc, #72]	; (8009090 <HAL_MspInit+0x58>)
 8009048:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800904c:	6453      	str	r3, [r2, #68]	; 0x44
 800904e:	4b10      	ldr	r3, [pc, #64]	; (8009090 <HAL_MspInit+0x58>)
 8009050:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009052:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009056:	607b      	str	r3, [r7, #4]
 8009058:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800905a:	2300      	movs	r3, #0
 800905c:	603b      	str	r3, [r7, #0]
 800905e:	4b0c      	ldr	r3, [pc, #48]	; (8009090 <HAL_MspInit+0x58>)
 8009060:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009062:	4a0b      	ldr	r2, [pc, #44]	; (8009090 <HAL_MspInit+0x58>)
 8009064:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009068:	6413      	str	r3, [r2, #64]	; 0x40
 800906a:	4b09      	ldr	r3, [pc, #36]	; (8009090 <HAL_MspInit+0x58>)
 800906c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800906e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009072:	603b      	str	r3, [r7, #0]
 8009074:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 0, 0);
 8009076:	2200      	movs	r2, #0
 8009078:	2100      	movs	r1, #0
 800907a:	2005      	movs	r0, #5
 800907c:	f000 fbdd 	bl	800983a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 8009080:	2005      	movs	r0, #5
 8009082:	f000 fbf6 	bl	8009872 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8009086:	bf00      	nop
 8009088:	3708      	adds	r7, #8
 800908a:	46bd      	mov	sp, r7
 800908c:	bd80      	pop	{r7, pc}
 800908e:	bf00      	nop
 8009090:	40023800 	.word	0x40023800

08009094 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8009094:	b480      	push	{r7}
 8009096:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8009098:	e7fe      	b.n	8009098 <NMI_Handler+0x4>

0800909a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800909a:	b480      	push	{r7}
 800909c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800909e:	e7fe      	b.n	800909e <HardFault_Handler+0x4>

080090a0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80090a0:	b480      	push	{r7}
 80090a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80090a4:	e7fe      	b.n	80090a4 <MemManage_Handler+0x4>

080090a6 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80090a6:	b480      	push	{r7}
 80090a8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80090aa:	e7fe      	b.n	80090aa <BusFault_Handler+0x4>

080090ac <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80090ac:	b480      	push	{r7}
 80090ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80090b0:	e7fe      	b.n	80090b0 <UsageFault_Handler+0x4>

080090b2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80090b2:	b480      	push	{r7}
 80090b4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80090b6:	bf00      	nop
 80090b8:	46bd      	mov	sp, r7
 80090ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090be:	4770      	bx	lr

080090c0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80090c0:	b480      	push	{r7}
 80090c2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80090c4:	bf00      	nop
 80090c6:	46bd      	mov	sp, r7
 80090c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090cc:	4770      	bx	lr

080090ce <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80090ce:	b480      	push	{r7}
 80090d0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80090d2:	bf00      	nop
 80090d4:	46bd      	mov	sp, r7
 80090d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090da:	4770      	bx	lr

080090dc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80090dc:	b580      	push	{r7, lr}
 80090de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80090e0:	f000 fa8c 	bl	80095fc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80090e4:	bf00      	nop
 80090e6:	bd80      	pop	{r7, pc}

080090e8 <RCC_IRQHandler>:

/**
  * @brief This function handles RCC global interrupt.
  */
void RCC_IRQHandler(void)
{
 80090e8:	b480      	push	{r7}
 80090ea:	af00      	add	r7, sp, #0

  /* USER CODE END RCC_IRQn 0 */
  /* USER CODE BEGIN RCC_IRQn 1 */

  /* USER CODE END RCC_IRQn 1 */
}
 80090ec:	bf00      	nop
 80090ee:	46bd      	mov	sp, r7
 80090f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090f4:	4770      	bx	lr
	...

080090f8 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 80090f8:	b580      	push	{r7, lr}
 80090fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80090fc:	4802      	ldr	r0, [pc, #8]	; (8009108 <USART1_IRQHandler+0x10>)
 80090fe:	f002 fc8d 	bl	800ba1c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8009102:	bf00      	nop
 8009104:	bd80      	pop	{r7, pc}
 8009106:	bf00      	nop
 8009108:	20000c3c 	.word	0x20000c3c

0800910c <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 800910c:	b580      	push	{r7, lr}
 800910e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8009110:	4802      	ldr	r0, [pc, #8]	; (800911c <TIM6_DAC_IRQHandler+0x10>)
 8009112:	f001 fd45 	bl	800aba0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 8009116:	bf00      	nop
 8009118:	bd80      	pop	{r7, pc}
 800911a:	bf00      	nop
 800911c:	20000b64 	.word	0x20000b64

08009120 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8009120:	b480      	push	{r7}
 8009122:	af00      	add	r7, sp, #0
	return 1;
 8009124:	2301      	movs	r3, #1
}
 8009126:	4618      	mov	r0, r3
 8009128:	46bd      	mov	sp, r7
 800912a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800912e:	4770      	bx	lr

08009130 <_kill>:

int _kill(int pid, int sig)
{
 8009130:	b580      	push	{r7, lr}
 8009132:	b082      	sub	sp, #8
 8009134:	af00      	add	r7, sp, #0
 8009136:	6078      	str	r0, [r7, #4]
 8009138:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800913a:	f005 f8df 	bl	800e2fc <__errno>
 800913e:	4603      	mov	r3, r0
 8009140:	2216      	movs	r2, #22
 8009142:	601a      	str	r2, [r3, #0]
	return -1;
 8009144:	f04f 33ff 	mov.w	r3, #4294967295
}
 8009148:	4618      	mov	r0, r3
 800914a:	3708      	adds	r7, #8
 800914c:	46bd      	mov	sp, r7
 800914e:	bd80      	pop	{r7, pc}

08009150 <_exit>:

void _exit (int status)
{
 8009150:	b580      	push	{r7, lr}
 8009152:	b082      	sub	sp, #8
 8009154:	af00      	add	r7, sp, #0
 8009156:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8009158:	f04f 31ff 	mov.w	r1, #4294967295
 800915c:	6878      	ldr	r0, [r7, #4]
 800915e:	f7ff ffe7 	bl	8009130 <_kill>
	while (1) {}		/* Make sure we hang here */
 8009162:	e7fe      	b.n	8009162 <_exit+0x12>

08009164 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8009164:	b580      	push	{r7, lr}
 8009166:	b086      	sub	sp, #24
 8009168:	af00      	add	r7, sp, #0
 800916a:	60f8      	str	r0, [r7, #12]
 800916c:	60b9      	str	r1, [r7, #8]
 800916e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8009170:	2300      	movs	r3, #0
 8009172:	617b      	str	r3, [r7, #20]
 8009174:	e00a      	b.n	800918c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8009176:	f3af 8000 	nop.w
 800917a:	4601      	mov	r1, r0
 800917c:	68bb      	ldr	r3, [r7, #8]
 800917e:	1c5a      	adds	r2, r3, #1
 8009180:	60ba      	str	r2, [r7, #8]
 8009182:	b2ca      	uxtb	r2, r1
 8009184:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8009186:	697b      	ldr	r3, [r7, #20]
 8009188:	3301      	adds	r3, #1
 800918a:	617b      	str	r3, [r7, #20]
 800918c:	697a      	ldr	r2, [r7, #20]
 800918e:	687b      	ldr	r3, [r7, #4]
 8009190:	429a      	cmp	r2, r3
 8009192:	dbf0      	blt.n	8009176 <_read+0x12>
	}

return len;
 8009194:	687b      	ldr	r3, [r7, #4]
}
 8009196:	4618      	mov	r0, r3
 8009198:	3718      	adds	r7, #24
 800919a:	46bd      	mov	sp, r7
 800919c:	bd80      	pop	{r7, pc}

0800919e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800919e:	b580      	push	{r7, lr}
 80091a0:	b086      	sub	sp, #24
 80091a2:	af00      	add	r7, sp, #0
 80091a4:	60f8      	str	r0, [r7, #12]
 80091a6:	60b9      	str	r1, [r7, #8]
 80091a8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80091aa:	2300      	movs	r3, #0
 80091ac:	617b      	str	r3, [r7, #20]
 80091ae:	e009      	b.n	80091c4 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80091b0:	68bb      	ldr	r3, [r7, #8]
 80091b2:	1c5a      	adds	r2, r3, #1
 80091b4:	60ba      	str	r2, [r7, #8]
 80091b6:	781b      	ldrb	r3, [r3, #0]
 80091b8:	4618      	mov	r0, r3
 80091ba:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80091be:	697b      	ldr	r3, [r7, #20]
 80091c0:	3301      	adds	r3, #1
 80091c2:	617b      	str	r3, [r7, #20]
 80091c4:	697a      	ldr	r2, [r7, #20]
 80091c6:	687b      	ldr	r3, [r7, #4]
 80091c8:	429a      	cmp	r2, r3
 80091ca:	dbf1      	blt.n	80091b0 <_write+0x12>
	}
	return len;
 80091cc:	687b      	ldr	r3, [r7, #4]
}
 80091ce:	4618      	mov	r0, r3
 80091d0:	3718      	adds	r7, #24
 80091d2:	46bd      	mov	sp, r7
 80091d4:	bd80      	pop	{r7, pc}

080091d6 <_close>:

int _close(int file)
{
 80091d6:	b480      	push	{r7}
 80091d8:	b083      	sub	sp, #12
 80091da:	af00      	add	r7, sp, #0
 80091dc:	6078      	str	r0, [r7, #4]
	return -1;
 80091de:	f04f 33ff 	mov.w	r3, #4294967295
}
 80091e2:	4618      	mov	r0, r3
 80091e4:	370c      	adds	r7, #12
 80091e6:	46bd      	mov	sp, r7
 80091e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091ec:	4770      	bx	lr

080091ee <_fstat>:


int _fstat(int file, struct stat *st)
{
 80091ee:	b480      	push	{r7}
 80091f0:	b083      	sub	sp, #12
 80091f2:	af00      	add	r7, sp, #0
 80091f4:	6078      	str	r0, [r7, #4]
 80091f6:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80091f8:	683b      	ldr	r3, [r7, #0]
 80091fa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80091fe:	605a      	str	r2, [r3, #4]
	return 0;
 8009200:	2300      	movs	r3, #0
}
 8009202:	4618      	mov	r0, r3
 8009204:	370c      	adds	r7, #12
 8009206:	46bd      	mov	sp, r7
 8009208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800920c:	4770      	bx	lr

0800920e <_isatty>:

int _isatty(int file)
{
 800920e:	b480      	push	{r7}
 8009210:	b083      	sub	sp, #12
 8009212:	af00      	add	r7, sp, #0
 8009214:	6078      	str	r0, [r7, #4]
	return 1;
 8009216:	2301      	movs	r3, #1
}
 8009218:	4618      	mov	r0, r3
 800921a:	370c      	adds	r7, #12
 800921c:	46bd      	mov	sp, r7
 800921e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009222:	4770      	bx	lr

08009224 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8009224:	b480      	push	{r7}
 8009226:	b085      	sub	sp, #20
 8009228:	af00      	add	r7, sp, #0
 800922a:	60f8      	str	r0, [r7, #12]
 800922c:	60b9      	str	r1, [r7, #8]
 800922e:	607a      	str	r2, [r7, #4]
	return 0;
 8009230:	2300      	movs	r3, #0
}
 8009232:	4618      	mov	r0, r3
 8009234:	3714      	adds	r7, #20
 8009236:	46bd      	mov	sp, r7
 8009238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800923c:	4770      	bx	lr
	...

08009240 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8009240:	b580      	push	{r7, lr}
 8009242:	b086      	sub	sp, #24
 8009244:	af00      	add	r7, sp, #0
 8009246:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8009248:	4a14      	ldr	r2, [pc, #80]	; (800929c <_sbrk+0x5c>)
 800924a:	4b15      	ldr	r3, [pc, #84]	; (80092a0 <_sbrk+0x60>)
 800924c:	1ad3      	subs	r3, r2, r3
 800924e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8009250:	697b      	ldr	r3, [r7, #20]
 8009252:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8009254:	4b13      	ldr	r3, [pc, #76]	; (80092a4 <_sbrk+0x64>)
 8009256:	681b      	ldr	r3, [r3, #0]
 8009258:	2b00      	cmp	r3, #0
 800925a:	d102      	bne.n	8009262 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800925c:	4b11      	ldr	r3, [pc, #68]	; (80092a4 <_sbrk+0x64>)
 800925e:	4a12      	ldr	r2, [pc, #72]	; (80092a8 <_sbrk+0x68>)
 8009260:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8009262:	4b10      	ldr	r3, [pc, #64]	; (80092a4 <_sbrk+0x64>)
 8009264:	681a      	ldr	r2, [r3, #0]
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	4413      	add	r3, r2
 800926a:	693a      	ldr	r2, [r7, #16]
 800926c:	429a      	cmp	r2, r3
 800926e:	d207      	bcs.n	8009280 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8009270:	f005 f844 	bl	800e2fc <__errno>
 8009274:	4603      	mov	r3, r0
 8009276:	220c      	movs	r2, #12
 8009278:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800927a:	f04f 33ff 	mov.w	r3, #4294967295
 800927e:	e009      	b.n	8009294 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8009280:	4b08      	ldr	r3, [pc, #32]	; (80092a4 <_sbrk+0x64>)
 8009282:	681b      	ldr	r3, [r3, #0]
 8009284:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8009286:	4b07      	ldr	r3, [pc, #28]	; (80092a4 <_sbrk+0x64>)
 8009288:	681a      	ldr	r2, [r3, #0]
 800928a:	687b      	ldr	r3, [r7, #4]
 800928c:	4413      	add	r3, r2
 800928e:	4a05      	ldr	r2, [pc, #20]	; (80092a4 <_sbrk+0x64>)
 8009290:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8009292:	68fb      	ldr	r3, [r7, #12]
}
 8009294:	4618      	mov	r0, r3
 8009296:	3718      	adds	r7, #24
 8009298:	46bd      	mov	sp, r7
 800929a:	bd80      	pop	{r7, pc}
 800929c:	20020000 	.word	0x20020000
 80092a0:	00000400 	.word	0x00000400
 80092a4:	20000a30 	.word	0x20000a30
 80092a8:	20000c98 	.word	0x20000c98

080092ac <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80092ac:	b480      	push	{r7}
 80092ae:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80092b0:	4b06      	ldr	r3, [pc, #24]	; (80092cc <SystemInit+0x20>)
 80092b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80092b6:	4a05      	ldr	r2, [pc, #20]	; (80092cc <SystemInit+0x20>)
 80092b8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80092bc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80092c0:	bf00      	nop
 80092c2:	46bd      	mov	sp, r7
 80092c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092c8:	4770      	bx	lr
 80092ca:	bf00      	nop
 80092cc:	e000ed00 	.word	0xe000ed00

080092d0 <HAL_TIM_Base_MspInit>:
  HAL_TIM_MspPostInit(&htim8);

}

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 80092d0:	b580      	push	{r7, lr}
 80092d2:	b092      	sub	sp, #72	; 0x48
 80092d4:	af00      	add	r7, sp, #0
 80092d6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80092d8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80092dc:	2200      	movs	r2, #0
 80092de:	601a      	str	r2, [r3, #0]
 80092e0:	605a      	str	r2, [r3, #4]
 80092e2:	609a      	str	r2, [r3, #8]
 80092e4:	60da      	str	r2, [r3, #12]
 80092e6:	611a      	str	r2, [r3, #16]
  if(tim_baseHandle->Instance==TIM1)
 80092e8:	687b      	ldr	r3, [r7, #4]
 80092ea:	681b      	ldr	r3, [r3, #0]
 80092ec:	4a7c      	ldr	r2, [pc, #496]	; (80094e0 <HAL_TIM_Base_MspInit+0x210>)
 80092ee:	4293      	cmp	r3, r2
 80092f0:	d10e      	bne.n	8009310 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80092f2:	2300      	movs	r3, #0
 80092f4:	633b      	str	r3, [r7, #48]	; 0x30
 80092f6:	4b7b      	ldr	r3, [pc, #492]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80092f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80092fa:	4a7a      	ldr	r2, [pc, #488]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80092fc:	f043 0301 	orr.w	r3, r3, #1
 8009300:	6453      	str	r3, [r2, #68]	; 0x44
 8009302:	4b78      	ldr	r3, [pc, #480]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009304:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009306:	f003 0301 	and.w	r3, r3, #1
 800930a:	633b      	str	r3, [r7, #48]	; 0x30
 800930c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    __HAL_RCC_TIM8_CLK_ENABLE();
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }
}
 800930e:	e0e3      	b.n	80094d8 <HAL_TIM_Base_MspInit+0x208>
  else if(tim_baseHandle->Instance==TIM2)
 8009310:	687b      	ldr	r3, [r7, #4]
 8009312:	681b      	ldr	r3, [r3, #0]
 8009314:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009318:	d12c      	bne.n	8009374 <HAL_TIM_Base_MspInit+0xa4>
    __HAL_RCC_TIM2_CLK_ENABLE();
 800931a:	2300      	movs	r3, #0
 800931c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800931e:	4b71      	ldr	r3, [pc, #452]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009320:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009322:	4a70      	ldr	r2, [pc, #448]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009324:	f043 0301 	orr.w	r3, r3, #1
 8009328:	6413      	str	r3, [r2, #64]	; 0x40
 800932a:	4b6e      	ldr	r3, [pc, #440]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 800932c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800932e:	f003 0301 	and.w	r3, r3, #1
 8009332:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009334:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8009336:	2300      	movs	r3, #0
 8009338:	62bb      	str	r3, [r7, #40]	; 0x28
 800933a:	4b6a      	ldr	r3, [pc, #424]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 800933c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800933e:	4a69      	ldr	r2, [pc, #420]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009340:	f043 0301 	orr.w	r3, r3, #1
 8009344:	6313      	str	r3, [r2, #48]	; 0x30
 8009346:	4b67      	ldr	r3, [pc, #412]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800934a:	f003 0301 	and.w	r3, r3, #1
 800934e:	62bb      	str	r3, [r7, #40]	; 0x28
 8009350:	6abb      	ldr	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8009352:	230f      	movs	r3, #15
 8009354:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8009356:	2302      	movs	r3, #2
 8009358:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800935a:	2300      	movs	r3, #0
 800935c:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800935e:	2300      	movs	r3, #0
 8009360:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8009362:	2301      	movs	r3, #1
 8009364:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8009366:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800936a:	4619      	mov	r1, r3
 800936c:	485e      	ldr	r0, [pc, #376]	; (80094e8 <HAL_TIM_Base_MspInit+0x218>)
 800936e:	f000 fb3b 	bl	80099e8 <HAL_GPIO_Init>
}
 8009372:	e0b1      	b.n	80094d8 <HAL_TIM_Base_MspInit+0x208>
  else if(tim_baseHandle->Instance==TIM3)
 8009374:	687b      	ldr	r3, [r7, #4]
 8009376:	681b      	ldr	r3, [r3, #0]
 8009378:	4a5c      	ldr	r2, [pc, #368]	; (80094ec <HAL_TIM_Base_MspInit+0x21c>)
 800937a:	4293      	cmp	r3, r2
 800937c:	d14a      	bne.n	8009414 <HAL_TIM_Base_MspInit+0x144>
    __HAL_RCC_TIM3_CLK_ENABLE();
 800937e:	2300      	movs	r3, #0
 8009380:	627b      	str	r3, [r7, #36]	; 0x24
 8009382:	4b58      	ldr	r3, [pc, #352]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009384:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009386:	4a57      	ldr	r2, [pc, #348]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009388:	f043 0302 	orr.w	r3, r3, #2
 800938c:	6413      	str	r3, [r2, #64]	; 0x40
 800938e:	4b55      	ldr	r3, [pc, #340]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009390:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009392:	f003 0302 	and.w	r3, r3, #2
 8009396:	627b      	str	r3, [r7, #36]	; 0x24
 8009398:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800939a:	2300      	movs	r3, #0
 800939c:	623b      	str	r3, [r7, #32]
 800939e:	4b51      	ldr	r3, [pc, #324]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80093a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80093a2:	4a50      	ldr	r2, [pc, #320]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80093a4:	f043 0301 	orr.w	r3, r3, #1
 80093a8:	6313      	str	r3, [r2, #48]	; 0x30
 80093aa:	4b4e      	ldr	r3, [pc, #312]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80093ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80093ae:	f003 0301 	and.w	r3, r3, #1
 80093b2:	623b      	str	r3, [r7, #32]
 80093b4:	6a3b      	ldr	r3, [r7, #32]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80093b6:	2300      	movs	r3, #0
 80093b8:	61fb      	str	r3, [r7, #28]
 80093ba:	4b4a      	ldr	r3, [pc, #296]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80093bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80093be:	4a49      	ldr	r2, [pc, #292]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80093c0:	f043 0302 	orr.w	r3, r3, #2
 80093c4:	6313      	str	r3, [r2, #48]	; 0x30
 80093c6:	4b47      	ldr	r3, [pc, #284]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80093c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80093ca:	f003 0302 	and.w	r3, r3, #2
 80093ce:	61fb      	str	r3, [r7, #28]
 80093d0:	69fb      	ldr	r3, [r7, #28]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80093d2:	23c0      	movs	r3, #192	; 0xc0
 80093d4:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80093d6:	2302      	movs	r3, #2
 80093d8:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80093da:	2300      	movs	r3, #0
 80093dc:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80093de:	2300      	movs	r3, #0
 80093e0:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80093e2:	2302      	movs	r3, #2
 80093e4:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80093e6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80093ea:	4619      	mov	r1, r3
 80093ec:	483e      	ldr	r0, [pc, #248]	; (80094e8 <HAL_TIM_Base_MspInit+0x218>)
 80093ee:	f000 fafb 	bl	80099e8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80093f2:	2303      	movs	r3, #3
 80093f4:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80093f6:	2302      	movs	r3, #2
 80093f8:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80093fa:	2300      	movs	r3, #0
 80093fc:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80093fe:	2300      	movs	r3, #0
 8009400:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8009402:	2302      	movs	r3, #2
 8009404:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8009406:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800940a:	4619      	mov	r1, r3
 800940c:	4838      	ldr	r0, [pc, #224]	; (80094f0 <HAL_TIM_Base_MspInit+0x220>)
 800940e:	f000 faeb 	bl	80099e8 <HAL_GPIO_Init>
}
 8009412:	e061      	b.n	80094d8 <HAL_TIM_Base_MspInit+0x208>
  else if(tim_baseHandle->Instance==TIM4)
 8009414:	687b      	ldr	r3, [r7, #4]
 8009416:	681b      	ldr	r3, [r3, #0]
 8009418:	4a36      	ldr	r2, [pc, #216]	; (80094f4 <HAL_TIM_Base_MspInit+0x224>)
 800941a:	4293      	cmp	r3, r2
 800941c:	d12d      	bne.n	800947a <HAL_TIM_Base_MspInit+0x1aa>
    __HAL_RCC_TIM4_CLK_ENABLE();
 800941e:	2300      	movs	r3, #0
 8009420:	61bb      	str	r3, [r7, #24]
 8009422:	4b30      	ldr	r3, [pc, #192]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009424:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009426:	4a2f      	ldr	r2, [pc, #188]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009428:	f043 0304 	orr.w	r3, r3, #4
 800942c:	6413      	str	r3, [r2, #64]	; 0x40
 800942e:	4b2d      	ldr	r3, [pc, #180]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009430:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009432:	f003 0304 	and.w	r3, r3, #4
 8009436:	61bb      	str	r3, [r7, #24]
 8009438:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800943a:	2300      	movs	r3, #0
 800943c:	617b      	str	r3, [r7, #20]
 800943e:	4b29      	ldr	r3, [pc, #164]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009442:	4a28      	ldr	r2, [pc, #160]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009444:	f043 0308 	orr.w	r3, r3, #8
 8009448:	6313      	str	r3, [r2, #48]	; 0x30
 800944a:	4b26      	ldr	r3, [pc, #152]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 800944c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800944e:	f003 0308 	and.w	r3, r3, #8
 8009452:	617b      	str	r3, [r7, #20]
 8009454:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 8009456:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 800945a:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800945c:	2302      	movs	r3, #2
 800945e:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8009460:	2300      	movs	r3, #0
 8009462:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8009464:	2300      	movs	r3, #0
 8009466:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8009468:	2302      	movs	r3, #2
 800946a:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800946c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8009470:	4619      	mov	r1, r3
 8009472:	4821      	ldr	r0, [pc, #132]	; (80094f8 <HAL_TIM_Base_MspInit+0x228>)
 8009474:	f000 fab8 	bl	80099e8 <HAL_GPIO_Init>
}
 8009478:	e02e      	b.n	80094d8 <HAL_TIM_Base_MspInit+0x208>
  else if(tim_baseHandle->Instance==TIM6)
 800947a:	687b      	ldr	r3, [r7, #4]
 800947c:	681b      	ldr	r3, [r3, #0]
 800947e:	4a1f      	ldr	r2, [pc, #124]	; (80094fc <HAL_TIM_Base_MspInit+0x22c>)
 8009480:	4293      	cmp	r3, r2
 8009482:	d116      	bne.n	80094b2 <HAL_TIM_Base_MspInit+0x1e2>
    __HAL_RCC_TIM6_CLK_ENABLE();
 8009484:	2300      	movs	r3, #0
 8009486:	613b      	str	r3, [r7, #16]
 8009488:	4b16      	ldr	r3, [pc, #88]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 800948a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800948c:	4a15      	ldr	r2, [pc, #84]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 800948e:	f043 0310 	orr.w	r3, r3, #16
 8009492:	6413      	str	r3, [r2, #64]	; 0x40
 8009494:	4b13      	ldr	r3, [pc, #76]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 8009496:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009498:	f003 0310 	and.w	r3, r3, #16
 800949c:	613b      	str	r3, [r7, #16]
 800949e:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 80094a0:	2200      	movs	r2, #0
 80094a2:	2100      	movs	r1, #0
 80094a4:	2036      	movs	r0, #54	; 0x36
 80094a6:	f000 f9c8 	bl	800983a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80094aa:	2036      	movs	r0, #54	; 0x36
 80094ac:	f000 f9e1 	bl	8009872 <HAL_NVIC_EnableIRQ>
}
 80094b0:	e012      	b.n	80094d8 <HAL_TIM_Base_MspInit+0x208>
  else if(tim_baseHandle->Instance==TIM8)
 80094b2:	687b      	ldr	r3, [r7, #4]
 80094b4:	681b      	ldr	r3, [r3, #0]
 80094b6:	4a12      	ldr	r2, [pc, #72]	; (8009500 <HAL_TIM_Base_MspInit+0x230>)
 80094b8:	4293      	cmp	r3, r2
 80094ba:	d10d      	bne.n	80094d8 <HAL_TIM_Base_MspInit+0x208>
    __HAL_RCC_TIM8_CLK_ENABLE();
 80094bc:	2300      	movs	r3, #0
 80094be:	60fb      	str	r3, [r7, #12]
 80094c0:	4b08      	ldr	r3, [pc, #32]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80094c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80094c4:	4a07      	ldr	r2, [pc, #28]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80094c6:	f043 0302 	orr.w	r3, r3, #2
 80094ca:	6453      	str	r3, [r2, #68]	; 0x44
 80094cc:	4b05      	ldr	r3, [pc, #20]	; (80094e4 <HAL_TIM_Base_MspInit+0x214>)
 80094ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80094d0:	f003 0302 	and.w	r3, r3, #2
 80094d4:	60fb      	str	r3, [r7, #12]
 80094d6:	68fb      	ldr	r3, [r7, #12]
}
 80094d8:	bf00      	nop
 80094da:	3748      	adds	r7, #72	; 0x48
 80094dc:	46bd      	mov	sp, r7
 80094de:	bd80      	pop	{r7, pc}
 80094e0:	40010000 	.word	0x40010000
 80094e4:	40023800 	.word	0x40023800
 80094e8:	40020000 	.word	0x40020000
 80094ec:	40000400 	.word	0x40000400
 80094f0:	40020400 	.word	0x40020400
 80094f4:	40000800 	.word	0x40000800
 80094f8:	40020c00 	.word	0x40020c00
 80094fc:	40001000 	.word	0x40001000
 8009500:	40010400 	.word	0x40010400

08009504 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8009504:	f8df d034 	ldr.w	sp, [pc, #52]	; 800953c <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8009508:	480d      	ldr	r0, [pc, #52]	; (8009540 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 800950a:	490e      	ldr	r1, [pc, #56]	; (8009544 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 800950c:	4a0e      	ldr	r2, [pc, #56]	; (8009548 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800950e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8009510:	e002      	b.n	8009518 <LoopCopyDataInit>

08009512 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8009512:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8009514:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8009516:	3304      	adds	r3, #4

08009518 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8009518:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800951a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800951c:	d3f9      	bcc.n	8009512 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800951e:	4a0b      	ldr	r2, [pc, #44]	; (800954c <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8009520:	4c0b      	ldr	r4, [pc, #44]	; (8009550 <LoopFillZerobss+0x26>)
  movs r3, #0
 8009522:	2300      	movs	r3, #0
  b LoopFillZerobss
 8009524:	e001      	b.n	800952a <LoopFillZerobss>

08009526 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8009526:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8009528:	3204      	adds	r2, #4

0800952a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800952a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800952c:	d3fb      	bcc.n	8009526 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800952e:	f7ff febd 	bl	80092ac <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8009532:	f005 f8f9 	bl	800e728 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8009536:	f7ff fc87 	bl	8008e48 <main>
  bx  lr    
 800953a:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 800953c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8009540:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8009544:	200009c0 	.word	0x200009c0
  ldr r2, =_sidata
 8009548:	08014914 	.word	0x08014914
  ldr r2, =_sbss
 800954c:	200009c0 	.word	0x200009c0
  ldr r4, =_ebss
 8009550:	20000c94 	.word	0x20000c94

08009554 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8009554:	e7fe      	b.n	8009554 <ADC_IRQHandler>
	...

08009558 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009558:	b580      	push	{r7, lr}
 800955a:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800955c:	4b0e      	ldr	r3, [pc, #56]	; (8009598 <HAL_Init+0x40>)
 800955e:	681b      	ldr	r3, [r3, #0]
 8009560:	4a0d      	ldr	r2, [pc, #52]	; (8009598 <HAL_Init+0x40>)
 8009562:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009566:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009568:	4b0b      	ldr	r3, [pc, #44]	; (8009598 <HAL_Init+0x40>)
 800956a:	681b      	ldr	r3, [r3, #0]
 800956c:	4a0a      	ldr	r2, [pc, #40]	; (8009598 <HAL_Init+0x40>)
 800956e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009572:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009574:	4b08      	ldr	r3, [pc, #32]	; (8009598 <HAL_Init+0x40>)
 8009576:	681b      	ldr	r3, [r3, #0]
 8009578:	4a07      	ldr	r2, [pc, #28]	; (8009598 <HAL_Init+0x40>)
 800957a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800957e:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009580:	2003      	movs	r0, #3
 8009582:	f000 f94f 	bl	8009824 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009586:	200f      	movs	r0, #15
 8009588:	f000 f808 	bl	800959c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800958c:	f7ff fd54 	bl	8009038 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8009590:	2300      	movs	r3, #0
}
 8009592:	4618      	mov	r0, r3
 8009594:	bd80      	pop	{r7, pc}
 8009596:	bf00      	nop
 8009598:	40023c00 	.word	0x40023c00

0800959c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800959c:	b580      	push	{r7, lr}
 800959e:	b082      	sub	sp, #8
 80095a0:	af00      	add	r7, sp, #0
 80095a2:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80095a4:	4b12      	ldr	r3, [pc, #72]	; (80095f0 <HAL_InitTick+0x54>)
 80095a6:	681a      	ldr	r2, [r3, #0]
 80095a8:	4b12      	ldr	r3, [pc, #72]	; (80095f4 <HAL_InitTick+0x58>)
 80095aa:	781b      	ldrb	r3, [r3, #0]
 80095ac:	4619      	mov	r1, r3
 80095ae:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80095b2:	fbb3 f3f1 	udiv	r3, r3, r1
 80095b6:	fbb2 f3f3 	udiv	r3, r2, r3
 80095ba:	4618      	mov	r0, r3
 80095bc:	f000 f975 	bl	80098aa <HAL_SYSTICK_Config>
 80095c0:	4603      	mov	r3, r0
 80095c2:	2b00      	cmp	r3, #0
 80095c4:	d001      	beq.n	80095ca <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80095c6:	2301      	movs	r3, #1
 80095c8:	e00e      	b.n	80095e8 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	2b0f      	cmp	r3, #15
 80095ce:	d80a      	bhi.n	80095e6 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80095d0:	2200      	movs	r2, #0
 80095d2:	6879      	ldr	r1, [r7, #4]
 80095d4:	f04f 30ff 	mov.w	r0, #4294967295
 80095d8:	f000 f92f 	bl	800983a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80095dc:	4a06      	ldr	r2, [pc, #24]	; (80095f8 <HAL_InitTick+0x5c>)
 80095de:	687b      	ldr	r3, [r7, #4]
 80095e0:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80095e2:	2300      	movs	r3, #0
 80095e4:	e000      	b.n	80095e8 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80095e6:	2301      	movs	r3, #1
}
 80095e8:	4618      	mov	r0, r3
 80095ea:	3708      	adds	r7, #8
 80095ec:	46bd      	mov	sp, r7
 80095ee:	bd80      	pop	{r7, pc}
 80095f0:	20000000 	.word	0x20000000
 80095f4:	20000008 	.word	0x20000008
 80095f8:	20000004 	.word	0x20000004

080095fc <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80095fc:	b480      	push	{r7}
 80095fe:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8009600:	4b06      	ldr	r3, [pc, #24]	; (800961c <HAL_IncTick+0x20>)
 8009602:	781b      	ldrb	r3, [r3, #0]
 8009604:	461a      	mov	r2, r3
 8009606:	4b06      	ldr	r3, [pc, #24]	; (8009620 <HAL_IncTick+0x24>)
 8009608:	681b      	ldr	r3, [r3, #0]
 800960a:	4413      	add	r3, r2
 800960c:	4a04      	ldr	r2, [pc, #16]	; (8009620 <HAL_IncTick+0x24>)
 800960e:	6013      	str	r3, [r2, #0]
}
 8009610:	bf00      	nop
 8009612:	46bd      	mov	sp, r7
 8009614:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009618:	4770      	bx	lr
 800961a:	bf00      	nop
 800961c:	20000008 	.word	0x20000008
 8009620:	20000c80 	.word	0x20000c80

08009624 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8009624:	b480      	push	{r7}
 8009626:	af00      	add	r7, sp, #0
  return uwTick;
 8009628:	4b03      	ldr	r3, [pc, #12]	; (8009638 <HAL_GetTick+0x14>)
 800962a:	681b      	ldr	r3, [r3, #0]
}
 800962c:	4618      	mov	r0, r3
 800962e:	46bd      	mov	sp, r7
 8009630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009634:	4770      	bx	lr
 8009636:	bf00      	nop
 8009638:	20000c80 	.word	0x20000c80

0800963c <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800963c:	b480      	push	{r7}
 800963e:	b085      	sub	sp, #20
 8009640:	af00      	add	r7, sp, #0
 8009642:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8009644:	687b      	ldr	r3, [r7, #4]
 8009646:	f003 0307 	and.w	r3, r3, #7
 800964a:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800964c:	4b0c      	ldr	r3, [pc, #48]	; (8009680 <__NVIC_SetPriorityGrouping+0x44>)
 800964e:	68db      	ldr	r3, [r3, #12]
 8009650:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009652:	68ba      	ldr	r2, [r7, #8]
 8009654:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8009658:	4013      	ands	r3, r2
 800965a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800965c:	68fb      	ldr	r3, [r7, #12]
 800965e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009660:	68bb      	ldr	r3, [r7, #8]
 8009662:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009664:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009668:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800966c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800966e:	4a04      	ldr	r2, [pc, #16]	; (8009680 <__NVIC_SetPriorityGrouping+0x44>)
 8009670:	68bb      	ldr	r3, [r7, #8]
 8009672:	60d3      	str	r3, [r2, #12]
}
 8009674:	bf00      	nop
 8009676:	3714      	adds	r7, #20
 8009678:	46bd      	mov	sp, r7
 800967a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800967e:	4770      	bx	lr
 8009680:	e000ed00 	.word	0xe000ed00

08009684 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8009684:	b480      	push	{r7}
 8009686:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009688:	4b04      	ldr	r3, [pc, #16]	; (800969c <__NVIC_GetPriorityGrouping+0x18>)
 800968a:	68db      	ldr	r3, [r3, #12]
 800968c:	0a1b      	lsrs	r3, r3, #8
 800968e:	f003 0307 	and.w	r3, r3, #7
}
 8009692:	4618      	mov	r0, r3
 8009694:	46bd      	mov	sp, r7
 8009696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800969a:	4770      	bx	lr
 800969c:	e000ed00 	.word	0xe000ed00

080096a0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80096a0:	b480      	push	{r7}
 80096a2:	b083      	sub	sp, #12
 80096a4:	af00      	add	r7, sp, #0
 80096a6:	4603      	mov	r3, r0
 80096a8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80096aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80096ae:	2b00      	cmp	r3, #0
 80096b0:	db0b      	blt.n	80096ca <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80096b2:	79fb      	ldrb	r3, [r7, #7]
 80096b4:	f003 021f 	and.w	r2, r3, #31
 80096b8:	4907      	ldr	r1, [pc, #28]	; (80096d8 <__NVIC_EnableIRQ+0x38>)
 80096ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80096be:	095b      	lsrs	r3, r3, #5
 80096c0:	2001      	movs	r0, #1
 80096c2:	fa00 f202 	lsl.w	r2, r0, r2
 80096c6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80096ca:	bf00      	nop
 80096cc:	370c      	adds	r7, #12
 80096ce:	46bd      	mov	sp, r7
 80096d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096d4:	4770      	bx	lr
 80096d6:	bf00      	nop
 80096d8:	e000e100 	.word	0xe000e100

080096dc <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80096dc:	b480      	push	{r7}
 80096de:	b083      	sub	sp, #12
 80096e0:	af00      	add	r7, sp, #0
 80096e2:	4603      	mov	r3, r0
 80096e4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80096e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80096ea:	2b00      	cmp	r3, #0
 80096ec:	db12      	blt.n	8009714 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80096ee:	79fb      	ldrb	r3, [r7, #7]
 80096f0:	f003 021f 	and.w	r2, r3, #31
 80096f4:	490a      	ldr	r1, [pc, #40]	; (8009720 <__NVIC_DisableIRQ+0x44>)
 80096f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80096fa:	095b      	lsrs	r3, r3, #5
 80096fc:	2001      	movs	r0, #1
 80096fe:	fa00 f202 	lsl.w	r2, r0, r2
 8009702:	3320      	adds	r3, #32
 8009704:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8009708:	f3bf 8f4f 	dsb	sy
}
 800970c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800970e:	f3bf 8f6f 	isb	sy
}
 8009712:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 8009714:	bf00      	nop
 8009716:	370c      	adds	r7, #12
 8009718:	46bd      	mov	sp, r7
 800971a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800971e:	4770      	bx	lr
 8009720:	e000e100 	.word	0xe000e100

08009724 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8009724:	b480      	push	{r7}
 8009726:	b083      	sub	sp, #12
 8009728:	af00      	add	r7, sp, #0
 800972a:	4603      	mov	r3, r0
 800972c:	6039      	str	r1, [r7, #0]
 800972e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8009730:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8009734:	2b00      	cmp	r3, #0
 8009736:	db0a      	blt.n	800974e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009738:	683b      	ldr	r3, [r7, #0]
 800973a:	b2da      	uxtb	r2, r3
 800973c:	490c      	ldr	r1, [pc, #48]	; (8009770 <__NVIC_SetPriority+0x4c>)
 800973e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8009742:	0112      	lsls	r2, r2, #4
 8009744:	b2d2      	uxtb	r2, r2
 8009746:	440b      	add	r3, r1
 8009748:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800974c:	e00a      	b.n	8009764 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800974e:	683b      	ldr	r3, [r7, #0]
 8009750:	b2da      	uxtb	r2, r3
 8009752:	4908      	ldr	r1, [pc, #32]	; (8009774 <__NVIC_SetPriority+0x50>)
 8009754:	79fb      	ldrb	r3, [r7, #7]
 8009756:	f003 030f 	and.w	r3, r3, #15
 800975a:	3b04      	subs	r3, #4
 800975c:	0112      	lsls	r2, r2, #4
 800975e:	b2d2      	uxtb	r2, r2
 8009760:	440b      	add	r3, r1
 8009762:	761a      	strb	r2, [r3, #24]
}
 8009764:	bf00      	nop
 8009766:	370c      	adds	r7, #12
 8009768:	46bd      	mov	sp, r7
 800976a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800976e:	4770      	bx	lr
 8009770:	e000e100 	.word	0xe000e100
 8009774:	e000ed00 	.word	0xe000ed00

08009778 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8009778:	b480      	push	{r7}
 800977a:	b089      	sub	sp, #36	; 0x24
 800977c:	af00      	add	r7, sp, #0
 800977e:	60f8      	str	r0, [r7, #12]
 8009780:	60b9      	str	r1, [r7, #8]
 8009782:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8009784:	68fb      	ldr	r3, [r7, #12]
 8009786:	f003 0307 	and.w	r3, r3, #7
 800978a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800978c:	69fb      	ldr	r3, [r7, #28]
 800978e:	f1c3 0307 	rsb	r3, r3, #7
 8009792:	2b04      	cmp	r3, #4
 8009794:	bf28      	it	cs
 8009796:	2304      	movcs	r3, #4
 8009798:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800979a:	69fb      	ldr	r3, [r7, #28]
 800979c:	3304      	adds	r3, #4
 800979e:	2b06      	cmp	r3, #6
 80097a0:	d902      	bls.n	80097a8 <NVIC_EncodePriority+0x30>
 80097a2:	69fb      	ldr	r3, [r7, #28]
 80097a4:	3b03      	subs	r3, #3
 80097a6:	e000      	b.n	80097aa <NVIC_EncodePriority+0x32>
 80097a8:	2300      	movs	r3, #0
 80097aa:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80097ac:	f04f 32ff 	mov.w	r2, #4294967295
 80097b0:	69bb      	ldr	r3, [r7, #24]
 80097b2:	fa02 f303 	lsl.w	r3, r2, r3
 80097b6:	43da      	mvns	r2, r3
 80097b8:	68bb      	ldr	r3, [r7, #8]
 80097ba:	401a      	ands	r2, r3
 80097bc:	697b      	ldr	r3, [r7, #20]
 80097be:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80097c0:	f04f 31ff 	mov.w	r1, #4294967295
 80097c4:	697b      	ldr	r3, [r7, #20]
 80097c6:	fa01 f303 	lsl.w	r3, r1, r3
 80097ca:	43d9      	mvns	r1, r3
 80097cc:	687b      	ldr	r3, [r7, #4]
 80097ce:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80097d0:	4313      	orrs	r3, r2
         );
}
 80097d2:	4618      	mov	r0, r3
 80097d4:	3724      	adds	r7, #36	; 0x24
 80097d6:	46bd      	mov	sp, r7
 80097d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097dc:	4770      	bx	lr
	...

080097e0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80097e0:	b580      	push	{r7, lr}
 80097e2:	b082      	sub	sp, #8
 80097e4:	af00      	add	r7, sp, #0
 80097e6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80097e8:	687b      	ldr	r3, [r7, #4]
 80097ea:	3b01      	subs	r3, #1
 80097ec:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80097f0:	d301      	bcc.n	80097f6 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80097f2:	2301      	movs	r3, #1
 80097f4:	e00f      	b.n	8009816 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80097f6:	4a0a      	ldr	r2, [pc, #40]	; (8009820 <SysTick_Config+0x40>)
 80097f8:	687b      	ldr	r3, [r7, #4]
 80097fa:	3b01      	subs	r3, #1
 80097fc:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80097fe:	210f      	movs	r1, #15
 8009800:	f04f 30ff 	mov.w	r0, #4294967295
 8009804:	f7ff ff8e 	bl	8009724 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8009808:	4b05      	ldr	r3, [pc, #20]	; (8009820 <SysTick_Config+0x40>)
 800980a:	2200      	movs	r2, #0
 800980c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800980e:	4b04      	ldr	r3, [pc, #16]	; (8009820 <SysTick_Config+0x40>)
 8009810:	2207      	movs	r2, #7
 8009812:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8009814:	2300      	movs	r3, #0
}
 8009816:	4618      	mov	r0, r3
 8009818:	3708      	adds	r7, #8
 800981a:	46bd      	mov	sp, r7
 800981c:	bd80      	pop	{r7, pc}
 800981e:	bf00      	nop
 8009820:	e000e010 	.word	0xe000e010

08009824 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8009824:	b580      	push	{r7, lr}
 8009826:	b082      	sub	sp, #8
 8009828:	af00      	add	r7, sp, #0
 800982a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800982c:	6878      	ldr	r0, [r7, #4]
 800982e:	f7ff ff05 	bl	800963c <__NVIC_SetPriorityGrouping>
}
 8009832:	bf00      	nop
 8009834:	3708      	adds	r7, #8
 8009836:	46bd      	mov	sp, r7
 8009838:	bd80      	pop	{r7, pc}

0800983a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800983a:	b580      	push	{r7, lr}
 800983c:	b086      	sub	sp, #24
 800983e:	af00      	add	r7, sp, #0
 8009840:	4603      	mov	r3, r0
 8009842:	60b9      	str	r1, [r7, #8]
 8009844:	607a      	str	r2, [r7, #4]
 8009846:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8009848:	2300      	movs	r3, #0
 800984a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800984c:	f7ff ff1a 	bl	8009684 <__NVIC_GetPriorityGrouping>
 8009850:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8009852:	687a      	ldr	r2, [r7, #4]
 8009854:	68b9      	ldr	r1, [r7, #8]
 8009856:	6978      	ldr	r0, [r7, #20]
 8009858:	f7ff ff8e 	bl	8009778 <NVIC_EncodePriority>
 800985c:	4602      	mov	r2, r0
 800985e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8009862:	4611      	mov	r1, r2
 8009864:	4618      	mov	r0, r3
 8009866:	f7ff ff5d 	bl	8009724 <__NVIC_SetPriority>
}
 800986a:	bf00      	nop
 800986c:	3718      	adds	r7, #24
 800986e:	46bd      	mov	sp, r7
 8009870:	bd80      	pop	{r7, pc}

08009872 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8009872:	b580      	push	{r7, lr}
 8009874:	b082      	sub	sp, #8
 8009876:	af00      	add	r7, sp, #0
 8009878:	4603      	mov	r3, r0
 800987a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 800987c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8009880:	4618      	mov	r0, r3
 8009882:	f7ff ff0d 	bl	80096a0 <__NVIC_EnableIRQ>
}
 8009886:	bf00      	nop
 8009888:	3708      	adds	r7, #8
 800988a:	46bd      	mov	sp, r7
 800988c:	bd80      	pop	{r7, pc}

0800988e <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 800988e:	b580      	push	{r7, lr}
 8009890:	b082      	sub	sp, #8
 8009892:	af00      	add	r7, sp, #0
 8009894:	4603      	mov	r3, r0
 8009896:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 8009898:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800989c:	4618      	mov	r0, r3
 800989e:	f7ff ff1d 	bl	80096dc <__NVIC_DisableIRQ>
}
 80098a2:	bf00      	nop
 80098a4:	3708      	adds	r7, #8
 80098a6:	46bd      	mov	sp, r7
 80098a8:	bd80      	pop	{r7, pc}

080098aa <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80098aa:	b580      	push	{r7, lr}
 80098ac:	b082      	sub	sp, #8
 80098ae:	af00      	add	r7, sp, #0
 80098b0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80098b2:	6878      	ldr	r0, [r7, #4]
 80098b4:	f7ff ff94 	bl	80097e0 <SysTick_Config>
 80098b8:	4603      	mov	r3, r0
}
 80098ba:	4618      	mov	r0, r3
 80098bc:	3708      	adds	r7, #8
 80098be:	46bd      	mov	sp, r7
 80098c0:	bd80      	pop	{r7, pc}

080098c2 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 80098c2:	b580      	push	{r7, lr}
 80098c4:	b084      	sub	sp, #16
 80098c6:	af00      	add	r7, sp, #0
 80098c8:	6078      	str	r0, [r7, #4]
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80098ca:	687b      	ldr	r3, [r7, #4]
 80098cc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80098ce:	60fb      	str	r3, [r7, #12]
  
  uint32_t tickstart = HAL_GetTick();
 80098d0:	f7ff fea8 	bl	8009624 <HAL_GetTick>
 80098d4:	60b8      	str	r0, [r7, #8]
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80098d6:	687b      	ldr	r3, [r7, #4]
 80098d8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80098dc:	b2db      	uxtb	r3, r3
 80098de:	2b02      	cmp	r3, #2
 80098e0:	d008      	beq.n	80098f4 <HAL_DMA_Abort+0x32>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80098e2:	687b      	ldr	r3, [r7, #4]
 80098e4:	2280      	movs	r2, #128	; 0x80
 80098e6:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 80098e8:	687b      	ldr	r3, [r7, #4]
 80098ea:	2200      	movs	r2, #0
 80098ec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    return HAL_ERROR;
 80098f0:	2301      	movs	r3, #1
 80098f2:	e052      	b.n	800999a <HAL_DMA_Abort+0xd8>
  }
  else
  {
    /* Disable all the transfer interrupts */
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80098f4:	687b      	ldr	r3, [r7, #4]
 80098f6:	681b      	ldr	r3, [r3, #0]
 80098f8:	681a      	ldr	r2, [r3, #0]
 80098fa:	687b      	ldr	r3, [r7, #4]
 80098fc:	681b      	ldr	r3, [r3, #0]
 80098fe:	f022 0216 	bic.w	r2, r2, #22
 8009902:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8009904:	687b      	ldr	r3, [r7, #4]
 8009906:	681b      	ldr	r3, [r3, #0]
 8009908:	695a      	ldr	r2, [r3, #20]
 800990a:	687b      	ldr	r3, [r7, #4]
 800990c:	681b      	ldr	r3, [r3, #0]
 800990e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009912:	615a      	str	r2, [r3, #20]
    
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8009914:	687b      	ldr	r3, [r7, #4]
 8009916:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009918:	2b00      	cmp	r3, #0
 800991a:	d103      	bne.n	8009924 <HAL_DMA_Abort+0x62>
 800991c:	687b      	ldr	r3, [r7, #4]
 800991e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009920:	2b00      	cmp	r3, #0
 8009922:	d007      	beq.n	8009934 <HAL_DMA_Abort+0x72>
    {
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8009924:	687b      	ldr	r3, [r7, #4]
 8009926:	681b      	ldr	r3, [r3, #0]
 8009928:	681a      	ldr	r2, [r3, #0]
 800992a:	687b      	ldr	r3, [r7, #4]
 800992c:	681b      	ldr	r3, [r3, #0]
 800992e:	f022 0208 	bic.w	r2, r2, #8
 8009932:	601a      	str	r2, [r3, #0]
    }
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8009934:	687b      	ldr	r3, [r7, #4]
 8009936:	681b      	ldr	r3, [r3, #0]
 8009938:	681a      	ldr	r2, [r3, #0]
 800993a:	687b      	ldr	r3, [r7, #4]
 800993c:	681b      	ldr	r3, [r3, #0]
 800993e:	f022 0201 	bic.w	r2, r2, #1
 8009942:	601a      	str	r2, [r3, #0]
    
    /* Check if the DMA Stream is effectively disabled */
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009944:	e013      	b.n	800996e <HAL_DMA_Abort+0xac>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8009946:	f7ff fe6d 	bl	8009624 <HAL_GetTick>
 800994a:	4602      	mov	r2, r0
 800994c:	68bb      	ldr	r3, [r7, #8]
 800994e:	1ad3      	subs	r3, r2, r3
 8009950:	2b05      	cmp	r3, #5
 8009952:	d90c      	bls.n	800996e <HAL_DMA_Abort+0xac>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8009954:	687b      	ldr	r3, [r7, #4]
 8009956:	2220      	movs	r2, #32
 8009958:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800995a:	687b      	ldr	r3, [r7, #4]
 800995c:	2203      	movs	r2, #3
 800995e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8009962:	687b      	ldr	r3, [r7, #4]
 8009964:	2200      	movs	r2, #0
 8009966:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        
        return HAL_TIMEOUT;
 800996a:	2303      	movs	r3, #3
 800996c:	e015      	b.n	800999a <HAL_DMA_Abort+0xd8>
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800996e:	687b      	ldr	r3, [r7, #4]
 8009970:	681b      	ldr	r3, [r3, #0]
 8009972:	681b      	ldr	r3, [r3, #0]
 8009974:	f003 0301 	and.w	r3, r3, #1
 8009978:	2b00      	cmp	r3, #0
 800997a:	d1e4      	bne.n	8009946 <HAL_DMA_Abort+0x84>
      }
    }
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800997c:	687b      	ldr	r3, [r7, #4]
 800997e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009980:	223f      	movs	r2, #63	; 0x3f
 8009982:	409a      	lsls	r2, r3
 8009984:	68fb      	ldr	r3, [r7, #12]
 8009986:	609a      	str	r2, [r3, #8]
    
    /* Change the DMA state*/
    hdma->State = HAL_DMA_STATE_READY;
 8009988:	687b      	ldr	r3, [r7, #4]
 800998a:	2201      	movs	r2, #1
 800998c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8009990:	687b      	ldr	r3, [r7, #4]
 8009992:	2200      	movs	r2, #0
 8009994:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  }
  return HAL_OK;
 8009998:	2300      	movs	r3, #0
}
 800999a:	4618      	mov	r0, r3
 800999c:	3710      	adds	r7, #16
 800999e:	46bd      	mov	sp, r7
 80099a0:	bd80      	pop	{r7, pc}

080099a2 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 80099a2:	b480      	push	{r7}
 80099a4:	b083      	sub	sp, #12
 80099a6:	af00      	add	r7, sp, #0
 80099a8:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80099aa:	687b      	ldr	r3, [r7, #4]
 80099ac:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80099b0:	b2db      	uxtb	r3, r3
 80099b2:	2b02      	cmp	r3, #2
 80099b4:	d004      	beq.n	80099c0 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80099b6:	687b      	ldr	r3, [r7, #4]
 80099b8:	2280      	movs	r2, #128	; 0x80
 80099ba:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 80099bc:	2301      	movs	r3, #1
 80099be:	e00c      	b.n	80099da <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	2205      	movs	r2, #5
 80099c4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80099c8:	687b      	ldr	r3, [r7, #4]
 80099ca:	681b      	ldr	r3, [r3, #0]
 80099cc:	681a      	ldr	r2, [r3, #0]
 80099ce:	687b      	ldr	r3, [r7, #4]
 80099d0:	681b      	ldr	r3, [r3, #0]
 80099d2:	f022 0201 	bic.w	r2, r2, #1
 80099d6:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 80099d8:	2300      	movs	r3, #0
}
 80099da:	4618      	mov	r0, r3
 80099dc:	370c      	adds	r7, #12
 80099de:	46bd      	mov	sp, r7
 80099e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099e4:	4770      	bx	lr
	...

080099e8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80099e8:	b480      	push	{r7}
 80099ea:	b089      	sub	sp, #36	; 0x24
 80099ec:	af00      	add	r7, sp, #0
 80099ee:	6078      	str	r0, [r7, #4]
 80099f0:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 80099f2:	2300      	movs	r3, #0
 80099f4:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 80099f6:	2300      	movs	r3, #0
 80099f8:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 80099fa:	2300      	movs	r3, #0
 80099fc:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 80099fe:	2300      	movs	r3, #0
 8009a00:	61fb      	str	r3, [r7, #28]
 8009a02:	e16b      	b.n	8009cdc <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8009a04:	2201      	movs	r2, #1
 8009a06:	69fb      	ldr	r3, [r7, #28]
 8009a08:	fa02 f303 	lsl.w	r3, r2, r3
 8009a0c:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009a0e:	683b      	ldr	r3, [r7, #0]
 8009a10:	681b      	ldr	r3, [r3, #0]
 8009a12:	697a      	ldr	r2, [r7, #20]
 8009a14:	4013      	ands	r3, r2
 8009a16:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8009a18:	693a      	ldr	r2, [r7, #16]
 8009a1a:	697b      	ldr	r3, [r7, #20]
 8009a1c:	429a      	cmp	r2, r3
 8009a1e:	f040 815a 	bne.w	8009cd6 <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009a22:	683b      	ldr	r3, [r7, #0]
 8009a24:	685b      	ldr	r3, [r3, #4]
 8009a26:	f003 0303 	and.w	r3, r3, #3
 8009a2a:	2b01      	cmp	r3, #1
 8009a2c:	d005      	beq.n	8009a3a <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009a2e:	683b      	ldr	r3, [r7, #0]
 8009a30:	685b      	ldr	r3, [r3, #4]
 8009a32:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009a36:	2b02      	cmp	r3, #2
 8009a38:	d130      	bne.n	8009a9c <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8009a3a:	687b      	ldr	r3, [r7, #4]
 8009a3c:	689b      	ldr	r3, [r3, #8]
 8009a3e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009a40:	69fb      	ldr	r3, [r7, #28]
 8009a42:	005b      	lsls	r3, r3, #1
 8009a44:	2203      	movs	r2, #3
 8009a46:	fa02 f303 	lsl.w	r3, r2, r3
 8009a4a:	43db      	mvns	r3, r3
 8009a4c:	69ba      	ldr	r2, [r7, #24]
 8009a4e:	4013      	ands	r3, r2
 8009a50:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009a52:	683b      	ldr	r3, [r7, #0]
 8009a54:	68da      	ldr	r2, [r3, #12]
 8009a56:	69fb      	ldr	r3, [r7, #28]
 8009a58:	005b      	lsls	r3, r3, #1
 8009a5a:	fa02 f303 	lsl.w	r3, r2, r3
 8009a5e:	69ba      	ldr	r2, [r7, #24]
 8009a60:	4313      	orrs	r3, r2
 8009a62:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8009a64:	687b      	ldr	r3, [r7, #4]
 8009a66:	69ba      	ldr	r2, [r7, #24]
 8009a68:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8009a6a:	687b      	ldr	r3, [r7, #4]
 8009a6c:	685b      	ldr	r3, [r3, #4]
 8009a6e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009a70:	2201      	movs	r2, #1
 8009a72:	69fb      	ldr	r3, [r7, #28]
 8009a74:	fa02 f303 	lsl.w	r3, r2, r3
 8009a78:	43db      	mvns	r3, r3
 8009a7a:	69ba      	ldr	r2, [r7, #24]
 8009a7c:	4013      	ands	r3, r2
 8009a7e:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009a80:	683b      	ldr	r3, [r7, #0]
 8009a82:	685b      	ldr	r3, [r3, #4]
 8009a84:	091b      	lsrs	r3, r3, #4
 8009a86:	f003 0201 	and.w	r2, r3, #1
 8009a8a:	69fb      	ldr	r3, [r7, #28]
 8009a8c:	fa02 f303 	lsl.w	r3, r2, r3
 8009a90:	69ba      	ldr	r2, [r7, #24]
 8009a92:	4313      	orrs	r3, r2
 8009a94:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8009a96:	687b      	ldr	r3, [r7, #4]
 8009a98:	69ba      	ldr	r2, [r7, #24]
 8009a9a:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009a9c:	683b      	ldr	r3, [r7, #0]
 8009a9e:	685b      	ldr	r3, [r3, #4]
 8009aa0:	f003 0303 	and.w	r3, r3, #3
 8009aa4:	2b03      	cmp	r3, #3
 8009aa6:	d017      	beq.n	8009ad8 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8009aa8:	687b      	ldr	r3, [r7, #4]
 8009aaa:	68db      	ldr	r3, [r3, #12]
 8009aac:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009aae:	69fb      	ldr	r3, [r7, #28]
 8009ab0:	005b      	lsls	r3, r3, #1
 8009ab2:	2203      	movs	r2, #3
 8009ab4:	fa02 f303 	lsl.w	r3, r2, r3
 8009ab8:	43db      	mvns	r3, r3
 8009aba:	69ba      	ldr	r2, [r7, #24]
 8009abc:	4013      	ands	r3, r2
 8009abe:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8009ac0:	683b      	ldr	r3, [r7, #0]
 8009ac2:	689a      	ldr	r2, [r3, #8]
 8009ac4:	69fb      	ldr	r3, [r7, #28]
 8009ac6:	005b      	lsls	r3, r3, #1
 8009ac8:	fa02 f303 	lsl.w	r3, r2, r3
 8009acc:	69ba      	ldr	r2, [r7, #24]
 8009ace:	4313      	orrs	r3, r2
 8009ad0:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8009ad2:	687b      	ldr	r3, [r7, #4]
 8009ad4:	69ba      	ldr	r2, [r7, #24]
 8009ad6:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009ad8:	683b      	ldr	r3, [r7, #0]
 8009ada:	685b      	ldr	r3, [r3, #4]
 8009adc:	f003 0303 	and.w	r3, r3, #3
 8009ae0:	2b02      	cmp	r3, #2
 8009ae2:	d123      	bne.n	8009b2c <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8009ae4:	69fb      	ldr	r3, [r7, #28]
 8009ae6:	08da      	lsrs	r2, r3, #3
 8009ae8:	687b      	ldr	r3, [r7, #4]
 8009aea:	3208      	adds	r2, #8
 8009aec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009af0:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009af2:	69fb      	ldr	r3, [r7, #28]
 8009af4:	f003 0307 	and.w	r3, r3, #7
 8009af8:	009b      	lsls	r3, r3, #2
 8009afa:	220f      	movs	r2, #15
 8009afc:	fa02 f303 	lsl.w	r3, r2, r3
 8009b00:	43db      	mvns	r3, r3
 8009b02:	69ba      	ldr	r2, [r7, #24]
 8009b04:	4013      	ands	r3, r2
 8009b06:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009b08:	683b      	ldr	r3, [r7, #0]
 8009b0a:	691a      	ldr	r2, [r3, #16]
 8009b0c:	69fb      	ldr	r3, [r7, #28]
 8009b0e:	f003 0307 	and.w	r3, r3, #7
 8009b12:	009b      	lsls	r3, r3, #2
 8009b14:	fa02 f303 	lsl.w	r3, r2, r3
 8009b18:	69ba      	ldr	r2, [r7, #24]
 8009b1a:	4313      	orrs	r3, r2
 8009b1c:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8009b1e:	69fb      	ldr	r3, [r7, #28]
 8009b20:	08da      	lsrs	r2, r3, #3
 8009b22:	687b      	ldr	r3, [r7, #4]
 8009b24:	3208      	adds	r2, #8
 8009b26:	69b9      	ldr	r1, [r7, #24]
 8009b28:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8009b2c:	687b      	ldr	r3, [r7, #4]
 8009b2e:	681b      	ldr	r3, [r3, #0]
 8009b30:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009b32:	69fb      	ldr	r3, [r7, #28]
 8009b34:	005b      	lsls	r3, r3, #1
 8009b36:	2203      	movs	r2, #3
 8009b38:	fa02 f303 	lsl.w	r3, r2, r3
 8009b3c:	43db      	mvns	r3, r3
 8009b3e:	69ba      	ldr	r2, [r7, #24]
 8009b40:	4013      	ands	r3, r2
 8009b42:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009b44:	683b      	ldr	r3, [r7, #0]
 8009b46:	685b      	ldr	r3, [r3, #4]
 8009b48:	f003 0203 	and.w	r2, r3, #3
 8009b4c:	69fb      	ldr	r3, [r7, #28]
 8009b4e:	005b      	lsls	r3, r3, #1
 8009b50:	fa02 f303 	lsl.w	r3, r2, r3
 8009b54:	69ba      	ldr	r2, [r7, #24]
 8009b56:	4313      	orrs	r3, r2
 8009b58:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8009b5a:	687b      	ldr	r3, [r7, #4]
 8009b5c:	69ba      	ldr	r2, [r7, #24]
 8009b5e:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009b60:	683b      	ldr	r3, [r7, #0]
 8009b62:	685b      	ldr	r3, [r3, #4]
 8009b64:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8009b68:	2b00      	cmp	r3, #0
 8009b6a:	f000 80b4 	beq.w	8009cd6 <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009b6e:	2300      	movs	r3, #0
 8009b70:	60fb      	str	r3, [r7, #12]
 8009b72:	4b60      	ldr	r3, [pc, #384]	; (8009cf4 <HAL_GPIO_Init+0x30c>)
 8009b74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009b76:	4a5f      	ldr	r2, [pc, #380]	; (8009cf4 <HAL_GPIO_Init+0x30c>)
 8009b78:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8009b7c:	6453      	str	r3, [r2, #68]	; 0x44
 8009b7e:	4b5d      	ldr	r3, [pc, #372]	; (8009cf4 <HAL_GPIO_Init+0x30c>)
 8009b80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009b82:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009b86:	60fb      	str	r3, [r7, #12]
 8009b88:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8009b8a:	4a5b      	ldr	r2, [pc, #364]	; (8009cf8 <HAL_GPIO_Init+0x310>)
 8009b8c:	69fb      	ldr	r3, [r7, #28]
 8009b8e:	089b      	lsrs	r3, r3, #2
 8009b90:	3302      	adds	r3, #2
 8009b92:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009b96:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009b98:	69fb      	ldr	r3, [r7, #28]
 8009b9a:	f003 0303 	and.w	r3, r3, #3
 8009b9e:	009b      	lsls	r3, r3, #2
 8009ba0:	220f      	movs	r2, #15
 8009ba2:	fa02 f303 	lsl.w	r3, r2, r3
 8009ba6:	43db      	mvns	r3, r3
 8009ba8:	69ba      	ldr	r2, [r7, #24]
 8009baa:	4013      	ands	r3, r2
 8009bac:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009bae:	687b      	ldr	r3, [r7, #4]
 8009bb0:	4a52      	ldr	r2, [pc, #328]	; (8009cfc <HAL_GPIO_Init+0x314>)
 8009bb2:	4293      	cmp	r3, r2
 8009bb4:	d02b      	beq.n	8009c0e <HAL_GPIO_Init+0x226>
 8009bb6:	687b      	ldr	r3, [r7, #4]
 8009bb8:	4a51      	ldr	r2, [pc, #324]	; (8009d00 <HAL_GPIO_Init+0x318>)
 8009bba:	4293      	cmp	r3, r2
 8009bbc:	d025      	beq.n	8009c0a <HAL_GPIO_Init+0x222>
 8009bbe:	687b      	ldr	r3, [r7, #4]
 8009bc0:	4a50      	ldr	r2, [pc, #320]	; (8009d04 <HAL_GPIO_Init+0x31c>)
 8009bc2:	4293      	cmp	r3, r2
 8009bc4:	d01f      	beq.n	8009c06 <HAL_GPIO_Init+0x21e>
 8009bc6:	687b      	ldr	r3, [r7, #4]
 8009bc8:	4a4f      	ldr	r2, [pc, #316]	; (8009d08 <HAL_GPIO_Init+0x320>)
 8009bca:	4293      	cmp	r3, r2
 8009bcc:	d019      	beq.n	8009c02 <HAL_GPIO_Init+0x21a>
 8009bce:	687b      	ldr	r3, [r7, #4]
 8009bd0:	4a4e      	ldr	r2, [pc, #312]	; (8009d0c <HAL_GPIO_Init+0x324>)
 8009bd2:	4293      	cmp	r3, r2
 8009bd4:	d013      	beq.n	8009bfe <HAL_GPIO_Init+0x216>
 8009bd6:	687b      	ldr	r3, [r7, #4]
 8009bd8:	4a4d      	ldr	r2, [pc, #308]	; (8009d10 <HAL_GPIO_Init+0x328>)
 8009bda:	4293      	cmp	r3, r2
 8009bdc:	d00d      	beq.n	8009bfa <HAL_GPIO_Init+0x212>
 8009bde:	687b      	ldr	r3, [r7, #4]
 8009be0:	4a4c      	ldr	r2, [pc, #304]	; (8009d14 <HAL_GPIO_Init+0x32c>)
 8009be2:	4293      	cmp	r3, r2
 8009be4:	d007      	beq.n	8009bf6 <HAL_GPIO_Init+0x20e>
 8009be6:	687b      	ldr	r3, [r7, #4]
 8009be8:	4a4b      	ldr	r2, [pc, #300]	; (8009d18 <HAL_GPIO_Init+0x330>)
 8009bea:	4293      	cmp	r3, r2
 8009bec:	d101      	bne.n	8009bf2 <HAL_GPIO_Init+0x20a>
 8009bee:	2307      	movs	r3, #7
 8009bf0:	e00e      	b.n	8009c10 <HAL_GPIO_Init+0x228>
 8009bf2:	2308      	movs	r3, #8
 8009bf4:	e00c      	b.n	8009c10 <HAL_GPIO_Init+0x228>
 8009bf6:	2306      	movs	r3, #6
 8009bf8:	e00a      	b.n	8009c10 <HAL_GPIO_Init+0x228>
 8009bfa:	2305      	movs	r3, #5
 8009bfc:	e008      	b.n	8009c10 <HAL_GPIO_Init+0x228>
 8009bfe:	2304      	movs	r3, #4
 8009c00:	e006      	b.n	8009c10 <HAL_GPIO_Init+0x228>
 8009c02:	2303      	movs	r3, #3
 8009c04:	e004      	b.n	8009c10 <HAL_GPIO_Init+0x228>
 8009c06:	2302      	movs	r3, #2
 8009c08:	e002      	b.n	8009c10 <HAL_GPIO_Init+0x228>
 8009c0a:	2301      	movs	r3, #1
 8009c0c:	e000      	b.n	8009c10 <HAL_GPIO_Init+0x228>
 8009c0e:	2300      	movs	r3, #0
 8009c10:	69fa      	ldr	r2, [r7, #28]
 8009c12:	f002 0203 	and.w	r2, r2, #3
 8009c16:	0092      	lsls	r2, r2, #2
 8009c18:	4093      	lsls	r3, r2
 8009c1a:	69ba      	ldr	r2, [r7, #24]
 8009c1c:	4313      	orrs	r3, r2
 8009c1e:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009c20:	4935      	ldr	r1, [pc, #212]	; (8009cf8 <HAL_GPIO_Init+0x310>)
 8009c22:	69fb      	ldr	r3, [r7, #28]
 8009c24:	089b      	lsrs	r3, r3, #2
 8009c26:	3302      	adds	r3, #2
 8009c28:	69ba      	ldr	r2, [r7, #24]
 8009c2a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009c2e:	4b3b      	ldr	r3, [pc, #236]	; (8009d1c <HAL_GPIO_Init+0x334>)
 8009c30:	681b      	ldr	r3, [r3, #0]
 8009c32:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8009c34:	693b      	ldr	r3, [r7, #16]
 8009c36:	43db      	mvns	r3, r3
 8009c38:	69ba      	ldr	r2, [r7, #24]
 8009c3a:	4013      	ands	r3, r2
 8009c3c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009c3e:	683b      	ldr	r3, [r7, #0]
 8009c40:	685b      	ldr	r3, [r3, #4]
 8009c42:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009c46:	2b00      	cmp	r3, #0
 8009c48:	d003      	beq.n	8009c52 <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 8009c4a:	69ba      	ldr	r2, [r7, #24]
 8009c4c:	693b      	ldr	r3, [r7, #16]
 8009c4e:	4313      	orrs	r3, r2
 8009c50:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8009c52:	4a32      	ldr	r2, [pc, #200]	; (8009d1c <HAL_GPIO_Init+0x334>)
 8009c54:	69bb      	ldr	r3, [r7, #24]
 8009c56:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8009c58:	4b30      	ldr	r3, [pc, #192]	; (8009d1c <HAL_GPIO_Init+0x334>)
 8009c5a:	685b      	ldr	r3, [r3, #4]
 8009c5c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8009c5e:	693b      	ldr	r3, [r7, #16]
 8009c60:	43db      	mvns	r3, r3
 8009c62:	69ba      	ldr	r2, [r7, #24]
 8009c64:	4013      	ands	r3, r2
 8009c66:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009c68:	683b      	ldr	r3, [r7, #0]
 8009c6a:	685b      	ldr	r3, [r3, #4]
 8009c6c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009c70:	2b00      	cmp	r3, #0
 8009c72:	d003      	beq.n	8009c7c <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 8009c74:	69ba      	ldr	r2, [r7, #24]
 8009c76:	693b      	ldr	r3, [r7, #16]
 8009c78:	4313      	orrs	r3, r2
 8009c7a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8009c7c:	4a27      	ldr	r2, [pc, #156]	; (8009d1c <HAL_GPIO_Init+0x334>)
 8009c7e:	69bb      	ldr	r3, [r7, #24]
 8009c80:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009c82:	4b26      	ldr	r3, [pc, #152]	; (8009d1c <HAL_GPIO_Init+0x334>)
 8009c84:	689b      	ldr	r3, [r3, #8]
 8009c86:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8009c88:	693b      	ldr	r3, [r7, #16]
 8009c8a:	43db      	mvns	r3, r3
 8009c8c:	69ba      	ldr	r2, [r7, #24]
 8009c8e:	4013      	ands	r3, r2
 8009c90:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009c92:	683b      	ldr	r3, [r7, #0]
 8009c94:	685b      	ldr	r3, [r3, #4]
 8009c96:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009c9a:	2b00      	cmp	r3, #0
 8009c9c:	d003      	beq.n	8009ca6 <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
 8009c9e:	69ba      	ldr	r2, [r7, #24]
 8009ca0:	693b      	ldr	r3, [r7, #16]
 8009ca2:	4313      	orrs	r3, r2
 8009ca4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8009ca6:	4a1d      	ldr	r2, [pc, #116]	; (8009d1c <HAL_GPIO_Init+0x334>)
 8009ca8:	69bb      	ldr	r3, [r7, #24]
 8009caa:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8009cac:	4b1b      	ldr	r3, [pc, #108]	; (8009d1c <HAL_GPIO_Init+0x334>)
 8009cae:	68db      	ldr	r3, [r3, #12]
 8009cb0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8009cb2:	693b      	ldr	r3, [r7, #16]
 8009cb4:	43db      	mvns	r3, r3
 8009cb6:	69ba      	ldr	r2, [r7, #24]
 8009cb8:	4013      	ands	r3, r2
 8009cba:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009cbc:	683b      	ldr	r3, [r7, #0]
 8009cbe:	685b      	ldr	r3, [r3, #4]
 8009cc0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009cc4:	2b00      	cmp	r3, #0
 8009cc6:	d003      	beq.n	8009cd0 <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
 8009cc8:	69ba      	ldr	r2, [r7, #24]
 8009cca:	693b      	ldr	r3, [r7, #16]
 8009ccc:	4313      	orrs	r3, r2
 8009cce:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8009cd0:	4a12      	ldr	r2, [pc, #72]	; (8009d1c <HAL_GPIO_Init+0x334>)
 8009cd2:	69bb      	ldr	r3, [r7, #24]
 8009cd4:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009cd6:	69fb      	ldr	r3, [r7, #28]
 8009cd8:	3301      	adds	r3, #1
 8009cda:	61fb      	str	r3, [r7, #28]
 8009cdc:	69fb      	ldr	r3, [r7, #28]
 8009cde:	2b0f      	cmp	r3, #15
 8009ce0:	f67f ae90 	bls.w	8009a04 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8009ce4:	bf00      	nop
 8009ce6:	bf00      	nop
 8009ce8:	3724      	adds	r7, #36	; 0x24
 8009cea:	46bd      	mov	sp, r7
 8009cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cf0:	4770      	bx	lr
 8009cf2:	bf00      	nop
 8009cf4:	40023800 	.word	0x40023800
 8009cf8:	40013800 	.word	0x40013800
 8009cfc:	40020000 	.word	0x40020000
 8009d00:	40020400 	.word	0x40020400
 8009d04:	40020800 	.word	0x40020800
 8009d08:	40020c00 	.word	0x40020c00
 8009d0c:	40021000 	.word	0x40021000
 8009d10:	40021400 	.word	0x40021400
 8009d14:	40021800 	.word	0x40021800
 8009d18:	40021c00 	.word	0x40021c00
 8009d1c:	40013c00 	.word	0x40013c00

08009d20 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8009d20:	b480      	push	{r7}
 8009d22:	b087      	sub	sp, #28
 8009d24:	af00      	add	r7, sp, #0
 8009d26:	6078      	str	r0, [r7, #4]
 8009d28:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8009d2a:	2300      	movs	r3, #0
 8009d2c:	613b      	str	r3, [r7, #16]
  uint32_t iocurrent = 0x00U;
 8009d2e:	2300      	movs	r3, #0
 8009d30:	60fb      	str	r3, [r7, #12]
  uint32_t tmp = 0x00U;
 8009d32:	2300      	movs	r3, #0
 8009d34:	60bb      	str	r3, [r7, #8]

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  
  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009d36:	2300      	movs	r3, #0
 8009d38:	617b      	str	r3, [r7, #20]
 8009d3a:	e0cd      	b.n	8009ed8 <HAL_GPIO_DeInit+0x1b8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8009d3c:	2201      	movs	r2, #1
 8009d3e:	697b      	ldr	r3, [r7, #20]
 8009d40:	fa02 f303 	lsl.w	r3, r2, r3
 8009d44:	613b      	str	r3, [r7, #16]
    /* Get the current IO position */
    iocurrent = (GPIO_Pin) & ioposition;
 8009d46:	683a      	ldr	r2, [r7, #0]
 8009d48:	693b      	ldr	r3, [r7, #16]
 8009d4a:	4013      	ands	r3, r2
 8009d4c:	60fb      	str	r3, [r7, #12]

    if(iocurrent == ioposition)
 8009d4e:	68fa      	ldr	r2, [r7, #12]
 8009d50:	693b      	ldr	r3, [r7, #16]
 8009d52:	429a      	cmp	r2, r3
 8009d54:	f040 80bd 	bne.w	8009ed2 <HAL_GPIO_DeInit+0x1b2>
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2U];
 8009d58:	4a65      	ldr	r2, [pc, #404]	; (8009ef0 <HAL_GPIO_DeInit+0x1d0>)
 8009d5a:	697b      	ldr	r3, [r7, #20]
 8009d5c:	089b      	lsrs	r3, r3, #2
 8009d5e:	3302      	adds	r3, #2
 8009d60:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009d64:	60bb      	str	r3, [r7, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8009d66:	697b      	ldr	r3, [r7, #20]
 8009d68:	f003 0303 	and.w	r3, r3, #3
 8009d6c:	009b      	lsls	r3, r3, #2
 8009d6e:	220f      	movs	r2, #15
 8009d70:	fa02 f303 	lsl.w	r3, r2, r3
 8009d74:	68ba      	ldr	r2, [r7, #8]
 8009d76:	4013      	ands	r3, r2
 8009d78:	60bb      	str	r3, [r7, #8]
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8009d7a:	687b      	ldr	r3, [r7, #4]
 8009d7c:	4a5d      	ldr	r2, [pc, #372]	; (8009ef4 <HAL_GPIO_DeInit+0x1d4>)
 8009d7e:	4293      	cmp	r3, r2
 8009d80:	d02b      	beq.n	8009dda <HAL_GPIO_DeInit+0xba>
 8009d82:	687b      	ldr	r3, [r7, #4]
 8009d84:	4a5c      	ldr	r2, [pc, #368]	; (8009ef8 <HAL_GPIO_DeInit+0x1d8>)
 8009d86:	4293      	cmp	r3, r2
 8009d88:	d025      	beq.n	8009dd6 <HAL_GPIO_DeInit+0xb6>
 8009d8a:	687b      	ldr	r3, [r7, #4]
 8009d8c:	4a5b      	ldr	r2, [pc, #364]	; (8009efc <HAL_GPIO_DeInit+0x1dc>)
 8009d8e:	4293      	cmp	r3, r2
 8009d90:	d01f      	beq.n	8009dd2 <HAL_GPIO_DeInit+0xb2>
 8009d92:	687b      	ldr	r3, [r7, #4]
 8009d94:	4a5a      	ldr	r2, [pc, #360]	; (8009f00 <HAL_GPIO_DeInit+0x1e0>)
 8009d96:	4293      	cmp	r3, r2
 8009d98:	d019      	beq.n	8009dce <HAL_GPIO_DeInit+0xae>
 8009d9a:	687b      	ldr	r3, [r7, #4]
 8009d9c:	4a59      	ldr	r2, [pc, #356]	; (8009f04 <HAL_GPIO_DeInit+0x1e4>)
 8009d9e:	4293      	cmp	r3, r2
 8009da0:	d013      	beq.n	8009dca <HAL_GPIO_DeInit+0xaa>
 8009da2:	687b      	ldr	r3, [r7, #4]
 8009da4:	4a58      	ldr	r2, [pc, #352]	; (8009f08 <HAL_GPIO_DeInit+0x1e8>)
 8009da6:	4293      	cmp	r3, r2
 8009da8:	d00d      	beq.n	8009dc6 <HAL_GPIO_DeInit+0xa6>
 8009daa:	687b      	ldr	r3, [r7, #4]
 8009dac:	4a57      	ldr	r2, [pc, #348]	; (8009f0c <HAL_GPIO_DeInit+0x1ec>)
 8009dae:	4293      	cmp	r3, r2
 8009db0:	d007      	beq.n	8009dc2 <HAL_GPIO_DeInit+0xa2>
 8009db2:	687b      	ldr	r3, [r7, #4]
 8009db4:	4a56      	ldr	r2, [pc, #344]	; (8009f10 <HAL_GPIO_DeInit+0x1f0>)
 8009db6:	4293      	cmp	r3, r2
 8009db8:	d101      	bne.n	8009dbe <HAL_GPIO_DeInit+0x9e>
 8009dba:	2307      	movs	r3, #7
 8009dbc:	e00e      	b.n	8009ddc <HAL_GPIO_DeInit+0xbc>
 8009dbe:	2308      	movs	r3, #8
 8009dc0:	e00c      	b.n	8009ddc <HAL_GPIO_DeInit+0xbc>
 8009dc2:	2306      	movs	r3, #6
 8009dc4:	e00a      	b.n	8009ddc <HAL_GPIO_DeInit+0xbc>
 8009dc6:	2305      	movs	r3, #5
 8009dc8:	e008      	b.n	8009ddc <HAL_GPIO_DeInit+0xbc>
 8009dca:	2304      	movs	r3, #4
 8009dcc:	e006      	b.n	8009ddc <HAL_GPIO_DeInit+0xbc>
 8009dce:	2303      	movs	r3, #3
 8009dd0:	e004      	b.n	8009ddc <HAL_GPIO_DeInit+0xbc>
 8009dd2:	2302      	movs	r3, #2
 8009dd4:	e002      	b.n	8009ddc <HAL_GPIO_DeInit+0xbc>
 8009dd6:	2301      	movs	r3, #1
 8009dd8:	e000      	b.n	8009ddc <HAL_GPIO_DeInit+0xbc>
 8009dda:	2300      	movs	r3, #0
 8009ddc:	697a      	ldr	r2, [r7, #20]
 8009dde:	f002 0203 	and.w	r2, r2, #3
 8009de2:	0092      	lsls	r2, r2, #2
 8009de4:	4093      	lsls	r3, r2
 8009de6:	68ba      	ldr	r2, [r7, #8]
 8009de8:	429a      	cmp	r2, r3
 8009dea:	d132      	bne.n	8009e52 <HAL_GPIO_DeInit+0x132>
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8009dec:	4b49      	ldr	r3, [pc, #292]	; (8009f14 <HAL_GPIO_DeInit+0x1f4>)
 8009dee:	681a      	ldr	r2, [r3, #0]
 8009df0:	68fb      	ldr	r3, [r7, #12]
 8009df2:	43db      	mvns	r3, r3
 8009df4:	4947      	ldr	r1, [pc, #284]	; (8009f14 <HAL_GPIO_DeInit+0x1f4>)
 8009df6:	4013      	ands	r3, r2
 8009df8:	600b      	str	r3, [r1, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8009dfa:	4b46      	ldr	r3, [pc, #280]	; (8009f14 <HAL_GPIO_DeInit+0x1f4>)
 8009dfc:	685a      	ldr	r2, [r3, #4]
 8009dfe:	68fb      	ldr	r3, [r7, #12]
 8009e00:	43db      	mvns	r3, r3
 8009e02:	4944      	ldr	r1, [pc, #272]	; (8009f14 <HAL_GPIO_DeInit+0x1f4>)
 8009e04:	4013      	ands	r3, r2
 8009e06:	604b      	str	r3, [r1, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8009e08:	4b42      	ldr	r3, [pc, #264]	; (8009f14 <HAL_GPIO_DeInit+0x1f4>)
 8009e0a:	689a      	ldr	r2, [r3, #8]
 8009e0c:	68fb      	ldr	r3, [r7, #12]
 8009e0e:	43db      	mvns	r3, r3
 8009e10:	4940      	ldr	r1, [pc, #256]	; (8009f14 <HAL_GPIO_DeInit+0x1f4>)
 8009e12:	4013      	ands	r3, r2
 8009e14:	608b      	str	r3, [r1, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8009e16:	4b3f      	ldr	r3, [pc, #252]	; (8009f14 <HAL_GPIO_DeInit+0x1f4>)
 8009e18:	68da      	ldr	r2, [r3, #12]
 8009e1a:	68fb      	ldr	r3, [r7, #12]
 8009e1c:	43db      	mvns	r3, r3
 8009e1e:	493d      	ldr	r1, [pc, #244]	; (8009f14 <HAL_GPIO_DeInit+0x1f4>)
 8009e20:	4013      	ands	r3, r2
 8009e22:	60cb      	str	r3, [r1, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
 8009e24:	697b      	ldr	r3, [r7, #20]
 8009e26:	f003 0303 	and.w	r3, r3, #3
 8009e2a:	009b      	lsls	r3, r3, #2
 8009e2c:	220f      	movs	r2, #15
 8009e2e:	fa02 f303 	lsl.w	r3, r2, r3
 8009e32:	60bb      	str	r3, [r7, #8]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8009e34:	4a2e      	ldr	r2, [pc, #184]	; (8009ef0 <HAL_GPIO_DeInit+0x1d0>)
 8009e36:	697b      	ldr	r3, [r7, #20]
 8009e38:	089b      	lsrs	r3, r3, #2
 8009e3a:	3302      	adds	r3, #2
 8009e3c:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8009e40:	68bb      	ldr	r3, [r7, #8]
 8009e42:	43da      	mvns	r2, r3
 8009e44:	482a      	ldr	r0, [pc, #168]	; (8009ef0 <HAL_GPIO_DeInit+0x1d0>)
 8009e46:	697b      	ldr	r3, [r7, #20]
 8009e48:	089b      	lsrs	r3, r3, #2
 8009e4a:	400a      	ands	r2, r1
 8009e4c:	3302      	adds	r3, #2
 8009e4e:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009e52:	687b      	ldr	r3, [r7, #4]
 8009e54:	681a      	ldr	r2, [r3, #0]
 8009e56:	697b      	ldr	r3, [r7, #20]
 8009e58:	005b      	lsls	r3, r3, #1
 8009e5a:	2103      	movs	r1, #3
 8009e5c:	fa01 f303 	lsl.w	r3, r1, r3
 8009e60:	43db      	mvns	r3, r3
 8009e62:	401a      	ands	r2, r3
 8009e64:	687b      	ldr	r3, [r7, #4]
 8009e66:	601a      	str	r2, [r3, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009e68:	697b      	ldr	r3, [r7, #20]
 8009e6a:	08da      	lsrs	r2, r3, #3
 8009e6c:	687b      	ldr	r3, [r7, #4]
 8009e6e:	3208      	adds	r2, #8
 8009e70:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8009e74:	697b      	ldr	r3, [r7, #20]
 8009e76:	f003 0307 	and.w	r3, r3, #7
 8009e7a:	009b      	lsls	r3, r3, #2
 8009e7c:	220f      	movs	r2, #15
 8009e7e:	fa02 f303 	lsl.w	r3, r2, r3
 8009e82:	43db      	mvns	r3, r3
 8009e84:	697a      	ldr	r2, [r7, #20]
 8009e86:	08d2      	lsrs	r2, r2, #3
 8009e88:	4019      	ands	r1, r3
 8009e8a:	687b      	ldr	r3, [r7, #4]
 8009e8c:	3208      	adds	r2, #8
 8009e8e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009e92:	687b      	ldr	r3, [r7, #4]
 8009e94:	68da      	ldr	r2, [r3, #12]
 8009e96:	697b      	ldr	r3, [r7, #20]
 8009e98:	005b      	lsls	r3, r3, #1
 8009e9a:	2103      	movs	r1, #3
 8009e9c:	fa01 f303 	lsl.w	r3, r1, r3
 8009ea0:	43db      	mvns	r3, r3
 8009ea2:	401a      	ands	r2, r3
 8009ea4:	687b      	ldr	r3, [r7, #4]
 8009ea6:	60da      	str	r2, [r3, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009ea8:	687b      	ldr	r3, [r7, #4]
 8009eaa:	685a      	ldr	r2, [r3, #4]
 8009eac:	2101      	movs	r1, #1
 8009eae:	697b      	ldr	r3, [r7, #20]
 8009eb0:	fa01 f303 	lsl.w	r3, r1, r3
 8009eb4:	43db      	mvns	r3, r3
 8009eb6:	401a      	ands	r2, r3
 8009eb8:	687b      	ldr	r3, [r7, #4]
 8009eba:	605a      	str	r2, [r3, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009ebc:	687b      	ldr	r3, [r7, #4]
 8009ebe:	689a      	ldr	r2, [r3, #8]
 8009ec0:	697b      	ldr	r3, [r7, #20]
 8009ec2:	005b      	lsls	r3, r3, #1
 8009ec4:	2103      	movs	r1, #3
 8009ec6:	fa01 f303 	lsl.w	r3, r1, r3
 8009eca:	43db      	mvns	r3, r3
 8009ecc:	401a      	ands	r2, r3
 8009ece:	687b      	ldr	r3, [r7, #4]
 8009ed0:	609a      	str	r2, [r3, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009ed2:	697b      	ldr	r3, [r7, #20]
 8009ed4:	3301      	adds	r3, #1
 8009ed6:	617b      	str	r3, [r7, #20]
 8009ed8:	697b      	ldr	r3, [r7, #20]
 8009eda:	2b0f      	cmp	r3, #15
 8009edc:	f67f af2e 	bls.w	8009d3c <HAL_GPIO_DeInit+0x1c>
    }
  }
}
 8009ee0:	bf00      	nop
 8009ee2:	bf00      	nop
 8009ee4:	371c      	adds	r7, #28
 8009ee6:	46bd      	mov	sp, r7
 8009ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009eec:	4770      	bx	lr
 8009eee:	bf00      	nop
 8009ef0:	40013800 	.word	0x40013800
 8009ef4:	40020000 	.word	0x40020000
 8009ef8:	40020400 	.word	0x40020400
 8009efc:	40020800 	.word	0x40020800
 8009f00:	40020c00 	.word	0x40020c00
 8009f04:	40021000 	.word	0x40021000
 8009f08:	40021400 	.word	0x40021400
 8009f0c:	40021800 	.word	0x40021800
 8009f10:	40021c00 	.word	0x40021c00
 8009f14:	40013c00 	.word	0x40013c00

08009f18 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8009f18:	b480      	push	{r7}
 8009f1a:	b083      	sub	sp, #12
 8009f1c:	af00      	add	r7, sp, #0
 8009f1e:	6078      	str	r0, [r7, #4]
 8009f20:	460b      	mov	r3, r1
 8009f22:	807b      	strh	r3, [r7, #2]
 8009f24:	4613      	mov	r3, r2
 8009f26:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009f28:	787b      	ldrb	r3, [r7, #1]
 8009f2a:	2b00      	cmp	r3, #0
 8009f2c:	d003      	beq.n	8009f36 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8009f2e:	887a      	ldrh	r2, [r7, #2]
 8009f30:	687b      	ldr	r3, [r7, #4]
 8009f32:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8009f34:	e003      	b.n	8009f3e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8009f36:	887b      	ldrh	r3, [r7, #2]
 8009f38:	041a      	lsls	r2, r3, #16
 8009f3a:	687b      	ldr	r3, [r7, #4]
 8009f3c:	619a      	str	r2, [r3, #24]
}
 8009f3e:	bf00      	nop
 8009f40:	370c      	adds	r7, #12
 8009f42:	46bd      	mov	sp, r7
 8009f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f48:	4770      	bx	lr
	...

08009f4c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8009f4c:	b580      	push	{r7, lr}
 8009f4e:	b086      	sub	sp, #24
 8009f50:	af00      	add	r7, sp, #0
 8009f52:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8009f54:	687b      	ldr	r3, [r7, #4]
 8009f56:	2b00      	cmp	r3, #0
 8009f58:	d101      	bne.n	8009f5e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8009f5a:	2301      	movs	r3, #1
 8009f5c:	e264      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009f5e:	687b      	ldr	r3, [r7, #4]
 8009f60:	681b      	ldr	r3, [r3, #0]
 8009f62:	f003 0301 	and.w	r3, r3, #1
 8009f66:	2b00      	cmp	r3, #0
 8009f68:	d075      	beq.n	800a056 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009f6a:	4ba3      	ldr	r3, [pc, #652]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009f6c:	689b      	ldr	r3, [r3, #8]
 8009f6e:	f003 030c 	and.w	r3, r3, #12
 8009f72:	2b04      	cmp	r3, #4
 8009f74:	d00c      	beq.n	8009f90 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009f76:	4ba0      	ldr	r3, [pc, #640]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009f78:	689b      	ldr	r3, [r3, #8]
 8009f7a:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009f7e:	2b08      	cmp	r3, #8
 8009f80:	d112      	bne.n	8009fa8 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009f82:	4b9d      	ldr	r3, [pc, #628]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009f84:	685b      	ldr	r3, [r3, #4]
 8009f86:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009f8a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009f8e:	d10b      	bne.n	8009fa8 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8009f90:	4b99      	ldr	r3, [pc, #612]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009f92:	681b      	ldr	r3, [r3, #0]
 8009f94:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009f98:	2b00      	cmp	r3, #0
 8009f9a:	d05b      	beq.n	800a054 <HAL_RCC_OscConfig+0x108>
 8009f9c:	687b      	ldr	r3, [r7, #4]
 8009f9e:	685b      	ldr	r3, [r3, #4]
 8009fa0:	2b00      	cmp	r3, #0
 8009fa2:	d157      	bne.n	800a054 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8009fa4:	2301      	movs	r3, #1
 8009fa6:	e23f      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009fa8:	687b      	ldr	r3, [r7, #4]
 8009faa:	685b      	ldr	r3, [r3, #4]
 8009fac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009fb0:	d106      	bne.n	8009fc0 <HAL_RCC_OscConfig+0x74>
 8009fb2:	4b91      	ldr	r3, [pc, #580]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009fb4:	681b      	ldr	r3, [r3, #0]
 8009fb6:	4a90      	ldr	r2, [pc, #576]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009fb8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009fbc:	6013      	str	r3, [r2, #0]
 8009fbe:	e01d      	b.n	8009ffc <HAL_RCC_OscConfig+0xb0>
 8009fc0:	687b      	ldr	r3, [r7, #4]
 8009fc2:	685b      	ldr	r3, [r3, #4]
 8009fc4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009fc8:	d10c      	bne.n	8009fe4 <HAL_RCC_OscConfig+0x98>
 8009fca:	4b8b      	ldr	r3, [pc, #556]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009fcc:	681b      	ldr	r3, [r3, #0]
 8009fce:	4a8a      	ldr	r2, [pc, #552]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009fd0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8009fd4:	6013      	str	r3, [r2, #0]
 8009fd6:	4b88      	ldr	r3, [pc, #544]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009fd8:	681b      	ldr	r3, [r3, #0]
 8009fda:	4a87      	ldr	r2, [pc, #540]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009fdc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009fe0:	6013      	str	r3, [r2, #0]
 8009fe2:	e00b      	b.n	8009ffc <HAL_RCC_OscConfig+0xb0>
 8009fe4:	4b84      	ldr	r3, [pc, #528]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009fe6:	681b      	ldr	r3, [r3, #0]
 8009fe8:	4a83      	ldr	r2, [pc, #524]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009fea:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009fee:	6013      	str	r3, [r2, #0]
 8009ff0:	4b81      	ldr	r3, [pc, #516]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009ff2:	681b      	ldr	r3, [r3, #0]
 8009ff4:	4a80      	ldr	r2, [pc, #512]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 8009ff6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8009ffa:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8009ffc:	687b      	ldr	r3, [r7, #4]
 8009ffe:	685b      	ldr	r3, [r3, #4]
 800a000:	2b00      	cmp	r3, #0
 800a002:	d013      	beq.n	800a02c <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800a004:	f7ff fb0e 	bl	8009624 <HAL_GetTick>
 800a008:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a00a:	e008      	b.n	800a01e <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800a00c:	f7ff fb0a 	bl	8009624 <HAL_GetTick>
 800a010:	4602      	mov	r2, r0
 800a012:	693b      	ldr	r3, [r7, #16]
 800a014:	1ad3      	subs	r3, r2, r3
 800a016:	2b64      	cmp	r3, #100	; 0x64
 800a018:	d901      	bls.n	800a01e <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 800a01a:	2303      	movs	r3, #3
 800a01c:	e204      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a01e:	4b76      	ldr	r3, [pc, #472]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a020:	681b      	ldr	r3, [r3, #0]
 800a022:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800a026:	2b00      	cmp	r3, #0
 800a028:	d0f0      	beq.n	800a00c <HAL_RCC_OscConfig+0xc0>
 800a02a:	e014      	b.n	800a056 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800a02c:	f7ff fafa 	bl	8009624 <HAL_GetTick>
 800a030:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800a032:	e008      	b.n	800a046 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800a034:	f7ff faf6 	bl	8009624 <HAL_GetTick>
 800a038:	4602      	mov	r2, r0
 800a03a:	693b      	ldr	r3, [r7, #16]
 800a03c:	1ad3      	subs	r3, r2, r3
 800a03e:	2b64      	cmp	r3, #100	; 0x64
 800a040:	d901      	bls.n	800a046 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800a042:	2303      	movs	r3, #3
 800a044:	e1f0      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800a046:	4b6c      	ldr	r3, [pc, #432]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a048:	681b      	ldr	r3, [r3, #0]
 800a04a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800a04e:	2b00      	cmp	r3, #0
 800a050:	d1f0      	bne.n	800a034 <HAL_RCC_OscConfig+0xe8>
 800a052:	e000      	b.n	800a056 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800a054:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800a056:	687b      	ldr	r3, [r7, #4]
 800a058:	681b      	ldr	r3, [r3, #0]
 800a05a:	f003 0302 	and.w	r3, r3, #2
 800a05e:	2b00      	cmp	r3, #0
 800a060:	d063      	beq.n	800a12a <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800a062:	4b65      	ldr	r3, [pc, #404]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a064:	689b      	ldr	r3, [r3, #8]
 800a066:	f003 030c 	and.w	r3, r3, #12
 800a06a:	2b00      	cmp	r3, #0
 800a06c:	d00b      	beq.n	800a086 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a06e:	4b62      	ldr	r3, [pc, #392]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a070:	689b      	ldr	r3, [r3, #8]
 800a072:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800a076:	2b08      	cmp	r3, #8
 800a078:	d11c      	bne.n	800a0b4 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a07a:	4b5f      	ldr	r3, [pc, #380]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a07c:	685b      	ldr	r3, [r3, #4]
 800a07e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800a082:	2b00      	cmp	r3, #0
 800a084:	d116      	bne.n	800a0b4 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a086:	4b5c      	ldr	r3, [pc, #368]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a088:	681b      	ldr	r3, [r3, #0]
 800a08a:	f003 0302 	and.w	r3, r3, #2
 800a08e:	2b00      	cmp	r3, #0
 800a090:	d005      	beq.n	800a09e <HAL_RCC_OscConfig+0x152>
 800a092:	687b      	ldr	r3, [r7, #4]
 800a094:	68db      	ldr	r3, [r3, #12]
 800a096:	2b01      	cmp	r3, #1
 800a098:	d001      	beq.n	800a09e <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 800a09a:	2301      	movs	r3, #1
 800a09c:	e1c4      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a09e:	4b56      	ldr	r3, [pc, #344]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a0a0:	681b      	ldr	r3, [r3, #0]
 800a0a2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800a0a6:	687b      	ldr	r3, [r7, #4]
 800a0a8:	691b      	ldr	r3, [r3, #16]
 800a0aa:	00db      	lsls	r3, r3, #3
 800a0ac:	4952      	ldr	r1, [pc, #328]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a0ae:	4313      	orrs	r3, r2
 800a0b0:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a0b2:	e03a      	b.n	800a12a <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800a0b4:	687b      	ldr	r3, [r7, #4]
 800a0b6:	68db      	ldr	r3, [r3, #12]
 800a0b8:	2b00      	cmp	r3, #0
 800a0ba:	d020      	beq.n	800a0fe <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800a0bc:	4b4f      	ldr	r3, [pc, #316]	; (800a1fc <HAL_RCC_OscConfig+0x2b0>)
 800a0be:	2201      	movs	r2, #1
 800a0c0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800a0c2:	f7ff faaf 	bl	8009624 <HAL_GetTick>
 800a0c6:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a0c8:	e008      	b.n	800a0dc <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800a0ca:	f7ff faab 	bl	8009624 <HAL_GetTick>
 800a0ce:	4602      	mov	r2, r0
 800a0d0:	693b      	ldr	r3, [r7, #16]
 800a0d2:	1ad3      	subs	r3, r2, r3
 800a0d4:	2b02      	cmp	r3, #2
 800a0d6:	d901      	bls.n	800a0dc <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 800a0d8:	2303      	movs	r3, #3
 800a0da:	e1a5      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a0dc:	4b46      	ldr	r3, [pc, #280]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a0de:	681b      	ldr	r3, [r3, #0]
 800a0e0:	f003 0302 	and.w	r3, r3, #2
 800a0e4:	2b00      	cmp	r3, #0
 800a0e6:	d0f0      	beq.n	800a0ca <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a0e8:	4b43      	ldr	r3, [pc, #268]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a0ea:	681b      	ldr	r3, [r3, #0]
 800a0ec:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800a0f0:	687b      	ldr	r3, [r7, #4]
 800a0f2:	691b      	ldr	r3, [r3, #16]
 800a0f4:	00db      	lsls	r3, r3, #3
 800a0f6:	4940      	ldr	r1, [pc, #256]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a0f8:	4313      	orrs	r3, r2
 800a0fa:	600b      	str	r3, [r1, #0]
 800a0fc:	e015      	b.n	800a12a <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800a0fe:	4b3f      	ldr	r3, [pc, #252]	; (800a1fc <HAL_RCC_OscConfig+0x2b0>)
 800a100:	2200      	movs	r2, #0
 800a102:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800a104:	f7ff fa8e 	bl	8009624 <HAL_GetTick>
 800a108:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a10a:	e008      	b.n	800a11e <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800a10c:	f7ff fa8a 	bl	8009624 <HAL_GetTick>
 800a110:	4602      	mov	r2, r0
 800a112:	693b      	ldr	r3, [r7, #16]
 800a114:	1ad3      	subs	r3, r2, r3
 800a116:	2b02      	cmp	r3, #2
 800a118:	d901      	bls.n	800a11e <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 800a11a:	2303      	movs	r3, #3
 800a11c:	e184      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a11e:	4b36      	ldr	r3, [pc, #216]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a120:	681b      	ldr	r3, [r3, #0]
 800a122:	f003 0302 	and.w	r3, r3, #2
 800a126:	2b00      	cmp	r3, #0
 800a128:	d1f0      	bne.n	800a10c <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a12a:	687b      	ldr	r3, [r7, #4]
 800a12c:	681b      	ldr	r3, [r3, #0]
 800a12e:	f003 0308 	and.w	r3, r3, #8
 800a132:	2b00      	cmp	r3, #0
 800a134:	d030      	beq.n	800a198 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800a136:	687b      	ldr	r3, [r7, #4]
 800a138:	695b      	ldr	r3, [r3, #20]
 800a13a:	2b00      	cmp	r3, #0
 800a13c:	d016      	beq.n	800a16c <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800a13e:	4b30      	ldr	r3, [pc, #192]	; (800a200 <HAL_RCC_OscConfig+0x2b4>)
 800a140:	2201      	movs	r2, #1
 800a142:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800a144:	f7ff fa6e 	bl	8009624 <HAL_GetTick>
 800a148:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a14a:	e008      	b.n	800a15e <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800a14c:	f7ff fa6a 	bl	8009624 <HAL_GetTick>
 800a150:	4602      	mov	r2, r0
 800a152:	693b      	ldr	r3, [r7, #16]
 800a154:	1ad3      	subs	r3, r2, r3
 800a156:	2b02      	cmp	r3, #2
 800a158:	d901      	bls.n	800a15e <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 800a15a:	2303      	movs	r3, #3
 800a15c:	e164      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a15e:	4b26      	ldr	r3, [pc, #152]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a160:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a162:	f003 0302 	and.w	r3, r3, #2
 800a166:	2b00      	cmp	r3, #0
 800a168:	d0f0      	beq.n	800a14c <HAL_RCC_OscConfig+0x200>
 800a16a:	e015      	b.n	800a198 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 800a16c:	4b24      	ldr	r3, [pc, #144]	; (800a200 <HAL_RCC_OscConfig+0x2b4>)
 800a16e:	2200      	movs	r2, #0
 800a170:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800a172:	f7ff fa57 	bl	8009624 <HAL_GetTick>
 800a176:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a178:	e008      	b.n	800a18c <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800a17a:	f7ff fa53 	bl	8009624 <HAL_GetTick>
 800a17e:	4602      	mov	r2, r0
 800a180:	693b      	ldr	r3, [r7, #16]
 800a182:	1ad3      	subs	r3, r2, r3
 800a184:	2b02      	cmp	r3, #2
 800a186:	d901      	bls.n	800a18c <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 800a188:	2303      	movs	r3, #3
 800a18a:	e14d      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a18c:	4b1a      	ldr	r3, [pc, #104]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a18e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a190:	f003 0302 	and.w	r3, r3, #2
 800a194:	2b00      	cmp	r3, #0
 800a196:	d1f0      	bne.n	800a17a <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800a198:	687b      	ldr	r3, [r7, #4]
 800a19a:	681b      	ldr	r3, [r3, #0]
 800a19c:	f003 0304 	and.w	r3, r3, #4
 800a1a0:	2b00      	cmp	r3, #0
 800a1a2:	f000 80a0 	beq.w	800a2e6 <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 800a1a6:	2300      	movs	r3, #0
 800a1a8:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800a1aa:	4b13      	ldr	r3, [pc, #76]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a1ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a1ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a1b2:	2b00      	cmp	r3, #0
 800a1b4:	d10f      	bne.n	800a1d6 <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800a1b6:	2300      	movs	r3, #0
 800a1b8:	60bb      	str	r3, [r7, #8]
 800a1ba:	4b0f      	ldr	r3, [pc, #60]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a1bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a1be:	4a0e      	ldr	r2, [pc, #56]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a1c0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a1c4:	6413      	str	r3, [r2, #64]	; 0x40
 800a1c6:	4b0c      	ldr	r3, [pc, #48]	; (800a1f8 <HAL_RCC_OscConfig+0x2ac>)
 800a1c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a1ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a1ce:	60bb      	str	r3, [r7, #8]
 800a1d0:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800a1d2:	2301      	movs	r3, #1
 800a1d4:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a1d6:	4b0b      	ldr	r3, [pc, #44]	; (800a204 <HAL_RCC_OscConfig+0x2b8>)
 800a1d8:	681b      	ldr	r3, [r3, #0]
 800a1da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a1de:	2b00      	cmp	r3, #0
 800a1e0:	d121      	bne.n	800a226 <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800a1e2:	4b08      	ldr	r3, [pc, #32]	; (800a204 <HAL_RCC_OscConfig+0x2b8>)
 800a1e4:	681b      	ldr	r3, [r3, #0]
 800a1e6:	4a07      	ldr	r2, [pc, #28]	; (800a204 <HAL_RCC_OscConfig+0x2b8>)
 800a1e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a1ec:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 800a1ee:	f7ff fa19 	bl	8009624 <HAL_GetTick>
 800a1f2:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a1f4:	e011      	b.n	800a21a <HAL_RCC_OscConfig+0x2ce>
 800a1f6:	bf00      	nop
 800a1f8:	40023800 	.word	0x40023800
 800a1fc:	42470000 	.word	0x42470000
 800a200:	42470e80 	.word	0x42470e80
 800a204:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800a208:	f7ff fa0c 	bl	8009624 <HAL_GetTick>
 800a20c:	4602      	mov	r2, r0
 800a20e:	693b      	ldr	r3, [r7, #16]
 800a210:	1ad3      	subs	r3, r2, r3
 800a212:	2b02      	cmp	r3, #2
 800a214:	d901      	bls.n	800a21a <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 800a216:	2303      	movs	r3, #3
 800a218:	e106      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a21a:	4b85      	ldr	r3, [pc, #532]	; (800a430 <HAL_RCC_OscConfig+0x4e4>)
 800a21c:	681b      	ldr	r3, [r3, #0]
 800a21e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a222:	2b00      	cmp	r3, #0
 800a224:	d0f0      	beq.n	800a208 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a226:	687b      	ldr	r3, [r7, #4]
 800a228:	689b      	ldr	r3, [r3, #8]
 800a22a:	2b01      	cmp	r3, #1
 800a22c:	d106      	bne.n	800a23c <HAL_RCC_OscConfig+0x2f0>
 800a22e:	4b81      	ldr	r3, [pc, #516]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a230:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a232:	4a80      	ldr	r2, [pc, #512]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a234:	f043 0301 	orr.w	r3, r3, #1
 800a238:	6713      	str	r3, [r2, #112]	; 0x70
 800a23a:	e01c      	b.n	800a276 <HAL_RCC_OscConfig+0x32a>
 800a23c:	687b      	ldr	r3, [r7, #4]
 800a23e:	689b      	ldr	r3, [r3, #8]
 800a240:	2b05      	cmp	r3, #5
 800a242:	d10c      	bne.n	800a25e <HAL_RCC_OscConfig+0x312>
 800a244:	4b7b      	ldr	r3, [pc, #492]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a246:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a248:	4a7a      	ldr	r2, [pc, #488]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a24a:	f043 0304 	orr.w	r3, r3, #4
 800a24e:	6713      	str	r3, [r2, #112]	; 0x70
 800a250:	4b78      	ldr	r3, [pc, #480]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a252:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a254:	4a77      	ldr	r2, [pc, #476]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a256:	f043 0301 	orr.w	r3, r3, #1
 800a25a:	6713      	str	r3, [r2, #112]	; 0x70
 800a25c:	e00b      	b.n	800a276 <HAL_RCC_OscConfig+0x32a>
 800a25e:	4b75      	ldr	r3, [pc, #468]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a260:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a262:	4a74      	ldr	r2, [pc, #464]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a264:	f023 0301 	bic.w	r3, r3, #1
 800a268:	6713      	str	r3, [r2, #112]	; 0x70
 800a26a:	4b72      	ldr	r3, [pc, #456]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a26c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a26e:	4a71      	ldr	r2, [pc, #452]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a270:	f023 0304 	bic.w	r3, r3, #4
 800a274:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800a276:	687b      	ldr	r3, [r7, #4]
 800a278:	689b      	ldr	r3, [r3, #8]
 800a27a:	2b00      	cmp	r3, #0
 800a27c:	d015      	beq.n	800a2aa <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800a27e:	f7ff f9d1 	bl	8009624 <HAL_GetTick>
 800a282:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a284:	e00a      	b.n	800a29c <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a286:	f7ff f9cd 	bl	8009624 <HAL_GetTick>
 800a28a:	4602      	mov	r2, r0
 800a28c:	693b      	ldr	r3, [r7, #16]
 800a28e:	1ad3      	subs	r3, r2, r3
 800a290:	f241 3288 	movw	r2, #5000	; 0x1388
 800a294:	4293      	cmp	r3, r2
 800a296:	d901      	bls.n	800a29c <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 800a298:	2303      	movs	r3, #3
 800a29a:	e0c5      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a29c:	4b65      	ldr	r3, [pc, #404]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a29e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a2a0:	f003 0302 	and.w	r3, r3, #2
 800a2a4:	2b00      	cmp	r3, #0
 800a2a6:	d0ee      	beq.n	800a286 <HAL_RCC_OscConfig+0x33a>
 800a2a8:	e014      	b.n	800a2d4 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800a2aa:	f7ff f9bb 	bl	8009624 <HAL_GetTick>
 800a2ae:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a2b0:	e00a      	b.n	800a2c8 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a2b2:	f7ff f9b7 	bl	8009624 <HAL_GetTick>
 800a2b6:	4602      	mov	r2, r0
 800a2b8:	693b      	ldr	r3, [r7, #16]
 800a2ba:	1ad3      	subs	r3, r2, r3
 800a2bc:	f241 3288 	movw	r2, #5000	; 0x1388
 800a2c0:	4293      	cmp	r3, r2
 800a2c2:	d901      	bls.n	800a2c8 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 800a2c4:	2303      	movs	r3, #3
 800a2c6:	e0af      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a2c8:	4b5a      	ldr	r3, [pc, #360]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a2ca:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a2cc:	f003 0302 	and.w	r3, r3, #2
 800a2d0:	2b00      	cmp	r3, #0
 800a2d2:	d1ee      	bne.n	800a2b2 <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800a2d4:	7dfb      	ldrb	r3, [r7, #23]
 800a2d6:	2b01      	cmp	r3, #1
 800a2d8:	d105      	bne.n	800a2e6 <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800a2da:	4b56      	ldr	r3, [pc, #344]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a2dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a2de:	4a55      	ldr	r2, [pc, #340]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a2e0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a2e4:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800a2e6:	687b      	ldr	r3, [r7, #4]
 800a2e8:	699b      	ldr	r3, [r3, #24]
 800a2ea:	2b00      	cmp	r3, #0
 800a2ec:	f000 809b 	beq.w	800a426 <HAL_RCC_OscConfig+0x4da>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800a2f0:	4b50      	ldr	r3, [pc, #320]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a2f2:	689b      	ldr	r3, [r3, #8]
 800a2f4:	f003 030c 	and.w	r3, r3, #12
 800a2f8:	2b08      	cmp	r3, #8
 800a2fa:	d05c      	beq.n	800a3b6 <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a2fc:	687b      	ldr	r3, [r7, #4]
 800a2fe:	699b      	ldr	r3, [r3, #24]
 800a300:	2b02      	cmp	r3, #2
 800a302:	d141      	bne.n	800a388 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800a304:	4b4c      	ldr	r3, [pc, #304]	; (800a438 <HAL_RCC_OscConfig+0x4ec>)
 800a306:	2200      	movs	r2, #0
 800a308:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800a30a:	f7ff f98b 	bl	8009624 <HAL_GetTick>
 800a30e:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a310:	e008      	b.n	800a324 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a312:	f7ff f987 	bl	8009624 <HAL_GetTick>
 800a316:	4602      	mov	r2, r0
 800a318:	693b      	ldr	r3, [r7, #16]
 800a31a:	1ad3      	subs	r3, r2, r3
 800a31c:	2b02      	cmp	r3, #2
 800a31e:	d901      	bls.n	800a324 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 800a320:	2303      	movs	r3, #3
 800a322:	e081      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a324:	4b43      	ldr	r3, [pc, #268]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a326:	681b      	ldr	r3, [r3, #0]
 800a328:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a32c:	2b00      	cmp	r3, #0
 800a32e:	d1f0      	bne.n	800a312 <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800a330:	687b      	ldr	r3, [r7, #4]
 800a332:	69da      	ldr	r2, [r3, #28]
 800a334:	687b      	ldr	r3, [r7, #4]
 800a336:	6a1b      	ldr	r3, [r3, #32]
 800a338:	431a      	orrs	r2, r3
 800a33a:	687b      	ldr	r3, [r7, #4]
 800a33c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a33e:	019b      	lsls	r3, r3, #6
 800a340:	431a      	orrs	r2, r3
 800a342:	687b      	ldr	r3, [r7, #4]
 800a344:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a346:	085b      	lsrs	r3, r3, #1
 800a348:	3b01      	subs	r3, #1
 800a34a:	041b      	lsls	r3, r3, #16
 800a34c:	431a      	orrs	r2, r3
 800a34e:	687b      	ldr	r3, [r7, #4]
 800a350:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a352:	061b      	lsls	r3, r3, #24
 800a354:	4937      	ldr	r1, [pc, #220]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a356:	4313      	orrs	r3, r2
 800a358:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800a35a:	4b37      	ldr	r3, [pc, #220]	; (800a438 <HAL_RCC_OscConfig+0x4ec>)
 800a35c:	2201      	movs	r2, #1
 800a35e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800a360:	f7ff f960 	bl	8009624 <HAL_GetTick>
 800a364:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a366:	e008      	b.n	800a37a <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a368:	f7ff f95c 	bl	8009624 <HAL_GetTick>
 800a36c:	4602      	mov	r2, r0
 800a36e:	693b      	ldr	r3, [r7, #16]
 800a370:	1ad3      	subs	r3, r2, r3
 800a372:	2b02      	cmp	r3, #2
 800a374:	d901      	bls.n	800a37a <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 800a376:	2303      	movs	r3, #3
 800a378:	e056      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a37a:	4b2e      	ldr	r3, [pc, #184]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a37c:	681b      	ldr	r3, [r3, #0]
 800a37e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a382:	2b00      	cmp	r3, #0
 800a384:	d0f0      	beq.n	800a368 <HAL_RCC_OscConfig+0x41c>
 800a386:	e04e      	b.n	800a426 <HAL_RCC_OscConfig+0x4da>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800a388:	4b2b      	ldr	r3, [pc, #172]	; (800a438 <HAL_RCC_OscConfig+0x4ec>)
 800a38a:	2200      	movs	r2, #0
 800a38c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800a38e:	f7ff f949 	bl	8009624 <HAL_GetTick>
 800a392:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a394:	e008      	b.n	800a3a8 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a396:	f7ff f945 	bl	8009624 <HAL_GetTick>
 800a39a:	4602      	mov	r2, r0
 800a39c:	693b      	ldr	r3, [r7, #16]
 800a39e:	1ad3      	subs	r3, r2, r3
 800a3a0:	2b02      	cmp	r3, #2
 800a3a2:	d901      	bls.n	800a3a8 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 800a3a4:	2303      	movs	r3, #3
 800a3a6:	e03f      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a3a8:	4b22      	ldr	r3, [pc, #136]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a3aa:	681b      	ldr	r3, [r3, #0]
 800a3ac:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a3b0:	2b00      	cmp	r3, #0
 800a3b2:	d1f0      	bne.n	800a396 <HAL_RCC_OscConfig+0x44a>
 800a3b4:	e037      	b.n	800a426 <HAL_RCC_OscConfig+0x4da>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800a3b6:	687b      	ldr	r3, [r7, #4]
 800a3b8:	699b      	ldr	r3, [r3, #24]
 800a3ba:	2b01      	cmp	r3, #1
 800a3bc:	d101      	bne.n	800a3c2 <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 800a3be:	2301      	movs	r3, #1
 800a3c0:	e032      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 800a3c2:	4b1c      	ldr	r3, [pc, #112]	; (800a434 <HAL_RCC_OscConfig+0x4e8>)
 800a3c4:	685b      	ldr	r3, [r3, #4]
 800a3c6:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a3c8:	687b      	ldr	r3, [r7, #4]
 800a3ca:	699b      	ldr	r3, [r3, #24]
 800a3cc:	2b01      	cmp	r3, #1
 800a3ce:	d028      	beq.n	800a422 <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a3d0:	68fb      	ldr	r3, [r7, #12]
 800a3d2:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800a3d6:	687b      	ldr	r3, [r7, #4]
 800a3d8:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a3da:	429a      	cmp	r2, r3
 800a3dc:	d121      	bne.n	800a422 <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a3de:	68fb      	ldr	r3, [r7, #12]
 800a3e0:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800a3e4:	687b      	ldr	r3, [r7, #4]
 800a3e6:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a3e8:	429a      	cmp	r2, r3
 800a3ea:	d11a      	bne.n	800a422 <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a3ec:	68fa      	ldr	r2, [r7, #12]
 800a3ee:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800a3f2:	4013      	ands	r3, r2
 800a3f4:	687a      	ldr	r2, [r7, #4]
 800a3f6:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800a3f8:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a3fa:	4293      	cmp	r3, r2
 800a3fc:	d111      	bne.n	800a422 <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a3fe:	68fb      	ldr	r3, [r7, #12]
 800a400:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800a404:	687b      	ldr	r3, [r7, #4]
 800a406:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a408:	085b      	lsrs	r3, r3, #1
 800a40a:	3b01      	subs	r3, #1
 800a40c:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a40e:	429a      	cmp	r2, r3
 800a410:	d107      	bne.n	800a422 <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800a412:	68fb      	ldr	r3, [r7, #12]
 800a414:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a41c:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a41e:	429a      	cmp	r2, r3
 800a420:	d001      	beq.n	800a426 <HAL_RCC_OscConfig+0x4da>
#endif
        {
          return HAL_ERROR;
 800a422:	2301      	movs	r3, #1
 800a424:	e000      	b.n	800a428 <HAL_RCC_OscConfig+0x4dc>
        }
      }
    }
  }
  return HAL_OK;
 800a426:	2300      	movs	r3, #0
}
 800a428:	4618      	mov	r0, r3
 800a42a:	3718      	adds	r7, #24
 800a42c:	46bd      	mov	sp, r7
 800a42e:	bd80      	pop	{r7, pc}
 800a430:	40007000 	.word	0x40007000
 800a434:	40023800 	.word	0x40023800
 800a438:	42470060 	.word	0x42470060

0800a43c <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 800a43c:	b580      	push	{r7, lr}
 800a43e:	b084      	sub	sp, #16
 800a440:	af00      	add	r7, sp, #0
 800a442:	6078      	str	r0, [r7, #4]
 800a444:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800a446:	687b      	ldr	r3, [r7, #4]
 800a448:	2b00      	cmp	r3, #0
 800a44a:	d101      	bne.n	800a450 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 800a44c:	2301      	movs	r3, #1
 800a44e:	e0cc      	b.n	800a5ea <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800a450:	4b68      	ldr	r3, [pc, #416]	; (800a5f4 <HAL_RCC_ClockConfig+0x1b8>)
 800a452:	681b      	ldr	r3, [r3, #0]
 800a454:	f003 0307 	and.w	r3, r3, #7
 800a458:	683a      	ldr	r2, [r7, #0]
 800a45a:	429a      	cmp	r2, r3
 800a45c:	d90c      	bls.n	800a478 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a45e:	4b65      	ldr	r3, [pc, #404]	; (800a5f4 <HAL_RCC_ClockConfig+0x1b8>)
 800a460:	683a      	ldr	r2, [r7, #0]
 800a462:	b2d2      	uxtb	r2, r2
 800a464:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800a466:	4b63      	ldr	r3, [pc, #396]	; (800a5f4 <HAL_RCC_ClockConfig+0x1b8>)
 800a468:	681b      	ldr	r3, [r3, #0]
 800a46a:	f003 0307 	and.w	r3, r3, #7
 800a46e:	683a      	ldr	r2, [r7, #0]
 800a470:	429a      	cmp	r2, r3
 800a472:	d001      	beq.n	800a478 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800a474:	2301      	movs	r3, #1
 800a476:	e0b8      	b.n	800a5ea <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800a478:	687b      	ldr	r3, [r7, #4]
 800a47a:	681b      	ldr	r3, [r3, #0]
 800a47c:	f003 0302 	and.w	r3, r3, #2
 800a480:	2b00      	cmp	r3, #0
 800a482:	d020      	beq.n	800a4c6 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a484:	687b      	ldr	r3, [r7, #4]
 800a486:	681b      	ldr	r3, [r3, #0]
 800a488:	f003 0304 	and.w	r3, r3, #4
 800a48c:	2b00      	cmp	r3, #0
 800a48e:	d005      	beq.n	800a49c <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800a490:	4b59      	ldr	r3, [pc, #356]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a492:	689b      	ldr	r3, [r3, #8]
 800a494:	4a58      	ldr	r2, [pc, #352]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a496:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800a49a:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a49c:	687b      	ldr	r3, [r7, #4]
 800a49e:	681b      	ldr	r3, [r3, #0]
 800a4a0:	f003 0308 	and.w	r3, r3, #8
 800a4a4:	2b00      	cmp	r3, #0
 800a4a6:	d005      	beq.n	800a4b4 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800a4a8:	4b53      	ldr	r3, [pc, #332]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a4aa:	689b      	ldr	r3, [r3, #8]
 800a4ac:	4a52      	ldr	r2, [pc, #328]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a4ae:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800a4b2:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800a4b4:	4b50      	ldr	r3, [pc, #320]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a4b6:	689b      	ldr	r3, [r3, #8]
 800a4b8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800a4bc:	687b      	ldr	r3, [r7, #4]
 800a4be:	689b      	ldr	r3, [r3, #8]
 800a4c0:	494d      	ldr	r1, [pc, #308]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a4c2:	4313      	orrs	r3, r2
 800a4c4:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800a4c6:	687b      	ldr	r3, [r7, #4]
 800a4c8:	681b      	ldr	r3, [r3, #0]
 800a4ca:	f003 0301 	and.w	r3, r3, #1
 800a4ce:	2b00      	cmp	r3, #0
 800a4d0:	d044      	beq.n	800a55c <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800a4d2:	687b      	ldr	r3, [r7, #4]
 800a4d4:	685b      	ldr	r3, [r3, #4]
 800a4d6:	2b01      	cmp	r3, #1
 800a4d8:	d107      	bne.n	800a4ea <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a4da:	4b47      	ldr	r3, [pc, #284]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a4dc:	681b      	ldr	r3, [r3, #0]
 800a4de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800a4e2:	2b00      	cmp	r3, #0
 800a4e4:	d119      	bne.n	800a51a <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800a4e6:	2301      	movs	r3, #1
 800a4e8:	e07f      	b.n	800a5ea <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	685b      	ldr	r3, [r3, #4]
 800a4ee:	2b02      	cmp	r3, #2
 800a4f0:	d003      	beq.n	800a4fa <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 800a4f2:	687b      	ldr	r3, [r7, #4]
 800a4f4:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800a4f6:	2b03      	cmp	r3, #3
 800a4f8:	d107      	bne.n	800a50a <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a4fa:	4b3f      	ldr	r3, [pc, #252]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a4fc:	681b      	ldr	r3, [r3, #0]
 800a4fe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a502:	2b00      	cmp	r3, #0
 800a504:	d109      	bne.n	800a51a <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800a506:	2301      	movs	r3, #1
 800a508:	e06f      	b.n	800a5ea <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a50a:	4b3b      	ldr	r3, [pc, #236]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a50c:	681b      	ldr	r3, [r3, #0]
 800a50e:	f003 0302 	and.w	r3, r3, #2
 800a512:	2b00      	cmp	r3, #0
 800a514:	d101      	bne.n	800a51a <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800a516:	2301      	movs	r3, #1
 800a518:	e067      	b.n	800a5ea <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800a51a:	4b37      	ldr	r3, [pc, #220]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a51c:	689b      	ldr	r3, [r3, #8]
 800a51e:	f023 0203 	bic.w	r2, r3, #3
 800a522:	687b      	ldr	r3, [r7, #4]
 800a524:	685b      	ldr	r3, [r3, #4]
 800a526:	4934      	ldr	r1, [pc, #208]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a528:	4313      	orrs	r3, r2
 800a52a:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 800a52c:	f7ff f87a 	bl	8009624 <HAL_GetTick>
 800a530:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a532:	e00a      	b.n	800a54a <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a534:	f7ff f876 	bl	8009624 <HAL_GetTick>
 800a538:	4602      	mov	r2, r0
 800a53a:	68fb      	ldr	r3, [r7, #12]
 800a53c:	1ad3      	subs	r3, r2, r3
 800a53e:	f241 3288 	movw	r2, #5000	; 0x1388
 800a542:	4293      	cmp	r3, r2
 800a544:	d901      	bls.n	800a54a <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800a546:	2303      	movs	r3, #3
 800a548:	e04f      	b.n	800a5ea <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a54a:	4b2b      	ldr	r3, [pc, #172]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a54c:	689b      	ldr	r3, [r3, #8]
 800a54e:	f003 020c 	and.w	r2, r3, #12
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	685b      	ldr	r3, [r3, #4]
 800a556:	009b      	lsls	r3, r3, #2
 800a558:	429a      	cmp	r2, r3
 800a55a:	d1eb      	bne.n	800a534 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800a55c:	4b25      	ldr	r3, [pc, #148]	; (800a5f4 <HAL_RCC_ClockConfig+0x1b8>)
 800a55e:	681b      	ldr	r3, [r3, #0]
 800a560:	f003 0307 	and.w	r3, r3, #7
 800a564:	683a      	ldr	r2, [r7, #0]
 800a566:	429a      	cmp	r2, r3
 800a568:	d20c      	bcs.n	800a584 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a56a:	4b22      	ldr	r3, [pc, #136]	; (800a5f4 <HAL_RCC_ClockConfig+0x1b8>)
 800a56c:	683a      	ldr	r2, [r7, #0]
 800a56e:	b2d2      	uxtb	r2, r2
 800a570:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800a572:	4b20      	ldr	r3, [pc, #128]	; (800a5f4 <HAL_RCC_ClockConfig+0x1b8>)
 800a574:	681b      	ldr	r3, [r3, #0]
 800a576:	f003 0307 	and.w	r3, r3, #7
 800a57a:	683a      	ldr	r2, [r7, #0]
 800a57c:	429a      	cmp	r2, r3
 800a57e:	d001      	beq.n	800a584 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 800a580:	2301      	movs	r3, #1
 800a582:	e032      	b.n	800a5ea <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a584:	687b      	ldr	r3, [r7, #4]
 800a586:	681b      	ldr	r3, [r3, #0]
 800a588:	f003 0304 	and.w	r3, r3, #4
 800a58c:	2b00      	cmp	r3, #0
 800a58e:	d008      	beq.n	800a5a2 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800a590:	4b19      	ldr	r3, [pc, #100]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a592:	689b      	ldr	r3, [r3, #8]
 800a594:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800a598:	687b      	ldr	r3, [r7, #4]
 800a59a:	68db      	ldr	r3, [r3, #12]
 800a59c:	4916      	ldr	r1, [pc, #88]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a59e:	4313      	orrs	r3, r2
 800a5a0:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a5a2:	687b      	ldr	r3, [r7, #4]
 800a5a4:	681b      	ldr	r3, [r3, #0]
 800a5a6:	f003 0308 	and.w	r3, r3, #8
 800a5aa:	2b00      	cmp	r3, #0
 800a5ac:	d009      	beq.n	800a5c2 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800a5ae:	4b12      	ldr	r3, [pc, #72]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a5b0:	689b      	ldr	r3, [r3, #8]
 800a5b2:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800a5b6:	687b      	ldr	r3, [r7, #4]
 800a5b8:	691b      	ldr	r3, [r3, #16]
 800a5ba:	00db      	lsls	r3, r3, #3
 800a5bc:	490e      	ldr	r1, [pc, #56]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a5be:	4313      	orrs	r3, r2
 800a5c0:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a5c2:	f000 f821 	bl	800a608 <HAL_RCC_GetSysClockFreq>
 800a5c6:	4602      	mov	r2, r0
 800a5c8:	4b0b      	ldr	r3, [pc, #44]	; (800a5f8 <HAL_RCC_ClockConfig+0x1bc>)
 800a5ca:	689b      	ldr	r3, [r3, #8]
 800a5cc:	091b      	lsrs	r3, r3, #4
 800a5ce:	f003 030f 	and.w	r3, r3, #15
 800a5d2:	490a      	ldr	r1, [pc, #40]	; (800a5fc <HAL_RCC_ClockConfig+0x1c0>)
 800a5d4:	5ccb      	ldrb	r3, [r1, r3]
 800a5d6:	fa22 f303 	lsr.w	r3, r2, r3
 800a5da:	4a09      	ldr	r2, [pc, #36]	; (800a600 <HAL_RCC_ClockConfig+0x1c4>)
 800a5dc:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 800a5de:	4b09      	ldr	r3, [pc, #36]	; (800a604 <HAL_RCC_ClockConfig+0x1c8>)
 800a5e0:	681b      	ldr	r3, [r3, #0]
 800a5e2:	4618      	mov	r0, r3
 800a5e4:	f7fe ffda 	bl	800959c <HAL_InitTick>

  return HAL_OK;
 800a5e8:	2300      	movs	r3, #0
}
 800a5ea:	4618      	mov	r0, r3
 800a5ec:	3710      	adds	r7, #16
 800a5ee:	46bd      	mov	sp, r7
 800a5f0:	bd80      	pop	{r7, pc}
 800a5f2:	bf00      	nop
 800a5f4:	40023c00 	.word	0x40023c00
 800a5f8:	40023800 	.word	0x40023800
 800a5fc:	080137a8 	.word	0x080137a8
 800a600:	20000000 	.word	0x20000000
 800a604:	20000004 	.word	0x20000004

0800a608 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800a608:	b5b0      	push	{r4, r5, r7, lr}
 800a60a:	b084      	sub	sp, #16
 800a60c:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 800a60e:	2100      	movs	r1, #0
 800a610:	6079      	str	r1, [r7, #4]
 800a612:	2100      	movs	r1, #0
 800a614:	60f9      	str	r1, [r7, #12]
 800a616:	2100      	movs	r1, #0
 800a618:	6039      	str	r1, [r7, #0]
  uint32_t sysclockfreq = 0U;
 800a61a:	2100      	movs	r1, #0
 800a61c:	60b9      	str	r1, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a61e:	4952      	ldr	r1, [pc, #328]	; (800a768 <HAL_RCC_GetSysClockFreq+0x160>)
 800a620:	6889      	ldr	r1, [r1, #8]
 800a622:	f001 010c 	and.w	r1, r1, #12
 800a626:	2908      	cmp	r1, #8
 800a628:	d00d      	beq.n	800a646 <HAL_RCC_GetSysClockFreq+0x3e>
 800a62a:	2908      	cmp	r1, #8
 800a62c:	f200 8094 	bhi.w	800a758 <HAL_RCC_GetSysClockFreq+0x150>
 800a630:	2900      	cmp	r1, #0
 800a632:	d002      	beq.n	800a63a <HAL_RCC_GetSysClockFreq+0x32>
 800a634:	2904      	cmp	r1, #4
 800a636:	d003      	beq.n	800a640 <HAL_RCC_GetSysClockFreq+0x38>
 800a638:	e08e      	b.n	800a758 <HAL_RCC_GetSysClockFreq+0x150>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800a63a:	4b4c      	ldr	r3, [pc, #304]	; (800a76c <HAL_RCC_GetSysClockFreq+0x164>)
 800a63c:	60bb      	str	r3, [r7, #8]
       break;
 800a63e:	e08e      	b.n	800a75e <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 800a640:	4b4b      	ldr	r3, [pc, #300]	; (800a770 <HAL_RCC_GetSysClockFreq+0x168>)
 800a642:	60bb      	str	r3, [r7, #8]
      break;
 800a644:	e08b      	b.n	800a75e <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a646:	4948      	ldr	r1, [pc, #288]	; (800a768 <HAL_RCC_GetSysClockFreq+0x160>)
 800a648:	6849      	ldr	r1, [r1, #4]
 800a64a:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 800a64e:	6079      	str	r1, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a650:	4945      	ldr	r1, [pc, #276]	; (800a768 <HAL_RCC_GetSysClockFreq+0x160>)
 800a652:	6849      	ldr	r1, [r1, #4]
 800a654:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 800a658:	2900      	cmp	r1, #0
 800a65a:	d024      	beq.n	800a6a6 <HAL_RCC_GetSysClockFreq+0x9e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a65c:	4942      	ldr	r1, [pc, #264]	; (800a768 <HAL_RCC_GetSysClockFreq+0x160>)
 800a65e:	6849      	ldr	r1, [r1, #4]
 800a660:	0989      	lsrs	r1, r1, #6
 800a662:	4608      	mov	r0, r1
 800a664:	f04f 0100 	mov.w	r1, #0
 800a668:	f240 14ff 	movw	r4, #511	; 0x1ff
 800a66c:	f04f 0500 	mov.w	r5, #0
 800a670:	ea00 0204 	and.w	r2, r0, r4
 800a674:	ea01 0305 	and.w	r3, r1, r5
 800a678:	493d      	ldr	r1, [pc, #244]	; (800a770 <HAL_RCC_GetSysClockFreq+0x168>)
 800a67a:	fb01 f003 	mul.w	r0, r1, r3
 800a67e:	2100      	movs	r1, #0
 800a680:	fb01 f102 	mul.w	r1, r1, r2
 800a684:	1844      	adds	r4, r0, r1
 800a686:	493a      	ldr	r1, [pc, #232]	; (800a770 <HAL_RCC_GetSysClockFreq+0x168>)
 800a688:	fba2 0101 	umull	r0, r1, r2, r1
 800a68c:	1863      	adds	r3, r4, r1
 800a68e:	4619      	mov	r1, r3
 800a690:	687b      	ldr	r3, [r7, #4]
 800a692:	461a      	mov	r2, r3
 800a694:	f04f 0300 	mov.w	r3, #0
 800a698:	f7fd f8e8 	bl	800786c <__aeabi_uldivmod>
 800a69c:	4602      	mov	r2, r0
 800a69e:	460b      	mov	r3, r1
 800a6a0:	4613      	mov	r3, r2
 800a6a2:	60fb      	str	r3, [r7, #12]
 800a6a4:	e04a      	b.n	800a73c <HAL_RCC_GetSysClockFreq+0x134>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a6a6:	4b30      	ldr	r3, [pc, #192]	; (800a768 <HAL_RCC_GetSysClockFreq+0x160>)
 800a6a8:	685b      	ldr	r3, [r3, #4]
 800a6aa:	099b      	lsrs	r3, r3, #6
 800a6ac:	461a      	mov	r2, r3
 800a6ae:	f04f 0300 	mov.w	r3, #0
 800a6b2:	f240 10ff 	movw	r0, #511	; 0x1ff
 800a6b6:	f04f 0100 	mov.w	r1, #0
 800a6ba:	ea02 0400 	and.w	r4, r2, r0
 800a6be:	ea03 0501 	and.w	r5, r3, r1
 800a6c2:	4620      	mov	r0, r4
 800a6c4:	4629      	mov	r1, r5
 800a6c6:	f04f 0200 	mov.w	r2, #0
 800a6ca:	f04f 0300 	mov.w	r3, #0
 800a6ce:	014b      	lsls	r3, r1, #5
 800a6d0:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 800a6d4:	0142      	lsls	r2, r0, #5
 800a6d6:	4610      	mov	r0, r2
 800a6d8:	4619      	mov	r1, r3
 800a6da:	1b00      	subs	r0, r0, r4
 800a6dc:	eb61 0105 	sbc.w	r1, r1, r5
 800a6e0:	f04f 0200 	mov.w	r2, #0
 800a6e4:	f04f 0300 	mov.w	r3, #0
 800a6e8:	018b      	lsls	r3, r1, #6
 800a6ea:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 800a6ee:	0182      	lsls	r2, r0, #6
 800a6f0:	1a12      	subs	r2, r2, r0
 800a6f2:	eb63 0301 	sbc.w	r3, r3, r1
 800a6f6:	f04f 0000 	mov.w	r0, #0
 800a6fa:	f04f 0100 	mov.w	r1, #0
 800a6fe:	00d9      	lsls	r1, r3, #3
 800a700:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800a704:	00d0      	lsls	r0, r2, #3
 800a706:	4602      	mov	r2, r0
 800a708:	460b      	mov	r3, r1
 800a70a:	1912      	adds	r2, r2, r4
 800a70c:	eb45 0303 	adc.w	r3, r5, r3
 800a710:	f04f 0000 	mov.w	r0, #0
 800a714:	f04f 0100 	mov.w	r1, #0
 800a718:	0299      	lsls	r1, r3, #10
 800a71a:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 800a71e:	0290      	lsls	r0, r2, #10
 800a720:	4602      	mov	r2, r0
 800a722:	460b      	mov	r3, r1
 800a724:	4610      	mov	r0, r2
 800a726:	4619      	mov	r1, r3
 800a728:	687b      	ldr	r3, [r7, #4]
 800a72a:	461a      	mov	r2, r3
 800a72c:	f04f 0300 	mov.w	r3, #0
 800a730:	f7fd f89c 	bl	800786c <__aeabi_uldivmod>
 800a734:	4602      	mov	r2, r0
 800a736:	460b      	mov	r3, r1
 800a738:	4613      	mov	r3, r2
 800a73a:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800a73c:	4b0a      	ldr	r3, [pc, #40]	; (800a768 <HAL_RCC_GetSysClockFreq+0x160>)
 800a73e:	685b      	ldr	r3, [r3, #4]
 800a740:	0c1b      	lsrs	r3, r3, #16
 800a742:	f003 0303 	and.w	r3, r3, #3
 800a746:	3301      	adds	r3, #1
 800a748:	005b      	lsls	r3, r3, #1
 800a74a:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 800a74c:	68fa      	ldr	r2, [r7, #12]
 800a74e:	683b      	ldr	r3, [r7, #0]
 800a750:	fbb2 f3f3 	udiv	r3, r2, r3
 800a754:	60bb      	str	r3, [r7, #8]
      break;
 800a756:	e002      	b.n	800a75e <HAL_RCC_GetSysClockFreq+0x156>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 800a758:	4b04      	ldr	r3, [pc, #16]	; (800a76c <HAL_RCC_GetSysClockFreq+0x164>)
 800a75a:	60bb      	str	r3, [r7, #8]
      break;
 800a75c:	bf00      	nop
    }
  }
  return sysclockfreq;
 800a75e:	68bb      	ldr	r3, [r7, #8]
}
 800a760:	4618      	mov	r0, r3
 800a762:	3710      	adds	r7, #16
 800a764:	46bd      	mov	sp, r7
 800a766:	bdb0      	pop	{r4, r5, r7, pc}
 800a768:	40023800 	.word	0x40023800
 800a76c:	00f42400 	.word	0x00f42400
 800a770:	017d7840 	.word	0x017d7840

0800a774 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 800a774:	b480      	push	{r7}
 800a776:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 800a778:	4b03      	ldr	r3, [pc, #12]	; (800a788 <HAL_RCC_GetHCLKFreq+0x14>)
 800a77a:	681b      	ldr	r3, [r3, #0]
}
 800a77c:	4618      	mov	r0, r3
 800a77e:	46bd      	mov	sp, r7
 800a780:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a784:	4770      	bx	lr
 800a786:	bf00      	nop
 800a788:	20000000 	.word	0x20000000

0800a78c <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 800a78c:	b580      	push	{r7, lr}
 800a78e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800a790:	f7ff fff0 	bl	800a774 <HAL_RCC_GetHCLKFreq>
 800a794:	4602      	mov	r2, r0
 800a796:	4b05      	ldr	r3, [pc, #20]	; (800a7ac <HAL_RCC_GetPCLK1Freq+0x20>)
 800a798:	689b      	ldr	r3, [r3, #8]
 800a79a:	0a9b      	lsrs	r3, r3, #10
 800a79c:	f003 0307 	and.w	r3, r3, #7
 800a7a0:	4903      	ldr	r1, [pc, #12]	; (800a7b0 <HAL_RCC_GetPCLK1Freq+0x24>)
 800a7a2:	5ccb      	ldrb	r3, [r1, r3]
 800a7a4:	fa22 f303 	lsr.w	r3, r2, r3
}
 800a7a8:	4618      	mov	r0, r3
 800a7aa:	bd80      	pop	{r7, pc}
 800a7ac:	40023800 	.word	0x40023800
 800a7b0:	080137b8 	.word	0x080137b8

0800a7b4 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 800a7b4:	b580      	push	{r7, lr}
 800a7b6:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800a7b8:	f7ff ffdc 	bl	800a774 <HAL_RCC_GetHCLKFreq>
 800a7bc:	4602      	mov	r2, r0
 800a7be:	4b05      	ldr	r3, [pc, #20]	; (800a7d4 <HAL_RCC_GetPCLK2Freq+0x20>)
 800a7c0:	689b      	ldr	r3, [r3, #8]
 800a7c2:	0b5b      	lsrs	r3, r3, #13
 800a7c4:	f003 0307 	and.w	r3, r3, #7
 800a7c8:	4903      	ldr	r1, [pc, #12]	; (800a7d8 <HAL_RCC_GetPCLK2Freq+0x24>)
 800a7ca:	5ccb      	ldrb	r3, [r1, r3]
 800a7cc:	fa22 f303 	lsr.w	r3, r2, r3
}
 800a7d0:	4618      	mov	r0, r3
 800a7d2:	bd80      	pop	{r7, pc}
 800a7d4:	40023800 	.word	0x40023800
 800a7d8:	080137b8 	.word	0x080137b8

0800a7dc <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 800a7dc:	b580      	push	{r7, lr}
 800a7de:	b082      	sub	sp, #8
 800a7e0:	af00      	add	r7, sp, #0
 800a7e2:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800a7e4:	687b      	ldr	r3, [r7, #4]
 800a7e6:	2b00      	cmp	r3, #0
 800a7e8:	d101      	bne.n	800a7ee <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 800a7ea:	2301      	movs	r3, #1
 800a7ec:	e041      	b.n	800a872 <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800a7ee:	687b      	ldr	r3, [r7, #4]
 800a7f0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a7f4:	b2db      	uxtb	r3, r3
 800a7f6:	2b00      	cmp	r3, #0
 800a7f8:	d106      	bne.n	800a808 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800a7fa:	687b      	ldr	r3, [r7, #4]
 800a7fc:	2200      	movs	r2, #0
 800a7fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800a802:	6878      	ldr	r0, [r7, #4]
 800a804:	f7fe fd64 	bl	80092d0 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800a808:	687b      	ldr	r3, [r7, #4]
 800a80a:	2202      	movs	r2, #2
 800a80c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800a810:	687b      	ldr	r3, [r7, #4]
 800a812:	681a      	ldr	r2, [r3, #0]
 800a814:	687b      	ldr	r3, [r7, #4]
 800a816:	3304      	adds	r3, #4
 800a818:	4619      	mov	r1, r3
 800a81a:	4610      	mov	r0, r2
 800a81c:	f000 fc7a 	bl	800b114 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800a820:	687b      	ldr	r3, [r7, #4]
 800a822:	2201      	movs	r2, #1
 800a824:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a828:	687b      	ldr	r3, [r7, #4]
 800a82a:	2201      	movs	r2, #1
 800a82c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a830:	687b      	ldr	r3, [r7, #4]
 800a832:	2201      	movs	r2, #1
 800a834:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a838:	687b      	ldr	r3, [r7, #4]
 800a83a:	2201      	movs	r2, #1
 800a83c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a840:	687b      	ldr	r3, [r7, #4]
 800a842:	2201      	movs	r2, #1
 800a844:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	2201      	movs	r2, #1
 800a84c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a850:	687b      	ldr	r3, [r7, #4]
 800a852:	2201      	movs	r2, #1
 800a854:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a858:	687b      	ldr	r3, [r7, #4]
 800a85a:	2201      	movs	r2, #1
 800a85c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a860:	687b      	ldr	r3, [r7, #4]
 800a862:	2201      	movs	r2, #1
 800a864:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800a868:	687b      	ldr	r3, [r7, #4]
 800a86a:	2201      	movs	r2, #1
 800a86c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 800a870:	2300      	movs	r3, #0
}
 800a872:	4618      	mov	r0, r3
 800a874:	3708      	adds	r7, #8
 800a876:	46bd      	mov	sp, r7
 800a878:	bd80      	pop	{r7, pc}
	...

0800a87c <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 800a87c:	b480      	push	{r7}
 800a87e:	b085      	sub	sp, #20
 800a880:	af00      	add	r7, sp, #0
 800a882:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800a884:	687b      	ldr	r3, [r7, #4]
 800a886:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a88a:	b2db      	uxtb	r3, r3
 800a88c:	2b01      	cmp	r3, #1
 800a88e:	d001      	beq.n	800a894 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 800a890:	2301      	movs	r3, #1
 800a892:	e04e      	b.n	800a932 <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800a894:	687b      	ldr	r3, [r7, #4]
 800a896:	2202      	movs	r2, #2
 800a898:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800a89c:	687b      	ldr	r3, [r7, #4]
 800a89e:	681b      	ldr	r3, [r3, #0]
 800a8a0:	68da      	ldr	r2, [r3, #12]
 800a8a2:	687b      	ldr	r3, [r7, #4]
 800a8a4:	681b      	ldr	r3, [r3, #0]
 800a8a6:	f042 0201 	orr.w	r2, r2, #1
 800a8aa:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a8ac:	687b      	ldr	r3, [r7, #4]
 800a8ae:	681b      	ldr	r3, [r3, #0]
 800a8b0:	4a23      	ldr	r2, [pc, #140]	; (800a940 <HAL_TIM_Base_Start_IT+0xc4>)
 800a8b2:	4293      	cmp	r3, r2
 800a8b4:	d022      	beq.n	800a8fc <HAL_TIM_Base_Start_IT+0x80>
 800a8b6:	687b      	ldr	r3, [r7, #4]
 800a8b8:	681b      	ldr	r3, [r3, #0]
 800a8ba:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a8be:	d01d      	beq.n	800a8fc <HAL_TIM_Base_Start_IT+0x80>
 800a8c0:	687b      	ldr	r3, [r7, #4]
 800a8c2:	681b      	ldr	r3, [r3, #0]
 800a8c4:	4a1f      	ldr	r2, [pc, #124]	; (800a944 <HAL_TIM_Base_Start_IT+0xc8>)
 800a8c6:	4293      	cmp	r3, r2
 800a8c8:	d018      	beq.n	800a8fc <HAL_TIM_Base_Start_IT+0x80>
 800a8ca:	687b      	ldr	r3, [r7, #4]
 800a8cc:	681b      	ldr	r3, [r3, #0]
 800a8ce:	4a1e      	ldr	r2, [pc, #120]	; (800a948 <HAL_TIM_Base_Start_IT+0xcc>)
 800a8d0:	4293      	cmp	r3, r2
 800a8d2:	d013      	beq.n	800a8fc <HAL_TIM_Base_Start_IT+0x80>
 800a8d4:	687b      	ldr	r3, [r7, #4]
 800a8d6:	681b      	ldr	r3, [r3, #0]
 800a8d8:	4a1c      	ldr	r2, [pc, #112]	; (800a94c <HAL_TIM_Base_Start_IT+0xd0>)
 800a8da:	4293      	cmp	r3, r2
 800a8dc:	d00e      	beq.n	800a8fc <HAL_TIM_Base_Start_IT+0x80>
 800a8de:	687b      	ldr	r3, [r7, #4]
 800a8e0:	681b      	ldr	r3, [r3, #0]
 800a8e2:	4a1b      	ldr	r2, [pc, #108]	; (800a950 <HAL_TIM_Base_Start_IT+0xd4>)
 800a8e4:	4293      	cmp	r3, r2
 800a8e6:	d009      	beq.n	800a8fc <HAL_TIM_Base_Start_IT+0x80>
 800a8e8:	687b      	ldr	r3, [r7, #4]
 800a8ea:	681b      	ldr	r3, [r3, #0]
 800a8ec:	4a19      	ldr	r2, [pc, #100]	; (800a954 <HAL_TIM_Base_Start_IT+0xd8>)
 800a8ee:	4293      	cmp	r3, r2
 800a8f0:	d004      	beq.n	800a8fc <HAL_TIM_Base_Start_IT+0x80>
 800a8f2:	687b      	ldr	r3, [r7, #4]
 800a8f4:	681b      	ldr	r3, [r3, #0]
 800a8f6:	4a18      	ldr	r2, [pc, #96]	; (800a958 <HAL_TIM_Base_Start_IT+0xdc>)
 800a8f8:	4293      	cmp	r3, r2
 800a8fa:	d111      	bne.n	800a920 <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800a8fc:	687b      	ldr	r3, [r7, #4]
 800a8fe:	681b      	ldr	r3, [r3, #0]
 800a900:	689b      	ldr	r3, [r3, #8]
 800a902:	f003 0307 	and.w	r3, r3, #7
 800a906:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a908:	68fb      	ldr	r3, [r7, #12]
 800a90a:	2b06      	cmp	r3, #6
 800a90c:	d010      	beq.n	800a930 <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 800a90e:	687b      	ldr	r3, [r7, #4]
 800a910:	681b      	ldr	r3, [r3, #0]
 800a912:	681a      	ldr	r2, [r3, #0]
 800a914:	687b      	ldr	r3, [r7, #4]
 800a916:	681b      	ldr	r3, [r3, #0]
 800a918:	f042 0201 	orr.w	r2, r2, #1
 800a91c:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a91e:	e007      	b.n	800a930 <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800a920:	687b      	ldr	r3, [r7, #4]
 800a922:	681b      	ldr	r3, [r3, #0]
 800a924:	681a      	ldr	r2, [r3, #0]
 800a926:	687b      	ldr	r3, [r7, #4]
 800a928:	681b      	ldr	r3, [r3, #0]
 800a92a:	f042 0201 	orr.w	r2, r2, #1
 800a92e:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800a930:	2300      	movs	r3, #0
}
 800a932:	4618      	mov	r0, r3
 800a934:	3714      	adds	r7, #20
 800a936:	46bd      	mov	sp, r7
 800a938:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a93c:	4770      	bx	lr
 800a93e:	bf00      	nop
 800a940:	40010000 	.word	0x40010000
 800a944:	40000400 	.word	0x40000400
 800a948:	40000800 	.word	0x40000800
 800a94c:	40000c00 	.word	0x40000c00
 800a950:	40010400 	.word	0x40010400
 800a954:	40014000 	.word	0x40014000
 800a958:	40001800 	.word	0x40001800

0800a95c <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 800a95c:	b580      	push	{r7, lr}
 800a95e:	b082      	sub	sp, #8
 800a960:	af00      	add	r7, sp, #0
 800a962:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800a964:	687b      	ldr	r3, [r7, #4]
 800a966:	2b00      	cmp	r3, #0
 800a968:	d101      	bne.n	800a96e <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 800a96a:	2301      	movs	r3, #1
 800a96c:	e041      	b.n	800a9f2 <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800a96e:	687b      	ldr	r3, [r7, #4]
 800a970:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a974:	b2db      	uxtb	r3, r3
 800a976:	2b00      	cmp	r3, #0
 800a978:	d106      	bne.n	800a988 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800a97a:	687b      	ldr	r3, [r7, #4]
 800a97c:	2200      	movs	r2, #0
 800a97e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 800a982:	6878      	ldr	r0, [r7, #4]
 800a984:	f000 f839 	bl	800a9fa <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800a988:	687b      	ldr	r3, [r7, #4]
 800a98a:	2202      	movs	r2, #2
 800a98c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800a990:	687b      	ldr	r3, [r7, #4]
 800a992:	681a      	ldr	r2, [r3, #0]
 800a994:	687b      	ldr	r3, [r7, #4]
 800a996:	3304      	adds	r3, #4
 800a998:	4619      	mov	r1, r3
 800a99a:	4610      	mov	r0, r2
 800a99c:	f000 fbba 	bl	800b114 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800a9a0:	687b      	ldr	r3, [r7, #4]
 800a9a2:	2201      	movs	r2, #1
 800a9a4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a9a8:	687b      	ldr	r3, [r7, #4]
 800a9aa:	2201      	movs	r2, #1
 800a9ac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a9b0:	687b      	ldr	r3, [r7, #4]
 800a9b2:	2201      	movs	r2, #1
 800a9b4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a9b8:	687b      	ldr	r3, [r7, #4]
 800a9ba:	2201      	movs	r2, #1
 800a9bc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a9c0:	687b      	ldr	r3, [r7, #4]
 800a9c2:	2201      	movs	r2, #1
 800a9c4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a9c8:	687b      	ldr	r3, [r7, #4]
 800a9ca:	2201      	movs	r2, #1
 800a9cc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a9d0:	687b      	ldr	r3, [r7, #4]
 800a9d2:	2201      	movs	r2, #1
 800a9d4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a9d8:	687b      	ldr	r3, [r7, #4]
 800a9da:	2201      	movs	r2, #1
 800a9dc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a9e0:	687b      	ldr	r3, [r7, #4]
 800a9e2:	2201      	movs	r2, #1
 800a9e4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800a9e8:	687b      	ldr	r3, [r7, #4]
 800a9ea:	2201      	movs	r2, #1
 800a9ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 800a9f0:	2300      	movs	r3, #0
}
 800a9f2:	4618      	mov	r0, r3
 800a9f4:	3708      	adds	r7, #8
 800a9f6:	46bd      	mov	sp, r7
 800a9f8:	bd80      	pop	{r7, pc}

0800a9fa <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 800a9fa:	b480      	push	{r7}
 800a9fc:	b083      	sub	sp, #12
 800a9fe:	af00      	add	r7, sp, #0
 800aa00:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 800aa02:	bf00      	nop
 800aa04:	370c      	adds	r7, #12
 800aa06:	46bd      	mov	sp, r7
 800aa08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa0c:	4770      	bx	lr
	...

0800aa10 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 800aa10:	b580      	push	{r7, lr}
 800aa12:	b084      	sub	sp, #16
 800aa14:	af00      	add	r7, sp, #0
 800aa16:	6078      	str	r0, [r7, #4]
 800aa18:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800aa1a:	683b      	ldr	r3, [r7, #0]
 800aa1c:	2b00      	cmp	r3, #0
 800aa1e:	d109      	bne.n	800aa34 <HAL_TIM_PWM_Start+0x24>
 800aa20:	687b      	ldr	r3, [r7, #4]
 800aa22:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800aa26:	b2db      	uxtb	r3, r3
 800aa28:	2b01      	cmp	r3, #1
 800aa2a:	bf14      	ite	ne
 800aa2c:	2301      	movne	r3, #1
 800aa2e:	2300      	moveq	r3, #0
 800aa30:	b2db      	uxtb	r3, r3
 800aa32:	e022      	b.n	800aa7a <HAL_TIM_PWM_Start+0x6a>
 800aa34:	683b      	ldr	r3, [r7, #0]
 800aa36:	2b04      	cmp	r3, #4
 800aa38:	d109      	bne.n	800aa4e <HAL_TIM_PWM_Start+0x3e>
 800aa3a:	687b      	ldr	r3, [r7, #4]
 800aa3c:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800aa40:	b2db      	uxtb	r3, r3
 800aa42:	2b01      	cmp	r3, #1
 800aa44:	bf14      	ite	ne
 800aa46:	2301      	movne	r3, #1
 800aa48:	2300      	moveq	r3, #0
 800aa4a:	b2db      	uxtb	r3, r3
 800aa4c:	e015      	b.n	800aa7a <HAL_TIM_PWM_Start+0x6a>
 800aa4e:	683b      	ldr	r3, [r7, #0]
 800aa50:	2b08      	cmp	r3, #8
 800aa52:	d109      	bne.n	800aa68 <HAL_TIM_PWM_Start+0x58>
 800aa54:	687b      	ldr	r3, [r7, #4]
 800aa56:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800aa5a:	b2db      	uxtb	r3, r3
 800aa5c:	2b01      	cmp	r3, #1
 800aa5e:	bf14      	ite	ne
 800aa60:	2301      	movne	r3, #1
 800aa62:	2300      	moveq	r3, #0
 800aa64:	b2db      	uxtb	r3, r3
 800aa66:	e008      	b.n	800aa7a <HAL_TIM_PWM_Start+0x6a>
 800aa68:	687b      	ldr	r3, [r7, #4]
 800aa6a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800aa6e:	b2db      	uxtb	r3, r3
 800aa70:	2b01      	cmp	r3, #1
 800aa72:	bf14      	ite	ne
 800aa74:	2301      	movne	r3, #1
 800aa76:	2300      	moveq	r3, #0
 800aa78:	b2db      	uxtb	r3, r3
 800aa7a:	2b00      	cmp	r3, #0
 800aa7c:	d001      	beq.n	800aa82 <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 800aa7e:	2301      	movs	r3, #1
 800aa80:	e07c      	b.n	800ab7c <HAL_TIM_PWM_Start+0x16c>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800aa82:	683b      	ldr	r3, [r7, #0]
 800aa84:	2b00      	cmp	r3, #0
 800aa86:	d104      	bne.n	800aa92 <HAL_TIM_PWM_Start+0x82>
 800aa88:	687b      	ldr	r3, [r7, #4]
 800aa8a:	2202      	movs	r2, #2
 800aa8c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800aa90:	e013      	b.n	800aaba <HAL_TIM_PWM_Start+0xaa>
 800aa92:	683b      	ldr	r3, [r7, #0]
 800aa94:	2b04      	cmp	r3, #4
 800aa96:	d104      	bne.n	800aaa2 <HAL_TIM_PWM_Start+0x92>
 800aa98:	687b      	ldr	r3, [r7, #4]
 800aa9a:	2202      	movs	r2, #2
 800aa9c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800aaa0:	e00b      	b.n	800aaba <HAL_TIM_PWM_Start+0xaa>
 800aaa2:	683b      	ldr	r3, [r7, #0]
 800aaa4:	2b08      	cmp	r3, #8
 800aaa6:	d104      	bne.n	800aab2 <HAL_TIM_PWM_Start+0xa2>
 800aaa8:	687b      	ldr	r3, [r7, #4]
 800aaaa:	2202      	movs	r2, #2
 800aaac:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800aab0:	e003      	b.n	800aaba <HAL_TIM_PWM_Start+0xaa>
 800aab2:	687b      	ldr	r3, [r7, #4]
 800aab4:	2202      	movs	r2, #2
 800aab6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800aaba:	687b      	ldr	r3, [r7, #4]
 800aabc:	681b      	ldr	r3, [r3, #0]
 800aabe:	2201      	movs	r2, #1
 800aac0:	6839      	ldr	r1, [r7, #0]
 800aac2:	4618      	mov	r0, r3
 800aac4:	f000 fe10 	bl	800b6e8 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800aac8:	687b      	ldr	r3, [r7, #4]
 800aaca:	681b      	ldr	r3, [r3, #0]
 800aacc:	4a2d      	ldr	r2, [pc, #180]	; (800ab84 <HAL_TIM_PWM_Start+0x174>)
 800aace:	4293      	cmp	r3, r2
 800aad0:	d004      	beq.n	800aadc <HAL_TIM_PWM_Start+0xcc>
 800aad2:	687b      	ldr	r3, [r7, #4]
 800aad4:	681b      	ldr	r3, [r3, #0]
 800aad6:	4a2c      	ldr	r2, [pc, #176]	; (800ab88 <HAL_TIM_PWM_Start+0x178>)
 800aad8:	4293      	cmp	r3, r2
 800aada:	d101      	bne.n	800aae0 <HAL_TIM_PWM_Start+0xd0>
 800aadc:	2301      	movs	r3, #1
 800aade:	e000      	b.n	800aae2 <HAL_TIM_PWM_Start+0xd2>
 800aae0:	2300      	movs	r3, #0
 800aae2:	2b00      	cmp	r3, #0
 800aae4:	d007      	beq.n	800aaf6 <HAL_TIM_PWM_Start+0xe6>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 800aae6:	687b      	ldr	r3, [r7, #4]
 800aae8:	681b      	ldr	r3, [r3, #0]
 800aaea:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800aaec:	687b      	ldr	r3, [r7, #4]
 800aaee:	681b      	ldr	r3, [r3, #0]
 800aaf0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800aaf4:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800aaf6:	687b      	ldr	r3, [r7, #4]
 800aaf8:	681b      	ldr	r3, [r3, #0]
 800aafa:	4a22      	ldr	r2, [pc, #136]	; (800ab84 <HAL_TIM_PWM_Start+0x174>)
 800aafc:	4293      	cmp	r3, r2
 800aafe:	d022      	beq.n	800ab46 <HAL_TIM_PWM_Start+0x136>
 800ab00:	687b      	ldr	r3, [r7, #4]
 800ab02:	681b      	ldr	r3, [r3, #0]
 800ab04:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ab08:	d01d      	beq.n	800ab46 <HAL_TIM_PWM_Start+0x136>
 800ab0a:	687b      	ldr	r3, [r7, #4]
 800ab0c:	681b      	ldr	r3, [r3, #0]
 800ab0e:	4a1f      	ldr	r2, [pc, #124]	; (800ab8c <HAL_TIM_PWM_Start+0x17c>)
 800ab10:	4293      	cmp	r3, r2
 800ab12:	d018      	beq.n	800ab46 <HAL_TIM_PWM_Start+0x136>
 800ab14:	687b      	ldr	r3, [r7, #4]
 800ab16:	681b      	ldr	r3, [r3, #0]
 800ab18:	4a1d      	ldr	r2, [pc, #116]	; (800ab90 <HAL_TIM_PWM_Start+0x180>)
 800ab1a:	4293      	cmp	r3, r2
 800ab1c:	d013      	beq.n	800ab46 <HAL_TIM_PWM_Start+0x136>
 800ab1e:	687b      	ldr	r3, [r7, #4]
 800ab20:	681b      	ldr	r3, [r3, #0]
 800ab22:	4a1c      	ldr	r2, [pc, #112]	; (800ab94 <HAL_TIM_PWM_Start+0x184>)
 800ab24:	4293      	cmp	r3, r2
 800ab26:	d00e      	beq.n	800ab46 <HAL_TIM_PWM_Start+0x136>
 800ab28:	687b      	ldr	r3, [r7, #4]
 800ab2a:	681b      	ldr	r3, [r3, #0]
 800ab2c:	4a16      	ldr	r2, [pc, #88]	; (800ab88 <HAL_TIM_PWM_Start+0x178>)
 800ab2e:	4293      	cmp	r3, r2
 800ab30:	d009      	beq.n	800ab46 <HAL_TIM_PWM_Start+0x136>
 800ab32:	687b      	ldr	r3, [r7, #4]
 800ab34:	681b      	ldr	r3, [r3, #0]
 800ab36:	4a18      	ldr	r2, [pc, #96]	; (800ab98 <HAL_TIM_PWM_Start+0x188>)
 800ab38:	4293      	cmp	r3, r2
 800ab3a:	d004      	beq.n	800ab46 <HAL_TIM_PWM_Start+0x136>
 800ab3c:	687b      	ldr	r3, [r7, #4]
 800ab3e:	681b      	ldr	r3, [r3, #0]
 800ab40:	4a16      	ldr	r2, [pc, #88]	; (800ab9c <HAL_TIM_PWM_Start+0x18c>)
 800ab42:	4293      	cmp	r3, r2
 800ab44:	d111      	bne.n	800ab6a <HAL_TIM_PWM_Start+0x15a>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ab46:	687b      	ldr	r3, [r7, #4]
 800ab48:	681b      	ldr	r3, [r3, #0]
 800ab4a:	689b      	ldr	r3, [r3, #8]
 800ab4c:	f003 0307 	and.w	r3, r3, #7
 800ab50:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ab52:	68fb      	ldr	r3, [r7, #12]
 800ab54:	2b06      	cmp	r3, #6
 800ab56:	d010      	beq.n	800ab7a <HAL_TIM_PWM_Start+0x16a>
    {
      __HAL_TIM_ENABLE(htim);
 800ab58:	687b      	ldr	r3, [r7, #4]
 800ab5a:	681b      	ldr	r3, [r3, #0]
 800ab5c:	681a      	ldr	r2, [r3, #0]
 800ab5e:	687b      	ldr	r3, [r7, #4]
 800ab60:	681b      	ldr	r3, [r3, #0]
 800ab62:	f042 0201 	orr.w	r2, r2, #1
 800ab66:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ab68:	e007      	b.n	800ab7a <HAL_TIM_PWM_Start+0x16a>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800ab6a:	687b      	ldr	r3, [r7, #4]
 800ab6c:	681b      	ldr	r3, [r3, #0]
 800ab6e:	681a      	ldr	r2, [r3, #0]
 800ab70:	687b      	ldr	r3, [r7, #4]
 800ab72:	681b      	ldr	r3, [r3, #0]
 800ab74:	f042 0201 	orr.w	r2, r2, #1
 800ab78:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800ab7a:	2300      	movs	r3, #0
}
 800ab7c:	4618      	mov	r0, r3
 800ab7e:	3710      	adds	r7, #16
 800ab80:	46bd      	mov	sp, r7
 800ab82:	bd80      	pop	{r7, pc}
 800ab84:	40010000 	.word	0x40010000
 800ab88:	40010400 	.word	0x40010400
 800ab8c:	40000400 	.word	0x40000400
 800ab90:	40000800 	.word	0x40000800
 800ab94:	40000c00 	.word	0x40000c00
 800ab98:	40014000 	.word	0x40014000
 800ab9c:	40001800 	.word	0x40001800

0800aba0 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 800aba0:	b580      	push	{r7, lr}
 800aba2:	b082      	sub	sp, #8
 800aba4:	af00      	add	r7, sp, #0
 800aba6:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800aba8:	687b      	ldr	r3, [r7, #4]
 800abaa:	681b      	ldr	r3, [r3, #0]
 800abac:	691b      	ldr	r3, [r3, #16]
 800abae:	f003 0302 	and.w	r3, r3, #2
 800abb2:	2b02      	cmp	r3, #2
 800abb4:	d122      	bne.n	800abfc <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800abb6:	687b      	ldr	r3, [r7, #4]
 800abb8:	681b      	ldr	r3, [r3, #0]
 800abba:	68db      	ldr	r3, [r3, #12]
 800abbc:	f003 0302 	and.w	r3, r3, #2
 800abc0:	2b02      	cmp	r3, #2
 800abc2:	d11b      	bne.n	800abfc <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800abc4:	687b      	ldr	r3, [r7, #4]
 800abc6:	681b      	ldr	r3, [r3, #0]
 800abc8:	f06f 0202 	mvn.w	r2, #2
 800abcc:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800abce:	687b      	ldr	r3, [r7, #4]
 800abd0:	2201      	movs	r2, #1
 800abd2:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800abd4:	687b      	ldr	r3, [r7, #4]
 800abd6:	681b      	ldr	r3, [r3, #0]
 800abd8:	699b      	ldr	r3, [r3, #24]
 800abda:	f003 0303 	and.w	r3, r3, #3
 800abde:	2b00      	cmp	r3, #0
 800abe0:	d003      	beq.n	800abea <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800abe2:	6878      	ldr	r0, [r7, #4]
 800abe4:	f000 fa77 	bl	800b0d6 <HAL_TIM_IC_CaptureCallback>
 800abe8:	e005      	b.n	800abf6 <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800abea:	6878      	ldr	r0, [r7, #4]
 800abec:	f000 fa69 	bl	800b0c2 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800abf0:	6878      	ldr	r0, [r7, #4]
 800abf2:	f000 fa7a 	bl	800b0ea <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800abf6:	687b      	ldr	r3, [r7, #4]
 800abf8:	2200      	movs	r2, #0
 800abfa:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800abfc:	687b      	ldr	r3, [r7, #4]
 800abfe:	681b      	ldr	r3, [r3, #0]
 800ac00:	691b      	ldr	r3, [r3, #16]
 800ac02:	f003 0304 	and.w	r3, r3, #4
 800ac06:	2b04      	cmp	r3, #4
 800ac08:	d122      	bne.n	800ac50 <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800ac0a:	687b      	ldr	r3, [r7, #4]
 800ac0c:	681b      	ldr	r3, [r3, #0]
 800ac0e:	68db      	ldr	r3, [r3, #12]
 800ac10:	f003 0304 	and.w	r3, r3, #4
 800ac14:	2b04      	cmp	r3, #4
 800ac16:	d11b      	bne.n	800ac50 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800ac18:	687b      	ldr	r3, [r7, #4]
 800ac1a:	681b      	ldr	r3, [r3, #0]
 800ac1c:	f06f 0204 	mvn.w	r2, #4
 800ac20:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800ac22:	687b      	ldr	r3, [r7, #4]
 800ac24:	2202      	movs	r2, #2
 800ac26:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800ac28:	687b      	ldr	r3, [r7, #4]
 800ac2a:	681b      	ldr	r3, [r3, #0]
 800ac2c:	699b      	ldr	r3, [r3, #24]
 800ac2e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ac32:	2b00      	cmp	r3, #0
 800ac34:	d003      	beq.n	800ac3e <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800ac36:	6878      	ldr	r0, [r7, #4]
 800ac38:	f000 fa4d 	bl	800b0d6 <HAL_TIM_IC_CaptureCallback>
 800ac3c:	e005      	b.n	800ac4a <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ac3e:	6878      	ldr	r0, [r7, #4]
 800ac40:	f000 fa3f 	bl	800b0c2 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ac44:	6878      	ldr	r0, [r7, #4]
 800ac46:	f000 fa50 	bl	800b0ea <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ac4a:	687b      	ldr	r3, [r7, #4]
 800ac4c:	2200      	movs	r2, #0
 800ac4e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800ac50:	687b      	ldr	r3, [r7, #4]
 800ac52:	681b      	ldr	r3, [r3, #0]
 800ac54:	691b      	ldr	r3, [r3, #16]
 800ac56:	f003 0308 	and.w	r3, r3, #8
 800ac5a:	2b08      	cmp	r3, #8
 800ac5c:	d122      	bne.n	800aca4 <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800ac5e:	687b      	ldr	r3, [r7, #4]
 800ac60:	681b      	ldr	r3, [r3, #0]
 800ac62:	68db      	ldr	r3, [r3, #12]
 800ac64:	f003 0308 	and.w	r3, r3, #8
 800ac68:	2b08      	cmp	r3, #8
 800ac6a:	d11b      	bne.n	800aca4 <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800ac6c:	687b      	ldr	r3, [r7, #4]
 800ac6e:	681b      	ldr	r3, [r3, #0]
 800ac70:	f06f 0208 	mvn.w	r2, #8
 800ac74:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800ac76:	687b      	ldr	r3, [r7, #4]
 800ac78:	2204      	movs	r2, #4
 800ac7a:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800ac7c:	687b      	ldr	r3, [r7, #4]
 800ac7e:	681b      	ldr	r3, [r3, #0]
 800ac80:	69db      	ldr	r3, [r3, #28]
 800ac82:	f003 0303 	and.w	r3, r3, #3
 800ac86:	2b00      	cmp	r3, #0
 800ac88:	d003      	beq.n	800ac92 <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800ac8a:	6878      	ldr	r0, [r7, #4]
 800ac8c:	f000 fa23 	bl	800b0d6 <HAL_TIM_IC_CaptureCallback>
 800ac90:	e005      	b.n	800ac9e <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ac92:	6878      	ldr	r0, [r7, #4]
 800ac94:	f000 fa15 	bl	800b0c2 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ac98:	6878      	ldr	r0, [r7, #4]
 800ac9a:	f000 fa26 	bl	800b0ea <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ac9e:	687b      	ldr	r3, [r7, #4]
 800aca0:	2200      	movs	r2, #0
 800aca2:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800aca4:	687b      	ldr	r3, [r7, #4]
 800aca6:	681b      	ldr	r3, [r3, #0]
 800aca8:	691b      	ldr	r3, [r3, #16]
 800acaa:	f003 0310 	and.w	r3, r3, #16
 800acae:	2b10      	cmp	r3, #16
 800acb0:	d122      	bne.n	800acf8 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800acb2:	687b      	ldr	r3, [r7, #4]
 800acb4:	681b      	ldr	r3, [r3, #0]
 800acb6:	68db      	ldr	r3, [r3, #12]
 800acb8:	f003 0310 	and.w	r3, r3, #16
 800acbc:	2b10      	cmp	r3, #16
 800acbe:	d11b      	bne.n	800acf8 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800acc0:	687b      	ldr	r3, [r7, #4]
 800acc2:	681b      	ldr	r3, [r3, #0]
 800acc4:	f06f 0210 	mvn.w	r2, #16
 800acc8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800acca:	687b      	ldr	r3, [r7, #4]
 800accc:	2208      	movs	r2, #8
 800acce:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800acd0:	687b      	ldr	r3, [r7, #4]
 800acd2:	681b      	ldr	r3, [r3, #0]
 800acd4:	69db      	ldr	r3, [r3, #28]
 800acd6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800acda:	2b00      	cmp	r3, #0
 800acdc:	d003      	beq.n	800ace6 <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800acde:	6878      	ldr	r0, [r7, #4]
 800ace0:	f000 f9f9 	bl	800b0d6 <HAL_TIM_IC_CaptureCallback>
 800ace4:	e005      	b.n	800acf2 <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ace6:	6878      	ldr	r0, [r7, #4]
 800ace8:	f000 f9eb 	bl	800b0c2 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800acec:	6878      	ldr	r0, [r7, #4]
 800acee:	f000 f9fc 	bl	800b0ea <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800acf2:	687b      	ldr	r3, [r7, #4]
 800acf4:	2200      	movs	r2, #0
 800acf6:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800acf8:	687b      	ldr	r3, [r7, #4]
 800acfa:	681b      	ldr	r3, [r3, #0]
 800acfc:	691b      	ldr	r3, [r3, #16]
 800acfe:	f003 0301 	and.w	r3, r3, #1
 800ad02:	2b01      	cmp	r3, #1
 800ad04:	d10e      	bne.n	800ad24 <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800ad06:	687b      	ldr	r3, [r7, #4]
 800ad08:	681b      	ldr	r3, [r3, #0]
 800ad0a:	68db      	ldr	r3, [r3, #12]
 800ad0c:	f003 0301 	and.w	r3, r3, #1
 800ad10:	2b01      	cmp	r3, #1
 800ad12:	d107      	bne.n	800ad24 <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800ad14:	687b      	ldr	r3, [r7, #4]
 800ad16:	681b      	ldr	r3, [r3, #0]
 800ad18:	f06f 0201 	mvn.w	r2, #1
 800ad1c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800ad1e:	6878      	ldr	r0, [r7, #4]
 800ad20:	f7fe f96c 	bl	8008ffc <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800ad24:	687b      	ldr	r3, [r7, #4]
 800ad26:	681b      	ldr	r3, [r3, #0]
 800ad28:	691b      	ldr	r3, [r3, #16]
 800ad2a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ad2e:	2b80      	cmp	r3, #128	; 0x80
 800ad30:	d10e      	bne.n	800ad50 <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800ad32:	687b      	ldr	r3, [r7, #4]
 800ad34:	681b      	ldr	r3, [r3, #0]
 800ad36:	68db      	ldr	r3, [r3, #12]
 800ad38:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ad3c:	2b80      	cmp	r3, #128	; 0x80
 800ad3e:	d107      	bne.n	800ad50 <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800ad40:	687b      	ldr	r3, [r7, #4]
 800ad42:	681b      	ldr	r3, [r3, #0]
 800ad44:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ad48:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800ad4a:	6878      	ldr	r0, [r7, #4]
 800ad4c:	f000 fdca 	bl	800b8e4 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800ad50:	687b      	ldr	r3, [r7, #4]
 800ad52:	681b      	ldr	r3, [r3, #0]
 800ad54:	691b      	ldr	r3, [r3, #16]
 800ad56:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad5a:	2b40      	cmp	r3, #64	; 0x40
 800ad5c:	d10e      	bne.n	800ad7c <HAL_TIM_IRQHandler+0x1dc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800ad5e:	687b      	ldr	r3, [r7, #4]
 800ad60:	681b      	ldr	r3, [r3, #0]
 800ad62:	68db      	ldr	r3, [r3, #12]
 800ad64:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad68:	2b40      	cmp	r3, #64	; 0x40
 800ad6a:	d107      	bne.n	800ad7c <HAL_TIM_IRQHandler+0x1dc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800ad6c:	687b      	ldr	r3, [r7, #4]
 800ad6e:	681b      	ldr	r3, [r3, #0]
 800ad70:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800ad74:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800ad76:	6878      	ldr	r0, [r7, #4]
 800ad78:	f000 f9c1 	bl	800b0fe <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800ad7c:	687b      	ldr	r3, [r7, #4]
 800ad7e:	681b      	ldr	r3, [r3, #0]
 800ad80:	691b      	ldr	r3, [r3, #16]
 800ad82:	f003 0320 	and.w	r3, r3, #32
 800ad86:	2b20      	cmp	r3, #32
 800ad88:	d10e      	bne.n	800ada8 <HAL_TIM_IRQHandler+0x208>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	681b      	ldr	r3, [r3, #0]
 800ad8e:	68db      	ldr	r3, [r3, #12]
 800ad90:	f003 0320 	and.w	r3, r3, #32
 800ad94:	2b20      	cmp	r3, #32
 800ad96:	d107      	bne.n	800ada8 <HAL_TIM_IRQHandler+0x208>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800ad98:	687b      	ldr	r3, [r7, #4]
 800ad9a:	681b      	ldr	r3, [r3, #0]
 800ad9c:	f06f 0220 	mvn.w	r2, #32
 800ada0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800ada2:	6878      	ldr	r0, [r7, #4]
 800ada4:	f000 fd94 	bl	800b8d0 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800ada8:	bf00      	nop
 800adaa:	3708      	adds	r7, #8
 800adac:	46bd      	mov	sp, r7
 800adae:	bd80      	pop	{r7, pc}

0800adb0 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 800adb0:	b580      	push	{r7, lr}
 800adb2:	b086      	sub	sp, #24
 800adb4:	af00      	add	r7, sp, #0
 800adb6:	60f8      	str	r0, [r7, #12]
 800adb8:	60b9      	str	r1, [r7, #8]
 800adba:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800adbc:	2300      	movs	r3, #0
 800adbe:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 800adc0:	68fb      	ldr	r3, [r7, #12]
 800adc2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800adc6:	2b01      	cmp	r3, #1
 800adc8:	d101      	bne.n	800adce <HAL_TIM_PWM_ConfigChannel+0x1e>
 800adca:	2302      	movs	r3, #2
 800adcc:	e0ae      	b.n	800af2c <HAL_TIM_PWM_ConfigChannel+0x17c>
 800adce:	68fb      	ldr	r3, [r7, #12]
 800add0:	2201      	movs	r2, #1
 800add2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800add6:	687b      	ldr	r3, [r7, #4]
 800add8:	2b0c      	cmp	r3, #12
 800adda:	f200 809f 	bhi.w	800af1c <HAL_TIM_PWM_ConfigChannel+0x16c>
 800adde:	a201      	add	r2, pc, #4	; (adr r2, 800ade4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800ade0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ade4:	0800ae19 	.word	0x0800ae19
 800ade8:	0800af1d 	.word	0x0800af1d
 800adec:	0800af1d 	.word	0x0800af1d
 800adf0:	0800af1d 	.word	0x0800af1d
 800adf4:	0800ae59 	.word	0x0800ae59
 800adf8:	0800af1d 	.word	0x0800af1d
 800adfc:	0800af1d 	.word	0x0800af1d
 800ae00:	0800af1d 	.word	0x0800af1d
 800ae04:	0800ae9b 	.word	0x0800ae9b
 800ae08:	0800af1d 	.word	0x0800af1d
 800ae0c:	0800af1d 	.word	0x0800af1d
 800ae10:	0800af1d 	.word	0x0800af1d
 800ae14:	0800aedb 	.word	0x0800aedb
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800ae18:	68fb      	ldr	r3, [r7, #12]
 800ae1a:	681b      	ldr	r3, [r3, #0]
 800ae1c:	68b9      	ldr	r1, [r7, #8]
 800ae1e:	4618      	mov	r0, r3
 800ae20:	f000 fa18 	bl	800b254 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800ae24:	68fb      	ldr	r3, [r7, #12]
 800ae26:	681b      	ldr	r3, [r3, #0]
 800ae28:	699a      	ldr	r2, [r3, #24]
 800ae2a:	68fb      	ldr	r3, [r7, #12]
 800ae2c:	681b      	ldr	r3, [r3, #0]
 800ae2e:	f042 0208 	orr.w	r2, r2, #8
 800ae32:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800ae34:	68fb      	ldr	r3, [r7, #12]
 800ae36:	681b      	ldr	r3, [r3, #0]
 800ae38:	699a      	ldr	r2, [r3, #24]
 800ae3a:	68fb      	ldr	r3, [r7, #12]
 800ae3c:	681b      	ldr	r3, [r3, #0]
 800ae3e:	f022 0204 	bic.w	r2, r2, #4
 800ae42:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800ae44:	68fb      	ldr	r3, [r7, #12]
 800ae46:	681b      	ldr	r3, [r3, #0]
 800ae48:	6999      	ldr	r1, [r3, #24]
 800ae4a:	68bb      	ldr	r3, [r7, #8]
 800ae4c:	691a      	ldr	r2, [r3, #16]
 800ae4e:	68fb      	ldr	r3, [r7, #12]
 800ae50:	681b      	ldr	r3, [r3, #0]
 800ae52:	430a      	orrs	r2, r1
 800ae54:	619a      	str	r2, [r3, #24]
      break;
 800ae56:	e064      	b.n	800af22 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800ae58:	68fb      	ldr	r3, [r7, #12]
 800ae5a:	681b      	ldr	r3, [r3, #0]
 800ae5c:	68b9      	ldr	r1, [r7, #8]
 800ae5e:	4618      	mov	r0, r3
 800ae60:	f000 fa68 	bl	800b334 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800ae64:	68fb      	ldr	r3, [r7, #12]
 800ae66:	681b      	ldr	r3, [r3, #0]
 800ae68:	699a      	ldr	r2, [r3, #24]
 800ae6a:	68fb      	ldr	r3, [r7, #12]
 800ae6c:	681b      	ldr	r3, [r3, #0]
 800ae6e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ae72:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800ae74:	68fb      	ldr	r3, [r7, #12]
 800ae76:	681b      	ldr	r3, [r3, #0]
 800ae78:	699a      	ldr	r2, [r3, #24]
 800ae7a:	68fb      	ldr	r3, [r7, #12]
 800ae7c:	681b      	ldr	r3, [r3, #0]
 800ae7e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae82:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800ae84:	68fb      	ldr	r3, [r7, #12]
 800ae86:	681b      	ldr	r3, [r3, #0]
 800ae88:	6999      	ldr	r1, [r3, #24]
 800ae8a:	68bb      	ldr	r3, [r7, #8]
 800ae8c:	691b      	ldr	r3, [r3, #16]
 800ae8e:	021a      	lsls	r2, r3, #8
 800ae90:	68fb      	ldr	r3, [r7, #12]
 800ae92:	681b      	ldr	r3, [r3, #0]
 800ae94:	430a      	orrs	r2, r1
 800ae96:	619a      	str	r2, [r3, #24]
      break;
 800ae98:	e043      	b.n	800af22 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800ae9a:	68fb      	ldr	r3, [r7, #12]
 800ae9c:	681b      	ldr	r3, [r3, #0]
 800ae9e:	68b9      	ldr	r1, [r7, #8]
 800aea0:	4618      	mov	r0, r3
 800aea2:	f000 fabd 	bl	800b420 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800aea6:	68fb      	ldr	r3, [r7, #12]
 800aea8:	681b      	ldr	r3, [r3, #0]
 800aeaa:	69da      	ldr	r2, [r3, #28]
 800aeac:	68fb      	ldr	r3, [r7, #12]
 800aeae:	681b      	ldr	r3, [r3, #0]
 800aeb0:	f042 0208 	orr.w	r2, r2, #8
 800aeb4:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800aeb6:	68fb      	ldr	r3, [r7, #12]
 800aeb8:	681b      	ldr	r3, [r3, #0]
 800aeba:	69da      	ldr	r2, [r3, #28]
 800aebc:	68fb      	ldr	r3, [r7, #12]
 800aebe:	681b      	ldr	r3, [r3, #0]
 800aec0:	f022 0204 	bic.w	r2, r2, #4
 800aec4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800aec6:	68fb      	ldr	r3, [r7, #12]
 800aec8:	681b      	ldr	r3, [r3, #0]
 800aeca:	69d9      	ldr	r1, [r3, #28]
 800aecc:	68bb      	ldr	r3, [r7, #8]
 800aece:	691a      	ldr	r2, [r3, #16]
 800aed0:	68fb      	ldr	r3, [r7, #12]
 800aed2:	681b      	ldr	r3, [r3, #0]
 800aed4:	430a      	orrs	r2, r1
 800aed6:	61da      	str	r2, [r3, #28]
      break;
 800aed8:	e023      	b.n	800af22 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800aeda:	68fb      	ldr	r3, [r7, #12]
 800aedc:	681b      	ldr	r3, [r3, #0]
 800aede:	68b9      	ldr	r1, [r7, #8]
 800aee0:	4618      	mov	r0, r3
 800aee2:	f000 fb11 	bl	800b508 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800aee6:	68fb      	ldr	r3, [r7, #12]
 800aee8:	681b      	ldr	r3, [r3, #0]
 800aeea:	69da      	ldr	r2, [r3, #28]
 800aeec:	68fb      	ldr	r3, [r7, #12]
 800aeee:	681b      	ldr	r3, [r3, #0]
 800aef0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aef4:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800aef6:	68fb      	ldr	r3, [r7, #12]
 800aef8:	681b      	ldr	r3, [r3, #0]
 800aefa:	69da      	ldr	r2, [r3, #28]
 800aefc:	68fb      	ldr	r3, [r7, #12]
 800aefe:	681b      	ldr	r3, [r3, #0]
 800af00:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af04:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800af06:	68fb      	ldr	r3, [r7, #12]
 800af08:	681b      	ldr	r3, [r3, #0]
 800af0a:	69d9      	ldr	r1, [r3, #28]
 800af0c:	68bb      	ldr	r3, [r7, #8]
 800af0e:	691b      	ldr	r3, [r3, #16]
 800af10:	021a      	lsls	r2, r3, #8
 800af12:	68fb      	ldr	r3, [r7, #12]
 800af14:	681b      	ldr	r3, [r3, #0]
 800af16:	430a      	orrs	r2, r1
 800af18:	61da      	str	r2, [r3, #28]
      break;
 800af1a:	e002      	b.n	800af22 <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 800af1c:	2301      	movs	r3, #1
 800af1e:	75fb      	strb	r3, [r7, #23]
      break;
 800af20:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800af22:	68fb      	ldr	r3, [r7, #12]
 800af24:	2200      	movs	r2, #0
 800af26:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 800af2a:	7dfb      	ldrb	r3, [r7, #23]
}
 800af2c:	4618      	mov	r0, r3
 800af2e:	3718      	adds	r7, #24
 800af30:	46bd      	mov	sp, r7
 800af32:	bd80      	pop	{r7, pc}

0800af34 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 800af34:	b580      	push	{r7, lr}
 800af36:	b084      	sub	sp, #16
 800af38:	af00      	add	r7, sp, #0
 800af3a:	6078      	str	r0, [r7, #4]
 800af3c:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800af3e:	2300      	movs	r3, #0
 800af40:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800af42:	687b      	ldr	r3, [r7, #4]
 800af44:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800af48:	2b01      	cmp	r3, #1
 800af4a:	d101      	bne.n	800af50 <HAL_TIM_ConfigClockSource+0x1c>
 800af4c:	2302      	movs	r3, #2
 800af4e:	e0b4      	b.n	800b0ba <HAL_TIM_ConfigClockSource+0x186>
 800af50:	687b      	ldr	r3, [r7, #4]
 800af52:	2201      	movs	r2, #1
 800af54:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 800af58:	687b      	ldr	r3, [r7, #4]
 800af5a:	2202      	movs	r2, #2
 800af5c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 800af60:	687b      	ldr	r3, [r7, #4]
 800af62:	681b      	ldr	r3, [r3, #0]
 800af64:	689b      	ldr	r3, [r3, #8]
 800af66:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 800af68:	68bb      	ldr	r3, [r7, #8]
 800af6a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800af6e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800af70:	68bb      	ldr	r3, [r7, #8]
 800af72:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800af76:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 800af78:	687b      	ldr	r3, [r7, #4]
 800af7a:	681b      	ldr	r3, [r3, #0]
 800af7c:	68ba      	ldr	r2, [r7, #8]
 800af7e:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 800af80:	683b      	ldr	r3, [r7, #0]
 800af82:	681b      	ldr	r3, [r3, #0]
 800af84:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800af88:	d03e      	beq.n	800b008 <HAL_TIM_ConfigClockSource+0xd4>
 800af8a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800af8e:	f200 8087 	bhi.w	800b0a0 <HAL_TIM_ConfigClockSource+0x16c>
 800af92:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800af96:	f000 8086 	beq.w	800b0a6 <HAL_TIM_ConfigClockSource+0x172>
 800af9a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800af9e:	d87f      	bhi.n	800b0a0 <HAL_TIM_ConfigClockSource+0x16c>
 800afa0:	2b70      	cmp	r3, #112	; 0x70
 800afa2:	d01a      	beq.n	800afda <HAL_TIM_ConfigClockSource+0xa6>
 800afa4:	2b70      	cmp	r3, #112	; 0x70
 800afa6:	d87b      	bhi.n	800b0a0 <HAL_TIM_ConfigClockSource+0x16c>
 800afa8:	2b60      	cmp	r3, #96	; 0x60
 800afaa:	d050      	beq.n	800b04e <HAL_TIM_ConfigClockSource+0x11a>
 800afac:	2b60      	cmp	r3, #96	; 0x60
 800afae:	d877      	bhi.n	800b0a0 <HAL_TIM_ConfigClockSource+0x16c>
 800afb0:	2b50      	cmp	r3, #80	; 0x50
 800afb2:	d03c      	beq.n	800b02e <HAL_TIM_ConfigClockSource+0xfa>
 800afb4:	2b50      	cmp	r3, #80	; 0x50
 800afb6:	d873      	bhi.n	800b0a0 <HAL_TIM_ConfigClockSource+0x16c>
 800afb8:	2b40      	cmp	r3, #64	; 0x40
 800afba:	d058      	beq.n	800b06e <HAL_TIM_ConfigClockSource+0x13a>
 800afbc:	2b40      	cmp	r3, #64	; 0x40
 800afbe:	d86f      	bhi.n	800b0a0 <HAL_TIM_ConfigClockSource+0x16c>
 800afc0:	2b30      	cmp	r3, #48	; 0x30
 800afc2:	d064      	beq.n	800b08e <HAL_TIM_ConfigClockSource+0x15a>
 800afc4:	2b30      	cmp	r3, #48	; 0x30
 800afc6:	d86b      	bhi.n	800b0a0 <HAL_TIM_ConfigClockSource+0x16c>
 800afc8:	2b20      	cmp	r3, #32
 800afca:	d060      	beq.n	800b08e <HAL_TIM_ConfigClockSource+0x15a>
 800afcc:	2b20      	cmp	r3, #32
 800afce:	d867      	bhi.n	800b0a0 <HAL_TIM_ConfigClockSource+0x16c>
 800afd0:	2b00      	cmp	r3, #0
 800afd2:	d05c      	beq.n	800b08e <HAL_TIM_ConfigClockSource+0x15a>
 800afd4:	2b10      	cmp	r3, #16
 800afd6:	d05a      	beq.n	800b08e <HAL_TIM_ConfigClockSource+0x15a>
 800afd8:	e062      	b.n	800b0a0 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800afda:	687b      	ldr	r3, [r7, #4]
 800afdc:	6818      	ldr	r0, [r3, #0]
 800afde:	683b      	ldr	r3, [r7, #0]
 800afe0:	6899      	ldr	r1, [r3, #8]
 800afe2:	683b      	ldr	r3, [r7, #0]
 800afe4:	685a      	ldr	r2, [r3, #4]
 800afe6:	683b      	ldr	r3, [r7, #0]
 800afe8:	68db      	ldr	r3, [r3, #12]
 800afea:	f000 fb5d 	bl	800b6a8 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800afee:	687b      	ldr	r3, [r7, #4]
 800aff0:	681b      	ldr	r3, [r3, #0]
 800aff2:	689b      	ldr	r3, [r3, #8]
 800aff4:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800aff6:	68bb      	ldr	r3, [r7, #8]
 800aff8:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800affc:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800affe:	687b      	ldr	r3, [r7, #4]
 800b000:	681b      	ldr	r3, [r3, #0]
 800b002:	68ba      	ldr	r2, [r7, #8]
 800b004:	609a      	str	r2, [r3, #8]
      break;
 800b006:	e04f      	b.n	800b0a8 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800b008:	687b      	ldr	r3, [r7, #4]
 800b00a:	6818      	ldr	r0, [r3, #0]
 800b00c:	683b      	ldr	r3, [r7, #0]
 800b00e:	6899      	ldr	r1, [r3, #8]
 800b010:	683b      	ldr	r3, [r7, #0]
 800b012:	685a      	ldr	r2, [r3, #4]
 800b014:	683b      	ldr	r3, [r7, #0]
 800b016:	68db      	ldr	r3, [r3, #12]
 800b018:	f000 fb46 	bl	800b6a8 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800b01c:	687b      	ldr	r3, [r7, #4]
 800b01e:	681b      	ldr	r3, [r3, #0]
 800b020:	689a      	ldr	r2, [r3, #8]
 800b022:	687b      	ldr	r3, [r7, #4]
 800b024:	681b      	ldr	r3, [r3, #0]
 800b026:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b02a:	609a      	str	r2, [r3, #8]
      break;
 800b02c:	e03c      	b.n	800b0a8 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800b02e:	687b      	ldr	r3, [r7, #4]
 800b030:	6818      	ldr	r0, [r3, #0]
 800b032:	683b      	ldr	r3, [r7, #0]
 800b034:	6859      	ldr	r1, [r3, #4]
 800b036:	683b      	ldr	r3, [r7, #0]
 800b038:	68db      	ldr	r3, [r3, #12]
 800b03a:	461a      	mov	r2, r3
 800b03c:	f000 faba 	bl	800b5b4 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 800b040:	687b      	ldr	r3, [r7, #4]
 800b042:	681b      	ldr	r3, [r3, #0]
 800b044:	2150      	movs	r1, #80	; 0x50
 800b046:	4618      	mov	r0, r3
 800b048:	f000 fb13 	bl	800b672 <TIM_ITRx_SetConfig>
      break;
 800b04c:	e02c      	b.n	800b0a8 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 800b04e:	687b      	ldr	r3, [r7, #4]
 800b050:	6818      	ldr	r0, [r3, #0]
 800b052:	683b      	ldr	r3, [r7, #0]
 800b054:	6859      	ldr	r1, [r3, #4]
 800b056:	683b      	ldr	r3, [r7, #0]
 800b058:	68db      	ldr	r3, [r3, #12]
 800b05a:	461a      	mov	r2, r3
 800b05c:	f000 fad9 	bl	800b612 <TIM_TI2_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 800b060:	687b      	ldr	r3, [r7, #4]
 800b062:	681b      	ldr	r3, [r3, #0]
 800b064:	2160      	movs	r1, #96	; 0x60
 800b066:	4618      	mov	r0, r3
 800b068:	f000 fb03 	bl	800b672 <TIM_ITRx_SetConfig>
      break;
 800b06c:	e01c      	b.n	800b0a8 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800b06e:	687b      	ldr	r3, [r7, #4]
 800b070:	6818      	ldr	r0, [r3, #0]
 800b072:	683b      	ldr	r3, [r7, #0]
 800b074:	6859      	ldr	r1, [r3, #4]
 800b076:	683b      	ldr	r3, [r7, #0]
 800b078:	68db      	ldr	r3, [r3, #12]
 800b07a:	461a      	mov	r2, r3
 800b07c:	f000 fa9a 	bl	800b5b4 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 800b080:	687b      	ldr	r3, [r7, #4]
 800b082:	681b      	ldr	r3, [r3, #0]
 800b084:	2140      	movs	r1, #64	; 0x40
 800b086:	4618      	mov	r0, r3
 800b088:	f000 faf3 	bl	800b672 <TIM_ITRx_SetConfig>
      break;
 800b08c:	e00c      	b.n	800b0a8 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800b08e:	687b      	ldr	r3, [r7, #4]
 800b090:	681a      	ldr	r2, [r3, #0]
 800b092:	683b      	ldr	r3, [r7, #0]
 800b094:	681b      	ldr	r3, [r3, #0]
 800b096:	4619      	mov	r1, r3
 800b098:	4610      	mov	r0, r2
 800b09a:	f000 faea 	bl	800b672 <TIM_ITRx_SetConfig>
      break;
 800b09e:	e003      	b.n	800b0a8 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 800b0a0:	2301      	movs	r3, #1
 800b0a2:	73fb      	strb	r3, [r7, #15]
      break;
 800b0a4:	e000      	b.n	800b0a8 <HAL_TIM_ConfigClockSource+0x174>
      break;
 800b0a6:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 800b0a8:	687b      	ldr	r3, [r7, #4]
 800b0aa:	2201      	movs	r2, #1
 800b0ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800b0b0:	687b      	ldr	r3, [r7, #4]
 800b0b2:	2200      	movs	r2, #0
 800b0b4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 800b0b8:	7bfb      	ldrb	r3, [r7, #15]
}
 800b0ba:	4618      	mov	r0, r3
 800b0bc:	3710      	adds	r7, #16
 800b0be:	46bd      	mov	sp, r7
 800b0c0:	bd80      	pop	{r7, pc}

0800b0c2 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 800b0c2:	b480      	push	{r7}
 800b0c4:	b083      	sub	sp, #12
 800b0c6:	af00      	add	r7, sp, #0
 800b0c8:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800b0ca:	bf00      	nop
 800b0cc:	370c      	adds	r7, #12
 800b0ce:	46bd      	mov	sp, r7
 800b0d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0d4:	4770      	bx	lr

0800b0d6 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 800b0d6:	b480      	push	{r7}
 800b0d8:	b083      	sub	sp, #12
 800b0da:	af00      	add	r7, sp, #0
 800b0dc:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800b0de:	bf00      	nop
 800b0e0:	370c      	adds	r7, #12
 800b0e2:	46bd      	mov	sp, r7
 800b0e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0e8:	4770      	bx	lr

0800b0ea <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 800b0ea:	b480      	push	{r7}
 800b0ec:	b083      	sub	sp, #12
 800b0ee:	af00      	add	r7, sp, #0
 800b0f0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 800b0f2:	bf00      	nop
 800b0f4:	370c      	adds	r7, #12
 800b0f6:	46bd      	mov	sp, r7
 800b0f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0fc:	4770      	bx	lr

0800b0fe <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800b0fe:	b480      	push	{r7}
 800b100:	b083      	sub	sp, #12
 800b102:	af00      	add	r7, sp, #0
 800b104:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 800b106:	bf00      	nop
 800b108:	370c      	adds	r7, #12
 800b10a:	46bd      	mov	sp, r7
 800b10c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b110:	4770      	bx	lr
	...

0800b114 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 800b114:	b480      	push	{r7}
 800b116:	b085      	sub	sp, #20
 800b118:	af00      	add	r7, sp, #0
 800b11a:	6078      	str	r0, [r7, #4]
 800b11c:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800b11e:	687b      	ldr	r3, [r7, #4]
 800b120:	681b      	ldr	r3, [r3, #0]
 800b122:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b124:	687b      	ldr	r3, [r7, #4]
 800b126:	4a40      	ldr	r2, [pc, #256]	; (800b228 <TIM_Base_SetConfig+0x114>)
 800b128:	4293      	cmp	r3, r2
 800b12a:	d013      	beq.n	800b154 <TIM_Base_SetConfig+0x40>
 800b12c:	687b      	ldr	r3, [r7, #4]
 800b12e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b132:	d00f      	beq.n	800b154 <TIM_Base_SetConfig+0x40>
 800b134:	687b      	ldr	r3, [r7, #4]
 800b136:	4a3d      	ldr	r2, [pc, #244]	; (800b22c <TIM_Base_SetConfig+0x118>)
 800b138:	4293      	cmp	r3, r2
 800b13a:	d00b      	beq.n	800b154 <TIM_Base_SetConfig+0x40>
 800b13c:	687b      	ldr	r3, [r7, #4]
 800b13e:	4a3c      	ldr	r2, [pc, #240]	; (800b230 <TIM_Base_SetConfig+0x11c>)
 800b140:	4293      	cmp	r3, r2
 800b142:	d007      	beq.n	800b154 <TIM_Base_SetConfig+0x40>
 800b144:	687b      	ldr	r3, [r7, #4]
 800b146:	4a3b      	ldr	r2, [pc, #236]	; (800b234 <TIM_Base_SetConfig+0x120>)
 800b148:	4293      	cmp	r3, r2
 800b14a:	d003      	beq.n	800b154 <TIM_Base_SetConfig+0x40>
 800b14c:	687b      	ldr	r3, [r7, #4]
 800b14e:	4a3a      	ldr	r2, [pc, #232]	; (800b238 <TIM_Base_SetConfig+0x124>)
 800b150:	4293      	cmp	r3, r2
 800b152:	d108      	bne.n	800b166 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b154:	68fb      	ldr	r3, [r7, #12]
 800b156:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b15a:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800b15c:	683b      	ldr	r3, [r7, #0]
 800b15e:	685b      	ldr	r3, [r3, #4]
 800b160:	68fa      	ldr	r2, [r7, #12]
 800b162:	4313      	orrs	r3, r2
 800b164:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800b166:	687b      	ldr	r3, [r7, #4]
 800b168:	4a2f      	ldr	r2, [pc, #188]	; (800b228 <TIM_Base_SetConfig+0x114>)
 800b16a:	4293      	cmp	r3, r2
 800b16c:	d02b      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b16e:	687b      	ldr	r3, [r7, #4]
 800b170:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b174:	d027      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b176:	687b      	ldr	r3, [r7, #4]
 800b178:	4a2c      	ldr	r2, [pc, #176]	; (800b22c <TIM_Base_SetConfig+0x118>)
 800b17a:	4293      	cmp	r3, r2
 800b17c:	d023      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b17e:	687b      	ldr	r3, [r7, #4]
 800b180:	4a2b      	ldr	r2, [pc, #172]	; (800b230 <TIM_Base_SetConfig+0x11c>)
 800b182:	4293      	cmp	r3, r2
 800b184:	d01f      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b186:	687b      	ldr	r3, [r7, #4]
 800b188:	4a2a      	ldr	r2, [pc, #168]	; (800b234 <TIM_Base_SetConfig+0x120>)
 800b18a:	4293      	cmp	r3, r2
 800b18c:	d01b      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b18e:	687b      	ldr	r3, [r7, #4]
 800b190:	4a29      	ldr	r2, [pc, #164]	; (800b238 <TIM_Base_SetConfig+0x124>)
 800b192:	4293      	cmp	r3, r2
 800b194:	d017      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b196:	687b      	ldr	r3, [r7, #4]
 800b198:	4a28      	ldr	r2, [pc, #160]	; (800b23c <TIM_Base_SetConfig+0x128>)
 800b19a:	4293      	cmp	r3, r2
 800b19c:	d013      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b19e:	687b      	ldr	r3, [r7, #4]
 800b1a0:	4a27      	ldr	r2, [pc, #156]	; (800b240 <TIM_Base_SetConfig+0x12c>)
 800b1a2:	4293      	cmp	r3, r2
 800b1a4:	d00f      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b1a6:	687b      	ldr	r3, [r7, #4]
 800b1a8:	4a26      	ldr	r2, [pc, #152]	; (800b244 <TIM_Base_SetConfig+0x130>)
 800b1aa:	4293      	cmp	r3, r2
 800b1ac:	d00b      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b1ae:	687b      	ldr	r3, [r7, #4]
 800b1b0:	4a25      	ldr	r2, [pc, #148]	; (800b248 <TIM_Base_SetConfig+0x134>)
 800b1b2:	4293      	cmp	r3, r2
 800b1b4:	d007      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b1b6:	687b      	ldr	r3, [r7, #4]
 800b1b8:	4a24      	ldr	r2, [pc, #144]	; (800b24c <TIM_Base_SetConfig+0x138>)
 800b1ba:	4293      	cmp	r3, r2
 800b1bc:	d003      	beq.n	800b1c6 <TIM_Base_SetConfig+0xb2>
 800b1be:	687b      	ldr	r3, [r7, #4]
 800b1c0:	4a23      	ldr	r2, [pc, #140]	; (800b250 <TIM_Base_SetConfig+0x13c>)
 800b1c2:	4293      	cmp	r3, r2
 800b1c4:	d108      	bne.n	800b1d8 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800b1c6:	68fb      	ldr	r3, [r7, #12]
 800b1c8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b1cc:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b1ce:	683b      	ldr	r3, [r7, #0]
 800b1d0:	68db      	ldr	r3, [r3, #12]
 800b1d2:	68fa      	ldr	r2, [r7, #12]
 800b1d4:	4313      	orrs	r3, r2
 800b1d6:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b1d8:	68fb      	ldr	r3, [r7, #12]
 800b1da:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800b1de:	683b      	ldr	r3, [r7, #0]
 800b1e0:	695b      	ldr	r3, [r3, #20]
 800b1e2:	4313      	orrs	r3, r2
 800b1e4:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 800b1e6:	687b      	ldr	r3, [r7, #4]
 800b1e8:	68fa      	ldr	r2, [r7, #12]
 800b1ea:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b1ec:	683b      	ldr	r3, [r7, #0]
 800b1ee:	689a      	ldr	r2, [r3, #8]
 800b1f0:	687b      	ldr	r3, [r7, #4]
 800b1f2:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800b1f4:	683b      	ldr	r3, [r7, #0]
 800b1f6:	681a      	ldr	r2, [r3, #0]
 800b1f8:	687b      	ldr	r3, [r7, #4]
 800b1fa:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800b1fc:	687b      	ldr	r3, [r7, #4]
 800b1fe:	4a0a      	ldr	r2, [pc, #40]	; (800b228 <TIM_Base_SetConfig+0x114>)
 800b200:	4293      	cmp	r3, r2
 800b202:	d003      	beq.n	800b20c <TIM_Base_SetConfig+0xf8>
 800b204:	687b      	ldr	r3, [r7, #4]
 800b206:	4a0c      	ldr	r2, [pc, #48]	; (800b238 <TIM_Base_SetConfig+0x124>)
 800b208:	4293      	cmp	r3, r2
 800b20a:	d103      	bne.n	800b214 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800b20c:	683b      	ldr	r3, [r7, #0]
 800b20e:	691a      	ldr	r2, [r3, #16]
 800b210:	687b      	ldr	r3, [r7, #4]
 800b212:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800b214:	687b      	ldr	r3, [r7, #4]
 800b216:	2201      	movs	r2, #1
 800b218:	615a      	str	r2, [r3, #20]
}
 800b21a:	bf00      	nop
 800b21c:	3714      	adds	r7, #20
 800b21e:	46bd      	mov	sp, r7
 800b220:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b224:	4770      	bx	lr
 800b226:	bf00      	nop
 800b228:	40010000 	.word	0x40010000
 800b22c:	40000400 	.word	0x40000400
 800b230:	40000800 	.word	0x40000800
 800b234:	40000c00 	.word	0x40000c00
 800b238:	40010400 	.word	0x40010400
 800b23c:	40014000 	.word	0x40014000
 800b240:	40014400 	.word	0x40014400
 800b244:	40014800 	.word	0x40014800
 800b248:	40001800 	.word	0x40001800
 800b24c:	40001c00 	.word	0x40001c00
 800b250:	40002000 	.word	0x40002000

0800b254 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 800b254:	b480      	push	{r7}
 800b256:	b087      	sub	sp, #28
 800b258:	af00      	add	r7, sp, #0
 800b25a:	6078      	str	r0, [r7, #4]
 800b25c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b25e:	687b      	ldr	r3, [r7, #4]
 800b260:	6a1b      	ldr	r3, [r3, #32]
 800b262:	f023 0201 	bic.w	r2, r3, #1
 800b266:	687b      	ldr	r3, [r7, #4]
 800b268:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b26a:	687b      	ldr	r3, [r7, #4]
 800b26c:	6a1b      	ldr	r3, [r3, #32]
 800b26e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800b270:	687b      	ldr	r3, [r7, #4]
 800b272:	685b      	ldr	r3, [r3, #4]
 800b274:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800b276:	687b      	ldr	r3, [r7, #4]
 800b278:	699b      	ldr	r3, [r3, #24]
 800b27a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 800b27c:	68fb      	ldr	r3, [r7, #12]
 800b27e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b282:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800b284:	68fb      	ldr	r3, [r7, #12]
 800b286:	f023 0303 	bic.w	r3, r3, #3
 800b28a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800b28c:	683b      	ldr	r3, [r7, #0]
 800b28e:	681b      	ldr	r3, [r3, #0]
 800b290:	68fa      	ldr	r2, [r7, #12]
 800b292:	4313      	orrs	r3, r2
 800b294:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 800b296:	697b      	ldr	r3, [r7, #20]
 800b298:	f023 0302 	bic.w	r3, r3, #2
 800b29c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800b29e:	683b      	ldr	r3, [r7, #0]
 800b2a0:	689b      	ldr	r3, [r3, #8]
 800b2a2:	697a      	ldr	r2, [r7, #20]
 800b2a4:	4313      	orrs	r3, r2
 800b2a6:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800b2a8:	687b      	ldr	r3, [r7, #4]
 800b2aa:	4a20      	ldr	r2, [pc, #128]	; (800b32c <TIM_OC1_SetConfig+0xd8>)
 800b2ac:	4293      	cmp	r3, r2
 800b2ae:	d003      	beq.n	800b2b8 <TIM_OC1_SetConfig+0x64>
 800b2b0:	687b      	ldr	r3, [r7, #4]
 800b2b2:	4a1f      	ldr	r2, [pc, #124]	; (800b330 <TIM_OC1_SetConfig+0xdc>)
 800b2b4:	4293      	cmp	r3, r2
 800b2b6:	d10c      	bne.n	800b2d2 <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 800b2b8:	697b      	ldr	r3, [r7, #20]
 800b2ba:	f023 0308 	bic.w	r3, r3, #8
 800b2be:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800b2c0:	683b      	ldr	r3, [r7, #0]
 800b2c2:	68db      	ldr	r3, [r3, #12]
 800b2c4:	697a      	ldr	r2, [r7, #20]
 800b2c6:	4313      	orrs	r3, r2
 800b2c8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800b2ca:	697b      	ldr	r3, [r7, #20]
 800b2cc:	f023 0304 	bic.w	r3, r3, #4
 800b2d0:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800b2d2:	687b      	ldr	r3, [r7, #4]
 800b2d4:	4a15      	ldr	r2, [pc, #84]	; (800b32c <TIM_OC1_SetConfig+0xd8>)
 800b2d6:	4293      	cmp	r3, r2
 800b2d8:	d003      	beq.n	800b2e2 <TIM_OC1_SetConfig+0x8e>
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	4a14      	ldr	r2, [pc, #80]	; (800b330 <TIM_OC1_SetConfig+0xdc>)
 800b2de:	4293      	cmp	r3, r2
 800b2e0:	d111      	bne.n	800b306 <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 800b2e2:	693b      	ldr	r3, [r7, #16]
 800b2e4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b2e8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800b2ea:	693b      	ldr	r3, [r7, #16]
 800b2ec:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b2f0:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 800b2f2:	683b      	ldr	r3, [r7, #0]
 800b2f4:	695b      	ldr	r3, [r3, #20]
 800b2f6:	693a      	ldr	r2, [r7, #16]
 800b2f8:	4313      	orrs	r3, r2
 800b2fa:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800b2fc:	683b      	ldr	r3, [r7, #0]
 800b2fe:	699b      	ldr	r3, [r3, #24]
 800b300:	693a      	ldr	r2, [r7, #16]
 800b302:	4313      	orrs	r3, r2
 800b304:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b306:	687b      	ldr	r3, [r7, #4]
 800b308:	693a      	ldr	r2, [r7, #16]
 800b30a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800b30c:	687b      	ldr	r3, [r7, #4]
 800b30e:	68fa      	ldr	r2, [r7, #12]
 800b310:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800b312:	683b      	ldr	r3, [r7, #0]
 800b314:	685a      	ldr	r2, [r3, #4]
 800b316:	687b      	ldr	r3, [r7, #4]
 800b318:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b31a:	687b      	ldr	r3, [r7, #4]
 800b31c:	697a      	ldr	r2, [r7, #20]
 800b31e:	621a      	str	r2, [r3, #32]
}
 800b320:	bf00      	nop
 800b322:	371c      	adds	r7, #28
 800b324:	46bd      	mov	sp, r7
 800b326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b32a:	4770      	bx	lr
 800b32c:	40010000 	.word	0x40010000
 800b330:	40010400 	.word	0x40010400

0800b334 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 800b334:	b480      	push	{r7}
 800b336:	b087      	sub	sp, #28
 800b338:	af00      	add	r7, sp, #0
 800b33a:	6078      	str	r0, [r7, #4]
 800b33c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b33e:	687b      	ldr	r3, [r7, #4]
 800b340:	6a1b      	ldr	r3, [r3, #32]
 800b342:	f023 0210 	bic.w	r2, r3, #16
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b34a:	687b      	ldr	r3, [r7, #4]
 800b34c:	6a1b      	ldr	r3, [r3, #32]
 800b34e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800b350:	687b      	ldr	r3, [r7, #4]
 800b352:	685b      	ldr	r3, [r3, #4]
 800b354:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800b356:	687b      	ldr	r3, [r7, #4]
 800b358:	699b      	ldr	r3, [r3, #24]
 800b35a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 800b35c:	68fb      	ldr	r3, [r7, #12]
 800b35e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b362:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800b364:	68fb      	ldr	r3, [r7, #12]
 800b366:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b36a:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800b36c:	683b      	ldr	r3, [r7, #0]
 800b36e:	681b      	ldr	r3, [r3, #0]
 800b370:	021b      	lsls	r3, r3, #8
 800b372:	68fa      	ldr	r2, [r7, #12]
 800b374:	4313      	orrs	r3, r2
 800b376:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 800b378:	697b      	ldr	r3, [r7, #20]
 800b37a:	f023 0320 	bic.w	r3, r3, #32
 800b37e:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800b380:	683b      	ldr	r3, [r7, #0]
 800b382:	689b      	ldr	r3, [r3, #8]
 800b384:	011b      	lsls	r3, r3, #4
 800b386:	697a      	ldr	r2, [r7, #20]
 800b388:	4313      	orrs	r3, r2
 800b38a:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800b38c:	687b      	ldr	r3, [r7, #4]
 800b38e:	4a22      	ldr	r2, [pc, #136]	; (800b418 <TIM_OC2_SetConfig+0xe4>)
 800b390:	4293      	cmp	r3, r2
 800b392:	d003      	beq.n	800b39c <TIM_OC2_SetConfig+0x68>
 800b394:	687b      	ldr	r3, [r7, #4]
 800b396:	4a21      	ldr	r2, [pc, #132]	; (800b41c <TIM_OC2_SetConfig+0xe8>)
 800b398:	4293      	cmp	r3, r2
 800b39a:	d10d      	bne.n	800b3b8 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 800b39c:	697b      	ldr	r3, [r7, #20]
 800b39e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b3a2:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800b3a4:	683b      	ldr	r3, [r7, #0]
 800b3a6:	68db      	ldr	r3, [r3, #12]
 800b3a8:	011b      	lsls	r3, r3, #4
 800b3aa:	697a      	ldr	r2, [r7, #20]
 800b3ac:	4313      	orrs	r3, r2
 800b3ae:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 800b3b0:	697b      	ldr	r3, [r7, #20]
 800b3b2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b3b6:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800b3b8:	687b      	ldr	r3, [r7, #4]
 800b3ba:	4a17      	ldr	r2, [pc, #92]	; (800b418 <TIM_OC2_SetConfig+0xe4>)
 800b3bc:	4293      	cmp	r3, r2
 800b3be:	d003      	beq.n	800b3c8 <TIM_OC2_SetConfig+0x94>
 800b3c0:	687b      	ldr	r3, [r7, #4]
 800b3c2:	4a16      	ldr	r2, [pc, #88]	; (800b41c <TIM_OC2_SetConfig+0xe8>)
 800b3c4:	4293      	cmp	r3, r2
 800b3c6:	d113      	bne.n	800b3f0 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 800b3c8:	693b      	ldr	r3, [r7, #16]
 800b3ca:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b3ce:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800b3d0:	693b      	ldr	r3, [r7, #16]
 800b3d2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b3d6:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 800b3d8:	683b      	ldr	r3, [r7, #0]
 800b3da:	695b      	ldr	r3, [r3, #20]
 800b3dc:	009b      	lsls	r3, r3, #2
 800b3de:	693a      	ldr	r2, [r7, #16]
 800b3e0:	4313      	orrs	r3, r2
 800b3e2:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800b3e4:	683b      	ldr	r3, [r7, #0]
 800b3e6:	699b      	ldr	r3, [r3, #24]
 800b3e8:	009b      	lsls	r3, r3, #2
 800b3ea:	693a      	ldr	r2, [r7, #16]
 800b3ec:	4313      	orrs	r3, r2
 800b3ee:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b3f0:	687b      	ldr	r3, [r7, #4]
 800b3f2:	693a      	ldr	r2, [r7, #16]
 800b3f4:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800b3f6:	687b      	ldr	r3, [r7, #4]
 800b3f8:	68fa      	ldr	r2, [r7, #12]
 800b3fa:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 800b3fc:	683b      	ldr	r3, [r7, #0]
 800b3fe:	685a      	ldr	r2, [r3, #4]
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b404:	687b      	ldr	r3, [r7, #4]
 800b406:	697a      	ldr	r2, [r7, #20]
 800b408:	621a      	str	r2, [r3, #32]
}
 800b40a:	bf00      	nop
 800b40c:	371c      	adds	r7, #28
 800b40e:	46bd      	mov	sp, r7
 800b410:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b414:	4770      	bx	lr
 800b416:	bf00      	nop
 800b418:	40010000 	.word	0x40010000
 800b41c:	40010400 	.word	0x40010400

0800b420 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 800b420:	b480      	push	{r7}
 800b422:	b087      	sub	sp, #28
 800b424:	af00      	add	r7, sp, #0
 800b426:	6078      	str	r0, [r7, #4]
 800b428:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800b42a:	687b      	ldr	r3, [r7, #4]
 800b42c:	6a1b      	ldr	r3, [r3, #32]
 800b42e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	6a1b      	ldr	r3, [r3, #32]
 800b43a:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800b43c:	687b      	ldr	r3, [r7, #4]
 800b43e:	685b      	ldr	r3, [r3, #4]
 800b440:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800b442:	687b      	ldr	r3, [r7, #4]
 800b444:	69db      	ldr	r3, [r3, #28]
 800b446:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 800b448:	68fb      	ldr	r3, [r7, #12]
 800b44a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b44e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800b450:	68fb      	ldr	r3, [r7, #12]
 800b452:	f023 0303 	bic.w	r3, r3, #3
 800b456:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800b458:	683b      	ldr	r3, [r7, #0]
 800b45a:	681b      	ldr	r3, [r3, #0]
 800b45c:	68fa      	ldr	r2, [r7, #12]
 800b45e:	4313      	orrs	r3, r2
 800b460:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 800b462:	697b      	ldr	r3, [r7, #20]
 800b464:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b468:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800b46a:	683b      	ldr	r3, [r7, #0]
 800b46c:	689b      	ldr	r3, [r3, #8]
 800b46e:	021b      	lsls	r3, r3, #8
 800b470:	697a      	ldr	r2, [r7, #20]
 800b472:	4313      	orrs	r3, r2
 800b474:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800b476:	687b      	ldr	r3, [r7, #4]
 800b478:	4a21      	ldr	r2, [pc, #132]	; (800b500 <TIM_OC3_SetConfig+0xe0>)
 800b47a:	4293      	cmp	r3, r2
 800b47c:	d003      	beq.n	800b486 <TIM_OC3_SetConfig+0x66>
 800b47e:	687b      	ldr	r3, [r7, #4]
 800b480:	4a20      	ldr	r2, [pc, #128]	; (800b504 <TIM_OC3_SetConfig+0xe4>)
 800b482:	4293      	cmp	r3, r2
 800b484:	d10d      	bne.n	800b4a2 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 800b486:	697b      	ldr	r3, [r7, #20]
 800b488:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b48c:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800b48e:	683b      	ldr	r3, [r7, #0]
 800b490:	68db      	ldr	r3, [r3, #12]
 800b492:	021b      	lsls	r3, r3, #8
 800b494:	697a      	ldr	r2, [r7, #20]
 800b496:	4313      	orrs	r3, r2
 800b498:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 800b49a:	697b      	ldr	r3, [r7, #20]
 800b49c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b4a0:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800b4a2:	687b      	ldr	r3, [r7, #4]
 800b4a4:	4a16      	ldr	r2, [pc, #88]	; (800b500 <TIM_OC3_SetConfig+0xe0>)
 800b4a6:	4293      	cmp	r3, r2
 800b4a8:	d003      	beq.n	800b4b2 <TIM_OC3_SetConfig+0x92>
 800b4aa:	687b      	ldr	r3, [r7, #4]
 800b4ac:	4a15      	ldr	r2, [pc, #84]	; (800b504 <TIM_OC3_SetConfig+0xe4>)
 800b4ae:	4293      	cmp	r3, r2
 800b4b0:	d113      	bne.n	800b4da <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 800b4b2:	693b      	ldr	r3, [r7, #16]
 800b4b4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b4b8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800b4ba:	693b      	ldr	r3, [r7, #16]
 800b4bc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b4c0:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 800b4c2:	683b      	ldr	r3, [r7, #0]
 800b4c4:	695b      	ldr	r3, [r3, #20]
 800b4c6:	011b      	lsls	r3, r3, #4
 800b4c8:	693a      	ldr	r2, [r7, #16]
 800b4ca:	4313      	orrs	r3, r2
 800b4cc:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800b4ce:	683b      	ldr	r3, [r7, #0]
 800b4d0:	699b      	ldr	r3, [r3, #24]
 800b4d2:	011b      	lsls	r3, r3, #4
 800b4d4:	693a      	ldr	r2, [r7, #16]
 800b4d6:	4313      	orrs	r3, r2
 800b4d8:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b4da:	687b      	ldr	r3, [r7, #4]
 800b4dc:	693a      	ldr	r2, [r7, #16]
 800b4de:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800b4e0:	687b      	ldr	r3, [r7, #4]
 800b4e2:	68fa      	ldr	r2, [r7, #12]
 800b4e4:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800b4e6:	683b      	ldr	r3, [r7, #0]
 800b4e8:	685a      	ldr	r2, [r3, #4]
 800b4ea:	687b      	ldr	r3, [r7, #4]
 800b4ec:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b4ee:	687b      	ldr	r3, [r7, #4]
 800b4f0:	697a      	ldr	r2, [r7, #20]
 800b4f2:	621a      	str	r2, [r3, #32]
}
 800b4f4:	bf00      	nop
 800b4f6:	371c      	adds	r7, #28
 800b4f8:	46bd      	mov	sp, r7
 800b4fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4fe:	4770      	bx	lr
 800b500:	40010000 	.word	0x40010000
 800b504:	40010400 	.word	0x40010400

0800b508 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 800b508:	b480      	push	{r7}
 800b50a:	b087      	sub	sp, #28
 800b50c:	af00      	add	r7, sp, #0
 800b50e:	6078      	str	r0, [r7, #4]
 800b510:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800b512:	687b      	ldr	r3, [r7, #4]
 800b514:	6a1b      	ldr	r3, [r3, #32]
 800b516:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b51a:	687b      	ldr	r3, [r7, #4]
 800b51c:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b51e:	687b      	ldr	r3, [r7, #4]
 800b520:	6a1b      	ldr	r3, [r3, #32]
 800b522:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800b524:	687b      	ldr	r3, [r7, #4]
 800b526:	685b      	ldr	r3, [r3, #4]
 800b528:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800b52a:	687b      	ldr	r3, [r7, #4]
 800b52c:	69db      	ldr	r3, [r3, #28]
 800b52e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 800b530:	68fb      	ldr	r3, [r7, #12]
 800b532:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b536:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800b538:	68fb      	ldr	r3, [r7, #12]
 800b53a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b53e:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800b540:	683b      	ldr	r3, [r7, #0]
 800b542:	681b      	ldr	r3, [r3, #0]
 800b544:	021b      	lsls	r3, r3, #8
 800b546:	68fa      	ldr	r2, [r7, #12]
 800b548:	4313      	orrs	r3, r2
 800b54a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 800b54c:	693b      	ldr	r3, [r7, #16]
 800b54e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b552:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800b554:	683b      	ldr	r3, [r7, #0]
 800b556:	689b      	ldr	r3, [r3, #8]
 800b558:	031b      	lsls	r3, r3, #12
 800b55a:	693a      	ldr	r2, [r7, #16]
 800b55c:	4313      	orrs	r3, r2
 800b55e:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800b560:	687b      	ldr	r3, [r7, #4]
 800b562:	4a12      	ldr	r2, [pc, #72]	; (800b5ac <TIM_OC4_SetConfig+0xa4>)
 800b564:	4293      	cmp	r3, r2
 800b566:	d003      	beq.n	800b570 <TIM_OC4_SetConfig+0x68>
 800b568:	687b      	ldr	r3, [r7, #4]
 800b56a:	4a11      	ldr	r2, [pc, #68]	; (800b5b0 <TIM_OC4_SetConfig+0xa8>)
 800b56c:	4293      	cmp	r3, r2
 800b56e:	d109      	bne.n	800b584 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 800b570:	697b      	ldr	r3, [r7, #20]
 800b572:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800b576:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800b578:	683b      	ldr	r3, [r7, #0]
 800b57a:	695b      	ldr	r3, [r3, #20]
 800b57c:	019b      	lsls	r3, r3, #6
 800b57e:	697a      	ldr	r2, [r7, #20]
 800b580:	4313      	orrs	r3, r2
 800b582:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b584:	687b      	ldr	r3, [r7, #4]
 800b586:	697a      	ldr	r2, [r7, #20]
 800b588:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800b58a:	687b      	ldr	r3, [r7, #4]
 800b58c:	68fa      	ldr	r2, [r7, #12]
 800b58e:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800b590:	683b      	ldr	r3, [r7, #0]
 800b592:	685a      	ldr	r2, [r3, #4]
 800b594:	687b      	ldr	r3, [r7, #4]
 800b596:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b598:	687b      	ldr	r3, [r7, #4]
 800b59a:	693a      	ldr	r2, [r7, #16]
 800b59c:	621a      	str	r2, [r3, #32]
}
 800b59e:	bf00      	nop
 800b5a0:	371c      	adds	r7, #28
 800b5a2:	46bd      	mov	sp, r7
 800b5a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5a8:	4770      	bx	lr
 800b5aa:	bf00      	nop
 800b5ac:	40010000 	.word	0x40010000
 800b5b0:	40010400 	.word	0x40010400

0800b5b4 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 800b5b4:	b480      	push	{r7}
 800b5b6:	b087      	sub	sp, #28
 800b5b8:	af00      	add	r7, sp, #0
 800b5ba:	60f8      	str	r0, [r7, #12]
 800b5bc:	60b9      	str	r1, [r7, #8]
 800b5be:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800b5c0:	68fb      	ldr	r3, [r7, #12]
 800b5c2:	6a1b      	ldr	r3, [r3, #32]
 800b5c4:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b5c6:	68fb      	ldr	r3, [r7, #12]
 800b5c8:	6a1b      	ldr	r3, [r3, #32]
 800b5ca:	f023 0201 	bic.w	r2, r3, #1
 800b5ce:	68fb      	ldr	r3, [r7, #12]
 800b5d0:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b5d2:	68fb      	ldr	r3, [r7, #12]
 800b5d4:	699b      	ldr	r3, [r3, #24]
 800b5d6:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b5d8:	693b      	ldr	r3, [r7, #16]
 800b5da:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800b5de:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b5e0:	687b      	ldr	r3, [r7, #4]
 800b5e2:	011b      	lsls	r3, r3, #4
 800b5e4:	693a      	ldr	r2, [r7, #16]
 800b5e6:	4313      	orrs	r3, r2
 800b5e8:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b5ea:	697b      	ldr	r3, [r7, #20]
 800b5ec:	f023 030a 	bic.w	r3, r3, #10
 800b5f0:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 800b5f2:	697a      	ldr	r2, [r7, #20]
 800b5f4:	68bb      	ldr	r3, [r7, #8]
 800b5f6:	4313      	orrs	r3, r2
 800b5f8:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800b5fa:	68fb      	ldr	r3, [r7, #12]
 800b5fc:	693a      	ldr	r2, [r7, #16]
 800b5fe:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 800b600:	68fb      	ldr	r3, [r7, #12]
 800b602:	697a      	ldr	r2, [r7, #20]
 800b604:	621a      	str	r2, [r3, #32]
}
 800b606:	bf00      	nop
 800b608:	371c      	adds	r7, #28
 800b60a:	46bd      	mov	sp, r7
 800b60c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b610:	4770      	bx	lr

0800b612 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 800b612:	b480      	push	{r7}
 800b614:	b087      	sub	sp, #28
 800b616:	af00      	add	r7, sp, #0
 800b618:	60f8      	str	r0, [r7, #12]
 800b61a:	60b9      	str	r1, [r7, #8]
 800b61c:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b61e:	68fb      	ldr	r3, [r7, #12]
 800b620:	6a1b      	ldr	r3, [r3, #32]
 800b622:	f023 0210 	bic.w	r2, r3, #16
 800b626:	68fb      	ldr	r3, [r7, #12]
 800b628:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b62a:	68fb      	ldr	r3, [r7, #12]
 800b62c:	699b      	ldr	r3, [r3, #24]
 800b62e:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 800b630:	68fb      	ldr	r3, [r7, #12]
 800b632:	6a1b      	ldr	r3, [r3, #32]
 800b634:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800b636:	697b      	ldr	r3, [r7, #20]
 800b638:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b63c:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800b63e:	687b      	ldr	r3, [r7, #4]
 800b640:	031b      	lsls	r3, r3, #12
 800b642:	697a      	ldr	r2, [r7, #20]
 800b644:	4313      	orrs	r3, r2
 800b646:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800b648:	693b      	ldr	r3, [r7, #16]
 800b64a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800b64e:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 800b650:	68bb      	ldr	r3, [r7, #8]
 800b652:	011b      	lsls	r3, r3, #4
 800b654:	693a      	ldr	r2, [r7, #16]
 800b656:	4313      	orrs	r3, r2
 800b658:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 800b65a:	68fb      	ldr	r3, [r7, #12]
 800b65c:	697a      	ldr	r2, [r7, #20]
 800b65e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 800b660:	68fb      	ldr	r3, [r7, #12]
 800b662:	693a      	ldr	r2, [r7, #16]
 800b664:	621a      	str	r2, [r3, #32]
}
 800b666:	bf00      	nop
 800b668:	371c      	adds	r7, #28
 800b66a:	46bd      	mov	sp, r7
 800b66c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b670:	4770      	bx	lr

0800b672 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 800b672:	b480      	push	{r7}
 800b674:	b085      	sub	sp, #20
 800b676:	af00      	add	r7, sp, #0
 800b678:	6078      	str	r0, [r7, #4]
 800b67a:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800b67c:	687b      	ldr	r3, [r7, #4]
 800b67e:	689b      	ldr	r3, [r3, #8]
 800b680:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800b682:	68fb      	ldr	r3, [r7, #12]
 800b684:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b688:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b68a:	683a      	ldr	r2, [r7, #0]
 800b68c:	68fb      	ldr	r3, [r7, #12]
 800b68e:	4313      	orrs	r3, r2
 800b690:	f043 0307 	orr.w	r3, r3, #7
 800b694:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800b696:	687b      	ldr	r3, [r7, #4]
 800b698:	68fa      	ldr	r2, [r7, #12]
 800b69a:	609a      	str	r2, [r3, #8]
}
 800b69c:	bf00      	nop
 800b69e:	3714      	adds	r7, #20
 800b6a0:	46bd      	mov	sp, r7
 800b6a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6a6:	4770      	bx	lr

0800b6a8 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800b6a8:	b480      	push	{r7}
 800b6aa:	b087      	sub	sp, #28
 800b6ac:	af00      	add	r7, sp, #0
 800b6ae:	60f8      	str	r0, [r7, #12]
 800b6b0:	60b9      	str	r1, [r7, #8]
 800b6b2:	607a      	str	r2, [r7, #4]
 800b6b4:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800b6b6:	68fb      	ldr	r3, [r7, #12]
 800b6b8:	689b      	ldr	r3, [r3, #8]
 800b6ba:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b6bc:	697b      	ldr	r3, [r7, #20]
 800b6be:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b6c2:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b6c4:	683b      	ldr	r3, [r7, #0]
 800b6c6:	021a      	lsls	r2, r3, #8
 800b6c8:	687b      	ldr	r3, [r7, #4]
 800b6ca:	431a      	orrs	r2, r3
 800b6cc:	68bb      	ldr	r3, [r7, #8]
 800b6ce:	4313      	orrs	r3, r2
 800b6d0:	697a      	ldr	r2, [r7, #20]
 800b6d2:	4313      	orrs	r3, r2
 800b6d4:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800b6d6:	68fb      	ldr	r3, [r7, #12]
 800b6d8:	697a      	ldr	r2, [r7, #20]
 800b6da:	609a      	str	r2, [r3, #8]
}
 800b6dc:	bf00      	nop
 800b6de:	371c      	adds	r7, #28
 800b6e0:	46bd      	mov	sp, r7
 800b6e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6e6:	4770      	bx	lr

0800b6e8 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 800b6e8:	b480      	push	{r7}
 800b6ea:	b087      	sub	sp, #28
 800b6ec:	af00      	add	r7, sp, #0
 800b6ee:	60f8      	str	r0, [r7, #12]
 800b6f0:	60b9      	str	r1, [r7, #8]
 800b6f2:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800b6f4:	68bb      	ldr	r3, [r7, #8]
 800b6f6:	f003 031f 	and.w	r3, r3, #31
 800b6fa:	2201      	movs	r2, #1
 800b6fc:	fa02 f303 	lsl.w	r3, r2, r3
 800b700:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800b702:	68fb      	ldr	r3, [r7, #12]
 800b704:	6a1a      	ldr	r2, [r3, #32]
 800b706:	697b      	ldr	r3, [r7, #20]
 800b708:	43db      	mvns	r3, r3
 800b70a:	401a      	ands	r2, r3
 800b70c:	68fb      	ldr	r3, [r7, #12]
 800b70e:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800b710:	68fb      	ldr	r3, [r7, #12]
 800b712:	6a1a      	ldr	r2, [r3, #32]
 800b714:	68bb      	ldr	r3, [r7, #8]
 800b716:	f003 031f 	and.w	r3, r3, #31
 800b71a:	6879      	ldr	r1, [r7, #4]
 800b71c:	fa01 f303 	lsl.w	r3, r1, r3
 800b720:	431a      	orrs	r2, r3
 800b722:	68fb      	ldr	r3, [r7, #12]
 800b724:	621a      	str	r2, [r3, #32]
}
 800b726:	bf00      	nop
 800b728:	371c      	adds	r7, #28
 800b72a:	46bd      	mov	sp, r7
 800b72c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b730:	4770      	bx	lr
	...

0800b734 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 800b734:	b480      	push	{r7}
 800b736:	b085      	sub	sp, #20
 800b738:	af00      	add	r7, sp, #0
 800b73a:	6078      	str	r0, [r7, #4]
 800b73c:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800b73e:	687b      	ldr	r3, [r7, #4]
 800b740:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b744:	2b01      	cmp	r3, #1
 800b746:	d101      	bne.n	800b74c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800b748:	2302      	movs	r3, #2
 800b74a:	e05a      	b.n	800b802 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800b74c:	687b      	ldr	r3, [r7, #4]
 800b74e:	2201      	movs	r2, #1
 800b750:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800b754:	687b      	ldr	r3, [r7, #4]
 800b756:	2202      	movs	r2, #2
 800b758:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800b75c:	687b      	ldr	r3, [r7, #4]
 800b75e:	681b      	ldr	r3, [r3, #0]
 800b760:	685b      	ldr	r3, [r3, #4]
 800b762:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 800b764:	687b      	ldr	r3, [r7, #4]
 800b766:	681b      	ldr	r3, [r3, #0]
 800b768:	689b      	ldr	r3, [r3, #8]
 800b76a:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800b76c:	68fb      	ldr	r3, [r7, #12]
 800b76e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b772:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800b774:	683b      	ldr	r3, [r7, #0]
 800b776:	681b      	ldr	r3, [r3, #0]
 800b778:	68fa      	ldr	r2, [r7, #12]
 800b77a:	4313      	orrs	r3, r2
 800b77c:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800b77e:	687b      	ldr	r3, [r7, #4]
 800b780:	681b      	ldr	r3, [r3, #0]
 800b782:	68fa      	ldr	r2, [r7, #12]
 800b784:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b786:	687b      	ldr	r3, [r7, #4]
 800b788:	681b      	ldr	r3, [r3, #0]
 800b78a:	4a21      	ldr	r2, [pc, #132]	; (800b810 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800b78c:	4293      	cmp	r3, r2
 800b78e:	d022      	beq.n	800b7d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b790:	687b      	ldr	r3, [r7, #4]
 800b792:	681b      	ldr	r3, [r3, #0]
 800b794:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b798:	d01d      	beq.n	800b7d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b79a:	687b      	ldr	r3, [r7, #4]
 800b79c:	681b      	ldr	r3, [r3, #0]
 800b79e:	4a1d      	ldr	r2, [pc, #116]	; (800b814 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800b7a0:	4293      	cmp	r3, r2
 800b7a2:	d018      	beq.n	800b7d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b7a4:	687b      	ldr	r3, [r7, #4]
 800b7a6:	681b      	ldr	r3, [r3, #0]
 800b7a8:	4a1b      	ldr	r2, [pc, #108]	; (800b818 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800b7aa:	4293      	cmp	r3, r2
 800b7ac:	d013      	beq.n	800b7d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b7ae:	687b      	ldr	r3, [r7, #4]
 800b7b0:	681b      	ldr	r3, [r3, #0]
 800b7b2:	4a1a      	ldr	r2, [pc, #104]	; (800b81c <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800b7b4:	4293      	cmp	r3, r2
 800b7b6:	d00e      	beq.n	800b7d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b7b8:	687b      	ldr	r3, [r7, #4]
 800b7ba:	681b      	ldr	r3, [r3, #0]
 800b7bc:	4a18      	ldr	r2, [pc, #96]	; (800b820 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800b7be:	4293      	cmp	r3, r2
 800b7c0:	d009      	beq.n	800b7d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b7c2:	687b      	ldr	r3, [r7, #4]
 800b7c4:	681b      	ldr	r3, [r3, #0]
 800b7c6:	4a17      	ldr	r2, [pc, #92]	; (800b824 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800b7c8:	4293      	cmp	r3, r2
 800b7ca:	d004      	beq.n	800b7d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800b7cc:	687b      	ldr	r3, [r7, #4]
 800b7ce:	681b      	ldr	r3, [r3, #0]
 800b7d0:	4a15      	ldr	r2, [pc, #84]	; (800b828 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800b7d2:	4293      	cmp	r3, r2
 800b7d4:	d10c      	bne.n	800b7f0 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 800b7d6:	68bb      	ldr	r3, [r7, #8]
 800b7d8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b7dc:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800b7de:	683b      	ldr	r3, [r7, #0]
 800b7e0:	685b      	ldr	r3, [r3, #4]
 800b7e2:	68ba      	ldr	r2, [r7, #8]
 800b7e4:	4313      	orrs	r3, r2
 800b7e6:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800b7e8:	687b      	ldr	r3, [r7, #4]
 800b7ea:	681b      	ldr	r3, [r3, #0]
 800b7ec:	68ba      	ldr	r2, [r7, #8]
 800b7ee:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800b7f0:	687b      	ldr	r3, [r7, #4]
 800b7f2:	2201      	movs	r2, #1
 800b7f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800b7f8:	687b      	ldr	r3, [r7, #4]
 800b7fa:	2200      	movs	r2, #0
 800b7fc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 800b800:	2300      	movs	r3, #0
}
 800b802:	4618      	mov	r0, r3
 800b804:	3714      	adds	r7, #20
 800b806:	46bd      	mov	sp, r7
 800b808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b80c:	4770      	bx	lr
 800b80e:	bf00      	nop
 800b810:	40010000 	.word	0x40010000
 800b814:	40000400 	.word	0x40000400
 800b818:	40000800 	.word	0x40000800
 800b81c:	40000c00 	.word	0x40000c00
 800b820:	40010400 	.word	0x40010400
 800b824:	40014000 	.word	0x40014000
 800b828:	40001800 	.word	0x40001800

0800b82c <HAL_TIMEx_ConfigBreakDeadTime>:
  *         interrupt can be enabled by calling the @ref __HAL_TIM_ENABLE_IT macro.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_ConfigBreakDeadTime(TIM_HandleTypeDef *htim,
                                                TIM_BreakDeadTimeConfigTypeDef *sBreakDeadTimeConfig)
{
 800b82c:	b480      	push	{r7}
 800b82e:	b085      	sub	sp, #20
 800b830:	af00      	add	r7, sp, #0
 800b832:	6078      	str	r0, [r7, #4]
 800b834:	6039      	str	r1, [r7, #0]
  /* Keep this variable initialized to 0 as it is used to configure BDTR register */
  uint32_t tmpbdtr = 0U;
 800b836:	2300      	movs	r3, #0
 800b838:	60fb      	str	r3, [r7, #12]
  assert_param(IS_TIM_BREAK_STATE(sBreakDeadTimeConfig->BreakState));
  assert_param(IS_TIM_BREAK_POLARITY(sBreakDeadTimeConfig->BreakPolarity));
  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(sBreakDeadTimeConfig->AutomaticOutput));

  /* Check input state */
  __HAL_LOCK(htim);
 800b83a:	687b      	ldr	r3, [r7, #4]
 800b83c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b840:	2b01      	cmp	r3, #1
 800b842:	d101      	bne.n	800b848 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800b844:	2302      	movs	r3, #2
 800b846:	e03d      	b.n	800b8c4 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800b848:	687b      	ldr	r3, [r7, #4]
 800b84a:	2201      	movs	r2, #1
 800b84c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
     the OSSI State, the dead time value and the Automatic Output Enable Bit */

  /* Set the BDTR bits */
  MODIFY_REG(tmpbdtr, TIM_BDTR_DTG, sBreakDeadTimeConfig->DeadTime);
 800b850:	68fb      	ldr	r3, [r7, #12]
 800b852:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800b856:	683b      	ldr	r3, [r7, #0]
 800b858:	68db      	ldr	r3, [r3, #12]
 800b85a:	4313      	orrs	r3, r2
 800b85c:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
 800b85e:	68fb      	ldr	r3, [r7, #12]
 800b860:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800b864:	683b      	ldr	r3, [r7, #0]
 800b866:	689b      	ldr	r3, [r3, #8]
 800b868:	4313      	orrs	r3, r2
 800b86a:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
 800b86c:	68fb      	ldr	r3, [r7, #12]
 800b86e:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800b872:	683b      	ldr	r3, [r7, #0]
 800b874:	685b      	ldr	r3, [r3, #4]
 800b876:	4313      	orrs	r3, r2
 800b878:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
 800b87a:	68fb      	ldr	r3, [r7, #12]
 800b87c:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800b880:	683b      	ldr	r3, [r7, #0]
 800b882:	681b      	ldr	r3, [r3, #0]
 800b884:	4313      	orrs	r3, r2
 800b886:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
 800b888:	68fb      	ldr	r3, [r7, #12]
 800b88a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b88e:	683b      	ldr	r3, [r7, #0]
 800b890:	691b      	ldr	r3, [r3, #16]
 800b892:	4313      	orrs	r3, r2
 800b894:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
 800b896:	68fb      	ldr	r3, [r7, #12]
 800b898:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800b89c:	683b      	ldr	r3, [r7, #0]
 800b89e:	695b      	ldr	r3, [r3, #20]
 800b8a0:	4313      	orrs	r3, r2
 800b8a2:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
 800b8a4:	68fb      	ldr	r3, [r7, #12]
 800b8a6:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800b8aa:	683b      	ldr	r3, [r7, #0]
 800b8ac:	69db      	ldr	r3, [r3, #28]
 800b8ae:	4313      	orrs	r3, r2
 800b8b0:	60fb      	str	r3, [r7, #12]


  /* Set TIMx_BDTR */
  htim->Instance->BDTR = tmpbdtr;
 800b8b2:	687b      	ldr	r3, [r7, #4]
 800b8b4:	681b      	ldr	r3, [r3, #0]
 800b8b6:	68fa      	ldr	r2, [r7, #12]
 800b8b8:	645a      	str	r2, [r3, #68]	; 0x44

  __HAL_UNLOCK(htim);
 800b8ba:	687b      	ldr	r3, [r7, #4]
 800b8bc:	2200      	movs	r2, #0
 800b8be:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 800b8c2:	2300      	movs	r3, #0
}
 800b8c4:	4618      	mov	r0, r3
 800b8c6:	3714      	adds	r7, #20
 800b8c8:	46bd      	mov	sp, r7
 800b8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ce:	4770      	bx	lr

0800b8d0 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 800b8d0:	b480      	push	{r7}
 800b8d2:	b083      	sub	sp, #12
 800b8d4:	af00      	add	r7, sp, #0
 800b8d6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 800b8d8:	bf00      	nop
 800b8da:	370c      	adds	r7, #12
 800b8dc:	46bd      	mov	sp, r7
 800b8de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8e2:	4770      	bx	lr

0800b8e4 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 800b8e4:	b480      	push	{r7}
 800b8e6:	b083      	sub	sp, #12
 800b8e8:	af00      	add	r7, sp, #0
 800b8ea:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 800b8ec:	bf00      	nop
 800b8ee:	370c      	adds	r7, #12
 800b8f0:	46bd      	mov	sp, r7
 800b8f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8f6:	4770      	bx	lr

0800b8f8 <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800b8f8:	b580      	push	{r7, lr}
 800b8fa:	b08a      	sub	sp, #40	; 0x28
 800b8fc:	af02      	add	r7, sp, #8
 800b8fe:	60f8      	str	r0, [r7, #12]
 800b900:	60b9      	str	r1, [r7, #8]
 800b902:	603b      	str	r3, [r7, #0]
 800b904:	4613      	mov	r3, r2
 800b906:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart = 0U;
 800b908:	2300      	movs	r3, #0
 800b90a:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 800b90c:	68fb      	ldr	r3, [r7, #12]
 800b90e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b912:	b2db      	uxtb	r3, r3
 800b914:	2b20      	cmp	r3, #32
 800b916:	d17c      	bne.n	800ba12 <HAL_UART_Transmit+0x11a>
  {
    if ((pData == NULL) || (Size == 0U))
 800b918:	68bb      	ldr	r3, [r7, #8]
 800b91a:	2b00      	cmp	r3, #0
 800b91c:	d002      	beq.n	800b924 <HAL_UART_Transmit+0x2c>
 800b91e:	88fb      	ldrh	r3, [r7, #6]
 800b920:	2b00      	cmp	r3, #0
 800b922:	d101      	bne.n	800b928 <HAL_UART_Transmit+0x30>
    {
      return  HAL_ERROR;
 800b924:	2301      	movs	r3, #1
 800b926:	e075      	b.n	800ba14 <HAL_UART_Transmit+0x11c>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 800b928:	68fb      	ldr	r3, [r7, #12]
 800b92a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b92e:	2b01      	cmp	r3, #1
 800b930:	d101      	bne.n	800b936 <HAL_UART_Transmit+0x3e>
 800b932:	2302      	movs	r3, #2
 800b934:	e06e      	b.n	800ba14 <HAL_UART_Transmit+0x11c>
 800b936:	68fb      	ldr	r3, [r7, #12]
 800b938:	2201      	movs	r2, #1
 800b93a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b93e:	68fb      	ldr	r3, [r7, #12]
 800b940:	2200      	movs	r2, #0
 800b942:	641a      	str	r2, [r3, #64]	; 0x40
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800b944:	68fb      	ldr	r3, [r7, #12]
 800b946:	2221      	movs	r2, #33	; 0x21
 800b948:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 800b94c:	f7fd fe6a 	bl	8009624 <HAL_GetTick>
 800b950:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 800b952:	68fb      	ldr	r3, [r7, #12]
 800b954:	88fa      	ldrh	r2, [r7, #6]
 800b956:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 800b958:	68fb      	ldr	r3, [r7, #12]
 800b95a:	88fa      	ldrh	r2, [r7, #6]
 800b95c:	84da      	strh	r2, [r3, #38]	; 0x26

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800b95e:	68fb      	ldr	r3, [r7, #12]
 800b960:	689b      	ldr	r3, [r3, #8]
 800b962:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b966:	d108      	bne.n	800b97a <HAL_UART_Transmit+0x82>
 800b968:	68fb      	ldr	r3, [r7, #12]
 800b96a:	691b      	ldr	r3, [r3, #16]
 800b96c:	2b00      	cmp	r3, #0
 800b96e:	d104      	bne.n	800b97a <HAL_UART_Transmit+0x82>
    {
      pdata8bits  = NULL;
 800b970:	2300      	movs	r3, #0
 800b972:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 800b974:	68bb      	ldr	r3, [r7, #8]
 800b976:	61bb      	str	r3, [r7, #24]
 800b978:	e003      	b.n	800b982 <HAL_UART_Transmit+0x8a>
    }
    else
    {
      pdata8bits  = pData;
 800b97a:	68bb      	ldr	r3, [r7, #8]
 800b97c:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 800b97e:	2300      	movs	r3, #0
 800b980:	61bb      	str	r3, [r7, #24]
    }

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 800b982:	68fb      	ldr	r3, [r7, #12]
 800b984:	2200      	movs	r2, #0
 800b986:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    while (huart->TxXferCount > 0U)
 800b98a:	e02a      	b.n	800b9e2 <HAL_UART_Transmit+0xea>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800b98c:	683b      	ldr	r3, [r7, #0]
 800b98e:	9300      	str	r3, [sp, #0]
 800b990:	697b      	ldr	r3, [r7, #20]
 800b992:	2200      	movs	r2, #0
 800b994:	2180      	movs	r1, #128	; 0x80
 800b996:	68f8      	ldr	r0, [r7, #12]
 800b998:	f000 faf8 	bl	800bf8c <UART_WaitOnFlagUntilTimeout>
 800b99c:	4603      	mov	r3, r0
 800b99e:	2b00      	cmp	r3, #0
 800b9a0:	d001      	beq.n	800b9a6 <HAL_UART_Transmit+0xae>
      {
        return HAL_TIMEOUT;
 800b9a2:	2303      	movs	r3, #3
 800b9a4:	e036      	b.n	800ba14 <HAL_UART_Transmit+0x11c>
      }
      if (pdata8bits == NULL)
 800b9a6:	69fb      	ldr	r3, [r7, #28]
 800b9a8:	2b00      	cmp	r3, #0
 800b9aa:	d10b      	bne.n	800b9c4 <HAL_UART_Transmit+0xcc>
      {
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 800b9ac:	69bb      	ldr	r3, [r7, #24]
 800b9ae:	881b      	ldrh	r3, [r3, #0]
 800b9b0:	461a      	mov	r2, r3
 800b9b2:	68fb      	ldr	r3, [r7, #12]
 800b9b4:	681b      	ldr	r3, [r3, #0]
 800b9b6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b9ba:	605a      	str	r2, [r3, #4]
        pdata16bits++;
 800b9bc:	69bb      	ldr	r3, [r7, #24]
 800b9be:	3302      	adds	r3, #2
 800b9c0:	61bb      	str	r3, [r7, #24]
 800b9c2:	e007      	b.n	800b9d4 <HAL_UART_Transmit+0xdc>
      }
      else
      {
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 800b9c4:	69fb      	ldr	r3, [r7, #28]
 800b9c6:	781a      	ldrb	r2, [r3, #0]
 800b9c8:	68fb      	ldr	r3, [r7, #12]
 800b9ca:	681b      	ldr	r3, [r3, #0]
 800b9cc:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 800b9ce:	69fb      	ldr	r3, [r7, #28]
 800b9d0:	3301      	adds	r3, #1
 800b9d2:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 800b9d4:	68fb      	ldr	r3, [r7, #12]
 800b9d6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b9d8:	b29b      	uxth	r3, r3
 800b9da:	3b01      	subs	r3, #1
 800b9dc:	b29a      	uxth	r2, r3
 800b9de:	68fb      	ldr	r3, [r7, #12]
 800b9e0:	84da      	strh	r2, [r3, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 800b9e2:	68fb      	ldr	r3, [r7, #12]
 800b9e4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b9e6:	b29b      	uxth	r3, r3
 800b9e8:	2b00      	cmp	r3, #0
 800b9ea:	d1cf      	bne.n	800b98c <HAL_UART_Transmit+0x94>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 800b9ec:	683b      	ldr	r3, [r7, #0]
 800b9ee:	9300      	str	r3, [sp, #0]
 800b9f0:	697b      	ldr	r3, [r7, #20]
 800b9f2:	2200      	movs	r2, #0
 800b9f4:	2140      	movs	r1, #64	; 0x40
 800b9f6:	68f8      	ldr	r0, [r7, #12]
 800b9f8:	f000 fac8 	bl	800bf8c <UART_WaitOnFlagUntilTimeout>
 800b9fc:	4603      	mov	r3, r0
 800b9fe:	2b00      	cmp	r3, #0
 800ba00:	d001      	beq.n	800ba06 <HAL_UART_Transmit+0x10e>
    {
      return HAL_TIMEOUT;
 800ba02:	2303      	movs	r3, #3
 800ba04:	e006      	b.n	800ba14 <HAL_UART_Transmit+0x11c>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 800ba06:	68fb      	ldr	r3, [r7, #12]
 800ba08:	2220      	movs	r2, #32
 800ba0a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 800ba0e:	2300      	movs	r3, #0
 800ba10:	e000      	b.n	800ba14 <HAL_UART_Transmit+0x11c>
  }
  else
  {
    return HAL_BUSY;
 800ba12:	2302      	movs	r3, #2
  }
}
 800ba14:	4618      	mov	r0, r3
 800ba16:	3720      	adds	r7, #32
 800ba18:	46bd      	mov	sp, r7
 800ba1a:	bd80      	pop	{r7, pc}

0800ba1c <HAL_UART_IRQHandler>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 800ba1c:	b580      	push	{r7, lr}
 800ba1e:	b0ba      	sub	sp, #232	; 0xe8
 800ba20:	af00      	add	r7, sp, #0
 800ba22:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 800ba24:	687b      	ldr	r3, [r7, #4]
 800ba26:	681b      	ldr	r3, [r3, #0]
 800ba28:	681b      	ldr	r3, [r3, #0]
 800ba2a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 800ba2e:	687b      	ldr	r3, [r7, #4]
 800ba30:	681b      	ldr	r3, [r3, #0]
 800ba32:	68db      	ldr	r3, [r3, #12]
 800ba34:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 800ba38:	687b      	ldr	r3, [r7, #4]
 800ba3a:	681b      	ldr	r3, [r3, #0]
 800ba3c:	695b      	ldr	r3, [r3, #20]
 800ba3e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
  uint32_t errorflags = 0x00U;
 800ba42:	2300      	movs	r3, #0
 800ba44:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  uint32_t dmarequest = 0x00U;
 800ba48:	2300      	movs	r3, #0
 800ba4a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 800ba4e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ba52:	f003 030f 	and.w	r3, r3, #15
 800ba56:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  if (errorflags == RESET)
 800ba5a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800ba5e:	2b00      	cmp	r3, #0
 800ba60:	d10f      	bne.n	800ba82 <HAL_UART_IRQHandler+0x66>
  {
    /* UART in mode Receiver -------------------------------------------------*/
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 800ba62:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ba66:	f003 0320 	and.w	r3, r3, #32
 800ba6a:	2b00      	cmp	r3, #0
 800ba6c:	d009      	beq.n	800ba82 <HAL_UART_IRQHandler+0x66>
 800ba6e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ba72:	f003 0320 	and.w	r3, r3, #32
 800ba76:	2b00      	cmp	r3, #0
 800ba78:	d003      	beq.n	800ba82 <HAL_UART_IRQHandler+0x66>
    {
      UART_Receive_IT(huart);
 800ba7a:	6878      	ldr	r0, [r7, #4]
 800ba7c:	f000 fbd3 	bl	800c226 <UART_Receive_IT>
      return;
 800ba80:	e256      	b.n	800bf30 <HAL_UART_IRQHandler+0x514>
    }
  }

  /* If some errors occur */
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 800ba82:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800ba86:	2b00      	cmp	r3, #0
 800ba88:	f000 80de 	beq.w	800bc48 <HAL_UART_IRQHandler+0x22c>
 800ba8c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800ba90:	f003 0301 	and.w	r3, r3, #1
 800ba94:	2b00      	cmp	r3, #0
 800ba96:	d106      	bne.n	800baa6 <HAL_UART_IRQHandler+0x8a>
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 800ba98:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ba9c:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800baa0:	2b00      	cmp	r3, #0
 800baa2:	f000 80d1 	beq.w	800bc48 <HAL_UART_IRQHandler+0x22c>
  {
    /* UART parity error interrupt occurred ----------------------------------*/
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 800baa6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800baaa:	f003 0301 	and.w	r3, r3, #1
 800baae:	2b00      	cmp	r3, #0
 800bab0:	d00b      	beq.n	800baca <HAL_UART_IRQHandler+0xae>
 800bab2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bab6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800baba:	2b00      	cmp	r3, #0
 800babc:	d005      	beq.n	800baca <HAL_UART_IRQHandler+0xae>
    {
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800babe:	687b      	ldr	r3, [r7, #4]
 800bac0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bac2:	f043 0201 	orr.w	r2, r3, #1
 800bac6:	687b      	ldr	r3, [r7, #4]
 800bac8:	641a      	str	r2, [r3, #64]	; 0x40
    }

    /* UART noise error interrupt occurred -----------------------------------*/
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 800baca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bace:	f003 0304 	and.w	r3, r3, #4
 800bad2:	2b00      	cmp	r3, #0
 800bad4:	d00b      	beq.n	800baee <HAL_UART_IRQHandler+0xd2>
 800bad6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800bada:	f003 0301 	and.w	r3, r3, #1
 800bade:	2b00      	cmp	r3, #0
 800bae0:	d005      	beq.n	800baee <HAL_UART_IRQHandler+0xd2>
    {
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 800bae2:	687b      	ldr	r3, [r7, #4]
 800bae4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bae6:	f043 0202 	orr.w	r2, r3, #2
 800baea:	687b      	ldr	r3, [r7, #4]
 800baec:	641a      	str	r2, [r3, #64]	; 0x40
    }

    /* UART frame error interrupt occurred -----------------------------------*/
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 800baee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800baf2:	f003 0302 	and.w	r3, r3, #2
 800baf6:	2b00      	cmp	r3, #0
 800baf8:	d00b      	beq.n	800bb12 <HAL_UART_IRQHandler+0xf6>
 800bafa:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800bafe:	f003 0301 	and.w	r3, r3, #1
 800bb02:	2b00      	cmp	r3, #0
 800bb04:	d005      	beq.n	800bb12 <HAL_UART_IRQHandler+0xf6>
    {
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800bb06:	687b      	ldr	r3, [r7, #4]
 800bb08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bb0a:	f043 0204 	orr.w	r2, r3, #4
 800bb0e:	687b      	ldr	r3, [r7, #4]
 800bb10:	641a      	str	r2, [r3, #64]	; 0x40
    }

    /* UART Over-Run interrupt occurred --------------------------------------*/
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 800bb12:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bb16:	f003 0308 	and.w	r3, r3, #8
 800bb1a:	2b00      	cmp	r3, #0
 800bb1c:	d011      	beq.n	800bb42 <HAL_UART_IRQHandler+0x126>
 800bb1e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bb22:	f003 0320 	and.w	r3, r3, #32
 800bb26:	2b00      	cmp	r3, #0
 800bb28:	d105      	bne.n	800bb36 <HAL_UART_IRQHandler+0x11a>
                                                 || ((cr3its & USART_CR3_EIE) != RESET)))
 800bb2a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800bb2e:	f003 0301 	and.w	r3, r3, #1
 800bb32:	2b00      	cmp	r3, #0
 800bb34:	d005      	beq.n	800bb42 <HAL_UART_IRQHandler+0x126>
    {
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 800bb36:	687b      	ldr	r3, [r7, #4]
 800bb38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bb3a:	f043 0208 	orr.w	r2, r3, #8
 800bb3e:	687b      	ldr	r3, [r7, #4]
 800bb40:	641a      	str	r2, [r3, #64]	; 0x40
    }

    /* Call UART Error Call back function if need be --------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 800bb42:	687b      	ldr	r3, [r7, #4]
 800bb44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bb46:	2b00      	cmp	r3, #0
 800bb48:	f000 81ed 	beq.w	800bf26 <HAL_UART_IRQHandler+0x50a>
    {
      /* UART in mode Receiver -----------------------------------------------*/
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 800bb4c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bb50:	f003 0320 	and.w	r3, r3, #32
 800bb54:	2b00      	cmp	r3, #0
 800bb56:	d008      	beq.n	800bb6a <HAL_UART_IRQHandler+0x14e>
 800bb58:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bb5c:	f003 0320 	and.w	r3, r3, #32
 800bb60:	2b00      	cmp	r3, #0
 800bb62:	d002      	beq.n	800bb6a <HAL_UART_IRQHandler+0x14e>
      {
        UART_Receive_IT(huart);
 800bb64:	6878      	ldr	r0, [r7, #4]
 800bb66:	f000 fb5e 	bl	800c226 <UART_Receive_IT>
      }

      /* If Overrun error occurs, or if any error occurs in DMA mode reception,
         consider error as blocking */
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 800bb6a:	687b      	ldr	r3, [r7, #4]
 800bb6c:	681b      	ldr	r3, [r3, #0]
 800bb6e:	695b      	ldr	r3, [r3, #20]
 800bb70:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bb74:	2b40      	cmp	r3, #64	; 0x40
 800bb76:	bf0c      	ite	eq
 800bb78:	2301      	moveq	r3, #1
 800bb7a:	2300      	movne	r3, #0
 800bb7c:	b2db      	uxtb	r3, r3
 800bb7e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 800bb82:	687b      	ldr	r3, [r7, #4]
 800bb84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bb86:	f003 0308 	and.w	r3, r3, #8
 800bb8a:	2b00      	cmp	r3, #0
 800bb8c:	d103      	bne.n	800bb96 <HAL_UART_IRQHandler+0x17a>
 800bb8e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800bb92:	2b00      	cmp	r3, #0
 800bb94:	d04f      	beq.n	800bc36 <HAL_UART_IRQHandler+0x21a>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 800bb96:	6878      	ldr	r0, [r7, #4]
 800bb98:	f000 fa66 	bl	800c068 <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800bb9c:	687b      	ldr	r3, [r7, #4]
 800bb9e:	681b      	ldr	r3, [r3, #0]
 800bba0:	695b      	ldr	r3, [r3, #20]
 800bba2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bba6:	2b40      	cmp	r3, #64	; 0x40
 800bba8:	d141      	bne.n	800bc2e <HAL_UART_IRQHandler+0x212>
        {
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800bbaa:	687b      	ldr	r3, [r7, #4]
 800bbac:	681b      	ldr	r3, [r3, #0]
 800bbae:	3314      	adds	r3, #20
 800bbb0:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bbb4:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800bbb8:	e853 3f00 	ldrex	r3, [r3]
 800bbbc:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
   return(result);
 800bbc0:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800bbc4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bbc8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800bbcc:	687b      	ldr	r3, [r7, #4]
 800bbce:	681b      	ldr	r3, [r3, #0]
 800bbd0:	3314      	adds	r3, #20
 800bbd2:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800bbd6:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800bbda:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bbde:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800bbe2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800bbe6:	e841 2300 	strex	r3, r2, [r1]
 800bbea:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
   return(result);
 800bbee:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800bbf2:	2b00      	cmp	r3, #0
 800bbf4:	d1d9      	bne.n	800bbaa <HAL_UART_IRQHandler+0x18e>

          /* Abort the UART DMA Rx stream */
          if (huart->hdmarx != NULL)
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bbfa:	2b00      	cmp	r3, #0
 800bbfc:	d013      	beq.n	800bc26 <HAL_UART_IRQHandler+0x20a>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 800bbfe:	687b      	ldr	r3, [r7, #4]
 800bc00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc02:	4a7d      	ldr	r2, [pc, #500]	; (800bdf8 <HAL_UART_IRQHandler+0x3dc>)
 800bc04:	651a      	str	r2, [r3, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 800bc06:	687b      	ldr	r3, [r7, #4]
 800bc08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc0a:	4618      	mov	r0, r3
 800bc0c:	f7fd fec9 	bl	80099a2 <HAL_DMA_Abort_IT>
 800bc10:	4603      	mov	r3, r0
 800bc12:	2b00      	cmp	r3, #0
 800bc14:	d016      	beq.n	800bc44 <HAL_UART_IRQHandler+0x228>
            {
              /* Call Directly XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 800bc16:	687b      	ldr	r3, [r7, #4]
 800bc18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc1a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800bc1c:	687a      	ldr	r2, [r7, #4]
 800bc1e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800bc20:	4610      	mov	r0, r2
 800bc22:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800bc24:	e00e      	b.n	800bc44 <HAL_UART_IRQHandler+0x228>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 800bc26:	6878      	ldr	r0, [r7, #4]
 800bc28:	f000 f99a 	bl	800bf60 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800bc2c:	e00a      	b.n	800bc44 <HAL_UART_IRQHandler+0x228>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 800bc2e:	6878      	ldr	r0, [r7, #4]
 800bc30:	f000 f996 	bl	800bf60 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800bc34:	e006      	b.n	800bc44 <HAL_UART_IRQHandler+0x228>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 800bc36:	6878      	ldr	r0, [r7, #4]
 800bc38:	f000 f992 	bl	800bf60 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

        huart->ErrorCode = HAL_UART_ERROR_NONE;
 800bc3c:	687b      	ldr	r3, [r7, #4]
 800bc3e:	2200      	movs	r2, #0
 800bc40:	641a      	str	r2, [r3, #64]	; 0x40
      }
    }
    return;
 800bc42:	e170      	b.n	800bf26 <HAL_UART_IRQHandler+0x50a>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800bc44:	bf00      	nop
    return;
 800bc46:	e16e      	b.n	800bf26 <HAL_UART_IRQHandler+0x50a>
  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800bc48:	687b      	ldr	r3, [r7, #4]
 800bc4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bc4c:	2b01      	cmp	r3, #1
 800bc4e:	f040 814a 	bne.w	800bee6 <HAL_UART_IRQHandler+0x4ca>
      && ((isrflags & USART_SR_IDLE) != 0U)
 800bc52:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bc56:	f003 0310 	and.w	r3, r3, #16
 800bc5a:	2b00      	cmp	r3, #0
 800bc5c:	f000 8143 	beq.w	800bee6 <HAL_UART_IRQHandler+0x4ca>
      && ((cr1its & USART_SR_IDLE) != 0U))
 800bc60:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bc64:	f003 0310 	and.w	r3, r3, #16
 800bc68:	2b00      	cmp	r3, #0
 800bc6a:	f000 813c 	beq.w	800bee6 <HAL_UART_IRQHandler+0x4ca>
  {
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 800bc6e:	2300      	movs	r3, #0
 800bc70:	60bb      	str	r3, [r7, #8]
 800bc72:	687b      	ldr	r3, [r7, #4]
 800bc74:	681b      	ldr	r3, [r3, #0]
 800bc76:	681b      	ldr	r3, [r3, #0]
 800bc78:	60bb      	str	r3, [r7, #8]
 800bc7a:	687b      	ldr	r3, [r7, #4]
 800bc7c:	681b      	ldr	r3, [r3, #0]
 800bc7e:	685b      	ldr	r3, [r3, #4]
 800bc80:	60bb      	str	r3, [r7, #8]
 800bc82:	68bb      	ldr	r3, [r7, #8]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800bc84:	687b      	ldr	r3, [r7, #4]
 800bc86:	681b      	ldr	r3, [r3, #0]
 800bc88:	695b      	ldr	r3, [r3, #20]
 800bc8a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bc8e:	2b40      	cmp	r3, #64	; 0x40
 800bc90:	f040 80b4 	bne.w	800bdfc <HAL_UART_IRQHandler+0x3e0>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 800bc94:	687b      	ldr	r3, [r7, #4]
 800bc96:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc98:	681b      	ldr	r3, [r3, #0]
 800bc9a:	685b      	ldr	r3, [r3, #4]
 800bc9c:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
      if ((nb_remaining_rx_data > 0U)
 800bca0:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800bca4:	2b00      	cmp	r3, #0
 800bca6:	f000 8140 	beq.w	800bf2a <HAL_UART_IRQHandler+0x50e>
          && (nb_remaining_rx_data < huart->RxXferSize))
 800bcaa:	687b      	ldr	r3, [r7, #4]
 800bcac:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800bcae:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800bcb2:	429a      	cmp	r2, r3
 800bcb4:	f080 8139 	bcs.w	800bf2a <HAL_UART_IRQHandler+0x50e>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 800bcb8:	687b      	ldr	r3, [r7, #4]
 800bcba:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800bcbe:	85da      	strh	r2, [r3, #46]	; 0x2e

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 800bcc0:	687b      	ldr	r3, [r7, #4]
 800bcc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bcc4:	69db      	ldr	r3, [r3, #28]
 800bcc6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bcca:	f000 8088 	beq.w	800bdde <HAL_UART_IRQHandler+0x3c2>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800bcce:	687b      	ldr	r3, [r7, #4]
 800bcd0:	681b      	ldr	r3, [r3, #0]
 800bcd2:	330c      	adds	r3, #12
 800bcd4:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bcd8:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800bcdc:	e853 3f00 	ldrex	r3, [r3]
 800bce0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
   return(result);
 800bce4:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800bce8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800bcec:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800bcf0:	687b      	ldr	r3, [r7, #4]
 800bcf2:	681b      	ldr	r3, [r3, #0]
 800bcf4:	330c      	adds	r3, #12
 800bcf6:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800bcfa:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800bcfe:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bd02:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800bd06:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800bd0a:	e841 2300 	strex	r3, r2, [r1]
 800bd0e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
   return(result);
 800bd12:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800bd16:	2b00      	cmp	r3, #0
 800bd18:	d1d9      	bne.n	800bcce <HAL_UART_IRQHandler+0x2b2>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800bd1a:	687b      	ldr	r3, [r7, #4]
 800bd1c:	681b      	ldr	r3, [r3, #0]
 800bd1e:	3314      	adds	r3, #20
 800bd20:	677b      	str	r3, [r7, #116]	; 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bd22:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800bd24:	e853 3f00 	ldrex	r3, [r3]
 800bd28:	673b      	str	r3, [r7, #112]	; 0x70
   return(result);
 800bd2a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800bd2c:	f023 0301 	bic.w	r3, r3, #1
 800bd30:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800bd34:	687b      	ldr	r3, [r7, #4]
 800bd36:	681b      	ldr	r3, [r3, #0]
 800bd38:	3314      	adds	r3, #20
 800bd3a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800bd3e:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800bd42:	67fb      	str	r3, [r7, #124]	; 0x7c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bd44:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800bd46:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800bd4a:	e841 2300 	strex	r3, r2, [r1]
 800bd4e:	67bb      	str	r3, [r7, #120]	; 0x78
   return(result);
 800bd50:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800bd52:	2b00      	cmp	r3, #0
 800bd54:	d1e1      	bne.n	800bd1a <HAL_UART_IRQHandler+0x2fe>

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800bd56:	687b      	ldr	r3, [r7, #4]
 800bd58:	681b      	ldr	r3, [r3, #0]
 800bd5a:	3314      	adds	r3, #20
 800bd5c:	663b      	str	r3, [r7, #96]	; 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bd5e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800bd60:	e853 3f00 	ldrex	r3, [r3]
 800bd64:	65fb      	str	r3, [r7, #92]	; 0x5c
   return(result);
 800bd66:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800bd68:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bd6c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800bd70:	687b      	ldr	r3, [r7, #4]
 800bd72:	681b      	ldr	r3, [r3, #0]
 800bd74:	3314      	adds	r3, #20
 800bd76:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800bd7a:	66fa      	str	r2, [r7, #108]	; 0x6c
 800bd7c:	66bb      	str	r3, [r7, #104]	; 0x68
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bd7e:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800bd80:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800bd82:	e841 2300 	strex	r3, r2, [r1]
 800bd86:	667b      	str	r3, [r7, #100]	; 0x64
   return(result);
 800bd88:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800bd8a:	2b00      	cmp	r3, #0
 800bd8c:	d1e3      	bne.n	800bd56 <HAL_UART_IRQHandler+0x33a>

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 800bd8e:	687b      	ldr	r3, [r7, #4]
 800bd90:	2220      	movs	r2, #32
 800bd92:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800bd96:	687b      	ldr	r3, [r7, #4]
 800bd98:	2200      	movs	r2, #0
 800bd9a:	631a      	str	r2, [r3, #48]	; 0x30

          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800bd9c:	687b      	ldr	r3, [r7, #4]
 800bd9e:	681b      	ldr	r3, [r3, #0]
 800bda0:	330c      	adds	r3, #12
 800bda2:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bda4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800bda6:	e853 3f00 	ldrex	r3, [r3]
 800bdaa:	64bb      	str	r3, [r7, #72]	; 0x48
   return(result);
 800bdac:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800bdae:	f023 0310 	bic.w	r3, r3, #16
 800bdb2:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800bdb6:	687b      	ldr	r3, [r7, #4]
 800bdb8:	681b      	ldr	r3, [r3, #0]
 800bdba:	330c      	adds	r3, #12
 800bdbc:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800bdc0:	65ba      	str	r2, [r7, #88]	; 0x58
 800bdc2:	657b      	str	r3, [r7, #84]	; 0x54
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bdc4:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800bdc6:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800bdc8:	e841 2300 	strex	r3, r2, [r1]
 800bdcc:	653b      	str	r3, [r7, #80]	; 0x50
   return(result);
 800bdce:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800bdd0:	2b00      	cmp	r3, #0
 800bdd2:	d1e3      	bne.n	800bd9c <HAL_UART_IRQHandler+0x380>

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 800bdd4:	687b      	ldr	r3, [r7, #4]
 800bdd6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bdd8:	4618      	mov	r0, r3
 800bdda:	f7fd fd72 	bl	80098c2 <HAL_DMA_Abort>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 800bdde:	687b      	ldr	r3, [r7, #4]
 800bde0:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800bde2:	687b      	ldr	r3, [r7, #4]
 800bde4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800bde6:	b29b      	uxth	r3, r3
 800bde8:	1ad3      	subs	r3, r2, r3
 800bdea:	b29b      	uxth	r3, r3
 800bdec:	4619      	mov	r1, r3
 800bdee:	6878      	ldr	r0, [r7, #4]
 800bdf0:	f000 f8c0 	bl	800bf74 <HAL_UARTEx_RxEventCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      return;
 800bdf4:	e099      	b.n	800bf2a <HAL_UART_IRQHandler+0x50e>
 800bdf6:	bf00      	nop
 800bdf8:	0800c12f 	.word	0x0800c12f
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800bdfc:	687b      	ldr	r3, [r7, #4]
 800bdfe:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800be00:	687b      	ldr	r3, [r7, #4]
 800be02:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800be04:	b29b      	uxth	r3, r3
 800be06:	1ad3      	subs	r3, r2, r3
 800be08:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
      if ((huart->RxXferCount > 0U)
 800be0c:	687b      	ldr	r3, [r7, #4]
 800be0e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800be10:	b29b      	uxth	r3, r3
 800be12:	2b00      	cmp	r3, #0
 800be14:	f000 808b 	beq.w	800bf2e <HAL_UART_IRQHandler+0x512>
          && (nb_rx_data > 0U))
 800be18:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800be1c:	2b00      	cmp	r3, #0
 800be1e:	f000 8086 	beq.w	800bf2e <HAL_UART_IRQHandler+0x512>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800be22:	687b      	ldr	r3, [r7, #4]
 800be24:	681b      	ldr	r3, [r3, #0]
 800be26:	330c      	adds	r3, #12
 800be28:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800be2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800be2c:	e853 3f00 	ldrex	r3, [r3]
 800be30:	637b      	str	r3, [r7, #52]	; 0x34
   return(result);
 800be32:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800be34:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800be38:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800be3c:	687b      	ldr	r3, [r7, #4]
 800be3e:	681b      	ldr	r3, [r3, #0]
 800be40:	330c      	adds	r3, #12
 800be42:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800be46:	647a      	str	r2, [r7, #68]	; 0x44
 800be48:	643b      	str	r3, [r7, #64]	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800be4a:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800be4c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800be4e:	e841 2300 	strex	r3, r2, [r1]
 800be52:	63fb      	str	r3, [r7, #60]	; 0x3c
   return(result);
 800be54:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800be56:	2b00      	cmp	r3, #0
 800be58:	d1e3      	bne.n	800be22 <HAL_UART_IRQHandler+0x406>

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800be5a:	687b      	ldr	r3, [r7, #4]
 800be5c:	681b      	ldr	r3, [r3, #0]
 800be5e:	3314      	adds	r3, #20
 800be60:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800be62:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800be64:	e853 3f00 	ldrex	r3, [r3]
 800be68:	623b      	str	r3, [r7, #32]
   return(result);
 800be6a:	6a3b      	ldr	r3, [r7, #32]
 800be6c:	f023 0301 	bic.w	r3, r3, #1
 800be70:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800be74:	687b      	ldr	r3, [r7, #4]
 800be76:	681b      	ldr	r3, [r3, #0]
 800be78:	3314      	adds	r3, #20
 800be7a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800be7e:	633a      	str	r2, [r7, #48]	; 0x30
 800be80:	62fb      	str	r3, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800be82:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800be84:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800be86:	e841 2300 	strex	r3, r2, [r1]
 800be8a:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 800be8c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800be8e:	2b00      	cmp	r3, #0
 800be90:	d1e3      	bne.n	800be5a <HAL_UART_IRQHandler+0x43e>

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 800be92:	687b      	ldr	r3, [r7, #4]
 800be94:	2220      	movs	r2, #32
 800be96:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800be9a:	687b      	ldr	r3, [r7, #4]
 800be9c:	2200      	movs	r2, #0
 800be9e:	631a      	str	r2, [r3, #48]	; 0x30

        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800bea0:	687b      	ldr	r3, [r7, #4]
 800bea2:	681b      	ldr	r3, [r3, #0]
 800bea4:	330c      	adds	r3, #12
 800bea6:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bea8:	693b      	ldr	r3, [r7, #16]
 800beaa:	e853 3f00 	ldrex	r3, [r3]
 800beae:	60fb      	str	r3, [r7, #12]
   return(result);
 800beb0:	68fb      	ldr	r3, [r7, #12]
 800beb2:	f023 0310 	bic.w	r3, r3, #16
 800beb6:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800beba:	687b      	ldr	r3, [r7, #4]
 800bebc:	681b      	ldr	r3, [r3, #0]
 800bebe:	330c      	adds	r3, #12
 800bec0:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800bec4:	61fa      	str	r2, [r7, #28]
 800bec6:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bec8:	69b9      	ldr	r1, [r7, #24]
 800beca:	69fa      	ldr	r2, [r7, #28]
 800becc:	e841 2300 	strex	r3, r2, [r1]
 800bed0:	617b      	str	r3, [r7, #20]
   return(result);
 800bed2:	697b      	ldr	r3, [r7, #20]
 800bed4:	2b00      	cmp	r3, #0
 800bed6:	d1e3      	bne.n	800bea0 <HAL_UART_IRQHandler+0x484>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 800bed8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800bedc:	4619      	mov	r1, r3
 800bede:	6878      	ldr	r0, [r7, #4]
 800bee0:	f000 f848 	bl	800bf74 <HAL_UARTEx_RxEventCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      return;
 800bee4:	e023      	b.n	800bf2e <HAL_UART_IRQHandler+0x512>
    }
  }

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 800bee6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800beea:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800beee:	2b00      	cmp	r3, #0
 800bef0:	d009      	beq.n	800bf06 <HAL_UART_IRQHandler+0x4ea>
 800bef2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bef6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800befa:	2b00      	cmp	r3, #0
 800befc:	d003      	beq.n	800bf06 <HAL_UART_IRQHandler+0x4ea>
  {
    UART_Transmit_IT(huart);
 800befe:	6878      	ldr	r0, [r7, #4]
 800bf00:	f000 f929 	bl	800c156 <UART_Transmit_IT>
    return;
 800bf04:	e014      	b.n	800bf30 <HAL_UART_IRQHandler+0x514>
  }

  /* UART in mode Transmitter end --------------------------------------------*/
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 800bf06:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bf0a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bf0e:	2b00      	cmp	r3, #0
 800bf10:	d00e      	beq.n	800bf30 <HAL_UART_IRQHandler+0x514>
 800bf12:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bf16:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bf1a:	2b00      	cmp	r3, #0
 800bf1c:	d008      	beq.n	800bf30 <HAL_UART_IRQHandler+0x514>
  {
    UART_EndTransmit_IT(huart);
 800bf1e:	6878      	ldr	r0, [r7, #4]
 800bf20:	f000 f969 	bl	800c1f6 <UART_EndTransmit_IT>
    return;
 800bf24:	e004      	b.n	800bf30 <HAL_UART_IRQHandler+0x514>
    return;
 800bf26:	bf00      	nop
 800bf28:	e002      	b.n	800bf30 <HAL_UART_IRQHandler+0x514>
      return;
 800bf2a:	bf00      	nop
 800bf2c:	e000      	b.n	800bf30 <HAL_UART_IRQHandler+0x514>
      return;
 800bf2e:	bf00      	nop
  }
}
 800bf30:	37e8      	adds	r7, #232	; 0xe8
 800bf32:	46bd      	mov	sp, r7
 800bf34:	bd80      	pop	{r7, pc}
 800bf36:	bf00      	nop

0800bf38 <HAL_UART_TxCpltCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 800bf38:	b480      	push	{r7}
 800bf3a:	b083      	sub	sp, #12
 800bf3c:	af00      	add	r7, sp, #0
 800bf3e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_TxCpltCallback could be implemented in the user file
   */
}
 800bf40:	bf00      	nop
 800bf42:	370c      	adds	r7, #12
 800bf44:	46bd      	mov	sp, r7
 800bf46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf4a:	4770      	bx	lr

0800bf4c <HAL_UART_RxCpltCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 800bf4c:	b480      	push	{r7}
 800bf4e:	b083      	sub	sp, #12
 800bf50:	af00      	add	r7, sp, #0
 800bf52:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_RxCpltCallback could be implemented in the user file
   */
}
 800bf54:	bf00      	nop
 800bf56:	370c      	adds	r7, #12
 800bf58:	46bd      	mov	sp, r7
 800bf5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf5e:	4770      	bx	lr

0800bf60 <HAL_UART_ErrorCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 800bf60:	b480      	push	{r7}
 800bf62:	b083      	sub	sp, #12
 800bf64:	af00      	add	r7, sp, #0
 800bf66:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_ErrorCallback could be implemented in the user file
   */
}
 800bf68:	bf00      	nop
 800bf6a:	370c      	adds	r7, #12
 800bf6c:	46bd      	mov	sp, r7
 800bf6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf72:	4770      	bx	lr

0800bf74 <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 800bf74:	b480      	push	{r7}
 800bf76:	b083      	sub	sp, #12
 800bf78:	af00      	add	r7, sp, #0
 800bf7a:	6078      	str	r0, [r7, #4]
 800bf7c:	460b      	mov	r3, r1
 800bf7e:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 800bf80:	bf00      	nop
 800bf82:	370c      	adds	r7, #12
 800bf84:	46bd      	mov	sp, r7
 800bf86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf8a:	4770      	bx	lr

0800bf8c <UART_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                                     uint32_t Tickstart, uint32_t Timeout)
{
 800bf8c:	b580      	push	{r7, lr}
 800bf8e:	b090      	sub	sp, #64	; 0x40
 800bf90:	af00      	add	r7, sp, #0
 800bf92:	60f8      	str	r0, [r7, #12]
 800bf94:	60b9      	str	r1, [r7, #8]
 800bf96:	603b      	str	r3, [r7, #0]
 800bf98:	4613      	mov	r3, r2
 800bf9a:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800bf9c:	e050      	b.n	800c040 <UART_WaitOnFlagUntilTimeout+0xb4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800bf9e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800bfa0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800bfa4:	d04c      	beq.n	800c040 <UART_WaitOnFlagUntilTimeout+0xb4>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800bfa6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800bfa8:	2b00      	cmp	r3, #0
 800bfaa:	d007      	beq.n	800bfbc <UART_WaitOnFlagUntilTimeout+0x30>
 800bfac:	f7fd fb3a 	bl	8009624 <HAL_GetTick>
 800bfb0:	4602      	mov	r2, r0
 800bfb2:	683b      	ldr	r3, [r7, #0]
 800bfb4:	1ad3      	subs	r3, r2, r3
 800bfb6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800bfb8:	429a      	cmp	r2, r3
 800bfba:	d241      	bcs.n	800c040 <UART_WaitOnFlagUntilTimeout+0xb4>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800bfbc:	68fb      	ldr	r3, [r7, #12]
 800bfbe:	681b      	ldr	r3, [r3, #0]
 800bfc0:	330c      	adds	r3, #12
 800bfc2:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bfc4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bfc6:	e853 3f00 	ldrex	r3, [r3]
 800bfca:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800bfcc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bfce:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800bfd2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800bfd4:	68fb      	ldr	r3, [r7, #12]
 800bfd6:	681b      	ldr	r3, [r3, #0]
 800bfd8:	330c      	adds	r3, #12
 800bfda:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800bfdc:	637a      	str	r2, [r7, #52]	; 0x34
 800bfde:	633b      	str	r3, [r7, #48]	; 0x30
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bfe0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800bfe2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800bfe4:	e841 2300 	strex	r3, r2, [r1]
 800bfe8:	62fb      	str	r3, [r7, #44]	; 0x2c
   return(result);
 800bfea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bfec:	2b00      	cmp	r3, #0
 800bfee:	d1e5      	bne.n	800bfbc <UART_WaitOnFlagUntilTimeout+0x30>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800bff0:	68fb      	ldr	r3, [r7, #12]
 800bff2:	681b      	ldr	r3, [r3, #0]
 800bff4:	3314      	adds	r3, #20
 800bff6:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bff8:	697b      	ldr	r3, [r7, #20]
 800bffa:	e853 3f00 	ldrex	r3, [r3]
 800bffe:	613b      	str	r3, [r7, #16]
   return(result);
 800c000:	693b      	ldr	r3, [r7, #16]
 800c002:	f023 0301 	bic.w	r3, r3, #1
 800c006:	63bb      	str	r3, [r7, #56]	; 0x38
 800c008:	68fb      	ldr	r3, [r7, #12]
 800c00a:	681b      	ldr	r3, [r3, #0]
 800c00c:	3314      	adds	r3, #20
 800c00e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c010:	623a      	str	r2, [r7, #32]
 800c012:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c014:	69f9      	ldr	r1, [r7, #28]
 800c016:	6a3a      	ldr	r2, [r7, #32]
 800c018:	e841 2300 	strex	r3, r2, [r1]
 800c01c:	61bb      	str	r3, [r7, #24]
   return(result);
 800c01e:	69bb      	ldr	r3, [r7, #24]
 800c020:	2b00      	cmp	r3, #0
 800c022:	d1e5      	bne.n	800bff0 <UART_WaitOnFlagUntilTimeout+0x64>

        huart->gState  = HAL_UART_STATE_READY;
 800c024:	68fb      	ldr	r3, [r7, #12]
 800c026:	2220      	movs	r2, #32
 800c028:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        huart->RxState = HAL_UART_STATE_READY;
 800c02c:	68fb      	ldr	r3, [r7, #12]
 800c02e:	2220      	movs	r2, #32
 800c030:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 800c034:	68fb      	ldr	r3, [r7, #12]
 800c036:	2200      	movs	r2, #0
 800c038:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_TIMEOUT;
 800c03c:	2303      	movs	r3, #3
 800c03e:	e00f      	b.n	800c060 <UART_WaitOnFlagUntilTimeout+0xd4>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800c040:	68fb      	ldr	r3, [r7, #12]
 800c042:	681b      	ldr	r3, [r3, #0]
 800c044:	681a      	ldr	r2, [r3, #0]
 800c046:	68bb      	ldr	r3, [r7, #8]
 800c048:	4013      	ands	r3, r2
 800c04a:	68ba      	ldr	r2, [r7, #8]
 800c04c:	429a      	cmp	r2, r3
 800c04e:	bf0c      	ite	eq
 800c050:	2301      	moveq	r3, #1
 800c052:	2300      	movne	r3, #0
 800c054:	b2db      	uxtb	r3, r3
 800c056:	461a      	mov	r2, r3
 800c058:	79fb      	ldrb	r3, [r7, #7]
 800c05a:	429a      	cmp	r2, r3
 800c05c:	d09f      	beq.n	800bf9e <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 800c05e:	2300      	movs	r3, #0
}
 800c060:	4618      	mov	r0, r3
 800c062:	3740      	adds	r7, #64	; 0x40
 800c064:	46bd      	mov	sp, r7
 800c066:	bd80      	pop	{r7, pc}

0800c068 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 800c068:	b480      	push	{r7}
 800c06a:	b095      	sub	sp, #84	; 0x54
 800c06c:	af00      	add	r7, sp, #0
 800c06e:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800c070:	687b      	ldr	r3, [r7, #4]
 800c072:	681b      	ldr	r3, [r3, #0]
 800c074:	330c      	adds	r3, #12
 800c076:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c078:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c07a:	e853 3f00 	ldrex	r3, [r3]
 800c07e:	633b      	str	r3, [r7, #48]	; 0x30
   return(result);
 800c080:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c082:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800c086:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c088:	687b      	ldr	r3, [r7, #4]
 800c08a:	681b      	ldr	r3, [r3, #0]
 800c08c:	330c      	adds	r3, #12
 800c08e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800c090:	643a      	str	r2, [r7, #64]	; 0x40
 800c092:	63fb      	str	r3, [r7, #60]	; 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c094:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800c096:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800c098:	e841 2300 	strex	r3, r2, [r1]
 800c09c:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 800c09e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c0a0:	2b00      	cmp	r3, #0
 800c0a2:	d1e5      	bne.n	800c070 <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800c0a4:	687b      	ldr	r3, [r7, #4]
 800c0a6:	681b      	ldr	r3, [r3, #0]
 800c0a8:	3314      	adds	r3, #20
 800c0aa:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c0ac:	6a3b      	ldr	r3, [r7, #32]
 800c0ae:	e853 3f00 	ldrex	r3, [r3]
 800c0b2:	61fb      	str	r3, [r7, #28]
   return(result);
 800c0b4:	69fb      	ldr	r3, [r7, #28]
 800c0b6:	f023 0301 	bic.w	r3, r3, #1
 800c0ba:	64bb      	str	r3, [r7, #72]	; 0x48
 800c0bc:	687b      	ldr	r3, [r7, #4]
 800c0be:	681b      	ldr	r3, [r3, #0]
 800c0c0:	3314      	adds	r3, #20
 800c0c2:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c0c4:	62fa      	str	r2, [r7, #44]	; 0x2c
 800c0c6:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c0c8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800c0ca:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c0cc:	e841 2300 	strex	r3, r2, [r1]
 800c0d0:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800c0d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c0d4:	2b00      	cmp	r3, #0
 800c0d6:	d1e5      	bne.n	800c0a4 <UART_EndRxTransfer+0x3c>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800c0d8:	687b      	ldr	r3, [r7, #4]
 800c0da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c0dc:	2b01      	cmp	r3, #1
 800c0de:	d119      	bne.n	800c114 <UART_EndRxTransfer+0xac>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800c0e0:	687b      	ldr	r3, [r7, #4]
 800c0e2:	681b      	ldr	r3, [r3, #0]
 800c0e4:	330c      	adds	r3, #12
 800c0e6:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c0e8:	68fb      	ldr	r3, [r7, #12]
 800c0ea:	e853 3f00 	ldrex	r3, [r3]
 800c0ee:	60bb      	str	r3, [r7, #8]
   return(result);
 800c0f0:	68bb      	ldr	r3, [r7, #8]
 800c0f2:	f023 0310 	bic.w	r3, r3, #16
 800c0f6:	647b      	str	r3, [r7, #68]	; 0x44
 800c0f8:	687b      	ldr	r3, [r7, #4]
 800c0fa:	681b      	ldr	r3, [r3, #0]
 800c0fc:	330c      	adds	r3, #12
 800c0fe:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c100:	61ba      	str	r2, [r7, #24]
 800c102:	617b      	str	r3, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c104:	6979      	ldr	r1, [r7, #20]
 800c106:	69ba      	ldr	r2, [r7, #24]
 800c108:	e841 2300 	strex	r3, r2, [r1]
 800c10c:	613b      	str	r3, [r7, #16]
   return(result);
 800c10e:	693b      	ldr	r3, [r7, #16]
 800c110:	2b00      	cmp	r3, #0
 800c112:	d1e5      	bne.n	800c0e0 <UART_EndRxTransfer+0x78>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800c114:	687b      	ldr	r3, [r7, #4]
 800c116:	2220      	movs	r2, #32
 800c118:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800c11c:	687b      	ldr	r3, [r7, #4]
 800c11e:	2200      	movs	r2, #0
 800c120:	631a      	str	r2, [r3, #48]	; 0x30
}
 800c122:	bf00      	nop
 800c124:	3754      	adds	r7, #84	; 0x54
 800c126:	46bd      	mov	sp, r7
 800c128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c12c:	4770      	bx	lr

0800c12e <UART_DMAAbortOnError>:
  * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800c12e:	b580      	push	{r7, lr}
 800c130:	b084      	sub	sp, #16
 800c132:	af00      	add	r7, sp, #0
 800c134:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800c136:	687b      	ldr	r3, [r7, #4]
 800c138:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c13a:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0x00U;
 800c13c:	68fb      	ldr	r3, [r7, #12]
 800c13e:	2200      	movs	r2, #0
 800c140:	85da      	strh	r2, [r3, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 800c142:	68fb      	ldr	r3, [r7, #12]
 800c144:	2200      	movs	r2, #0
 800c146:	84da      	strh	r2, [r3, #38]	; 0x26
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 800c148:	68f8      	ldr	r0, [r7, #12]
 800c14a:	f7ff ff09 	bl	800bf60 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 800c14e:	bf00      	nop
 800c150:	3710      	adds	r7, #16
 800c152:	46bd      	mov	sp, r7
 800c154:	bd80      	pop	{r7, pc}

0800c156 <UART_Transmit_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
 800c156:	b480      	push	{r7}
 800c158:	b085      	sub	sp, #20
 800c15a:	af00      	add	r7, sp, #0
 800c15c:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800c15e:	687b      	ldr	r3, [r7, #4]
 800c160:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c164:	b2db      	uxtb	r3, r3
 800c166:	2b21      	cmp	r3, #33	; 0x21
 800c168:	d13e      	bne.n	800c1e8 <UART_Transmit_IT+0x92>
  {
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800c16a:	687b      	ldr	r3, [r7, #4]
 800c16c:	689b      	ldr	r3, [r3, #8]
 800c16e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c172:	d114      	bne.n	800c19e <UART_Transmit_IT+0x48>
 800c174:	687b      	ldr	r3, [r7, #4]
 800c176:	691b      	ldr	r3, [r3, #16]
 800c178:	2b00      	cmp	r3, #0
 800c17a:	d110      	bne.n	800c19e <UART_Transmit_IT+0x48>
    {
      tmp = (uint16_t *) huart->pTxBuffPtr;
 800c17c:	687b      	ldr	r3, [r7, #4]
 800c17e:	6a1b      	ldr	r3, [r3, #32]
 800c180:	60fb      	str	r3, [r7, #12]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 800c182:	68fb      	ldr	r3, [r7, #12]
 800c184:	881b      	ldrh	r3, [r3, #0]
 800c186:	461a      	mov	r2, r3
 800c188:	687b      	ldr	r3, [r7, #4]
 800c18a:	681b      	ldr	r3, [r3, #0]
 800c18c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800c190:	605a      	str	r2, [r3, #4]
      huart->pTxBuffPtr += 2U;
 800c192:	687b      	ldr	r3, [r7, #4]
 800c194:	6a1b      	ldr	r3, [r3, #32]
 800c196:	1c9a      	adds	r2, r3, #2
 800c198:	687b      	ldr	r3, [r7, #4]
 800c19a:	621a      	str	r2, [r3, #32]
 800c19c:	e008      	b.n	800c1b0 <UART_Transmit_IT+0x5a>
    }
    else
    {
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 800c19e:	687b      	ldr	r3, [r7, #4]
 800c1a0:	6a1b      	ldr	r3, [r3, #32]
 800c1a2:	1c59      	adds	r1, r3, #1
 800c1a4:	687a      	ldr	r2, [r7, #4]
 800c1a6:	6211      	str	r1, [r2, #32]
 800c1a8:	781a      	ldrb	r2, [r3, #0]
 800c1aa:	687b      	ldr	r3, [r7, #4]
 800c1ac:	681b      	ldr	r3, [r3, #0]
 800c1ae:	605a      	str	r2, [r3, #4]
    }

    if (--huart->TxXferCount == 0U)
 800c1b0:	687b      	ldr	r3, [r7, #4]
 800c1b2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800c1b4:	b29b      	uxth	r3, r3
 800c1b6:	3b01      	subs	r3, #1
 800c1b8:	b29b      	uxth	r3, r3
 800c1ba:	687a      	ldr	r2, [r7, #4]
 800c1bc:	4619      	mov	r1, r3
 800c1be:	84d1      	strh	r1, [r2, #38]	; 0x26
 800c1c0:	2b00      	cmp	r3, #0
 800c1c2:	d10f      	bne.n	800c1e4 <UART_Transmit_IT+0x8e>
    {
      /* Disable the UART Transmit Complete Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 800c1c4:	687b      	ldr	r3, [r7, #4]
 800c1c6:	681b      	ldr	r3, [r3, #0]
 800c1c8:	68da      	ldr	r2, [r3, #12]
 800c1ca:	687b      	ldr	r3, [r7, #4]
 800c1cc:	681b      	ldr	r3, [r3, #0]
 800c1ce:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800c1d2:	60da      	str	r2, [r3, #12]

      /* Enable the UART Transmit Complete Interrupt */
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 800c1d4:	687b      	ldr	r3, [r7, #4]
 800c1d6:	681b      	ldr	r3, [r3, #0]
 800c1d8:	68da      	ldr	r2, [r3, #12]
 800c1da:	687b      	ldr	r3, [r7, #4]
 800c1dc:	681b      	ldr	r3, [r3, #0]
 800c1de:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800c1e2:	60da      	str	r2, [r3, #12]
    }
    return HAL_OK;
 800c1e4:	2300      	movs	r3, #0
 800c1e6:	e000      	b.n	800c1ea <UART_Transmit_IT+0x94>
  }
  else
  {
    return HAL_BUSY;
 800c1e8:	2302      	movs	r3, #2
  }
}
 800c1ea:	4618      	mov	r0, r3
 800c1ec:	3714      	adds	r7, #20
 800c1ee:	46bd      	mov	sp, r7
 800c1f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1f4:	4770      	bx	lr

0800c1f6 <UART_EndTransmit_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 800c1f6:	b580      	push	{r7, lr}
 800c1f8:	b082      	sub	sp, #8
 800c1fa:	af00      	add	r7, sp, #0
 800c1fc:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 800c1fe:	687b      	ldr	r3, [r7, #4]
 800c200:	681b      	ldr	r3, [r3, #0]
 800c202:	68da      	ldr	r2, [r3, #12]
 800c204:	687b      	ldr	r3, [r7, #4]
 800c206:	681b      	ldr	r3, [r3, #0]
 800c208:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c20c:	60da      	str	r2, [r3, #12]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 800c20e:	687b      	ldr	r3, [r7, #4]
 800c210:	2220      	movs	r2, #32
 800c212:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 800c216:	6878      	ldr	r0, [r7, #4]
 800c218:	f7ff fe8e 	bl	800bf38 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

  return HAL_OK;
 800c21c:	2300      	movs	r3, #0
}
 800c21e:	4618      	mov	r0, r3
 800c220:	3708      	adds	r7, #8
 800c222:	46bd      	mov	sp, r7
 800c224:	bd80      	pop	{r7, pc}

0800c226 <UART_Receive_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
{
 800c226:	b580      	push	{r7, lr}
 800c228:	b08c      	sub	sp, #48	; 0x30
 800c22a:	af00      	add	r7, sp, #0
 800c22c:	6078      	str	r0, [r7, #4]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800c22e:	687b      	ldr	r3, [r7, #4]
 800c230:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800c234:	b2db      	uxtb	r3, r3
 800c236:	2b22      	cmp	r3, #34	; 0x22
 800c238:	f040 80ab 	bne.w	800c392 <UART_Receive_IT+0x16c>
  {
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800c23c:	687b      	ldr	r3, [r7, #4]
 800c23e:	689b      	ldr	r3, [r3, #8]
 800c240:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c244:	d117      	bne.n	800c276 <UART_Receive_IT+0x50>
 800c246:	687b      	ldr	r3, [r7, #4]
 800c248:	691b      	ldr	r3, [r3, #16]
 800c24a:	2b00      	cmp	r3, #0
 800c24c:	d113      	bne.n	800c276 <UART_Receive_IT+0x50>
    {
      pdata8bits  = NULL;
 800c24e:	2300      	movs	r3, #0
 800c250:	62fb      	str	r3, [r7, #44]	; 0x2c
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 800c252:	687b      	ldr	r3, [r7, #4]
 800c254:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c256:	62bb      	str	r3, [r7, #40]	; 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 800c258:	687b      	ldr	r3, [r7, #4]
 800c25a:	681b      	ldr	r3, [r3, #0]
 800c25c:	685b      	ldr	r3, [r3, #4]
 800c25e:	b29b      	uxth	r3, r3
 800c260:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800c264:	b29a      	uxth	r2, r3
 800c266:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c268:	801a      	strh	r2, [r3, #0]
      huart->pRxBuffPtr += 2U;
 800c26a:	687b      	ldr	r3, [r7, #4]
 800c26c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c26e:	1c9a      	adds	r2, r3, #2
 800c270:	687b      	ldr	r3, [r7, #4]
 800c272:	629a      	str	r2, [r3, #40]	; 0x28
 800c274:	e026      	b.n	800c2c4 <UART_Receive_IT+0x9e>
    }
    else
    {
      pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 800c276:	687b      	ldr	r3, [r7, #4]
 800c278:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c27a:	62fb      	str	r3, [r7, #44]	; 0x2c
      pdata16bits  = NULL;
 800c27c:	2300      	movs	r3, #0
 800c27e:	62bb      	str	r3, [r7, #40]	; 0x28

      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 800c280:	687b      	ldr	r3, [r7, #4]
 800c282:	689b      	ldr	r3, [r3, #8]
 800c284:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c288:	d007      	beq.n	800c29a <UART_Receive_IT+0x74>
 800c28a:	687b      	ldr	r3, [r7, #4]
 800c28c:	689b      	ldr	r3, [r3, #8]
 800c28e:	2b00      	cmp	r3, #0
 800c290:	d10a      	bne.n	800c2a8 <UART_Receive_IT+0x82>
 800c292:	687b      	ldr	r3, [r7, #4]
 800c294:	691b      	ldr	r3, [r3, #16]
 800c296:	2b00      	cmp	r3, #0
 800c298:	d106      	bne.n	800c2a8 <UART_Receive_IT+0x82>
      {
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 800c29a:	687b      	ldr	r3, [r7, #4]
 800c29c:	681b      	ldr	r3, [r3, #0]
 800c29e:	685b      	ldr	r3, [r3, #4]
 800c2a0:	b2da      	uxtb	r2, r3
 800c2a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c2a4:	701a      	strb	r2, [r3, #0]
 800c2a6:	e008      	b.n	800c2ba <UART_Receive_IT+0x94>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 800c2a8:	687b      	ldr	r3, [r7, #4]
 800c2aa:	681b      	ldr	r3, [r3, #0]
 800c2ac:	685b      	ldr	r3, [r3, #4]
 800c2ae:	b2db      	uxtb	r3, r3
 800c2b0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800c2b4:	b2da      	uxtb	r2, r3
 800c2b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c2b8:	701a      	strb	r2, [r3, #0]
      }
      huart->pRxBuffPtr += 1U;
 800c2ba:	687b      	ldr	r3, [r7, #4]
 800c2bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c2be:	1c5a      	adds	r2, r3, #1
 800c2c0:	687b      	ldr	r3, [r7, #4]
 800c2c2:	629a      	str	r2, [r3, #40]	; 0x28
    }

    if (--huart->RxXferCount == 0U)
 800c2c4:	687b      	ldr	r3, [r7, #4]
 800c2c6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c2c8:	b29b      	uxth	r3, r3
 800c2ca:	3b01      	subs	r3, #1
 800c2cc:	b29b      	uxth	r3, r3
 800c2ce:	687a      	ldr	r2, [r7, #4]
 800c2d0:	4619      	mov	r1, r3
 800c2d2:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800c2d4:	2b00      	cmp	r3, #0
 800c2d6:	d15a      	bne.n	800c38e <UART_Receive_IT+0x168>
    {
      /* Disable the UART Data Register not empty Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 800c2d8:	687b      	ldr	r3, [r7, #4]
 800c2da:	681b      	ldr	r3, [r3, #0]
 800c2dc:	68da      	ldr	r2, [r3, #12]
 800c2de:	687b      	ldr	r3, [r7, #4]
 800c2e0:	681b      	ldr	r3, [r3, #0]
 800c2e2:	f022 0220 	bic.w	r2, r2, #32
 800c2e6:	60da      	str	r2, [r3, #12]

      /* Disable the UART Parity Error Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 800c2e8:	687b      	ldr	r3, [r7, #4]
 800c2ea:	681b      	ldr	r3, [r3, #0]
 800c2ec:	68da      	ldr	r2, [r3, #12]
 800c2ee:	687b      	ldr	r3, [r7, #4]
 800c2f0:	681b      	ldr	r3, [r3, #0]
 800c2f2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800c2f6:	60da      	str	r2, [r3, #12]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 800c2f8:	687b      	ldr	r3, [r7, #4]
 800c2fa:	681b      	ldr	r3, [r3, #0]
 800c2fc:	695a      	ldr	r2, [r3, #20]
 800c2fe:	687b      	ldr	r3, [r7, #4]
 800c300:	681b      	ldr	r3, [r3, #0]
 800c302:	f022 0201 	bic.w	r2, r2, #1
 800c306:	615a      	str	r2, [r3, #20]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 800c308:	687b      	ldr	r3, [r7, #4]
 800c30a:	2220      	movs	r2, #32
 800c30c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800c310:	687b      	ldr	r3, [r7, #4]
 800c312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c314:	2b01      	cmp	r3, #1
 800c316:	d135      	bne.n	800c384 <UART_Receive_IT+0x15e>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800c318:	687b      	ldr	r3, [r7, #4]
 800c31a:	2200      	movs	r2, #0
 800c31c:	631a      	str	r2, [r3, #48]	; 0x30

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800c31e:	687b      	ldr	r3, [r7, #4]
 800c320:	681b      	ldr	r3, [r3, #0]
 800c322:	330c      	adds	r3, #12
 800c324:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c326:	697b      	ldr	r3, [r7, #20]
 800c328:	e853 3f00 	ldrex	r3, [r3]
 800c32c:	613b      	str	r3, [r7, #16]
   return(result);
 800c32e:	693b      	ldr	r3, [r7, #16]
 800c330:	f023 0310 	bic.w	r3, r3, #16
 800c334:	627b      	str	r3, [r7, #36]	; 0x24
 800c336:	687b      	ldr	r3, [r7, #4]
 800c338:	681b      	ldr	r3, [r3, #0]
 800c33a:	330c      	adds	r3, #12
 800c33c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800c33e:	623a      	str	r2, [r7, #32]
 800c340:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c342:	69f9      	ldr	r1, [r7, #28]
 800c344:	6a3a      	ldr	r2, [r7, #32]
 800c346:	e841 2300 	strex	r3, r2, [r1]
 800c34a:	61bb      	str	r3, [r7, #24]
   return(result);
 800c34c:	69bb      	ldr	r3, [r7, #24]
 800c34e:	2b00      	cmp	r3, #0
 800c350:	d1e5      	bne.n	800c31e <UART_Receive_IT+0xf8>

        /* Check if IDLE flag is set */
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 800c352:	687b      	ldr	r3, [r7, #4]
 800c354:	681b      	ldr	r3, [r3, #0]
 800c356:	681b      	ldr	r3, [r3, #0]
 800c358:	f003 0310 	and.w	r3, r3, #16
 800c35c:	2b10      	cmp	r3, #16
 800c35e:	d10a      	bne.n	800c376 <UART_Receive_IT+0x150>
        {
          /* Clear IDLE flag in ISR */
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 800c360:	2300      	movs	r3, #0
 800c362:	60fb      	str	r3, [r7, #12]
 800c364:	687b      	ldr	r3, [r7, #4]
 800c366:	681b      	ldr	r3, [r3, #0]
 800c368:	681b      	ldr	r3, [r3, #0]
 800c36a:	60fb      	str	r3, [r7, #12]
 800c36c:	687b      	ldr	r3, [r7, #4]
 800c36e:	681b      	ldr	r3, [r3, #0]
 800c370:	685b      	ldr	r3, [r3, #4]
 800c372:	60fb      	str	r3, [r7, #12]
 800c374:	68fb      	ldr	r3, [r7, #12]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 800c376:	687b      	ldr	r3, [r7, #4]
 800c378:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800c37a:	4619      	mov	r1, r3
 800c37c:	6878      	ldr	r0, [r7, #4]
 800c37e:	f7ff fdf9 	bl	800bf74 <HAL_UARTEx_RxEventCallback>
 800c382:	e002      	b.n	800c38a <UART_Receive_IT+0x164>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
 800c384:	6878      	ldr	r0, [r7, #4]
 800c386:	f7ff fde1 	bl	800bf4c <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }

      return HAL_OK;
 800c38a:	2300      	movs	r3, #0
 800c38c:	e002      	b.n	800c394 <UART_Receive_IT+0x16e>
    }
    return HAL_OK;
 800c38e:	2300      	movs	r3, #0
 800c390:	e000      	b.n	800c394 <UART_Receive_IT+0x16e>
  }
  else
  {
    return HAL_BUSY;
 800c392:	2302      	movs	r3, #2
  }
}
 800c394:	4618      	mov	r0, r3
 800c396:	3730      	adds	r7, #48	; 0x30
 800c398:	46bd      	mov	sp, r7
 800c39a:	bd80      	pop	{r7, pc}

0800c39c <_ZN5TimerC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj>:
 *  Created on: Aug 31, 2021
 *      Author: Xunguo Zhu
 */
#include "TIMER.hpp"

Timer::Timer(TIM_HandleTypeDef *tim, TIM_TypeDef *Tim_Num, u16 arr, u16 pcs)
 800c39c:	b480      	push	{r7}
 800c39e:	b085      	sub	sp, #20
 800c3a0:	af00      	add	r7, sp, #0
 800c3a2:	60f8      	str	r0, [r7, #12]
 800c3a4:	60b9      	str	r1, [r7, #8]
 800c3a6:	607a      	str	r2, [r7, #4]
 800c3a8:	603b      	str	r3, [r7, #0]
 800c3aa:	4a0b      	ldr	r2, [pc, #44]	; (800c3d8 <_ZN5TimerC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0x3c>)
 800c3ac:	68fb      	ldr	r3, [r7, #12]
 800c3ae:	601a      	str	r2, [r3, #0]
{
	this->arr = arr;
 800c3b0:	68fb      	ldr	r3, [r7, #12]
 800c3b2:	683a      	ldr	r2, [r7, #0]
 800c3b4:	605a      	str	r2, [r3, #4]
	this->pcs = pcs;
 800c3b6:	68fb      	ldr	r3, [r7, #12]
 800c3b8:	69ba      	ldr	r2, [r7, #24]
 800c3ba:	609a      	str	r2, [r3, #8]
	this->tim = tim;
 800c3bc:	68fb      	ldr	r3, [r7, #12]
 800c3be:	68ba      	ldr	r2, [r7, #8]
 800c3c0:	60da      	str	r2, [r3, #12]
	this->tim->Instance = Tim_Num;
 800c3c2:	68fb      	ldr	r3, [r7, #12]
 800c3c4:	68db      	ldr	r3, [r3, #12]
 800c3c6:	687a      	ldr	r2, [r7, #4]
 800c3c8:	601a      	str	r2, [r3, #0]
}
 800c3ca:	68fb      	ldr	r3, [r7, #12]
 800c3cc:	4618      	mov	r0, r3
 800c3ce:	3714      	adds	r7, #20
 800c3d0:	46bd      	mov	sp, r7
 800c3d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3d6:	4770      	bx	lr
 800c3d8:	080137e8 	.word	0x080137e8

0800c3dc <_ZN5TimerD1Ev>:

Timer::~Timer()
 800c3dc:	b580      	push	{r7, lr}
 800c3de:	b082      	sub	sp, #8
 800c3e0:	af00      	add	r7, sp, #0
 800c3e2:	6078      	str	r0, [r7, #4]
 800c3e4:	4a06      	ldr	r2, [pc, #24]	; (800c400 <_ZN5TimerD1Ev+0x24>)
 800c3e6:	687b      	ldr	r3, [r7, #4]
 800c3e8:	601a      	str	r2, [r3, #0]
{
	TIM_Base_MspDeInit(this->tim);
 800c3ea:	687b      	ldr	r3, [r7, #4]
 800c3ec:	68db      	ldr	r3, [r3, #12]
 800c3ee:	4619      	mov	r1, r3
 800c3f0:	6878      	ldr	r0, [r7, #4]
 800c3f2:	f000 f9fb 	bl	800c7ec <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef>
}
 800c3f6:	687b      	ldr	r3, [r7, #4]
 800c3f8:	4618      	mov	r0, r3
 800c3fa:	3708      	adds	r7, #8
 800c3fc:	46bd      	mov	sp, r7
 800c3fe:	bd80      	pop	{r7, pc}
 800c400:	080137e8 	.word	0x080137e8

0800c404 <_ZN5TimerD0Ev>:
Timer::~Timer()
 800c404:	b580      	push	{r7, lr}
 800c406:	b082      	sub	sp, #8
 800c408:	af00      	add	r7, sp, #0
 800c40a:	6078      	str	r0, [r7, #4]
}
 800c40c:	6878      	ldr	r0, [r7, #4]
 800c40e:	f7ff ffe5 	bl	800c3dc <_ZN5TimerD1Ev>
 800c412:	2114      	movs	r1, #20
 800c414:	6878      	ldr	r0, [r7, #4]
 800c416:	f000 fea5 	bl	800d164 <_ZdlPvj>
 800c41a:	687b      	ldr	r3, [r7, #4]
 800c41c:	4618      	mov	r0, r3
 800c41e:	3708      	adds	r7, #8
 800c420:	46bd      	mov	sp, r7
 800c422:	bd80      	pop	{r7, pc}

0800c424 <_ZN5Timer13TIM_Base_InitEv>:

HAL_StatusTypeDef Timer::TIM_Base_Init()
{
 800c424:	b580      	push	{r7, lr}
 800c426:	b082      	sub	sp, #8
 800c428:	af00      	add	r7, sp, #0
 800c42a:	6078      	str	r0, [r7, #4]
	/* Check the TIM handle allocation */
	if (this->tim == NULL){
 800c42c:	687b      	ldr	r3, [r7, #4]
 800c42e:	68db      	ldr	r3, [r3, #12]
 800c430:	2b00      	cmp	r3, #0
 800c432:	d101      	bne.n	800c438 <_ZN5Timer13TIM_Base_InitEv+0x14>
		return HAL_ERROR;
 800c434:	2301      	movs	r3, #1
 800c436:	e05b      	b.n	800c4f0 <_ZN5Timer13TIM_Base_InitEv+0xcc>
	assert_param(IS_TIM_INSTANCE(this->tim->Instance));
	assert_param(IS_TIM_COUNTER_MODE(this->tim->Init.CounterMode));
	assert_param(IS_TIM_CLOCKDIVISION_DIV(this->tim->Init.ClockDivision));
	assert_param(IS_TIM_AUTORELOAD_PRELOAD(this->tim->Init.AutoReloadPreload));

	if (this->tim->State == HAL_TIM_STATE_RESET){
 800c438:	687b      	ldr	r3, [r7, #4]
 800c43a:	68db      	ldr	r3, [r3, #12]
 800c43c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c440:	b2db      	uxtb	r3, r3
 800c442:	2b00      	cmp	r3, #0
 800c444:	bf0c      	ite	eq
 800c446:	2301      	moveq	r3, #1
 800c448:	2300      	movne	r3, #0
 800c44a:	b2db      	uxtb	r3, r3
 800c44c:	2b00      	cmp	r3, #0
 800c44e:	d00d      	beq.n	800c46c <_ZN5Timer13TIM_Base_InitEv+0x48>
		/* Allocate lock resource and initialize it */
		this->tim->Lock = HAL_UNLOCKED;
 800c450:	687b      	ldr	r3, [r7, #4]
 800c452:	68db      	ldr	r3, [r3, #12]
 800c454:	2200      	movs	r2, #0
 800c456:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
		this->TIM_Base_MspInit(this->tim);
 800c45a:	687b      	ldr	r3, [r7, #4]
 800c45c:	681b      	ldr	r3, [r3, #0]
 800c45e:	3314      	adds	r3, #20
 800c460:	681b      	ldr	r3, [r3, #0]
 800c462:	687a      	ldr	r2, [r7, #4]
 800c464:	68d2      	ldr	r2, [r2, #12]
 800c466:	4611      	mov	r1, r2
 800c468:	6878      	ldr	r0, [r7, #4]
 800c46a:	4798      	blx	r3
	}
	/* Set the TIM state */
	this->tim->State = HAL_TIM_STATE_BUSY;
 800c46c:	687b      	ldr	r3, [r7, #4]
 800c46e:	68db      	ldr	r3, [r3, #12]
 800c470:	2202      	movs	r2, #2
 800c472:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
	/* Set the Time Base configuration */
	TIM_Base_SetConfig(this->tim->Instance, &this->tim->Init);
 800c476:	687b      	ldr	r3, [r7, #4]
 800c478:	68db      	ldr	r3, [r3, #12]
 800c47a:	681a      	ldr	r2, [r3, #0]
 800c47c:	687b      	ldr	r3, [r7, #4]
 800c47e:	68db      	ldr	r3, [r3, #12]
 800c480:	3304      	adds	r3, #4
 800c482:	4619      	mov	r1, r3
 800c484:	4610      	mov	r0, r2
 800c486:	f7fe fe45 	bl	800b114 <TIM_Base_SetConfig>
	/* Initialize the DMA burst operation state */
	this->tim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c48a:	687b      	ldr	r3, [r7, #4]
 800c48c:	68db      	ldr	r3, [r3, #12]
 800c48e:	2201      	movs	r2, #1
 800c490:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
	/* Initialize the TIM channels state */
	TIM_CHANNEL_STATE_SET_ALL(this->tim, HAL_TIM_CHANNEL_STATE_READY);
 800c494:	687b      	ldr	r3, [r7, #4]
 800c496:	68db      	ldr	r3, [r3, #12]
 800c498:	2201      	movs	r2, #1
 800c49a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c49e:	687b      	ldr	r3, [r7, #4]
 800c4a0:	68db      	ldr	r3, [r3, #12]
 800c4a2:	2201      	movs	r2, #1
 800c4a4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800c4a8:	687b      	ldr	r3, [r7, #4]
 800c4aa:	68db      	ldr	r3, [r3, #12]
 800c4ac:	2201      	movs	r2, #1
 800c4ae:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800c4b2:	687b      	ldr	r3, [r7, #4]
 800c4b4:	68db      	ldr	r3, [r3, #12]
 800c4b6:	2201      	movs	r2, #1
 800c4b8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
	TIM_CHANNEL_N_STATE_SET_ALL(this->tim, HAL_TIM_CHANNEL_STATE_READY);
 800c4bc:	687b      	ldr	r3, [r7, #4]
 800c4be:	68db      	ldr	r3, [r3, #12]
 800c4c0:	2201      	movs	r2, #1
 800c4c2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800c4c6:	687b      	ldr	r3, [r7, #4]
 800c4c8:	68db      	ldr	r3, [r3, #12]
 800c4ca:	2201      	movs	r2, #1
 800c4cc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800c4d0:	687b      	ldr	r3, [r7, #4]
 800c4d2:	68db      	ldr	r3, [r3, #12]
 800c4d4:	2201      	movs	r2, #1
 800c4d6:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800c4da:	687b      	ldr	r3, [r7, #4]
 800c4dc:	68db      	ldr	r3, [r3, #12]
 800c4de:	2201      	movs	r2, #1
 800c4e0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
	/* Initialize the TIM state*/
	this->tim->State = HAL_TIM_STATE_READY;
 800c4e4:	687b      	ldr	r3, [r7, #4]
 800c4e6:	68db      	ldr	r3, [r3, #12]
 800c4e8:	2201      	movs	r2, #1
 800c4ea:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
	return HAL_OK;
 800c4ee:	2300      	movs	r3, #0
}
 800c4f0:	4618      	mov	r0, r3
 800c4f2:	3708      	adds	r7, #8
 800c4f4:	46bd      	mov	sp, r7
 800c4f6:	bd80      	pop	{r7, pc}

0800c4f8 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef>:

void Timer::TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 800c4f8:	b580      	push	{r7, lr}
 800c4fa:	b092      	sub	sp, #72	; 0x48
 800c4fc:	af00      	add	r7, sp, #0
 800c4fe:	6078      	str	r0, [r7, #4]
 800c500:	6039      	str	r1, [r7, #0]
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 800c502:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c506:	2200      	movs	r2, #0
 800c508:	601a      	str	r2, [r3, #0]
 800c50a:	605a      	str	r2, [r3, #4]
 800c50c:	609a      	str	r2, [r3, #8]
 800c50e:	60da      	str	r2, [r3, #12]
 800c510:	611a      	str	r2, [r3, #16]
	if(tim_baseHandle->Instance==TIM1){
 800c512:	683b      	ldr	r3, [r7, #0]
 800c514:	681b      	ldr	r3, [r3, #0]
 800c516:	4a7a      	ldr	r2, [pc, #488]	; (800c700 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x208>)
 800c518:	4293      	cmp	r3, r2
 800c51a:	d10e      	bne.n	800c53a <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x42>
		__HAL_RCC_TIM1_CLK_ENABLE();
 800c51c:	2300      	movs	r3, #0
 800c51e:	633b      	str	r3, [r7, #48]	; 0x30
 800c520:	4b78      	ldr	r3, [pc, #480]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c522:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c524:	4a77      	ldr	r2, [pc, #476]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c526:	f043 0301 	orr.w	r3, r3, #1
 800c52a:	6453      	str	r3, [r2, #68]	; 0x44
 800c52c:	4b75      	ldr	r3, [pc, #468]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c52e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c530:	f003 0301 	and.w	r3, r3, #1
 800c534:	633b      	str	r3, [r7, #48]	; 0x30
 800c536:	6b3b      	ldr	r3, [r7, #48]	; 0x30
	}
	else if(tim_baseHandle->Instance == TIM8){
		/* TIM8 clock enable */
		__HAL_RCC_TIM8_CLK_ENABLE();
	}
}
 800c538:	e0dd      	b.n	800c6f6 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x1fe>
	else if(tim_baseHandle->Instance == TIM2){
 800c53a:	683b      	ldr	r3, [r7, #0]
 800c53c:	681b      	ldr	r3, [r3, #0]
 800c53e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c542:	d126      	bne.n	800c592 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x9a>
		__HAL_RCC_TIM2_CLK_ENABLE();
 800c544:	2300      	movs	r3, #0
 800c546:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c548:	4b6e      	ldr	r3, [pc, #440]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c54a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c54c:	4a6d      	ldr	r2, [pc, #436]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c54e:	f043 0301 	orr.w	r3, r3, #1
 800c552:	6413      	str	r3, [r2, #64]	; 0x40
 800c554:	4b6b      	ldr	r3, [pc, #428]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c556:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c558:	f003 0301 	and.w	r3, r3, #1
 800c55c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c55e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
		__HAL_RCC_GPIOA_CLK_ENABLE();
 800c560:	2300      	movs	r3, #0
 800c562:	62bb      	str	r3, [r7, #40]	; 0x28
 800c564:	4b67      	ldr	r3, [pc, #412]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c566:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c568:	4a66      	ldr	r2, [pc, #408]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c56a:	f043 0301 	orr.w	r3, r3, #1
 800c56e:	6313      	str	r3, [r2, #48]	; 0x30
 800c570:	4b64      	ldr	r3, [pc, #400]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c572:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c574:	f003 0301 	and.w	r3, r3, #1
 800c578:	62bb      	str	r3, [r7, #40]	; 0x28
 800c57a:	6abb      	ldr	r3, [r7, #40]	; 0x28
		GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 800c57c:	230f      	movs	r3, #15
 800c57e:	637b      	str	r3, [r7, #52]	; 0x34
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800c580:	2302      	movs	r3, #2
 800c582:	63bb      	str	r3, [r7, #56]	; 0x38
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 800c584:	2300      	movs	r3, #0
 800c586:	63fb      	str	r3, [r7, #60]	; 0x3c
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800c588:	2300      	movs	r3, #0
 800c58a:	643b      	str	r3, [r7, #64]	; 0x40
		GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 800c58c:	2301      	movs	r3, #1
 800c58e:	647b      	str	r3, [r7, #68]	; 0x44
}
 800c590:	e0b1      	b.n	800c6f6 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x1fe>
	else if(tim_baseHandle->Instance == TIM3){
 800c592:	683b      	ldr	r3, [r7, #0]
 800c594:	681b      	ldr	r3, [r3, #0]
 800c596:	4a5c      	ldr	r2, [pc, #368]	; (800c708 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x210>)
 800c598:	4293      	cmp	r3, r2
 800c59a:	d14a      	bne.n	800c632 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x13a>
		__HAL_RCC_TIM3_CLK_ENABLE();
 800c59c:	2300      	movs	r3, #0
 800c59e:	627b      	str	r3, [r7, #36]	; 0x24
 800c5a0:	4b58      	ldr	r3, [pc, #352]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c5a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c5a4:	4a57      	ldr	r2, [pc, #348]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c5a6:	f043 0302 	orr.w	r3, r3, #2
 800c5aa:	6413      	str	r3, [r2, #64]	; 0x40
 800c5ac:	4b55      	ldr	r3, [pc, #340]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c5ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c5b0:	f003 0302 	and.w	r3, r3, #2
 800c5b4:	627b      	str	r3, [r7, #36]	; 0x24
 800c5b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
		__HAL_RCC_GPIOA_CLK_ENABLE();
 800c5b8:	2300      	movs	r3, #0
 800c5ba:	623b      	str	r3, [r7, #32]
 800c5bc:	4b51      	ldr	r3, [pc, #324]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c5be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c5c0:	4a50      	ldr	r2, [pc, #320]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c5c2:	f043 0301 	orr.w	r3, r3, #1
 800c5c6:	6313      	str	r3, [r2, #48]	; 0x30
 800c5c8:	4b4e      	ldr	r3, [pc, #312]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c5ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c5cc:	f003 0301 	and.w	r3, r3, #1
 800c5d0:	623b      	str	r3, [r7, #32]
 800c5d2:	6a3b      	ldr	r3, [r7, #32]
		__HAL_RCC_GPIOB_CLK_ENABLE();
 800c5d4:	2300      	movs	r3, #0
 800c5d6:	61fb      	str	r3, [r7, #28]
 800c5d8:	4b4a      	ldr	r3, [pc, #296]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c5da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c5dc:	4a49      	ldr	r2, [pc, #292]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c5de:	f043 0302 	orr.w	r3, r3, #2
 800c5e2:	6313      	str	r3, [r2, #48]	; 0x30
 800c5e4:	4b47      	ldr	r3, [pc, #284]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c5e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c5e8:	f003 0302 	and.w	r3, r3, #2
 800c5ec:	61fb      	str	r3, [r7, #28]
 800c5ee:	69fb      	ldr	r3, [r7, #28]
		GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800c5f0:	23c0      	movs	r3, #192	; 0xc0
 800c5f2:	637b      	str	r3, [r7, #52]	; 0x34
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800c5f4:	2302      	movs	r3, #2
 800c5f6:	63bb      	str	r3, [r7, #56]	; 0x38
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 800c5f8:	2300      	movs	r3, #0
 800c5fa:	63fb      	str	r3, [r7, #60]	; 0x3c
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800c5fc:	2300      	movs	r3, #0
 800c5fe:	643b      	str	r3, [r7, #64]	; 0x40
		GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800c600:	2302      	movs	r3, #2
 800c602:	647b      	str	r3, [r7, #68]	; 0x44
		HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800c604:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c608:	4619      	mov	r1, r3
 800c60a:	4840      	ldr	r0, [pc, #256]	; (800c70c <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x214>)
 800c60c:	f7fd f9ec 	bl	80099e8 <HAL_GPIO_Init>
		GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800c610:	2303      	movs	r3, #3
 800c612:	637b      	str	r3, [r7, #52]	; 0x34
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800c614:	2302      	movs	r3, #2
 800c616:	63bb      	str	r3, [r7, #56]	; 0x38
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 800c618:	2300      	movs	r3, #0
 800c61a:	63fb      	str	r3, [r7, #60]	; 0x3c
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800c61c:	2300      	movs	r3, #0
 800c61e:	643b      	str	r3, [r7, #64]	; 0x40
		GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800c620:	2302      	movs	r3, #2
 800c622:	647b      	str	r3, [r7, #68]	; 0x44
		HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800c624:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c628:	4619      	mov	r1, r3
 800c62a:	4839      	ldr	r0, [pc, #228]	; (800c710 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x218>)
 800c62c:	f7fd f9dc 	bl	80099e8 <HAL_GPIO_Init>
}
 800c630:	e061      	b.n	800c6f6 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x1fe>
	else if(tim_baseHandle->Instance == TIM4){
 800c632:	683b      	ldr	r3, [r7, #0]
 800c634:	681b      	ldr	r3, [r3, #0]
 800c636:	4a37      	ldr	r2, [pc, #220]	; (800c714 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x21c>)
 800c638:	4293      	cmp	r3, r2
 800c63a:	d12d      	bne.n	800c698 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x1a0>
		__HAL_RCC_TIM4_CLK_ENABLE();
 800c63c:	2300      	movs	r3, #0
 800c63e:	61bb      	str	r3, [r7, #24]
 800c640:	4b30      	ldr	r3, [pc, #192]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c642:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c644:	4a2f      	ldr	r2, [pc, #188]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c646:	f043 0304 	orr.w	r3, r3, #4
 800c64a:	6413      	str	r3, [r2, #64]	; 0x40
 800c64c:	4b2d      	ldr	r3, [pc, #180]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c64e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c650:	f003 0304 	and.w	r3, r3, #4
 800c654:	61bb      	str	r3, [r7, #24]
 800c656:	69bb      	ldr	r3, [r7, #24]
		__HAL_RCC_GPIOD_CLK_ENABLE();
 800c658:	2300      	movs	r3, #0
 800c65a:	617b      	str	r3, [r7, #20]
 800c65c:	4b29      	ldr	r3, [pc, #164]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c65e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c660:	4a28      	ldr	r2, [pc, #160]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c662:	f043 0308 	orr.w	r3, r3, #8
 800c666:	6313      	str	r3, [r2, #48]	; 0x30
 800c668:	4b26      	ldr	r3, [pc, #152]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c66a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c66c:	f003 0308 	and.w	r3, r3, #8
 800c670:	617b      	str	r3, [r7, #20]
 800c672:	697b      	ldr	r3, [r7, #20]
		GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 800c674:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 800c678:	637b      	str	r3, [r7, #52]	; 0x34
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800c67a:	2302      	movs	r3, #2
 800c67c:	63bb      	str	r3, [r7, #56]	; 0x38
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 800c67e:	2300      	movs	r3, #0
 800c680:	63fb      	str	r3, [r7, #60]	; 0x3c
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800c682:	2300      	movs	r3, #0
 800c684:	643b      	str	r3, [r7, #64]	; 0x40
		GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800c686:	2302      	movs	r3, #2
 800c688:	647b      	str	r3, [r7, #68]	; 0x44
		HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800c68a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c68e:	4619      	mov	r1, r3
 800c690:	4821      	ldr	r0, [pc, #132]	; (800c718 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x220>)
 800c692:	f7fd f9a9 	bl	80099e8 <HAL_GPIO_Init>
}
 800c696:	e02e      	b.n	800c6f6 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x1fe>
	else if(tim_baseHandle->Instance == TIM6){
 800c698:	683b      	ldr	r3, [r7, #0]
 800c69a:	681b      	ldr	r3, [r3, #0]
 800c69c:	4a1f      	ldr	r2, [pc, #124]	; (800c71c <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x224>)
 800c69e:	4293      	cmp	r3, r2
 800c6a0:	d116      	bne.n	800c6d0 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x1d8>
		__HAL_RCC_TIM6_CLK_ENABLE();
 800c6a2:	2300      	movs	r3, #0
 800c6a4:	613b      	str	r3, [r7, #16]
 800c6a6:	4b17      	ldr	r3, [pc, #92]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c6a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c6aa:	4a16      	ldr	r2, [pc, #88]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c6ac:	f043 0310 	orr.w	r3, r3, #16
 800c6b0:	6413      	str	r3, [r2, #64]	; 0x40
 800c6b2:	4b14      	ldr	r3, [pc, #80]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c6b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c6b6:	f003 0310 	and.w	r3, r3, #16
 800c6ba:	613b      	str	r3, [r7, #16]
 800c6bc:	693b      	ldr	r3, [r7, #16]
		HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 800c6be:	2200      	movs	r2, #0
 800c6c0:	2100      	movs	r1, #0
 800c6c2:	2036      	movs	r0, #54	; 0x36
 800c6c4:	f7fd f8b9 	bl	800983a <HAL_NVIC_SetPriority>
		HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800c6c8:	2036      	movs	r0, #54	; 0x36
 800c6ca:	f7fd f8d2 	bl	8009872 <HAL_NVIC_EnableIRQ>
}
 800c6ce:	e012      	b.n	800c6f6 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x1fe>
	else if(tim_baseHandle->Instance == TIM8){
 800c6d0:	683b      	ldr	r3, [r7, #0]
 800c6d2:	681b      	ldr	r3, [r3, #0]
 800c6d4:	4a12      	ldr	r2, [pc, #72]	; (800c720 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x228>)
 800c6d6:	4293      	cmp	r3, r2
 800c6d8:	d10d      	bne.n	800c6f6 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x1fe>
		__HAL_RCC_TIM8_CLK_ENABLE();
 800c6da:	2300      	movs	r3, #0
 800c6dc:	60fb      	str	r3, [r7, #12]
 800c6de:	4b09      	ldr	r3, [pc, #36]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c6e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c6e2:	4a08      	ldr	r2, [pc, #32]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c6e4:	f043 0302 	orr.w	r3, r3, #2
 800c6e8:	6453      	str	r3, [r2, #68]	; 0x44
 800c6ea:	4b06      	ldr	r3, [pc, #24]	; (800c704 <_ZN5Timer16TIM_Base_MspInitEP17TIM_HandleTypeDef+0x20c>)
 800c6ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c6ee:	f003 0302 	and.w	r3, r3, #2
 800c6f2:	60fb      	str	r3, [r7, #12]
 800c6f4:	68fb      	ldr	r3, [r7, #12]
}
 800c6f6:	bf00      	nop
 800c6f8:	3748      	adds	r7, #72	; 0x48
 800c6fa:	46bd      	mov	sp, r7
 800c6fc:	bd80      	pop	{r7, pc}
 800c6fe:	bf00      	nop
 800c700:	40010000 	.word	0x40010000
 800c704:	40023800 	.word	0x40023800
 800c708:	40000400 	.word	0x40000400
 800c70c:	40020000 	.word	0x40020000
 800c710:	40020400 	.word	0x40020400
 800c714:	40000800 	.word	0x40000800
 800c718:	40020c00 	.word	0x40020c00
 800c71c:	40001000 	.word	0x40001000
 800c720:	40010400 	.word	0x40010400

0800c724 <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef>:

void Timer::TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 800c724:	b580      	push	{r7, lr}
 800c726:	b08a      	sub	sp, #40	; 0x28
 800c728:	af00      	add	r7, sp, #0
 800c72a:	6078      	str	r0, [r7, #4]
 800c72c:	6039      	str	r1, [r7, #0]

	GPIO_InitTypeDef GPIO_InitStruct = {0};
 800c72e:	f107 0314 	add.w	r3, r7, #20
 800c732:	2200      	movs	r2, #0
 800c734:	601a      	str	r2, [r3, #0]
 800c736:	605a      	str	r2, [r3, #4]
 800c738:	609a      	str	r2, [r3, #8]
 800c73a:	60da      	str	r2, [r3, #12]
 800c73c:	611a      	str	r2, [r3, #16]
	if(timHandle->Instance==TIM1){
 800c73e:	683b      	ldr	r3, [r7, #0]
 800c740:	681b      	ldr	r3, [r3, #0]
 800c742:	4a25      	ldr	r2, [pc, #148]	; (800c7d8 <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xb4>)
 800c744:	4293      	cmp	r3, r2
 800c746:	d11f      	bne.n	800c788 <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0x64>
		__HAL_RCC_GPIOE_CLK_ENABLE();
 800c748:	2300      	movs	r3, #0
 800c74a:	613b      	str	r3, [r7, #16]
 800c74c:	4b23      	ldr	r3, [pc, #140]	; (800c7dc <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xb8>)
 800c74e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c750:	4a22      	ldr	r2, [pc, #136]	; (800c7dc <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xb8>)
 800c752:	f043 0310 	orr.w	r3, r3, #16
 800c756:	6313      	str	r3, [r2, #48]	; 0x30
 800c758:	4b20      	ldr	r3, [pc, #128]	; (800c7dc <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xb8>)
 800c75a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c75c:	f003 0310 	and.w	r3, r3, #16
 800c760:	613b      	str	r3, [r7, #16]
 800c762:	693b      	ldr	r3, [r7, #16]
		PE9     ------> TIM1_CH1
		PE11     ------> TIM1_CH2
		PE13     ------> TIM1_CH3
		PE14     ------> TIM1_CH4
		*/
		GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_11|GPIO_PIN_13|GPIO_PIN_14;
 800c764:	f44f 43d4 	mov.w	r3, #27136	; 0x6a00
 800c768:	617b      	str	r3, [r7, #20]
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800c76a:	2302      	movs	r3, #2
 800c76c:	61bb      	str	r3, [r7, #24]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 800c76e:	2300      	movs	r3, #0
 800c770:	61fb      	str	r3, [r7, #28]
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800c772:	2300      	movs	r3, #0
 800c774:	623b      	str	r3, [r7, #32]
		GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 800c776:	2301      	movs	r3, #1
 800c778:	627b      	str	r3, [r7, #36]	; 0x24
		HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800c77a:	f107 0314 	add.w	r3, r7, #20
 800c77e:	4619      	mov	r1, r3
 800c780:	4817      	ldr	r0, [pc, #92]	; (800c7e0 <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xbc>)
 800c782:	f7fd f931 	bl	80099e8 <HAL_GPIO_Init>
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
		GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
		HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
	}

}
 800c786:	e023      	b.n	800c7d0 <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xac>
	else if(timHandle->Instance==TIM8){
 800c788:	683b      	ldr	r3, [r7, #0]
 800c78a:	681b      	ldr	r3, [r3, #0]
 800c78c:	4a15      	ldr	r2, [pc, #84]	; (800c7e4 <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xc0>)
 800c78e:	4293      	cmp	r3, r2
 800c790:	d11e      	bne.n	800c7d0 <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xac>
		__HAL_RCC_GPIOC_CLK_ENABLE();
 800c792:	2300      	movs	r3, #0
 800c794:	60fb      	str	r3, [r7, #12]
 800c796:	4b11      	ldr	r3, [pc, #68]	; (800c7dc <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xb8>)
 800c798:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c79a:	4a10      	ldr	r2, [pc, #64]	; (800c7dc <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xb8>)
 800c79c:	f043 0304 	orr.w	r3, r3, #4
 800c7a0:	6313      	str	r3, [r2, #48]	; 0x30
 800c7a2:	4b0e      	ldr	r3, [pc, #56]	; (800c7dc <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xb8>)
 800c7a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c7a6:	f003 0304 	and.w	r3, r3, #4
 800c7aa:	60fb      	str	r3, [r7, #12]
 800c7ac:	68fb      	ldr	r3, [r7, #12]
		GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800c7ae:	f44f 7370 	mov.w	r3, #960	; 0x3c0
 800c7b2:	617b      	str	r3, [r7, #20]
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800c7b4:	2302      	movs	r3, #2
 800c7b6:	61bb      	str	r3, [r7, #24]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 800c7b8:	2300      	movs	r3, #0
 800c7ba:	61fb      	str	r3, [r7, #28]
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800c7bc:	2300      	movs	r3, #0
 800c7be:	623b      	str	r3, [r7, #32]
		GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 800c7c0:	2303      	movs	r3, #3
 800c7c2:	627b      	str	r3, [r7, #36]	; 0x24
		HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800c7c4:	f107 0314 	add.w	r3, r7, #20
 800c7c8:	4619      	mov	r1, r3
 800c7ca:	4807      	ldr	r0, [pc, #28]	; (800c7e8 <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef+0xc4>)
 800c7cc:	f7fd f90c 	bl	80099e8 <HAL_GPIO_Init>
}
 800c7d0:	bf00      	nop
 800c7d2:	3728      	adds	r7, #40	; 0x28
 800c7d4:	46bd      	mov	sp, r7
 800c7d6:	bd80      	pop	{r7, pc}
 800c7d8:	40010000 	.word	0x40010000
 800c7dc:	40023800 	.word	0x40023800
 800c7e0:	40021000 	.word	0x40021000
 800c7e4:	40010400 	.word	0x40010400
 800c7e8:	40020800 	.word	0x40020800

0800c7ec <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef>:

void Timer::TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
{
 800c7ec:	b580      	push	{r7, lr}
 800c7ee:	b082      	sub	sp, #8
 800c7f0:	af00      	add	r7, sp, #0
 800c7f2:	6078      	str	r0, [r7, #4]
 800c7f4:	6039      	str	r1, [r7, #0]

	if(tim_baseHandle->Instance==TIM1){
 800c7f6:	683b      	ldr	r3, [r7, #0]
 800c7f8:	681b      	ldr	r3, [r3, #0]
 800c7fa:	4a2e      	ldr	r2, [pc, #184]	; (800c8b4 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xc8>)
 800c7fc:	4293      	cmp	r3, r2
 800c7fe:	d106      	bne.n	800c80e <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0x22>
		/* Peripheral clock disable */
		__HAL_RCC_TIM1_CLK_DISABLE();
 800c800:	4b2d      	ldr	r3, [pc, #180]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c802:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c804:	4a2c      	ldr	r2, [pc, #176]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c806:	f023 0301 	bic.w	r3, r3, #1
 800c80a:	6453      	str	r3, [r2, #68]	; 0x44
	}
	else if(tim_baseHandle->Instance==TIM8){
		/* Peripheral clock disable */
		__HAL_RCC_TIM8_CLK_DISABLE();
	}
}
 800c80c:	e04e      	b.n	800c8ac <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xc0>
	else if(tim_baseHandle->Instance==TIM2)
 800c80e:	683b      	ldr	r3, [r7, #0]
 800c810:	681b      	ldr	r3, [r3, #0]
 800c812:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c816:	d10a      	bne.n	800c82e <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0x42>
		__HAL_RCC_TIM2_CLK_DISABLE();
 800c818:	4b27      	ldr	r3, [pc, #156]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c81a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c81c:	4a26      	ldr	r2, [pc, #152]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c81e:	f023 0301 	bic.w	r3, r3, #1
 800c822:	6413      	str	r3, [r2, #64]	; 0x40
		HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3);
 800c824:	210f      	movs	r1, #15
 800c826:	4825      	ldr	r0, [pc, #148]	; (800c8bc <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xd0>)
 800c828:	f7fd fa7a 	bl	8009d20 <HAL_GPIO_DeInit>
}
 800c82c:	e03e      	b.n	800c8ac <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xc0>
	else if(tim_baseHandle->Instance==TIM3)
 800c82e:	683b      	ldr	r3, [r7, #0]
 800c830:	681b      	ldr	r3, [r3, #0]
 800c832:	4a23      	ldr	r2, [pc, #140]	; (800c8c0 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xd4>)
 800c834:	4293      	cmp	r3, r2
 800c836:	d10e      	bne.n	800c856 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0x6a>
		__HAL_RCC_TIM3_CLK_DISABLE();
 800c838:	4b1f      	ldr	r3, [pc, #124]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c83a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c83c:	4a1e      	ldr	r2, [pc, #120]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c83e:	f023 0302 	bic.w	r3, r3, #2
 800c842:	6413      	str	r3, [r2, #64]	; 0x40
		HAL_GPIO_DeInit(GPIOA, GPIO_PIN_6|GPIO_PIN_7);
 800c844:	21c0      	movs	r1, #192	; 0xc0
 800c846:	481d      	ldr	r0, [pc, #116]	; (800c8bc <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xd0>)
 800c848:	f7fd fa6a 	bl	8009d20 <HAL_GPIO_DeInit>
		HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0|GPIO_PIN_1);
 800c84c:	2103      	movs	r1, #3
 800c84e:	481d      	ldr	r0, [pc, #116]	; (800c8c4 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xd8>)
 800c850:	f7fd fa66 	bl	8009d20 <HAL_GPIO_DeInit>
}
 800c854:	e02a      	b.n	800c8ac <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xc0>
	else if(tim_baseHandle->Instance==TIM4){
 800c856:	683b      	ldr	r3, [r7, #0]
 800c858:	681b      	ldr	r3, [r3, #0]
 800c85a:	4a1b      	ldr	r2, [pc, #108]	; (800c8c8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xdc>)
 800c85c:	4293      	cmp	r3, r2
 800c85e:	d10b      	bne.n	800c878 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0x8c>
		__HAL_RCC_TIM4_CLK_DISABLE();
 800c860:	4b15      	ldr	r3, [pc, #84]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c862:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c864:	4a14      	ldr	r2, [pc, #80]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c866:	f023 0304 	bic.w	r3, r3, #4
 800c86a:	6413      	str	r3, [r2, #64]	; 0x40
		HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15);
 800c86c:	f44f 4170 	mov.w	r1, #61440	; 0xf000
 800c870:	4816      	ldr	r0, [pc, #88]	; (800c8cc <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xe0>)
 800c872:	f7fd fa55 	bl	8009d20 <HAL_GPIO_DeInit>
}
 800c876:	e019      	b.n	800c8ac <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xc0>
	else if(tim_baseHandle->Instance==TIM6){
 800c878:	683b      	ldr	r3, [r7, #0]
 800c87a:	681b      	ldr	r3, [r3, #0]
 800c87c:	4a14      	ldr	r2, [pc, #80]	; (800c8d0 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xe4>)
 800c87e:	4293      	cmp	r3, r2
 800c880:	d109      	bne.n	800c896 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xaa>
		__HAL_RCC_TIM6_CLK_DISABLE();
 800c882:	4b0d      	ldr	r3, [pc, #52]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c884:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c886:	4a0c      	ldr	r2, [pc, #48]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c888:	f023 0310 	bic.w	r3, r3, #16
 800c88c:	6413      	str	r3, [r2, #64]	; 0x40
		HAL_NVIC_DisableIRQ(TIM6_DAC_IRQn);
 800c88e:	2036      	movs	r0, #54	; 0x36
 800c890:	f7fc fffd 	bl	800988e <HAL_NVIC_DisableIRQ>
}
 800c894:	e00a      	b.n	800c8ac <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xc0>
	else if(tim_baseHandle->Instance==TIM8){
 800c896:	683b      	ldr	r3, [r7, #0]
 800c898:	681b      	ldr	r3, [r3, #0]
 800c89a:	4a0e      	ldr	r2, [pc, #56]	; (800c8d4 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xe8>)
 800c89c:	4293      	cmp	r3, r2
 800c89e:	d105      	bne.n	800c8ac <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xc0>
		__HAL_RCC_TIM8_CLK_DISABLE();
 800c8a0:	4b05      	ldr	r3, [pc, #20]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c8a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c8a4:	4a04      	ldr	r2, [pc, #16]	; (800c8b8 <_ZN5Timer18TIM_Base_MspDeInitEP17TIM_HandleTypeDef+0xcc>)
 800c8a6:	f023 0302 	bic.w	r3, r3, #2
 800c8aa:	6453      	str	r3, [r2, #68]	; 0x44
}
 800c8ac:	bf00      	nop
 800c8ae:	3708      	adds	r7, #8
 800c8b0:	46bd      	mov	sp, r7
 800c8b2:	bd80      	pop	{r7, pc}
 800c8b4:	40010000 	.word	0x40010000
 800c8b8:	40023800 	.word	0x40023800
 800c8bc:	40020000 	.word	0x40020000
 800c8c0:	40000400 	.word	0x40000400
 800c8c4:	40020400 	.word	0x40020400
 800c8c8:	40000800 	.word	0x40000800
 800c8cc:	40020c00 	.word	0x40020c00
 800c8d0:	40001000 	.word	0x40001000
 800c8d4:	40010400 	.word	0x40010400

0800c8d8 <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj>:

Timer_PWM::Timer_PWM(TIM_HandleTypeDef *tim, TIM_TypeDef *Tim_Num, u16 arr, u16 pcs):Timer(tim, Tim_Num, arr, pcs)
 800c8d8:	b580      	push	{r7, lr}
 800c8da:	b09c      	sub	sp, #112	; 0x70
 800c8dc:	af02      	add	r7, sp, #8
 800c8de:	60f8      	str	r0, [r7, #12]
 800c8e0:	60b9      	str	r1, [r7, #8]
 800c8e2:	607a      	str	r2, [r7, #4]
 800c8e4:	603b      	str	r3, [r7, #0]
 800c8e6:	68f8      	ldr	r0, [r7, #12]
 800c8e8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c8ea:	9300      	str	r3, [sp, #0]
 800c8ec:	683b      	ldr	r3, [r7, #0]
 800c8ee:	687a      	ldr	r2, [r7, #4]
 800c8f0:	68b9      	ldr	r1, [r7, #8]
 800c8f2:	f7ff fd53 	bl	800c39c <_ZN5TimerC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj>
 800c8f6:	4a8e      	ldr	r2, [pc, #568]	; (800cb30 <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0x258>)
 800c8f8:	68fb      	ldr	r3, [r7, #12]
 800c8fa:	601a      	str	r2, [r3, #0]
{
	TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800c8fc:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800c900:	2200      	movs	r2, #0
 800c902:	601a      	str	r2, [r3, #0]
 800c904:	605a      	str	r2, [r3, #4]
 800c906:	609a      	str	r2, [r3, #8]
 800c908:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = {0};
 800c90a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800c90e:	2200      	movs	r2, #0
 800c910:	601a      	str	r2, [r3, #0]
 800c912:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = {0};
 800c914:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c918:	2200      	movs	r2, #0
 800c91a:	601a      	str	r2, [r3, #0]
 800c91c:	605a      	str	r2, [r3, #4]
 800c91e:	609a      	str	r2, [r3, #8]
 800c920:	60da      	str	r2, [r3, #12]
 800c922:	611a      	str	r2, [r3, #16]
 800c924:	615a      	str	r2, [r3, #20]
 800c926:	619a      	str	r2, [r3, #24]
	TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800c928:	f107 0314 	add.w	r3, r7, #20
 800c92c:	2220      	movs	r2, #32
 800c92e:	2100      	movs	r1, #0
 800c930:	4618      	mov	r0, r3
 800c932:	f002 f9a9 	bl	800ec88 <memset>

	this->tim->Init.Prescaler = this->pcs;
 800c936:	68fb      	ldr	r3, [r7, #12]
 800c938:	68db      	ldr	r3, [r3, #12]
 800c93a:	68fa      	ldr	r2, [r7, #12]
 800c93c:	6892      	ldr	r2, [r2, #8]
 800c93e:	605a      	str	r2, [r3, #4]
	this->tim->Init.CounterMode = TIM_COUNTERMODE_UP;
 800c940:	68fb      	ldr	r3, [r7, #12]
 800c942:	68db      	ldr	r3, [r3, #12]
 800c944:	2200      	movs	r2, #0
 800c946:	609a      	str	r2, [r3, #8]
	this->tim->Init.Period = this->arr;
 800c948:	68fb      	ldr	r3, [r7, #12]
 800c94a:	68db      	ldr	r3, [r3, #12]
 800c94c:	68fa      	ldr	r2, [r7, #12]
 800c94e:	6852      	ldr	r2, [r2, #4]
 800c950:	60da      	str	r2, [r3, #12]
	this->tim->Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800c952:	68fb      	ldr	r3, [r7, #12]
 800c954:	68db      	ldr	r3, [r3, #12]
 800c956:	2200      	movs	r2, #0
 800c958:	611a      	str	r2, [r3, #16]
	this->tim->Init.RepetitionCounter = 0;
 800c95a:	68fb      	ldr	r3, [r7, #12]
 800c95c:	68db      	ldr	r3, [r3, #12]
 800c95e:	2200      	movs	r2, #0
 800c960:	615a      	str	r2, [r3, #20]
	this->tim->Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800c962:	68fb      	ldr	r3, [r7, #12]
 800c964:	68db      	ldr	r3, [r3, #12]
 800c966:	2280      	movs	r2, #128	; 0x80
 800c968:	619a      	str	r2, [r3, #24]
	if (this->TIM_Base_Init() != HAL_OK){//删掉tim.c后可能会出现问题
 800c96a:	68fb      	ldr	r3, [r7, #12]
 800c96c:	4618      	mov	r0, r3
 800c96e:	f7ff fd59 	bl	800c424 <_ZN5Timer13TIM_Base_InitEv>
 800c972:	4603      	mov	r3, r0
 800c974:	2b00      	cmp	r3, #0
 800c976:	bf14      	ite	ne
 800c978:	2301      	movne	r3, #1
 800c97a:	2300      	moveq	r3, #0
 800c97c:	b2db      	uxtb	r3, r3
 800c97e:	2b00      	cmp	r3, #0
 800c980:	d001      	beq.n	800c986 <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0xae>
		Error_Handler();
 800c982:	f7fc fb53 	bl	800902c <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800c986:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800c98a:	65bb      	str	r3, [r7, #88]	; 0x58
	if (HAL_TIM_ConfigClockSource(this->tim, &sClockSourceConfig) != HAL_OK){
 800c98c:	68fb      	ldr	r3, [r7, #12]
 800c98e:	68db      	ldr	r3, [r3, #12]
 800c990:	f107 0258 	add.w	r2, r7, #88	; 0x58
 800c994:	4611      	mov	r1, r2
 800c996:	4618      	mov	r0, r3
 800c998:	f7fe facc 	bl	800af34 <HAL_TIM_ConfigClockSource>
 800c99c:	4603      	mov	r3, r0
 800c99e:	2b00      	cmp	r3, #0
 800c9a0:	bf14      	ite	ne
 800c9a2:	2301      	movne	r3, #1
 800c9a4:	2300      	moveq	r3, #0
 800c9a6:	b2db      	uxtb	r3, r3
 800c9a8:	2b00      	cmp	r3, #0
 800c9aa:	d001      	beq.n	800c9b0 <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0xd8>
		Error_Handler();
 800c9ac:	f7fc fb3e 	bl	800902c <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(this->tim) != HAL_OK){
 800c9b0:	68fb      	ldr	r3, [r7, #12]
 800c9b2:	68db      	ldr	r3, [r3, #12]
 800c9b4:	4618      	mov	r0, r3
 800c9b6:	f7fd ffd1 	bl	800a95c <HAL_TIM_PWM_Init>
 800c9ba:	4603      	mov	r3, r0
 800c9bc:	2b00      	cmp	r3, #0
 800c9be:	bf14      	ite	ne
 800c9c0:	2301      	movne	r3, #1
 800c9c2:	2300      	moveq	r3, #0
 800c9c4:	b2db      	uxtb	r3, r3
 800c9c6:	2b00      	cmp	r3, #0
 800c9c8:	d001      	beq.n	800c9ce <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0xf6>
		Error_Handler();
 800c9ca:	f7fc fb2f 	bl	800902c <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800c9ce:	2300      	movs	r3, #0
 800c9d0:	653b      	str	r3, [r7, #80]	; 0x50
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800c9d2:	2300      	movs	r3, #0
 800c9d4:	657b      	str	r3, [r7, #84]	; 0x54
	if (HAL_TIMEx_MasterConfigSynchronization(this->tim, &sMasterConfig) != HAL_OK){
 800c9d6:	68fb      	ldr	r3, [r7, #12]
 800c9d8:	68db      	ldr	r3, [r3, #12]
 800c9da:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800c9de:	4611      	mov	r1, r2
 800c9e0:	4618      	mov	r0, r3
 800c9e2:	f7fe fea7 	bl	800b734 <HAL_TIMEx_MasterConfigSynchronization>
 800c9e6:	4603      	mov	r3, r0
 800c9e8:	2b00      	cmp	r3, #0
 800c9ea:	bf14      	ite	ne
 800c9ec:	2301      	movne	r3, #1
 800c9ee:	2300      	moveq	r3, #0
 800c9f0:	b2db      	uxtb	r3, r3
 800c9f2:	2b00      	cmp	r3, #0
 800c9f4:	d001      	beq.n	800c9fa <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0x122>
		Error_Handler();
 800c9f6:	f7fc fb19 	bl	800902c <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800c9fa:	2360      	movs	r3, #96	; 0x60
 800c9fc:	637b      	str	r3, [r7, #52]	; 0x34
	sConfigOC.Pulse = 0;
 800c9fe:	2300      	movs	r3, #0
 800ca00:	63bb      	str	r3, [r7, #56]	; 0x38
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800ca02:	2300      	movs	r3, #0
 800ca04:	63fb      	str	r3, [r7, #60]	; 0x3c
	sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 800ca06:	2300      	movs	r3, #0
 800ca08:	643b      	str	r3, [r7, #64]	; 0x40
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800ca0a:	2300      	movs	r3, #0
 800ca0c:	647b      	str	r3, [r7, #68]	; 0x44
	sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800ca0e:	2300      	movs	r3, #0
 800ca10:	64bb      	str	r3, [r7, #72]	; 0x48
	sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 800ca12:	2300      	movs	r3, #0
 800ca14:	64fb      	str	r3, [r7, #76]	; 0x4c
	if (HAL_TIM_PWM_ConfigChannel(this->tim, &sConfigOC, TIM_CHANNEL_1) != HAL_OK){
 800ca16:	68fb      	ldr	r3, [r7, #12]
 800ca18:	68db      	ldr	r3, [r3, #12]
 800ca1a:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800ca1e:	2200      	movs	r2, #0
 800ca20:	4618      	mov	r0, r3
 800ca22:	f7fe f9c5 	bl	800adb0 <HAL_TIM_PWM_ConfigChannel>
 800ca26:	4603      	mov	r3, r0
 800ca28:	2b00      	cmp	r3, #0
 800ca2a:	bf14      	ite	ne
 800ca2c:	2301      	movne	r3, #1
 800ca2e:	2300      	moveq	r3, #0
 800ca30:	b2db      	uxtb	r3, r3
 800ca32:	2b00      	cmp	r3, #0
 800ca34:	d001      	beq.n	800ca3a <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0x162>
		Error_Handler();
 800ca36:	f7fc faf9 	bl	800902c <Error_Handler>
	}
	if (HAL_TIM_PWM_ConfigChannel(this->tim, &sConfigOC, TIM_CHANNEL_2) != HAL_OK){
 800ca3a:	68fb      	ldr	r3, [r7, #12]
 800ca3c:	68db      	ldr	r3, [r3, #12]
 800ca3e:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800ca42:	2204      	movs	r2, #4
 800ca44:	4618      	mov	r0, r3
 800ca46:	f7fe f9b3 	bl	800adb0 <HAL_TIM_PWM_ConfigChannel>
 800ca4a:	4603      	mov	r3, r0
 800ca4c:	2b00      	cmp	r3, #0
 800ca4e:	bf14      	ite	ne
 800ca50:	2301      	movne	r3, #1
 800ca52:	2300      	moveq	r3, #0
 800ca54:	b2db      	uxtb	r3, r3
 800ca56:	2b00      	cmp	r3, #0
 800ca58:	d001      	beq.n	800ca5e <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0x186>
		Error_Handler();
 800ca5a:	f7fc fae7 	bl	800902c <Error_Handler>
	}
	if (HAL_TIM_PWM_ConfigChannel(this->tim, &sConfigOC, TIM_CHANNEL_3) != HAL_OK){
 800ca5e:	68fb      	ldr	r3, [r7, #12]
 800ca60:	68db      	ldr	r3, [r3, #12]
 800ca62:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800ca66:	2208      	movs	r2, #8
 800ca68:	4618      	mov	r0, r3
 800ca6a:	f7fe f9a1 	bl	800adb0 <HAL_TIM_PWM_ConfigChannel>
 800ca6e:	4603      	mov	r3, r0
 800ca70:	2b00      	cmp	r3, #0
 800ca72:	bf14      	ite	ne
 800ca74:	2301      	movne	r3, #1
 800ca76:	2300      	moveq	r3, #0
 800ca78:	b2db      	uxtb	r3, r3
 800ca7a:	2b00      	cmp	r3, #0
 800ca7c:	d001      	beq.n	800ca82 <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0x1aa>
		Error_Handler();
 800ca7e:	f7fc fad5 	bl	800902c <Error_Handler>
	}
	if (HAL_TIM_PWM_ConfigChannel(this->tim, &sConfigOC, TIM_CHANNEL_4) != HAL_OK){
 800ca82:	68fb      	ldr	r3, [r7, #12]
 800ca84:	68db      	ldr	r3, [r3, #12]
 800ca86:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800ca8a:	220c      	movs	r2, #12
 800ca8c:	4618      	mov	r0, r3
 800ca8e:	f7fe f98f 	bl	800adb0 <HAL_TIM_PWM_ConfigChannel>
 800ca92:	4603      	mov	r3, r0
 800ca94:	2b00      	cmp	r3, #0
 800ca96:	bf14      	ite	ne
 800ca98:	2301      	movne	r3, #1
 800ca9a:	2300      	moveq	r3, #0
 800ca9c:	b2db      	uxtb	r3, r3
 800ca9e:	2b00      	cmp	r3, #0
 800caa0:	d001      	beq.n	800caa6 <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0x1ce>
		Error_Handler();
 800caa2:	f7fc fac3 	bl	800902c <Error_Handler>
	}
	sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800caa6:	2300      	movs	r3, #0
 800caa8:	617b      	str	r3, [r7, #20]
	sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 800caaa:	2300      	movs	r3, #0
 800caac:	61bb      	str	r3, [r7, #24]
	sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800caae:	2300      	movs	r3, #0
 800cab0:	61fb      	str	r3, [r7, #28]
	sBreakDeadTimeConfig.DeadTime = 0;
 800cab2:	2300      	movs	r3, #0
 800cab4:	623b      	str	r3, [r7, #32]
	sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800cab6:	2300      	movs	r3, #0
 800cab8:	627b      	str	r3, [r7, #36]	; 0x24
	sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 800caba:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800cabe:	62bb      	str	r3, [r7, #40]	; 0x28
	sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800cac0:	2300      	movs	r3, #0
 800cac2:	633b      	str	r3, [r7, #48]	; 0x30
	if (HAL_TIMEx_ConfigBreakDeadTime(this->tim, &sBreakDeadTimeConfig) != HAL_OK){
 800cac4:	68fb      	ldr	r3, [r7, #12]
 800cac6:	68db      	ldr	r3, [r3, #12]
 800cac8:	f107 0214 	add.w	r2, r7, #20
 800cacc:	4611      	mov	r1, r2
 800cace:	4618      	mov	r0, r3
 800cad0:	f7fe feac 	bl	800b82c <HAL_TIMEx_ConfigBreakDeadTime>
 800cad4:	4603      	mov	r3, r0
 800cad6:	2b00      	cmp	r3, #0
 800cad8:	bf14      	ite	ne
 800cada:	2301      	movne	r3, #1
 800cadc:	2300      	moveq	r3, #0
 800cade:	b2db      	uxtb	r3, r3
 800cae0:	2b00      	cmp	r3, #0
 800cae2:	d001      	beq.n	800cae8 <_ZN9Timer_PWMC1EP17TIM_HandleTypeDefP11TIM_TypeDefjj+0x210>
		Error_Handler();
 800cae4:	f7fc faa2 	bl	800902c <Error_Handler>
	}
	this->TIM_MspPostInit(this->tim);
 800cae8:	68fa      	ldr	r2, [r7, #12]
 800caea:	68fb      	ldr	r3, [r7, #12]
 800caec:	68db      	ldr	r3, [r3, #12]
 800caee:	4619      	mov	r1, r3
 800caf0:	4610      	mov	r0, r2
 800caf2:	f7ff fe17 	bl	800c724 <_ZN5Timer15TIM_MspPostInitEP17TIM_HandleTypeDef>
	HAL_TIM_PWM_Start(this->tim, TIM_CHANNEL_1);
 800caf6:	68fb      	ldr	r3, [r7, #12]
 800caf8:	68db      	ldr	r3, [r3, #12]
 800cafa:	2100      	movs	r1, #0
 800cafc:	4618      	mov	r0, r3
 800cafe:	f7fd ff87 	bl	800aa10 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(this->tim, TIM_CHANNEL_2);
 800cb02:	68fb      	ldr	r3, [r7, #12]
 800cb04:	68db      	ldr	r3, [r3, #12]
 800cb06:	2104      	movs	r1, #4
 800cb08:	4618      	mov	r0, r3
 800cb0a:	f7fd ff81 	bl	800aa10 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(this->tim, TIM_CHANNEL_3);
 800cb0e:	68fb      	ldr	r3, [r7, #12]
 800cb10:	68db      	ldr	r3, [r3, #12]
 800cb12:	2108      	movs	r1, #8
 800cb14:	4618      	mov	r0, r3
 800cb16:	f7fd ff7b 	bl	800aa10 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(this->tim, TIM_CHANNEL_4);
 800cb1a:	68fb      	ldr	r3, [r7, #12]
 800cb1c:	68db      	ldr	r3, [r3, #12]
 800cb1e:	210c      	movs	r1, #12
 800cb20:	4618      	mov	r0, r3
 800cb22:	f7fd ff75 	bl	800aa10 <HAL_TIM_PWM_Start>
}
 800cb26:	68fb      	ldr	r3, [r7, #12]
 800cb28:	4618      	mov	r0, r3
 800cb2a:	3768      	adds	r7, #104	; 0x68
 800cb2c:	46bd      	mov	sp, r7
 800cb2e:	bd80      	pop	{r7, pc}
 800cb30:	080137c8 	.word	0x080137c8

0800cb34 <_ZN9Timer_PWMD1Ev>:

Timer_PWM::~Timer_PWM()
 800cb34:	b580      	push	{r7, lr}
 800cb36:	b082      	sub	sp, #8
 800cb38:	af00      	add	r7, sp, #0
 800cb3a:	6078      	str	r0, [r7, #4]
 800cb3c:	4a05      	ldr	r2, [pc, #20]	; (800cb54 <_ZN9Timer_PWMD1Ev+0x20>)
 800cb3e:	687b      	ldr	r3, [r7, #4]
 800cb40:	601a      	str	r2, [r3, #0]
 800cb42:	687b      	ldr	r3, [r7, #4]
 800cb44:	4618      	mov	r0, r3
 800cb46:	f7ff fc49 	bl	800c3dc <_ZN5TimerD1Ev>
{

}
 800cb4a:	687b      	ldr	r3, [r7, #4]
 800cb4c:	4618      	mov	r0, r3
 800cb4e:	3708      	adds	r7, #8
 800cb50:	46bd      	mov	sp, r7
 800cb52:	bd80      	pop	{r7, pc}
 800cb54:	080137c8 	.word	0x080137c8

0800cb58 <_ZN9Timer_PWMD0Ev>:
Timer_PWM::~Timer_PWM()
 800cb58:	b580      	push	{r7, lr}
 800cb5a:	b082      	sub	sp, #8
 800cb5c:	af00      	add	r7, sp, #0
 800cb5e:	6078      	str	r0, [r7, #4]
}
 800cb60:	6878      	ldr	r0, [r7, #4]
 800cb62:	f7ff ffe7 	bl	800cb34 <_ZN9Timer_PWMD1Ev>
 800cb66:	2118      	movs	r1, #24
 800cb68:	6878      	ldr	r0, [r7, #4]
 800cb6a:	f000 fafb 	bl	800d164 <_ZdlPvj>
 800cb6e:	687b      	ldr	r3, [r7, #4]
 800cb70:	4618      	mov	r0, r3
 800cb72:	3708      	adds	r7, #8
 800cb74:	46bd      	mov	sp, r7
 800cb76:	bd80      	pop	{r7, pc}

0800cb78 <_ZN9Timer_PWM7PWM_OutEhj>:

void Timer_PWM::PWM_Out(u8 n, u16 pwm)
{
 800cb78:	b480      	push	{r7}
 800cb7a:	b085      	sub	sp, #20
 800cb7c:	af00      	add	r7, sp, #0
 800cb7e:	60f8      	str	r0, [r7, #12]
 800cb80:	460b      	mov	r3, r1
 800cb82:	607a      	str	r2, [r7, #4]
 800cb84:	72fb      	strb	r3, [r7, #11]
	this->pwm = pwm;
 800cb86:	68fb      	ldr	r3, [r7, #12]
 800cb88:	687a      	ldr	r2, [r7, #4]
 800cb8a:	615a      	str	r2, [r3, #20]
	switch(n){
 800cb8c:	7afb      	ldrb	r3, [r7, #11]
 800cb8e:	3b01      	subs	r3, #1
 800cb90:	2b03      	cmp	r3, #3
 800cb92:	d827      	bhi.n	800cbe4 <_ZN9Timer_PWM7PWM_OutEhj+0x6c>
 800cb94:	a201      	add	r2, pc, #4	; (adr r2, 800cb9c <_ZN9Timer_PWM7PWM_OutEhj+0x24>)
 800cb96:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cb9a:	bf00      	nop
 800cb9c:	0800cbad 	.word	0x0800cbad
 800cba0:	0800cbbb 	.word	0x0800cbbb
 800cba4:	0800cbc9 	.word	0x0800cbc9
 800cba8:	0800cbd7 	.word	0x0800cbd7
	case 1:
		__HAL_TIM_SET_COMPARE(this->tim, TIM_CHANNEL_1, this->pwm);
 800cbac:	68fb      	ldr	r3, [r7, #12]
 800cbae:	68db      	ldr	r3, [r3, #12]
 800cbb0:	681b      	ldr	r3, [r3, #0]
 800cbb2:	68fa      	ldr	r2, [r7, #12]
 800cbb4:	6952      	ldr	r2, [r2, #20]
 800cbb6:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 800cbb8:	e014      	b.n	800cbe4 <_ZN9Timer_PWM7PWM_OutEhj+0x6c>
	case 2:
		__HAL_TIM_SET_COMPARE(this->tim, TIM_CHANNEL_2, this->pwm);
 800cbba:	68fb      	ldr	r3, [r7, #12]
 800cbbc:	68db      	ldr	r3, [r3, #12]
 800cbbe:	681b      	ldr	r3, [r3, #0]
 800cbc0:	68fa      	ldr	r2, [r7, #12]
 800cbc2:	6952      	ldr	r2, [r2, #20]
 800cbc4:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 800cbc6:	e00d      	b.n	800cbe4 <_ZN9Timer_PWM7PWM_OutEhj+0x6c>
	case 3:
		__HAL_TIM_SET_COMPARE(this->tim, TIM_CHANNEL_3, this->pwm);
 800cbc8:	68fb      	ldr	r3, [r7, #12]
 800cbca:	68db      	ldr	r3, [r3, #12]
 800cbcc:	681b      	ldr	r3, [r3, #0]
 800cbce:	68fa      	ldr	r2, [r7, #12]
 800cbd0:	6952      	ldr	r2, [r2, #20]
 800cbd2:	63da      	str	r2, [r3, #60]	; 0x3c
		break;
 800cbd4:	e006      	b.n	800cbe4 <_ZN9Timer_PWM7PWM_OutEhj+0x6c>
	case 4:
		__HAL_TIM_SET_COMPARE(this->tim, TIM_CHANNEL_4, this->pwm);
 800cbd6:	68fb      	ldr	r3, [r7, #12]
 800cbd8:	68db      	ldr	r3, [r3, #12]
 800cbda:	681b      	ldr	r3, [r3, #0]
 800cbdc:	68fa      	ldr	r2, [r7, #12]
 800cbde:	6952      	ldr	r2, [r2, #20]
 800cbe0:	641a      	str	r2, [r3, #64]	; 0x40
		break;
 800cbe2:	bf00      	nop
	}
}
 800cbe4:	bf00      	nop
 800cbe6:	3714      	adds	r7, #20
 800cbe8:	46bd      	mov	sp, r7
 800cbea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbee:	4770      	bx	lr

0800cbf0 <_ZN5UsartC1EP20__UART_HandleTypeDefP13USART_TypeDefj>:
#include "USART.hpp"

static void UART_SetConfig(UART_HandleTypeDef *huart);

Usart::Usart(UART_HandleTypeDef *usart, USART_TypeDef *usart_num, unsigned int baud)
 800cbf0:	b580      	push	{r7, lr}
 800cbf2:	b084      	sub	sp, #16
 800cbf4:	af00      	add	r7, sp, #0
 800cbf6:	60f8      	str	r0, [r7, #12]
 800cbf8:	60b9      	str	r1, [r7, #8]
 800cbfa:	607a      	str	r2, [r7, #4]
 800cbfc:	603b      	str	r3, [r7, #0]
{
	this->usart = usart;
 800cbfe:	68fb      	ldr	r3, [r7, #12]
 800cc00:	68ba      	ldr	r2, [r7, #8]
 800cc02:	601a      	str	r2, [r3, #0]
	this->usart_num = usart_num;
 800cc04:	68fb      	ldr	r3, [r7, #12]
 800cc06:	687a      	ldr	r2, [r7, #4]
 800cc08:	605a      	str	r2, [r3, #4]
	this->baud = baud;
 800cc0a:	68fb      	ldr	r3, [r7, #12]
 800cc0c:	683a      	ldr	r2, [r7, #0]
 800cc0e:	609a      	str	r2, [r3, #8]

	this->usart->Instance = this->usart_num;
 800cc10:	68fb      	ldr	r3, [r7, #12]
 800cc12:	681b      	ldr	r3, [r3, #0]
 800cc14:	68fa      	ldr	r2, [r7, #12]
 800cc16:	6852      	ldr	r2, [r2, #4]
 800cc18:	601a      	str	r2, [r3, #0]
	this->usart->Init.BaudRate = this->baud;
 800cc1a:	68fb      	ldr	r3, [r7, #12]
 800cc1c:	681b      	ldr	r3, [r3, #0]
 800cc1e:	68fa      	ldr	r2, [r7, #12]
 800cc20:	6892      	ldr	r2, [r2, #8]
 800cc22:	605a      	str	r2, [r3, #4]
	this->usart->Init.WordLength = UART_WORDLENGTH_8B;
 800cc24:	68fb      	ldr	r3, [r7, #12]
 800cc26:	681b      	ldr	r3, [r3, #0]
 800cc28:	2200      	movs	r2, #0
 800cc2a:	609a      	str	r2, [r3, #8]
	this->usart->Init.StopBits = UART_STOPBITS_1;
 800cc2c:	68fb      	ldr	r3, [r7, #12]
 800cc2e:	681b      	ldr	r3, [r3, #0]
 800cc30:	2200      	movs	r2, #0
 800cc32:	60da      	str	r2, [r3, #12]
	this->usart->Init.Parity = UART_PARITY_NONE;
 800cc34:	68fb      	ldr	r3, [r7, #12]
 800cc36:	681b      	ldr	r3, [r3, #0]
 800cc38:	2200      	movs	r2, #0
 800cc3a:	611a      	str	r2, [r3, #16]
	this->usart->Init.Mode = UART_MODE_TX_RX;
 800cc3c:	68fb      	ldr	r3, [r7, #12]
 800cc3e:	681b      	ldr	r3, [r3, #0]
 800cc40:	220c      	movs	r2, #12
 800cc42:	615a      	str	r2, [r3, #20]
	this->usart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800cc44:	68fb      	ldr	r3, [r7, #12]
 800cc46:	681b      	ldr	r3, [r3, #0]
 800cc48:	2200      	movs	r2, #0
 800cc4a:	619a      	str	r2, [r3, #24]
	this->usart->Init.OverSampling = UART_OVERSAMPLING_16;
 800cc4c:	68fb      	ldr	r3, [r7, #12]
 800cc4e:	681b      	ldr	r3, [r3, #0]
 800cc50:	2200      	movs	r2, #0
 800cc52:	61da      	str	r2, [r3, #28]
	if (this->USART_Init() != HAL_OK)
 800cc54:	68f8      	ldr	r0, [r7, #12]
 800cc56:	f000 f859 	bl	800cd0c <_ZN5Usart10USART_InitEv>
 800cc5a:	4603      	mov	r3, r0
 800cc5c:	2b00      	cmp	r3, #0
 800cc5e:	bf14      	ite	ne
 800cc60:	2301      	movne	r3, #1
 800cc62:	2300      	moveq	r3, #0
 800cc64:	b2db      	uxtb	r3, r3
 800cc66:	2b00      	cmp	r3, #0
 800cc68:	d001      	beq.n	800cc6e <_ZN5UsartC1EP20__UART_HandleTypeDefP13USART_TypeDefj+0x7e>
	{
	Error_Handler();
 800cc6a:	f7fc f9df 	bl	800902c <Error_Handler>
	}
}
 800cc6e:	68fb      	ldr	r3, [r7, #12]
 800cc70:	4618      	mov	r0, r3
 800cc72:	3710      	adds	r7, #16
 800cc74:	46bd      	mov	sp, r7
 800cc76:	bd80      	pop	{r7, pc}

0800cc78 <_ZN5Usart13USART_MspInitEv>:
	}while(*(str + k)!='\0');

}

void Usart::USART_MspInit()
{
 800cc78:	b580      	push	{r7, lr}
 800cc7a:	b08a      	sub	sp, #40	; 0x28
 800cc7c:	af00      	add	r7, sp, #0
 800cc7e:	6078      	str	r0, [r7, #4]

	GPIO_InitTypeDef GPIO_InitStruct = {0};
 800cc80:	f107 0314 	add.w	r3, r7, #20
 800cc84:	2200      	movs	r2, #0
 800cc86:	601a      	str	r2, [r3, #0]
 800cc88:	605a      	str	r2, [r3, #4]
 800cc8a:	609a      	str	r2, [r3, #8]
 800cc8c:	60da      	str	r2, [r3, #12]
 800cc8e:	611a      	str	r2, [r3, #16]
	if(this->usart->Instance == USART1){
 800cc90:	687b      	ldr	r3, [r7, #4]
 800cc92:	681b      	ldr	r3, [r3, #0]
 800cc94:	681b      	ldr	r3, [r3, #0]
 800cc96:	4a1a      	ldr	r2, [pc, #104]	; (800cd00 <_ZN5Usart13USART_MspInitEv+0x88>)
 800cc98:	4293      	cmp	r3, r2
 800cc9a:	d12c      	bne.n	800ccf6 <_ZN5Usart13USART_MspInitEv+0x7e>
		__HAL_RCC_USART1_CLK_ENABLE();
 800cc9c:	2300      	movs	r3, #0
 800cc9e:	613b      	str	r3, [r7, #16]
 800cca0:	4b18      	ldr	r3, [pc, #96]	; (800cd04 <_ZN5Usart13USART_MspInitEv+0x8c>)
 800cca2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cca4:	4a17      	ldr	r2, [pc, #92]	; (800cd04 <_ZN5Usart13USART_MspInitEv+0x8c>)
 800cca6:	f043 0310 	orr.w	r3, r3, #16
 800ccaa:	6453      	str	r3, [r2, #68]	; 0x44
 800ccac:	4b15      	ldr	r3, [pc, #84]	; (800cd04 <_ZN5Usart13USART_MspInitEv+0x8c>)
 800ccae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ccb0:	f003 0310 	and.w	r3, r3, #16
 800ccb4:	613b      	str	r3, [r7, #16]
 800ccb6:	693b      	ldr	r3, [r7, #16]

		__HAL_RCC_GPIOA_CLK_ENABLE();
 800ccb8:	2300      	movs	r3, #0
 800ccba:	60fb      	str	r3, [r7, #12]
 800ccbc:	4b11      	ldr	r3, [pc, #68]	; (800cd04 <_ZN5Usart13USART_MspInitEv+0x8c>)
 800ccbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ccc0:	4a10      	ldr	r2, [pc, #64]	; (800cd04 <_ZN5Usart13USART_MspInitEv+0x8c>)
 800ccc2:	f043 0301 	orr.w	r3, r3, #1
 800ccc6:	6313      	str	r3, [r2, #48]	; 0x30
 800ccc8:	4b0e      	ldr	r3, [pc, #56]	; (800cd04 <_ZN5Usart13USART_MspInitEv+0x8c>)
 800ccca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cccc:	f003 0301 	and.w	r3, r3, #1
 800ccd0:	60fb      	str	r3, [r7, #12]
 800ccd2:	68fb      	ldr	r3, [r7, #12]
		/**USART1 GPIO Configuration
		PA9     ------> USART1_TX
		PA10     ------> USART1_RX
		*/
		GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800ccd4:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800ccd8:	617b      	str	r3, [r7, #20]
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800ccda:	2302      	movs	r3, #2
 800ccdc:	61bb      	str	r3, [r7, #24]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 800ccde:	2300      	movs	r3, #0
 800cce0:	61fb      	str	r3, [r7, #28]
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800cce2:	2303      	movs	r3, #3
 800cce4:	623b      	str	r3, [r7, #32]
		GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800cce6:	2307      	movs	r3, #7
 800cce8:	627b      	str	r3, [r7, #36]	; 0x24
		HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800ccea:	f107 0314 	add.w	r3, r7, #20
 800ccee:	4619      	mov	r1, r3
 800ccf0:	4805      	ldr	r0, [pc, #20]	; (800cd08 <_ZN5Usart13USART_MspInitEv+0x90>)
 800ccf2:	f7fc fe79 	bl	80099e8 <HAL_GPIO_Init>

		/* USART1 interrupt Init */
//		HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
//		HAL_NVIC_EnableIRQ(USART1_IRQn);
	}
}
 800ccf6:	bf00      	nop
 800ccf8:	3728      	adds	r7, #40	; 0x28
 800ccfa:	46bd      	mov	sp, r7
 800ccfc:	bd80      	pop	{r7, pc}
 800ccfe:	bf00      	nop
 800cd00:	40011000 	.word	0x40011000
 800cd04:	40023800 	.word	0x40023800
 800cd08:	40020000 	.word	0x40020000

0800cd0c <_ZN5Usart10USART_InitEv>:
		HAL_NVIC_DisableIRQ(USART1_IRQn);
	}
}

HAL_StatusTypeDef Usart::USART_Init()
{
 800cd0c:	b580      	push	{r7, lr}
 800cd0e:	b082      	sub	sp, #8
 800cd10:	af00      	add	r7, sp, #0
 800cd12:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
	if (this->usart == NULL){
 800cd14:	687b      	ldr	r3, [r7, #4]
 800cd16:	681b      	ldr	r3, [r3, #0]
 800cd18:	2b00      	cmp	r3, #0
 800cd1a:	d101      	bne.n	800cd20 <_ZN5Usart10USART_InitEv+0x14>
		return HAL_ERROR;
 800cd1c:	2301      	movs	r3, #1
 800cd1e:	e054      	b.n	800cdca <_ZN5Usart10USART_InitEv+0xbe>
		assert_param(IS_UART_INSTANCE(this->usart->Instance));
	}
	assert_param(IS_UART_WORD_LENGTH(this->usart->Init.WordLength));
	assert_param(IS_UART_OVERSAMPLING(this->usart->Init.OverSampling));

	if (this->usart->gState == HAL_UART_STATE_RESET){
 800cd20:	687b      	ldr	r3, [r7, #4]
 800cd22:	681b      	ldr	r3, [r3, #0]
 800cd24:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800cd28:	b2db      	uxtb	r3, r3
 800cd2a:	2b00      	cmp	r3, #0
 800cd2c:	bf0c      	ite	eq
 800cd2e:	2301      	moveq	r3, #1
 800cd30:	2300      	movne	r3, #0
 800cd32:	b2db      	uxtb	r3, r3
 800cd34:	2b00      	cmp	r3, #0
 800cd36:	d007      	beq.n	800cd48 <_ZN5Usart10USART_InitEv+0x3c>
    this->usart->Lock = HAL_UNLOCKED;
 800cd38:	687b      	ldr	r3, [r7, #4]
 800cd3a:	681b      	ldr	r3, [r3, #0]
 800cd3c:	2200      	movs	r2, #0
 800cd3e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    this->USART_MspInit();
 800cd42:	6878      	ldr	r0, [r7, #4]
 800cd44:	f7ff ff98 	bl	800cc78 <_ZN5Usart13USART_MspInitEv>
	}

	this->usart->gState = HAL_UART_STATE_BUSY;
 800cd48:	687b      	ldr	r3, [r7, #4]
 800cd4a:	681b      	ldr	r3, [r3, #0]
 800cd4c:	2224      	movs	r2, #36	; 0x24
 800cd4e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

	__HAL_UART_DISABLE(this->usart);
 800cd52:	687b      	ldr	r3, [r7, #4]
 800cd54:	681b      	ldr	r3, [r3, #0]
 800cd56:	681b      	ldr	r3, [r3, #0]
 800cd58:	68da      	ldr	r2, [r3, #12]
 800cd5a:	687b      	ldr	r3, [r7, #4]
 800cd5c:	681b      	ldr	r3, [r3, #0]
 800cd5e:	681b      	ldr	r3, [r3, #0]
 800cd60:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800cd64:	60da      	str	r2, [r3, #12]

	UART_SetConfig(this->usart);
 800cd66:	687b      	ldr	r3, [r7, #4]
 800cd68:	681b      	ldr	r3, [r3, #0]
 800cd6a:	4618      	mov	r0, r3
 800cd6c:	f000 f832 	bl	800cdd4 <_ZL14UART_SetConfigP20__UART_HandleTypeDef>

	CLEAR_BIT(this->usart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800cd70:	687b      	ldr	r3, [r7, #4]
 800cd72:	681b      	ldr	r3, [r3, #0]
 800cd74:	681b      	ldr	r3, [r3, #0]
 800cd76:	691a      	ldr	r2, [r3, #16]
 800cd78:	687b      	ldr	r3, [r7, #4]
 800cd7a:	681b      	ldr	r3, [r3, #0]
 800cd7c:	681b      	ldr	r3, [r3, #0]
 800cd7e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800cd82:	611a      	str	r2, [r3, #16]
	CLEAR_BIT(this->usart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800cd84:	687b      	ldr	r3, [r7, #4]
 800cd86:	681b      	ldr	r3, [r3, #0]
 800cd88:	681b      	ldr	r3, [r3, #0]
 800cd8a:	695a      	ldr	r2, [r3, #20]
 800cd8c:	687b      	ldr	r3, [r7, #4]
 800cd8e:	681b      	ldr	r3, [r3, #0]
 800cd90:	681b      	ldr	r3, [r3, #0]
 800cd92:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800cd96:	615a      	str	r2, [r3, #20]

	__HAL_UART_ENABLE(this->usart);
 800cd98:	687b      	ldr	r3, [r7, #4]
 800cd9a:	681b      	ldr	r3, [r3, #0]
 800cd9c:	681b      	ldr	r3, [r3, #0]
 800cd9e:	68da      	ldr	r2, [r3, #12]
 800cda0:	687b      	ldr	r3, [r7, #4]
 800cda2:	681b      	ldr	r3, [r3, #0]
 800cda4:	681b      	ldr	r3, [r3, #0]
 800cda6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800cdaa:	60da      	str	r2, [r3, #12]

	this->usart->ErrorCode = HAL_UART_ERROR_NONE;
 800cdac:	687b      	ldr	r3, [r7, #4]
 800cdae:	681b      	ldr	r3, [r3, #0]
 800cdb0:	2200      	movs	r2, #0
 800cdb2:	641a      	str	r2, [r3, #64]	; 0x40
	this->usart->gState = HAL_UART_STATE_READY;
 800cdb4:	687b      	ldr	r3, [r7, #4]
 800cdb6:	681b      	ldr	r3, [r3, #0]
 800cdb8:	2220      	movs	r2, #32
 800cdba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
	this->usart->RxState = HAL_UART_STATE_READY;
 800cdbe:	687b      	ldr	r3, [r7, #4]
 800cdc0:	681b      	ldr	r3, [r3, #0]
 800cdc2:	2220      	movs	r2, #32
 800cdc4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

	return HAL_OK;
 800cdc8:	2300      	movs	r3, #0
}
 800cdca:	4618      	mov	r0, r3
 800cdcc:	3708      	adds	r7, #8
 800cdce:	46bd      	mov	sp, r7
 800cdd0:	bd80      	pop	{r7, pc}
	...

0800cdd4 <_ZL14UART_SetConfigP20__UART_HandleTypeDef>:

static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800cdd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdd8:	b09f      	sub	sp, #124	; 0x7c
 800cdda:	af00      	add	r7, sp, #0
 800cddc:	66f8      	str	r0, [r7, #108]	; 0x6c
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800cdde:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cde0:	681b      	ldr	r3, [r3, #0]
 800cde2:	691b      	ldr	r3, [r3, #16]
 800cde4:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800cde8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cdea:	68d9      	ldr	r1, [r3, #12]
 800cdec:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cdee:	681a      	ldr	r2, [r3, #0]
 800cdf0:	ea40 0301 	orr.w	r3, r0, r1
 800cdf4:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800cdf6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cdf8:	689a      	ldr	r2, [r3, #8]
 800cdfa:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cdfc:	691b      	ldr	r3, [r3, #16]
 800cdfe:	431a      	orrs	r2, r3
 800ce00:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ce02:	695b      	ldr	r3, [r3, #20]
 800ce04:	431a      	orrs	r2, r3
 800ce06:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ce08:	69db      	ldr	r3, [r3, #28]
 800ce0a:	4313      	orrs	r3, r2
 800ce0c:	673b      	str	r3, [r7, #112]	; 0x70
  MODIFY_REG(huart->Instance->CR1,
 800ce0e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ce10:	681b      	ldr	r3, [r3, #0]
 800ce12:	68db      	ldr	r3, [r3, #12]
 800ce14:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800ce18:	f021 010c 	bic.w	r1, r1, #12
 800ce1c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ce1e:	681a      	ldr	r2, [r3, #0]
 800ce20:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800ce22:	430b      	orrs	r3, r1
 800ce24:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800ce26:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ce28:	681b      	ldr	r3, [r3, #0]
 800ce2a:	695b      	ldr	r3, [r3, #20]
 800ce2c:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800ce30:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ce32:	6999      	ldr	r1, [r3, #24]
 800ce34:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ce36:	681a      	ldr	r2, [r3, #0]
 800ce38:	ea40 0301 	orr.w	r3, r0, r1
 800ce3c:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800ce3e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ce40:	681a      	ldr	r2, [r3, #0]
 800ce42:	4bc5      	ldr	r3, [pc, #788]	; (800d158 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x384>)
 800ce44:	429a      	cmp	r2, r3
 800ce46:	d004      	beq.n	800ce52 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x7e>
 800ce48:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ce4a:	681a      	ldr	r2, [r3, #0]
 800ce4c:	4bc3      	ldr	r3, [pc, #780]	; (800d15c <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x388>)
 800ce4e:	429a      	cmp	r2, r3
 800ce50:	d103      	bne.n	800ce5a <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x86>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 800ce52:	f7fd fcaf 	bl	800a7b4 <HAL_RCC_GetPCLK2Freq>
 800ce56:	6778      	str	r0, [r7, #116]	; 0x74
 800ce58:	e002      	b.n	800ce60 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x8c>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 800ce5a:	f7fd fc97 	bl	800a78c <HAL_RCC_GetPCLK1Freq>
 800ce5e:	6778      	str	r0, [r7, #116]	; 0x74
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800ce60:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ce62:	69db      	ldr	r3, [r3, #28]
 800ce64:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800ce68:	f040 80b6 	bne.w	800cfd8 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x204>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800ce6c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800ce6e:	461c      	mov	r4, r3
 800ce70:	f04f 0500 	mov.w	r5, #0
 800ce74:	4622      	mov	r2, r4
 800ce76:	462b      	mov	r3, r5
 800ce78:	1891      	adds	r1, r2, r2
 800ce7a:	6439      	str	r1, [r7, #64]	; 0x40
 800ce7c:	415b      	adcs	r3, r3
 800ce7e:	647b      	str	r3, [r7, #68]	; 0x44
 800ce80:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800ce84:	1912      	adds	r2, r2, r4
 800ce86:	eb45 0303 	adc.w	r3, r5, r3
 800ce8a:	f04f 0000 	mov.w	r0, #0
 800ce8e:	f04f 0100 	mov.w	r1, #0
 800ce92:	00d9      	lsls	r1, r3, #3
 800ce94:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800ce98:	00d0      	lsls	r0, r2, #3
 800ce9a:	4602      	mov	r2, r0
 800ce9c:	460b      	mov	r3, r1
 800ce9e:	1911      	adds	r1, r2, r4
 800cea0:	6639      	str	r1, [r7, #96]	; 0x60
 800cea2:	416b      	adcs	r3, r5
 800cea4:	667b      	str	r3, [r7, #100]	; 0x64
 800cea6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cea8:	685b      	ldr	r3, [r3, #4]
 800ceaa:	461a      	mov	r2, r3
 800ceac:	f04f 0300 	mov.w	r3, #0
 800ceb0:	1891      	adds	r1, r2, r2
 800ceb2:	63b9      	str	r1, [r7, #56]	; 0x38
 800ceb4:	415b      	adcs	r3, r3
 800ceb6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ceb8:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800cebc:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 800cec0:	f7fa fcd4 	bl	800786c <__aeabi_uldivmod>
 800cec4:	4602      	mov	r2, r0
 800cec6:	460b      	mov	r3, r1
 800cec8:	4ba5      	ldr	r3, [pc, #660]	; (800d160 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x38c>)
 800ceca:	fba3 2302 	umull	r2, r3, r3, r2
 800cece:	095b      	lsrs	r3, r3, #5
 800ced0:	011e      	lsls	r6, r3, #4
 800ced2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800ced4:	461c      	mov	r4, r3
 800ced6:	f04f 0500 	mov.w	r5, #0
 800ceda:	4622      	mov	r2, r4
 800cedc:	462b      	mov	r3, r5
 800cede:	1891      	adds	r1, r2, r2
 800cee0:	6339      	str	r1, [r7, #48]	; 0x30
 800cee2:	415b      	adcs	r3, r3
 800cee4:	637b      	str	r3, [r7, #52]	; 0x34
 800cee6:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800ceea:	1912      	adds	r2, r2, r4
 800ceec:	eb45 0303 	adc.w	r3, r5, r3
 800cef0:	f04f 0000 	mov.w	r0, #0
 800cef4:	f04f 0100 	mov.w	r1, #0
 800cef8:	00d9      	lsls	r1, r3, #3
 800cefa:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800cefe:	00d0      	lsls	r0, r2, #3
 800cf00:	4602      	mov	r2, r0
 800cf02:	460b      	mov	r3, r1
 800cf04:	1911      	adds	r1, r2, r4
 800cf06:	65b9      	str	r1, [r7, #88]	; 0x58
 800cf08:	416b      	adcs	r3, r5
 800cf0a:	65fb      	str	r3, [r7, #92]	; 0x5c
 800cf0c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cf0e:	685b      	ldr	r3, [r3, #4]
 800cf10:	461a      	mov	r2, r3
 800cf12:	f04f 0300 	mov.w	r3, #0
 800cf16:	1891      	adds	r1, r2, r2
 800cf18:	62b9      	str	r1, [r7, #40]	; 0x28
 800cf1a:	415b      	adcs	r3, r3
 800cf1c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cf1e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800cf22:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 800cf26:	f7fa fca1 	bl	800786c <__aeabi_uldivmod>
 800cf2a:	4602      	mov	r2, r0
 800cf2c:	460b      	mov	r3, r1
 800cf2e:	4b8c      	ldr	r3, [pc, #560]	; (800d160 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x38c>)
 800cf30:	fba3 1302 	umull	r1, r3, r3, r2
 800cf34:	095b      	lsrs	r3, r3, #5
 800cf36:	2164      	movs	r1, #100	; 0x64
 800cf38:	fb01 f303 	mul.w	r3, r1, r3
 800cf3c:	1ad3      	subs	r3, r2, r3
 800cf3e:	00db      	lsls	r3, r3, #3
 800cf40:	3332      	adds	r3, #50	; 0x32
 800cf42:	4a87      	ldr	r2, [pc, #540]	; (800d160 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x38c>)
 800cf44:	fba2 2303 	umull	r2, r3, r2, r3
 800cf48:	095b      	lsrs	r3, r3, #5
 800cf4a:	005b      	lsls	r3, r3, #1
 800cf4c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800cf50:	441e      	add	r6, r3
 800cf52:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800cf54:	4618      	mov	r0, r3
 800cf56:	f04f 0100 	mov.w	r1, #0
 800cf5a:	4602      	mov	r2, r0
 800cf5c:	460b      	mov	r3, r1
 800cf5e:	1894      	adds	r4, r2, r2
 800cf60:	623c      	str	r4, [r7, #32]
 800cf62:	415b      	adcs	r3, r3
 800cf64:	627b      	str	r3, [r7, #36]	; 0x24
 800cf66:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800cf6a:	1812      	adds	r2, r2, r0
 800cf6c:	eb41 0303 	adc.w	r3, r1, r3
 800cf70:	f04f 0400 	mov.w	r4, #0
 800cf74:	f04f 0500 	mov.w	r5, #0
 800cf78:	00dd      	lsls	r5, r3, #3
 800cf7a:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800cf7e:	00d4      	lsls	r4, r2, #3
 800cf80:	4622      	mov	r2, r4
 800cf82:	462b      	mov	r3, r5
 800cf84:	1814      	adds	r4, r2, r0
 800cf86:	653c      	str	r4, [r7, #80]	; 0x50
 800cf88:	414b      	adcs	r3, r1
 800cf8a:	657b      	str	r3, [r7, #84]	; 0x54
 800cf8c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cf8e:	685b      	ldr	r3, [r3, #4]
 800cf90:	461a      	mov	r2, r3
 800cf92:	f04f 0300 	mov.w	r3, #0
 800cf96:	1891      	adds	r1, r2, r2
 800cf98:	61b9      	str	r1, [r7, #24]
 800cf9a:	415b      	adcs	r3, r3
 800cf9c:	61fb      	str	r3, [r7, #28]
 800cf9e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800cfa2:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800cfa6:	f7fa fc61 	bl	800786c <__aeabi_uldivmod>
 800cfaa:	4602      	mov	r2, r0
 800cfac:	460b      	mov	r3, r1
 800cfae:	4b6c      	ldr	r3, [pc, #432]	; (800d160 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x38c>)
 800cfb0:	fba3 1302 	umull	r1, r3, r3, r2
 800cfb4:	095b      	lsrs	r3, r3, #5
 800cfb6:	2164      	movs	r1, #100	; 0x64
 800cfb8:	fb01 f303 	mul.w	r3, r1, r3
 800cfbc:	1ad3      	subs	r3, r2, r3
 800cfbe:	00db      	lsls	r3, r3, #3
 800cfc0:	3332      	adds	r3, #50	; 0x32
 800cfc2:	4a67      	ldr	r2, [pc, #412]	; (800d160 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x38c>)
 800cfc4:	fba2 2303 	umull	r2, r3, r2, r3
 800cfc8:	095b      	lsrs	r3, r3, #5
 800cfca:	f003 0207 	and.w	r2, r3, #7
 800cfce:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cfd0:	681b      	ldr	r3, [r3, #0]
 800cfd2:	4432      	add	r2, r6
 800cfd4:	609a      	str	r2, [r3, #8]
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
  }
}
 800cfd6:	e0b9      	b.n	800d14c <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x378>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800cfd8:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800cfda:	461c      	mov	r4, r3
 800cfdc:	f04f 0500 	mov.w	r5, #0
 800cfe0:	4622      	mov	r2, r4
 800cfe2:	462b      	mov	r3, r5
 800cfe4:	1891      	adds	r1, r2, r2
 800cfe6:	6139      	str	r1, [r7, #16]
 800cfe8:	415b      	adcs	r3, r3
 800cfea:	617b      	str	r3, [r7, #20]
 800cfec:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800cff0:	1912      	adds	r2, r2, r4
 800cff2:	eb45 0303 	adc.w	r3, r5, r3
 800cff6:	f04f 0000 	mov.w	r0, #0
 800cffa:	f04f 0100 	mov.w	r1, #0
 800cffe:	00d9      	lsls	r1, r3, #3
 800d000:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800d004:	00d0      	lsls	r0, r2, #3
 800d006:	4602      	mov	r2, r0
 800d008:	460b      	mov	r3, r1
 800d00a:	eb12 0804 	adds.w	r8, r2, r4
 800d00e:	eb43 0905 	adc.w	r9, r3, r5
 800d012:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d014:	685b      	ldr	r3, [r3, #4]
 800d016:	4618      	mov	r0, r3
 800d018:	f04f 0100 	mov.w	r1, #0
 800d01c:	f04f 0200 	mov.w	r2, #0
 800d020:	f04f 0300 	mov.w	r3, #0
 800d024:	008b      	lsls	r3, r1, #2
 800d026:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 800d02a:	0082      	lsls	r2, r0, #2
 800d02c:	4640      	mov	r0, r8
 800d02e:	4649      	mov	r1, r9
 800d030:	f7fa fc1c 	bl	800786c <__aeabi_uldivmod>
 800d034:	4602      	mov	r2, r0
 800d036:	460b      	mov	r3, r1
 800d038:	4b49      	ldr	r3, [pc, #292]	; (800d160 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x38c>)
 800d03a:	fba3 2302 	umull	r2, r3, r3, r2
 800d03e:	095b      	lsrs	r3, r3, #5
 800d040:	011e      	lsls	r6, r3, #4
 800d042:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800d044:	4618      	mov	r0, r3
 800d046:	f04f 0100 	mov.w	r1, #0
 800d04a:	4602      	mov	r2, r0
 800d04c:	460b      	mov	r3, r1
 800d04e:	1894      	adds	r4, r2, r2
 800d050:	60bc      	str	r4, [r7, #8]
 800d052:	415b      	adcs	r3, r3
 800d054:	60fb      	str	r3, [r7, #12]
 800d056:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800d05a:	1812      	adds	r2, r2, r0
 800d05c:	eb41 0303 	adc.w	r3, r1, r3
 800d060:	f04f 0400 	mov.w	r4, #0
 800d064:	f04f 0500 	mov.w	r5, #0
 800d068:	00dd      	lsls	r5, r3, #3
 800d06a:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800d06e:	00d4      	lsls	r4, r2, #3
 800d070:	4622      	mov	r2, r4
 800d072:	462b      	mov	r3, r5
 800d074:	1814      	adds	r4, r2, r0
 800d076:	64bc      	str	r4, [r7, #72]	; 0x48
 800d078:	414b      	adcs	r3, r1
 800d07a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800d07c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d07e:	685b      	ldr	r3, [r3, #4]
 800d080:	4618      	mov	r0, r3
 800d082:	f04f 0100 	mov.w	r1, #0
 800d086:	f04f 0200 	mov.w	r2, #0
 800d08a:	f04f 0300 	mov.w	r3, #0
 800d08e:	008b      	lsls	r3, r1, #2
 800d090:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 800d094:	0082      	lsls	r2, r0, #2
 800d096:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800d09a:	f7fa fbe7 	bl	800786c <__aeabi_uldivmod>
 800d09e:	4602      	mov	r2, r0
 800d0a0:	460b      	mov	r3, r1
 800d0a2:	4b2f      	ldr	r3, [pc, #188]	; (800d160 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x38c>)
 800d0a4:	fba3 1302 	umull	r1, r3, r3, r2
 800d0a8:	095b      	lsrs	r3, r3, #5
 800d0aa:	2164      	movs	r1, #100	; 0x64
 800d0ac:	fb01 f303 	mul.w	r3, r1, r3
 800d0b0:	1ad3      	subs	r3, r2, r3
 800d0b2:	011b      	lsls	r3, r3, #4
 800d0b4:	3332      	adds	r3, #50	; 0x32
 800d0b6:	4a2a      	ldr	r2, [pc, #168]	; (800d160 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x38c>)
 800d0b8:	fba2 2303 	umull	r2, r3, r2, r3
 800d0bc:	095b      	lsrs	r3, r3, #5
 800d0be:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800d0c2:	441e      	add	r6, r3
 800d0c4:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800d0c6:	4618      	mov	r0, r3
 800d0c8:	f04f 0100 	mov.w	r1, #0
 800d0cc:	4602      	mov	r2, r0
 800d0ce:	460b      	mov	r3, r1
 800d0d0:	1894      	adds	r4, r2, r2
 800d0d2:	603c      	str	r4, [r7, #0]
 800d0d4:	415b      	adcs	r3, r3
 800d0d6:	607b      	str	r3, [r7, #4]
 800d0d8:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d0dc:	1812      	adds	r2, r2, r0
 800d0de:	eb41 0303 	adc.w	r3, r1, r3
 800d0e2:	f04f 0400 	mov.w	r4, #0
 800d0e6:	f04f 0500 	mov.w	r5, #0
 800d0ea:	00dd      	lsls	r5, r3, #3
 800d0ec:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800d0f0:	00d4      	lsls	r4, r2, #3
 800d0f2:	4622      	mov	r2, r4
 800d0f4:	462b      	mov	r3, r5
 800d0f6:	eb12 0a00 	adds.w	sl, r2, r0
 800d0fa:	eb43 0b01 	adc.w	fp, r3, r1
 800d0fe:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d100:	685b      	ldr	r3, [r3, #4]
 800d102:	4618      	mov	r0, r3
 800d104:	f04f 0100 	mov.w	r1, #0
 800d108:	f04f 0200 	mov.w	r2, #0
 800d10c:	f04f 0300 	mov.w	r3, #0
 800d110:	008b      	lsls	r3, r1, #2
 800d112:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 800d116:	0082      	lsls	r2, r0, #2
 800d118:	4650      	mov	r0, sl
 800d11a:	4659      	mov	r1, fp
 800d11c:	f7fa fba6 	bl	800786c <__aeabi_uldivmod>
 800d120:	4602      	mov	r2, r0
 800d122:	460b      	mov	r3, r1
 800d124:	4b0e      	ldr	r3, [pc, #56]	; (800d160 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x38c>)
 800d126:	fba3 1302 	umull	r1, r3, r3, r2
 800d12a:	095b      	lsrs	r3, r3, #5
 800d12c:	2164      	movs	r1, #100	; 0x64
 800d12e:	fb01 f303 	mul.w	r3, r1, r3
 800d132:	1ad3      	subs	r3, r2, r3
 800d134:	011b      	lsls	r3, r3, #4
 800d136:	3332      	adds	r3, #50	; 0x32
 800d138:	4a09      	ldr	r2, [pc, #36]	; (800d160 <_ZL14UART_SetConfigP20__UART_HandleTypeDef+0x38c>)
 800d13a:	fba2 2303 	umull	r2, r3, r2, r3
 800d13e:	095b      	lsrs	r3, r3, #5
 800d140:	f003 020f 	and.w	r2, r3, #15
 800d144:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d146:	681b      	ldr	r3, [r3, #0]
 800d148:	4432      	add	r2, r6
 800d14a:	609a      	str	r2, [r3, #8]
}
 800d14c:	bf00      	nop
 800d14e:	377c      	adds	r7, #124	; 0x7c
 800d150:	46bd      	mov	sp, r7
 800d152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d156:	bf00      	nop
 800d158:	40011000 	.word	0x40011000
 800d15c:	40011400 	.word	0x40011400
 800d160:	51eb851f 	.word	0x51eb851f

0800d164 <_ZdlPvj>:
 800d164:	f000 b83a 	b.w	800d1dc <_ZdlPv>

0800d168 <_Znwj>:
 800d168:	2801      	cmp	r0, #1
 800d16a:	bf38      	it	cc
 800d16c:	2001      	movcc	r0, #1
 800d16e:	b510      	push	{r4, lr}
 800d170:	4604      	mov	r4, r0
 800d172:	4620      	mov	r0, r4
 800d174:	f001 fb00 	bl	800e778 <malloc>
 800d178:	b100      	cbz	r0, 800d17c <_Znwj+0x14>
 800d17a:	bd10      	pop	{r4, pc}
 800d17c:	f000 f9cc 	bl	800d518 <_ZSt15get_new_handlerv>
 800d180:	b108      	cbz	r0, 800d186 <_Znwj+0x1e>
 800d182:	4780      	blx	r0
 800d184:	e7f5      	b.n	800d172 <_Znwj+0xa>
 800d186:	2004      	movs	r0, #4
 800d188:	f000 f898 	bl	800d2bc <__cxa_allocate_exception>
 800d18c:	4b02      	ldr	r3, [pc, #8]	; (800d198 <_Znwj+0x30>)
 800d18e:	4a03      	ldr	r2, [pc, #12]	; (800d19c <_Znwj+0x34>)
 800d190:	4903      	ldr	r1, [pc, #12]	; (800d1a0 <_Znwj+0x38>)
 800d192:	6003      	str	r3, [r0, #0]
 800d194:	f000 f96c 	bl	800d470 <__cxa_throw>
 800d198:	08013834 	.word	0x08013834
 800d19c:	0800d1ad 	.word	0x0800d1ad
 800d1a0:	08013810 	.word	0x08013810

0800d1a4 <_ZNKSt9bad_alloc4whatEv>:
 800d1a4:	4800      	ldr	r0, [pc, #0]	; (800d1a8 <_ZNKSt9bad_alloc4whatEv+0x4>)
 800d1a6:	4770      	bx	lr
 800d1a8:	08013800 	.word	0x08013800

0800d1ac <_ZNSt9bad_allocD1Ev>:
 800d1ac:	b510      	push	{r4, lr}
 800d1ae:	4b03      	ldr	r3, [pc, #12]	; (800d1bc <_ZNSt9bad_allocD1Ev+0x10>)
 800d1b0:	6003      	str	r3, [r0, #0]
 800d1b2:	4604      	mov	r4, r0
 800d1b4:	f000 f8be 	bl	800d334 <_ZNSt9exceptionD1Ev>
 800d1b8:	4620      	mov	r0, r4
 800d1ba:	bd10      	pop	{r4, pc}
 800d1bc:	08013834 	.word	0x08013834

0800d1c0 <_ZNSt9bad_allocD0Ev>:
 800d1c0:	b510      	push	{r4, lr}
 800d1c2:	4b05      	ldr	r3, [pc, #20]	; (800d1d8 <_ZNSt9bad_allocD0Ev+0x18>)
 800d1c4:	6003      	str	r3, [r0, #0]
 800d1c6:	4604      	mov	r4, r0
 800d1c8:	f000 f8b4 	bl	800d334 <_ZNSt9exceptionD1Ev>
 800d1cc:	4620      	mov	r0, r4
 800d1ce:	2104      	movs	r1, #4
 800d1d0:	f7ff ffc8 	bl	800d164 <_ZdlPvj>
 800d1d4:	4620      	mov	r0, r4
 800d1d6:	bd10      	pop	{r4, pc}
 800d1d8:	08013834 	.word	0x08013834

0800d1dc <_ZdlPv>:
 800d1dc:	f001 bad4 	b.w	800e788 <free>

0800d1e0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>:
 800d1e0:	b4f0      	push	{r4, r5, r6, r7}
 800d1e2:	4c21      	ldr	r4, [pc, #132]	; (800d268 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x88>)
 800d1e4:	6863      	ldr	r3, [r4, #4]
 800d1e6:	f1a0 0608 	sub.w	r6, r0, #8
 800d1ea:	b31b      	cbz	r3, 800d234 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x54>
 800d1ec:	f850 7c08 	ldr.w	r7, [r0, #-8]
 800d1f0:	19f5      	adds	r5, r6, r7
 800d1f2:	42ab      	cmp	r3, r5
 800d1f4:	d81e      	bhi.n	800d234 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x54>
 800d1f6:	d02b      	beq.n	800d250 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x70>
 800d1f8:	685a      	ldr	r2, [r3, #4]
 800d1fa:	3404      	adds	r4, #4
 800d1fc:	b92a      	cbnz	r2, 800d20a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x2a>
 800d1fe:	e00c      	b.n	800d21a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x3a>
 800d200:	6851      	ldr	r1, [r2, #4]
 800d202:	1d1c      	adds	r4, r3, #4
 800d204:	b1f1      	cbz	r1, 800d244 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x64>
 800d206:	4613      	mov	r3, r2
 800d208:	460a      	mov	r2, r1
 800d20a:	4295      	cmp	r5, r2
 800d20c:	d3f8      	bcc.n	800d200 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x20>
 800d20e:	d129      	bne.n	800d264 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x84>
 800d210:	e9d5 2100 	ldrd	r2, r1, [r5]
 800d214:	6059      	str	r1, [r3, #4]
 800d216:	6823      	ldr	r3, [r4, #0]
 800d218:	4417      	add	r7, r2
 800d21a:	681a      	ldr	r2, [r3, #0]
 800d21c:	1899      	adds	r1, r3, r2
 800d21e:	428e      	cmp	r6, r1
 800d220:	d00d      	beq.n	800d23e <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x5e>
 800d222:	685b      	ldr	r3, [r3, #4]
 800d224:	f840 3c04 	str.w	r3, [r0, #-4]
 800d228:	6823      	ldr	r3, [r4, #0]
 800d22a:	f840 7c08 	str.w	r7, [r0, #-8]
 800d22e:	605e      	str	r6, [r3, #4]
 800d230:	bcf0      	pop	{r4, r5, r6, r7}
 800d232:	4770      	bx	lr
 800d234:	f840 3c04 	str.w	r3, [r0, #-4]
 800d238:	6066      	str	r6, [r4, #4]
 800d23a:	bcf0      	pop	{r4, r5, r6, r7}
 800d23c:	4770      	bx	lr
 800d23e:	4417      	add	r7, r2
 800d240:	601f      	str	r7, [r3, #0]
 800d242:	e7fa      	b.n	800d23a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x5a>
 800d244:	685b      	ldr	r3, [r3, #4]
 800d246:	681a      	ldr	r2, [r3, #0]
 800d248:	1899      	adds	r1, r3, r2
 800d24a:	428e      	cmp	r6, r1
 800d24c:	d1e9      	bne.n	800d222 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x42>
 800d24e:	e7f6      	b.n	800d23e <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x5e>
 800d250:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d254:	4417      	add	r7, r2
 800d256:	f840 7c08 	str.w	r7, [r0, #-8]
 800d25a:	f840 3c04 	str.w	r3, [r0, #-4]
 800d25e:	6066      	str	r6, [r4, #4]
 800d260:	bcf0      	pop	{r4, r5, r6, r7}
 800d262:	4770      	bx	lr
 800d264:	6823      	ldr	r3, [r4, #0]
 800d266:	e7d8      	b.n	800d21a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x3a>
 800d268:	20000a34 	.word	0x20000a34

0800d26c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>:
 800d26c:	4912      	ldr	r1, [pc, #72]	; (800d2b8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x4c>)
 800d26e:	f100 0208 	add.w	r2, r0, #8
 800d272:	6848      	ldr	r0, [r1, #4]
 800d274:	2a08      	cmp	r2, #8
 800d276:	bf38      	it	cc
 800d278:	2208      	movcc	r2, #8
 800d27a:	b1d8      	cbz	r0, 800d2b4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x48>
 800d27c:	3207      	adds	r2, #7
 800d27e:	f022 0207 	bic.w	r2, r2, #7
 800d282:	3104      	adds	r1, #4
 800d284:	e002      	b.n	800d28c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x20>
 800d286:	1d01      	adds	r1, r0, #4
 800d288:	6840      	ldr	r0, [r0, #4]
 800d28a:	b1a0      	cbz	r0, 800d2b6 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x4a>
 800d28c:	6803      	ldr	r3, [r0, #0]
 800d28e:	429a      	cmp	r2, r3
 800d290:	d8f9      	bhi.n	800d286 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x1a>
 800d292:	1a9b      	subs	r3, r3, r2
 800d294:	2b07      	cmp	r3, #7
 800d296:	d90a      	bls.n	800d2ae <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x42>
 800d298:	b430      	push	{r4, r5}
 800d29a:	1884      	adds	r4, r0, r2
 800d29c:	6845      	ldr	r5, [r0, #4]
 800d29e:	6065      	str	r5, [r4, #4]
 800d2a0:	5083      	str	r3, [r0, r2]
 800d2a2:	6808      	ldr	r0, [r1, #0]
 800d2a4:	6002      	str	r2, [r0, #0]
 800d2a6:	600c      	str	r4, [r1, #0]
 800d2a8:	3008      	adds	r0, #8
 800d2aa:	bc30      	pop	{r4, r5}
 800d2ac:	4770      	bx	lr
 800d2ae:	6843      	ldr	r3, [r0, #4]
 800d2b0:	600b      	str	r3, [r1, #0]
 800d2b2:	3008      	adds	r0, #8
 800d2b4:	4770      	bx	lr
 800d2b6:	4770      	bx	lr
 800d2b8:	20000a34 	.word	0x20000a34

0800d2bc <__cxa_allocate_exception>:
 800d2bc:	b510      	push	{r4, lr}
 800d2be:	f100 0480 	add.w	r4, r0, #128	; 0x80
 800d2c2:	4620      	mov	r0, r4
 800d2c4:	f001 fa58 	bl	800e778 <malloc>
 800d2c8:	4603      	mov	r3, r0
 800d2ca:	b130      	cbz	r0, 800d2da <__cxa_allocate_exception+0x1e>
 800d2cc:	2280      	movs	r2, #128	; 0x80
 800d2ce:	2100      	movs	r1, #0
 800d2d0:	4618      	mov	r0, r3
 800d2d2:	f001 fcd9 	bl	800ec88 <memset>
 800d2d6:	3080      	adds	r0, #128	; 0x80
 800d2d8:	bd10      	pop	{r4, pc}
 800d2da:	4620      	mov	r0, r4
 800d2dc:	f7ff ffc6 	bl	800d26c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
 800d2e0:	4603      	mov	r3, r0
 800d2e2:	2800      	cmp	r0, #0
 800d2e4:	d1f2      	bne.n	800d2cc <__cxa_allocate_exception+0x10>
 800d2e6:	f000 f849 	bl	800d37c <_ZSt9terminatev>
 800d2ea:	bf00      	nop

0800d2ec <__cxa_free_exception>:
 800d2ec:	4a06      	ldr	r2, [pc, #24]	; (800d308 <__cxa_free_exception+0x1c>)
 800d2ee:	6893      	ldr	r3, [r2, #8]
 800d2f0:	3880      	subs	r0, #128	; 0x80
 800d2f2:	4298      	cmp	r0, r3
 800d2f4:	d905      	bls.n	800d302 <__cxa_free_exception+0x16>
 800d2f6:	68d2      	ldr	r2, [r2, #12]
 800d2f8:	4413      	add	r3, r2
 800d2fa:	4298      	cmp	r0, r3
 800d2fc:	d201      	bcs.n	800d302 <__cxa_free_exception+0x16>
 800d2fe:	f7ff bf6f 	b.w	800d1e0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
 800d302:	f001 ba41 	b.w	800e788 <free>
 800d306:	bf00      	nop
 800d308:	20000a34 	.word	0x20000a34

0800d30c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
 800d30c:	b538      	push	{r3, r4, r5, lr}
 800d30e:	4c08      	ldr	r4, [pc, #32]	; (800d330 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
 800d310:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
 800d314:	4628      	mov	r0, r5
 800d316:	60e5      	str	r5, [r4, #12]
 800d318:	f001 fa2e 	bl	800e778 <malloc>
 800d31c:	60a0      	str	r0, [r4, #8]
 800d31e:	b120      	cbz	r0, 800d32a <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
 800d320:	2300      	movs	r3, #0
 800d322:	e9c0 5300 	strd	r5, r3, [r0]
 800d326:	6060      	str	r0, [r4, #4]
 800d328:	bd38      	pop	{r3, r4, r5, pc}
 800d32a:	60e0      	str	r0, [r4, #12]
 800d32c:	6060      	str	r0, [r4, #4]
 800d32e:	bd38      	pop	{r3, r4, r5, pc}
 800d330:	20000a34 	.word	0x20000a34

0800d334 <_ZNSt9exceptionD1Ev>:
 800d334:	4770      	bx	lr
 800d336:	bf00      	nop

0800d338 <_ZNSt13bad_exceptionD1Ev>:
 800d338:	4770      	bx	lr
 800d33a:	bf00      	nop

0800d33c <_ZGTtNKSt13bad_exception4whatEv>:
 800d33c:	4800      	ldr	r0, [pc, #0]	; (800d340 <_ZGTtNKSt13bad_exception4whatEv+0x4>)
 800d33e:	4770      	bx	lr
 800d340:	08013840 	.word	0x08013840

0800d344 <_ZNSt13bad_exceptionD0Ev>:
 800d344:	b510      	push	{r4, lr}
 800d346:	2104      	movs	r1, #4
 800d348:	4604      	mov	r4, r0
 800d34a:	f7ff ff0b 	bl	800d164 <_ZdlPvj>
 800d34e:	4620      	mov	r0, r4
 800d350:	bd10      	pop	{r4, pc}
 800d352:	bf00      	nop

0800d354 <_ZN10__cxxabiv111__terminateEPFvvE>:
 800d354:	b500      	push	{lr}
 800d356:	b083      	sub	sp, #12
 800d358:	4780      	blx	r0
 800d35a:	f000 ffc7 	bl	800e2ec <abort>
 800d35e:	f000 fc07 	bl	800db70 <__cxa_begin_catch>
 800d362:	f000 ffc3 	bl	800e2ec <abort>
 800d366:	460c      	mov	r4, r1
 800d368:	9001      	str	r0, [sp, #4]
 800d36a:	f000 fc3f 	bl	800dbec <__cxa_end_catch>
 800d36e:	3401      	adds	r4, #1
 800d370:	9801      	ldr	r0, [sp, #4]
 800d372:	d101      	bne.n	800d378 <_ZN10__cxxabiv111__terminateEPFvvE+0x24>
 800d374:	f000 fb84 	bl	800da80 <__cxa_call_unexpected>
 800d378:	f000 fa84 	bl	800d884 <__cxa_end_cleanup>

0800d37c <_ZSt9terminatev>:
 800d37c:	b508      	push	{r3, lr}
 800d37e:	4b03      	ldr	r3, [pc, #12]	; (800d38c <_ZSt9terminatev+0x10>)
 800d380:	6818      	ldr	r0, [r3, #0]
 800d382:	f3bf 8f5b 	dmb	ish
 800d386:	f7ff ffe5 	bl	800d354 <_ZN10__cxxabiv111__terminateEPFvvE>
 800d38a:	bf00      	nop
 800d38c:	20000010 	.word	0x20000010

0800d390 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 800d390:	b508      	push	{r3, lr}
 800d392:	4780      	blx	r0
 800d394:	f7ff fff2 	bl	800d37c <_ZSt9terminatev>

0800d398 <_ZSt10unexpectedv>:
 800d398:	b508      	push	{r3, lr}
 800d39a:	4b03      	ldr	r3, [pc, #12]	; (800d3a8 <_ZSt10unexpectedv+0x10>)
 800d39c:	6818      	ldr	r0, [r3, #0]
 800d39e:	f3bf 8f5b 	dmb	ish
 800d3a2:	f7ff fff5 	bl	800d390 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800d3a6:	bf00      	nop
 800d3a8:	2000000c 	.word	0x2000000c

0800d3ac <_ZSt13get_terminatev>:
 800d3ac:	4b02      	ldr	r3, [pc, #8]	; (800d3b8 <_ZSt13get_terminatev+0xc>)
 800d3ae:	6818      	ldr	r0, [r3, #0]
 800d3b0:	f3bf 8f5b 	dmb	ish
 800d3b4:	4770      	bx	lr
 800d3b6:	bf00      	nop
 800d3b8:	20000010 	.word	0x20000010

0800d3bc <_ZSt14get_unexpectedv>:
 800d3bc:	4b02      	ldr	r3, [pc, #8]	; (800d3c8 <_ZSt14get_unexpectedv+0xc>)
 800d3be:	6818      	ldr	r0, [r3, #0]
 800d3c0:	f3bf 8f5b 	dmb	ish
 800d3c4:	4770      	bx	lr
 800d3c6:	bf00      	nop
 800d3c8:	2000000c 	.word	0x2000000c

0800d3cc <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block>:
 800d3cc:	b500      	push	{lr}
 800d3ce:	2801      	cmp	r0, #1
 800d3d0:	b083      	sub	sp, #12
 800d3d2:	d81d      	bhi.n	800d410 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x44>
 800d3d4:	f3bf 8f5b 	dmb	ish
 800d3d8:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
 800d3dc:	e853 2f00 	ldrex	r2, [r3]
 800d3e0:	3a01      	subs	r2, #1
 800d3e2:	e843 2000 	strex	r0, r2, [r3]
 800d3e6:	2800      	cmp	r0, #0
 800d3e8:	d1f8      	bne.n	800d3dc <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x10>
 800d3ea:	f3bf 8f5b 	dmb	ish
 800d3ee:	b962      	cbnz	r2, 800d40a <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3e>
 800d3f0:	f851 3c1c 	ldr.w	r3, [r1, #-28]
 800d3f4:	f101 0058 	add.w	r0, r1, #88	; 0x58
 800d3f8:	b113      	cbz	r3, 800d400 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x34>
 800d3fa:	9001      	str	r0, [sp, #4]
 800d3fc:	4798      	blx	r3
 800d3fe:	9801      	ldr	r0, [sp, #4]
 800d400:	b003      	add	sp, #12
 800d402:	f85d eb04 	ldr.w	lr, [sp], #4
 800d406:	f7ff bf71 	b.w	800d2ec <__cxa_free_exception>
 800d40a:	b003      	add	sp, #12
 800d40c:	f85d fb04 	ldr.w	pc, [sp], #4
 800d410:	f851 0c14 	ldr.w	r0, [r1, #-20]
 800d414:	f7ff ff9e 	bl	800d354 <_ZN10__cxxabiv111__terminateEPFvvE>

0800d418 <__cxa_init_primary_exception>:
 800d418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d41a:	2500      	movs	r5, #0
 800d41c:	e940 121e 	strd	r1, r2, [r0, #-120]	; 0x78
 800d420:	f840 5c80 	str.w	r5, [r0, #-128]
 800d424:	4604      	mov	r4, r0
 800d426:	f7ff ffc9 	bl	800d3bc <_ZSt14get_unexpectedv>
 800d42a:	f844 0c70 	str.w	r0, [r4, #-112]
 800d42e:	f7ff ffbd 	bl	800d3ac <_ZSt13get_terminatev>
 800d432:	2347      	movs	r3, #71	; 0x47
 800d434:	2243      	movs	r2, #67	; 0x43
 800d436:	274e      	movs	r7, #78	; 0x4e
 800d438:	2655      	movs	r6, #85	; 0x55
 800d43a:	f804 3c58 	strb.w	r3, [r4, #-88]
 800d43e:	232b      	movs	r3, #43	; 0x2b
 800d440:	490a      	ldr	r1, [pc, #40]	; (800d46c <__cxa_init_primary_exception+0x54>)
 800d442:	f804 5c51 	strb.w	r5, [r4, #-81]
 800d446:	f804 7c57 	strb.w	r7, [r4, #-87]
 800d44a:	f804 6c56 	strb.w	r6, [r4, #-86]
 800d44e:	f804 2c55 	strb.w	r2, [r4, #-85]
 800d452:	f804 2c54 	strb.w	r2, [r4, #-84]
 800d456:	f804 3c53 	strb.w	r3, [r4, #-83]
 800d45a:	f804 3c52 	strb.w	r3, [r4, #-82]
 800d45e:	f844 0c6c 	str.w	r0, [r4, #-108]
 800d462:	f844 1c50 	str.w	r1, [r4, #-80]
 800d466:	f1a4 0080 	sub.w	r0, r4, #128	; 0x80
 800d46a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d46c:	0800d3cd 	.word	0x0800d3cd

0800d470 <__cxa_throw>:
 800d470:	b530      	push	{r4, r5, lr}
 800d472:	b083      	sub	sp, #12
 800d474:	e9cd 2100 	strd	r2, r1, [sp]
 800d478:	4605      	mov	r5, r0
 800d47a:	f000 fbff 	bl	800dc7c <__cxa_get_globals>
 800d47e:	6844      	ldr	r4, [r0, #4]
 800d480:	9a00      	ldr	r2, [sp, #0]
 800d482:	9901      	ldr	r1, [sp, #4]
 800d484:	4603      	mov	r3, r0
 800d486:	3401      	adds	r4, #1
 800d488:	605c      	str	r4, [r3, #4]
 800d48a:	4628      	mov	r0, r5
 800d48c:	f7ff ffc4 	bl	800d418 <__cxa_init_primary_exception>
 800d490:	4604      	mov	r4, r0
 800d492:	2301      	movs	r3, #1
 800d494:	f844 3b28 	str.w	r3, [r4], #40
 800d498:	4620      	mov	r0, r4
 800d49a:	f7fb f8b9 	bl	8008610 <_Unwind_RaiseException>
 800d49e:	4620      	mov	r0, r4
 800d4a0:	f000 fb66 	bl	800db70 <__cxa_begin_catch>
 800d4a4:	f7ff ff6a 	bl	800d37c <_ZSt9terminatev>

0800d4a8 <__cxa_rethrow>:
 800d4a8:	b510      	push	{r4, lr}
 800d4aa:	f000 fbe7 	bl	800dc7c <__cxa_get_globals>
 800d4ae:	e9d0 4200 	ldrd	r4, r2, [r0]
 800d4b2:	3201      	adds	r2, #1
 800d4b4:	6042      	str	r2, [r0, #4]
 800d4b6:	b164      	cbz	r4, 800d4d2 <__cxa_rethrow+0x2a>
 800d4b8:	f894 2020 	ldrb.w	r2, [r4, #32]
 800d4bc:	2a47      	cmp	r2, #71	; 0x47
 800d4be:	d00a      	beq.n	800d4d6 <__cxa_rethrow+0x2e>
 800d4c0:	2200      	movs	r2, #0
 800d4c2:	6002      	str	r2, [r0, #0]
 800d4c4:	3420      	adds	r4, #32
 800d4c6:	4620      	mov	r0, r4
 800d4c8:	f7fb f8c6 	bl	8008658 <_Unwind_Resume_or_Rethrow>
 800d4cc:	4620      	mov	r0, r4
 800d4ce:	f000 fb4f 	bl	800db70 <__cxa_begin_catch>
 800d4d2:	f7ff ff53 	bl	800d37c <_ZSt9terminatev>
 800d4d6:	f894 2021 	ldrb.w	r2, [r4, #33]	; 0x21
 800d4da:	2a4e      	cmp	r2, #78	; 0x4e
 800d4dc:	d1f0      	bne.n	800d4c0 <__cxa_rethrow+0x18>
 800d4de:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
 800d4e2:	2a55      	cmp	r2, #85	; 0x55
 800d4e4:	d1ec      	bne.n	800d4c0 <__cxa_rethrow+0x18>
 800d4e6:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
 800d4ea:	2a43      	cmp	r2, #67	; 0x43
 800d4ec:	d1e8      	bne.n	800d4c0 <__cxa_rethrow+0x18>
 800d4ee:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800d4f2:	2a43      	cmp	r2, #67	; 0x43
 800d4f4:	d1e4      	bne.n	800d4c0 <__cxa_rethrow+0x18>
 800d4f6:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800d4fa:	2a2b      	cmp	r2, #43	; 0x2b
 800d4fc:	d1e0      	bne.n	800d4c0 <__cxa_rethrow+0x18>
 800d4fe:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
 800d502:	2a2b      	cmp	r2, #43	; 0x2b
 800d504:	d1dc      	bne.n	800d4c0 <__cxa_rethrow+0x18>
 800d506:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800d50a:	2a01      	cmp	r2, #1
 800d50c:	d8d8      	bhi.n	800d4c0 <__cxa_rethrow+0x18>
 800d50e:	6962      	ldr	r2, [r4, #20]
 800d510:	4252      	negs	r2, r2
 800d512:	6162      	str	r2, [r4, #20]
 800d514:	e7d6      	b.n	800d4c4 <__cxa_rethrow+0x1c>
 800d516:	bf00      	nop

0800d518 <_ZSt15get_new_handlerv>:
 800d518:	4b02      	ldr	r3, [pc, #8]	; (800d524 <_ZSt15get_new_handlerv+0xc>)
 800d51a:	6818      	ldr	r0, [r3, #0]
 800d51c:	f3bf 8f5b 	dmb	ish
 800d520:	4770      	bx	lr
 800d522:	bf00      	nop
 800d524:	20000a44 	.word	0x20000a44

0800d528 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 800d528:	b510      	push	{r4, lr}
 800d52a:	4b03      	ldr	r3, [pc, #12]	; (800d538 <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>)
 800d52c:	6003      	str	r3, [r0, #0]
 800d52e:	4604      	mov	r4, r0
 800d530:	f000 f94a 	bl	800d7c8 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800d534:	4620      	mov	r0, r4
 800d536:	bd10      	pop	{r4, pc}
 800d538:	08013930 	.word	0x08013930

0800d53c <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 800d53c:	b510      	push	{r4, lr}
 800d53e:	4b05      	ldr	r3, [pc, #20]	; (800d554 <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x18>)
 800d540:	6003      	str	r3, [r0, #0]
 800d542:	4604      	mov	r4, r0
 800d544:	f000 f940 	bl	800d7c8 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800d548:	4620      	mov	r0, r4
 800d54a:	210c      	movs	r1, #12
 800d54c:	f7ff fe0a 	bl	800d164 <_ZdlPvj>
 800d550:	4620      	mov	r0, r4
 800d552:	bd10      	pop	{r4, pc}
 800d554:	08013930 	.word	0x08013930

0800d558 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 800d558:	b570      	push	{r4, r5, r6, lr}
 800d55a:	b082      	sub	sp, #8
 800d55c:	460d      	mov	r5, r1
 800d55e:	9e06      	ldr	r6, [sp, #24]
 800d560:	4296      	cmp	r6, r2
 800d562:	4604      	mov	r4, r0
 800d564:	d009      	beq.n	800d57a <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x22>
 800d566:	68a0      	ldr	r0, [r4, #8]
 800d568:	6804      	ldr	r4, [r0, #0]
 800d56a:	9606      	str	r6, [sp, #24]
 800d56c:	6a24      	ldr	r4, [r4, #32]
 800d56e:	4629      	mov	r1, r5
 800d570:	46a4      	mov	ip, r4
 800d572:	b002      	add	sp, #8
 800d574:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d578:	4760      	bx	ip
 800d57a:	4619      	mov	r1, r3
 800d57c:	9201      	str	r2, [sp, #4]
 800d57e:	9300      	str	r3, [sp, #0]
 800d580:	f000 f864 	bl	800d64c <_ZNKSt9type_infoeqERKS_>
 800d584:	e9dd 3200 	ldrd	r3, r2, [sp]
 800d588:	2800      	cmp	r0, #0
 800d58a:	d0ec      	beq.n	800d566 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xe>
 800d58c:	2006      	movs	r0, #6
 800d58e:	b002      	add	sp, #8
 800d590:	bd70      	pop	{r4, r5, r6, pc}
 800d592:	bf00      	nop

0800d594 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 800d594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d598:	460c      	mov	r4, r1
 800d59a:	b081      	sub	sp, #4
 800d59c:	4619      	mov	r1, r3
 800d59e:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	; 0x28
 800d5a2:	e9dd 980c 	ldrd	r9, r8, [sp, #48]	; 0x30
 800d5a6:	469b      	mov	fp, r3
 800d5a8:	4615      	mov	r5, r2
 800d5aa:	4606      	mov	r6, r0
 800d5ac:	f000 f84e 	bl	800d64c <_ZNKSt9type_infoeqERKS_>
 800d5b0:	b980      	cbnz	r0, 800d5d4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x40>
 800d5b2:	454f      	cmp	r7, r9
 800d5b4:	d027      	beq.n	800d606 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x72>
 800d5b6:	68b0      	ldr	r0, [r6, #8]
 800d5b8:	6806      	ldr	r6, [r0, #0]
 800d5ba:	e9cd 980c 	strd	r9, r8, [sp, #48]	; 0x30
 800d5be:	e9cd 7a0a 	strd	r7, sl, [sp, #40]	; 0x28
 800d5c2:	4621      	mov	r1, r4
 800d5c4:	69f4      	ldr	r4, [r6, #28]
 800d5c6:	465b      	mov	r3, fp
 800d5c8:	462a      	mov	r2, r5
 800d5ca:	46a4      	mov	ip, r4
 800d5cc:	b001      	add	sp, #4
 800d5ce:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5d2:	4760      	bx	ip
 800d5d4:	2c00      	cmp	r4, #0
 800d5d6:	f8c8 7000 	str.w	r7, [r8]
 800d5da:	f888 5004 	strb.w	r5, [r8, #4]
 800d5de:	db0c      	blt.n	800d5fa <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x66>
 800d5e0:	443c      	add	r4, r7
 800d5e2:	45a1      	cmp	r9, r4
 800d5e4:	bf0c      	ite	eq
 800d5e6:	f04f 0906 	moveq.w	r9, #6
 800d5ea:	f04f 0901 	movne.w	r9, #1
 800d5ee:	f888 9006 	strb.w	r9, [r8, #6]
 800d5f2:	2000      	movs	r0, #0
 800d5f4:	b001      	add	sp, #4
 800d5f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d5fa:	3402      	adds	r4, #2
 800d5fc:	d1f9      	bne.n	800d5f2 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e>
 800d5fe:	2301      	movs	r3, #1
 800d600:	f888 3006 	strb.w	r3, [r8, #6]
 800d604:	e7f5      	b.n	800d5f2 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e>
 800d606:	4651      	mov	r1, sl
 800d608:	4630      	mov	r0, r6
 800d60a:	f000 f81f 	bl	800d64c <_ZNKSt9type_infoeqERKS_>
 800d60e:	2800      	cmp	r0, #0
 800d610:	d0d1      	beq.n	800d5b6 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x22>
 800d612:	f888 5005 	strb.w	r5, [r8, #5]
 800d616:	e7ec      	b.n	800d5f2 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e>

0800d618 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 800d618:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d61c:	4606      	mov	r6, r0
 800d61e:	460f      	mov	r7, r1
 800d620:	4614      	mov	r4, r2
 800d622:	461d      	mov	r5, r3
 800d624:	f000 f90a 	bl	800d83c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 800d628:	b948      	cbnz	r0, 800d63e <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x26>
 800d62a:	68b0      	ldr	r0, [r6, #8]
 800d62c:	6806      	ldr	r6, [r0, #0]
 800d62e:	4622      	mov	r2, r4
 800d630:	69b4      	ldr	r4, [r6, #24]
 800d632:	462b      	mov	r3, r5
 800d634:	4639      	mov	r1, r7
 800d636:	46a4      	mov	ip, r4
 800d638:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d63c:	4760      	bx	ip
 800d63e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d642:	bf00      	nop

0800d644 <_ZNSt9type_infoD1Ev>:
 800d644:	4770      	bx	lr
 800d646:	bf00      	nop

0800d648 <_ZNKSt9type_info14__is_pointer_pEv>:
 800d648:	2000      	movs	r0, #0
 800d64a:	4770      	bx	lr

0800d64c <_ZNKSt9type_infoeqERKS_>:
 800d64c:	4281      	cmp	r1, r0
 800d64e:	d011      	beq.n	800d674 <_ZNKSt9type_infoeqERKS_+0x28>
 800d650:	b508      	push	{r3, lr}
 800d652:	6840      	ldr	r0, [r0, #4]
 800d654:	7803      	ldrb	r3, [r0, #0]
 800d656:	2b2a      	cmp	r3, #42	; 0x2a
 800d658:	d00a      	beq.n	800d670 <_ZNKSt9type_infoeqERKS_+0x24>
 800d65a:	6849      	ldr	r1, [r1, #4]
 800d65c:	780b      	ldrb	r3, [r1, #0]
 800d65e:	2b2a      	cmp	r3, #42	; 0x2a
 800d660:	bf08      	it	eq
 800d662:	3101      	addeq	r1, #1
 800d664:	f7f9 fc5c 	bl	8006f20 <strcmp>
 800d668:	fab0 f080 	clz	r0, r0
 800d66c:	0940      	lsrs	r0, r0, #5
 800d66e:	bd08      	pop	{r3, pc}
 800d670:	2000      	movs	r0, #0
 800d672:	bd08      	pop	{r3, pc}
 800d674:	2001      	movs	r0, #1
 800d676:	4770      	bx	lr

0800d678 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
 800d678:	b570      	push	{r4, r5, r6, lr}
 800d67a:	4b3b      	ldr	r3, [pc, #236]	; (800d768 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf0>)
 800d67c:	781a      	ldrb	r2, [r3, #0]
 800d67e:	b082      	sub	sp, #8
 800d680:	2a00      	cmp	r2, #0
 800d682:	d141      	bne.n	800d708 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x90>
 800d684:	2401      	movs	r4, #1
 800d686:	701c      	strb	r4, [r3, #0]
 800d688:	f000 fe22 	bl	800e2d0 <__cxa_current_exception_type>
 800d68c:	2800      	cmp	r0, #0
 800d68e:	d031      	beq.n	800d6f4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x7c>
 800d690:	6844      	ldr	r4, [r0, #4]
 800d692:	4d36      	ldr	r5, [pc, #216]	; (800d76c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800d694:	7823      	ldrb	r3, [r4, #0]
 800d696:	2b2a      	cmp	r3, #42	; 0x2a
 800d698:	bf08      	it	eq
 800d69a:	3401      	addeq	r4, #1
 800d69c:	2200      	movs	r2, #0
 800d69e:	4611      	mov	r1, r2
 800d6a0:	f04f 36ff 	mov.w	r6, #4294967295
 800d6a4:	ab01      	add	r3, sp, #4
 800d6a6:	4620      	mov	r0, r4
 800d6a8:	9601      	str	r6, [sp, #4]
 800d6aa:	f7f9 fb71 	bl	8006d90 <__cxa_demangle>
 800d6ae:	682b      	ldr	r3, [r5, #0]
 800d6b0:	4606      	mov	r6, r0
 800d6b2:	68db      	ldr	r3, [r3, #12]
 800d6b4:	482e      	ldr	r0, [pc, #184]	; (800d770 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800d6b6:	2230      	movs	r2, #48	; 0x30
 800d6b8:	2101      	movs	r1, #1
 800d6ba:	f001 f827 	bl	800e70c <fwrite>
 800d6be:	9b01      	ldr	r3, [sp, #4]
 800d6c0:	b193      	cbz	r3, 800d6e8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x70>
 800d6c2:	682b      	ldr	r3, [r5, #0]
 800d6c4:	4620      	mov	r0, r4
 800d6c6:	68d9      	ldr	r1, [r3, #12]
 800d6c8:	f000 fe84 	bl	800e3d4 <fputs>
 800d6cc:	682b      	ldr	r3, [r5, #0]
 800d6ce:	4829      	ldr	r0, [pc, #164]	; (800d774 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800d6d0:	68db      	ldr	r3, [r3, #12]
 800d6d2:	2202      	movs	r2, #2
 800d6d4:	2101      	movs	r1, #1
 800d6d6:	f001 f819 	bl	800e70c <fwrite>
 800d6da:	9b01      	ldr	r3, [sp, #4]
 800d6dc:	b913      	cbnz	r3, 800d6e4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x6c>
 800d6de:	4630      	mov	r0, r6
 800d6e0:	f001 f852 	bl	800e788 <free>
 800d6e4:	f7ff fee0 	bl	800d4a8 <__cxa_rethrow>
 800d6e8:	682b      	ldr	r3, [r5, #0]
 800d6ea:	4630      	mov	r0, r6
 800d6ec:	68d9      	ldr	r1, [r3, #12]
 800d6ee:	f000 fe71 	bl	800e3d4 <fputs>
 800d6f2:	e7eb      	b.n	800d6cc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x54>
 800d6f4:	4b1d      	ldr	r3, [pc, #116]	; (800d76c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800d6f6:	4820      	ldr	r0, [pc, #128]	; (800d778 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 800d6f8:	681b      	ldr	r3, [r3, #0]
 800d6fa:	4621      	mov	r1, r4
 800d6fc:	68db      	ldr	r3, [r3, #12]
 800d6fe:	222d      	movs	r2, #45	; 0x2d
 800d700:	f001 f804 	bl	800e70c <fwrite>
 800d704:	f000 fdf2 	bl	800e2ec <abort>
 800d708:	4b18      	ldr	r3, [pc, #96]	; (800d76c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800d70a:	481c      	ldr	r0, [pc, #112]	; (800d77c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x104>)
 800d70c:	681b      	ldr	r3, [r3, #0]
 800d70e:	221d      	movs	r2, #29
 800d710:	68db      	ldr	r3, [r3, #12]
 800d712:	2101      	movs	r1, #1
 800d714:	f000 fffa 	bl	800e70c <fwrite>
 800d718:	f000 fde8 	bl	800e2ec <abort>
 800d71c:	2901      	cmp	r1, #1
 800d71e:	460c      	mov	r4, r1
 800d720:	d119      	bne.n	800d756 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xde>
 800d722:	f000 fa25 	bl	800db70 <__cxa_begin_catch>
 800d726:	6803      	ldr	r3, [r0, #0]
 800d728:	689b      	ldr	r3, [r3, #8]
 800d72a:	4798      	blx	r3
 800d72c:	682b      	ldr	r3, [r5, #0]
 800d72e:	4606      	mov	r6, r0
 800d730:	68db      	ldr	r3, [r3, #12]
 800d732:	4813      	ldr	r0, [pc, #76]	; (800d780 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x108>)
 800d734:	4621      	mov	r1, r4
 800d736:	220b      	movs	r2, #11
 800d738:	f000 ffe8 	bl	800e70c <fwrite>
 800d73c:	682b      	ldr	r3, [r5, #0]
 800d73e:	4630      	mov	r0, r6
 800d740:	68d9      	ldr	r1, [r3, #12]
 800d742:	f000 fe47 	bl	800e3d4 <fputs>
 800d746:	682b      	ldr	r3, [r5, #0]
 800d748:	200a      	movs	r0, #10
 800d74a:	68d9      	ldr	r1, [r3, #12]
 800d74c:	f000 fe00 	bl	800e350 <fputc>
 800d750:	f000 fa4c 	bl	800dbec <__cxa_end_catch>
 800d754:	e7d6      	b.n	800d704 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x8c>
 800d756:	f000 fa0b 	bl	800db70 <__cxa_begin_catch>
 800d75a:	f000 fa47 	bl	800dbec <__cxa_end_catch>
 800d75e:	e7d1      	b.n	800d704 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x8c>
 800d760:	f000 fa44 	bl	800dbec <__cxa_end_catch>
 800d764:	f000 f88e 	bl	800d884 <__cxa_end_cleanup>
 800d768:	20000a48 	.word	0x20000a48
 800d76c:	20000014 	.word	0x20000014
 800d770:	0801398c 	.word	0x0801398c
 800d774:	080139c0 	.word	0x080139c0
 800d778:	080139c4 	.word	0x080139c4
 800d77c:	0801396c 	.word	0x0801396c
 800d780:	080139f4 	.word	0x080139f4

0800d784 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 800d784:	b570      	push	{r4, r5, r6, lr}
 800d786:	6803      	ldr	r3, [r0, #0]
 800d788:	b084      	sub	sp, #16
 800d78a:	2400      	movs	r4, #0
 800d78c:	699e      	ldr	r6, [r3, #24]
 800d78e:	9400      	str	r4, [sp, #0]
 800d790:	2310      	movs	r3, #16
 800d792:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800d796:	4615      	mov	r5, r2
 800d798:	466b      	mov	r3, sp
 800d79a:	6812      	ldr	r2, [r2, #0]
 800d79c:	f88d 4004 	strb.w	r4, [sp, #4]
 800d7a0:	47b0      	blx	r6
 800d7a2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800d7a6:	f003 0306 	and.w	r3, r3, #6
 800d7aa:	2b06      	cmp	r3, #6
 800d7ac:	bf03      	ittte	eq
 800d7ae:	9b00      	ldreq	r3, [sp, #0]
 800d7b0:	602b      	streq	r3, [r5, #0]
 800d7b2:	2001      	moveq	r0, #1
 800d7b4:	4620      	movne	r0, r4
 800d7b6:	b004      	add	sp, #16
 800d7b8:	bd70      	pop	{r4, r5, r6, pc}
 800d7ba:	bf00      	nop

0800d7bc <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 800d7bc:	9800      	ldr	r0, [sp, #0]
 800d7be:	4290      	cmp	r0, r2
 800d7c0:	bf14      	ite	ne
 800d7c2:	2001      	movne	r0, #1
 800d7c4:	2006      	moveq	r0, #6
 800d7c6:	4770      	bx	lr

0800d7c8 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 800d7c8:	b510      	push	{r4, lr}
 800d7ca:	4b03      	ldr	r3, [pc, #12]	; (800d7d8 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>)
 800d7cc:	6003      	str	r3, [r0, #0]
 800d7ce:	4604      	mov	r4, r0
 800d7d0:	f7ff ff38 	bl	800d644 <_ZNSt9type_infoD1Ev>
 800d7d4:	4620      	mov	r0, r4
 800d7d6:	bd10      	pop	{r4, pc}
 800d7d8:	08013a38 	.word	0x08013a38

0800d7dc <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 800d7dc:	b510      	push	{r4, lr}
 800d7de:	4b05      	ldr	r3, [pc, #20]	; (800d7f4 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x18>)
 800d7e0:	6003      	str	r3, [r0, #0]
 800d7e2:	4604      	mov	r4, r0
 800d7e4:	f7ff ff2e 	bl	800d644 <_ZNSt9type_infoD1Ev>
 800d7e8:	4620      	mov	r0, r4
 800d7ea:	2108      	movs	r1, #8
 800d7ec:	f7ff fcba 	bl	800d164 <_ZdlPvj>
 800d7f0:	4620      	mov	r0, r4
 800d7f2:	bd10      	pop	{r4, pc}
 800d7f4:	08013a38 	.word	0x08013a38

0800d7f8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 800d7f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d7fc:	e9dd 1508 	ldrd	r1, r5, [sp, #32]
 800d800:	9f06      	ldr	r7, [sp, #24]
 800d802:	428f      	cmp	r7, r1
 800d804:	4690      	mov	r8, r2
 800d806:	461e      	mov	r6, r3
 800d808:	4604      	mov	r4, r0
 800d80a:	d00c      	beq.n	800d826 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2e>
 800d80c:	4631      	mov	r1, r6
 800d80e:	4620      	mov	r0, r4
 800d810:	f7ff ff1c 	bl	800d64c <_ZNKSt9type_infoeqERKS_>
 800d814:	b120      	cbz	r0, 800d820 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x28>
 800d816:	2301      	movs	r3, #1
 800d818:	602f      	str	r7, [r5, #0]
 800d81a:	f885 8004 	strb.w	r8, [r5, #4]
 800d81e:	71ab      	strb	r3, [r5, #6]
 800d820:	2000      	movs	r0, #0
 800d822:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d826:	9907      	ldr	r1, [sp, #28]
 800d828:	f7ff ff10 	bl	800d64c <_ZNKSt9type_infoeqERKS_>
 800d82c:	2800      	cmp	r0, #0
 800d82e:	d0ed      	beq.n	800d80c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x14>
 800d830:	f885 8005 	strb.w	r8, [r5, #5]
 800d834:	2000      	movs	r0, #0
 800d836:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d83a:	bf00      	nop

0800d83c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 800d83c:	b538      	push	{r3, r4, r5, lr}
 800d83e:	4615      	mov	r5, r2
 800d840:	461c      	mov	r4, r3
 800d842:	f7ff ff03 	bl	800d64c <_ZNKSt9type_infoeqERKS_>
 800d846:	b900      	cbnz	r0, 800d84a <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0xe>
 800d848:	bd38      	pop	{r3, r4, r5, pc}
 800d84a:	2208      	movs	r2, #8
 800d84c:	2306      	movs	r3, #6
 800d84e:	6025      	str	r5, [r4, #0]
 800d850:	60e2      	str	r2, [r4, #12]
 800d852:	7123      	strb	r3, [r4, #4]
 800d854:	bd38      	pop	{r3, r4, r5, pc}
 800d856:	bf00      	nop

0800d858 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 800d858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d85c:	4616      	mov	r6, r2
 800d85e:	461d      	mov	r5, r3
 800d860:	4607      	mov	r7, r0
 800d862:	460c      	mov	r4, r1
 800d864:	f7ff fef2 	bl	800d64c <_ZNKSt9type_infoeqERKS_>
 800d868:	b948      	cbnz	r0, 800d87e <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 800d86a:	2d03      	cmp	r5, #3
 800d86c:	d807      	bhi.n	800d87e <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 800d86e:	6823      	ldr	r3, [r4, #0]
 800d870:	4632      	mov	r2, r6
 800d872:	4639      	mov	r1, r7
 800d874:	4620      	mov	r0, r4
 800d876:	695b      	ldr	r3, [r3, #20]
 800d878:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d87c:	4718      	bx	r3
 800d87e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d882:	bf00      	nop

0800d884 <__cxa_end_cleanup>:
 800d884:	b41e      	push	{r1, r2, r3, r4}
 800d886:	f000 f895 	bl	800d9b4 <__gnu_end_cleanup>
 800d88a:	bc1e      	pop	{r1, r2, r3, r4}
 800d88c:	f7fa fed2 	bl	8008634 <_Unwind_Resume>

0800d890 <__cxa_type_match>:
 800d890:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d892:	7802      	ldrb	r2, [r0, #0]
 800d894:	2a47      	cmp	r2, #71	; 0x47
 800d896:	b083      	sub	sp, #12
 800d898:	460c      	mov	r4, r1
 800d89a:	461d      	mov	r5, r3
 800d89c:	d019      	beq.n	800d8d2 <__cxa_type_match+0x42>
 800d89e:	2300      	movs	r3, #0
 800d8a0:	4e29      	ldr	r6, [pc, #164]	; (800d948 <__cxa_type_match+0xb8>)
 800d8a2:	9301      	str	r3, [sp, #4]
 800d8a4:	6833      	ldr	r3, [r6, #0]
 800d8a6:	4630      	mov	r0, r6
 800d8a8:	689b      	ldr	r3, [r3, #8]
 800d8aa:	4798      	blx	r3
 800d8ac:	b960      	cbnz	r0, 800d8c8 <__cxa_type_match+0x38>
 800d8ae:	2701      	movs	r7, #1
 800d8b0:	6823      	ldr	r3, [r4, #0]
 800d8b2:	4631      	mov	r1, r6
 800d8b4:	4620      	mov	r0, r4
 800d8b6:	691e      	ldr	r6, [r3, #16]
 800d8b8:	aa01      	add	r2, sp, #4
 800d8ba:	2301      	movs	r3, #1
 800d8bc:	47b0      	blx	r6
 800d8be:	bb60      	cbnz	r0, 800d91a <__cxa_type_match+0x8a>
 800d8c0:	4607      	mov	r7, r0
 800d8c2:	4638      	mov	r0, r7
 800d8c4:	b003      	add	sp, #12
 800d8c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d8c8:	9b01      	ldr	r3, [sp, #4]
 800d8ca:	681b      	ldr	r3, [r3, #0]
 800d8cc:	9301      	str	r3, [sp, #4]
 800d8ce:	2702      	movs	r7, #2
 800d8d0:	e7ee      	b.n	800d8b0 <__cxa_type_match+0x20>
 800d8d2:	7843      	ldrb	r3, [r0, #1]
 800d8d4:	2b4e      	cmp	r3, #78	; 0x4e
 800d8d6:	d1e2      	bne.n	800d89e <__cxa_type_match+0xe>
 800d8d8:	7883      	ldrb	r3, [r0, #2]
 800d8da:	2b55      	cmp	r3, #85	; 0x55
 800d8dc:	d1df      	bne.n	800d89e <__cxa_type_match+0xe>
 800d8de:	78c3      	ldrb	r3, [r0, #3]
 800d8e0:	2b43      	cmp	r3, #67	; 0x43
 800d8e2:	d1dc      	bne.n	800d89e <__cxa_type_match+0xe>
 800d8e4:	7903      	ldrb	r3, [r0, #4]
 800d8e6:	2b46      	cmp	r3, #70	; 0x46
 800d8e8:	d021      	beq.n	800d92e <__cxa_type_match+0x9e>
 800d8ea:	7903      	ldrb	r3, [r0, #4]
 800d8ec:	2b43      	cmp	r3, #67	; 0x43
 800d8ee:	d1d6      	bne.n	800d89e <__cxa_type_match+0xe>
 800d8f0:	7943      	ldrb	r3, [r0, #5]
 800d8f2:	2b2b      	cmp	r3, #43	; 0x2b
 800d8f4:	d1d3      	bne.n	800d89e <__cxa_type_match+0xe>
 800d8f6:	7983      	ldrb	r3, [r0, #6]
 800d8f8:	2b2b      	cmp	r3, #43	; 0x2b
 800d8fa:	d1d0      	bne.n	800d89e <__cxa_type_match+0xe>
 800d8fc:	79c3      	ldrb	r3, [r0, #7]
 800d8fe:	2b01      	cmp	r3, #1
 800d900:	d8cd      	bhi.n	800d89e <__cxa_type_match+0xe>
 800d902:	d00f      	beq.n	800d924 <__cxa_type_match+0x94>
 800d904:	f850 6c20 	ldr.w	r6, [r0, #-32]
 800d908:	3058      	adds	r0, #88	; 0x58
 800d90a:	6833      	ldr	r3, [r6, #0]
 800d90c:	9001      	str	r0, [sp, #4]
 800d90e:	689b      	ldr	r3, [r3, #8]
 800d910:	4630      	mov	r0, r6
 800d912:	4798      	blx	r3
 800d914:	2800      	cmp	r0, #0
 800d916:	d0ca      	beq.n	800d8ae <__cxa_type_match+0x1e>
 800d918:	e7d6      	b.n	800d8c8 <__cxa_type_match+0x38>
 800d91a:	9b01      	ldr	r3, [sp, #4]
 800d91c:	602b      	str	r3, [r5, #0]
 800d91e:	4638      	mov	r0, r7
 800d920:	b003      	add	sp, #12
 800d922:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d924:	f850 0c20 	ldr.w	r0, [r0, #-32]
 800d928:	f850 6c78 	ldr.w	r6, [r0, #-120]
 800d92c:	e7ed      	b.n	800d90a <__cxa_type_match+0x7a>
 800d92e:	7943      	ldrb	r3, [r0, #5]
 800d930:	2b4f      	cmp	r3, #79	; 0x4f
 800d932:	d1da      	bne.n	800d8ea <__cxa_type_match+0x5a>
 800d934:	7983      	ldrb	r3, [r0, #6]
 800d936:	2b52      	cmp	r3, #82	; 0x52
 800d938:	d1d7      	bne.n	800d8ea <__cxa_type_match+0x5a>
 800d93a:	79c3      	ldrb	r3, [r0, #7]
 800d93c:	2b00      	cmp	r3, #0
 800d93e:	d1d4      	bne.n	800d8ea <__cxa_type_match+0x5a>
 800d940:	4e02      	ldr	r6, [pc, #8]	; (800d94c <__cxa_type_match+0xbc>)
 800d942:	9301      	str	r3, [sp, #4]
 800d944:	e7ae      	b.n	800d8a4 <__cxa_type_match+0x14>
 800d946:	bf00      	nop
 800d948:	0801385c 	.word	0x0801385c
 800d94c:	08013854 	.word	0x08013854

0800d950 <__cxa_begin_cleanup>:
 800d950:	b510      	push	{r4, lr}
 800d952:	4604      	mov	r4, r0
 800d954:	f000 f992 	bl	800dc7c <__cxa_get_globals>
 800d958:	4622      	mov	r2, r4
 800d95a:	f812 3920 	ldrb.w	r3, [r2], #-32
 800d95e:	2b47      	cmp	r3, #71	; 0x47
 800d960:	d004      	beq.n	800d96c <__cxa_begin_cleanup+0x1c>
 800d962:	6883      	ldr	r3, [r0, #8]
 800d964:	bb23      	cbnz	r3, 800d9b0 <__cxa_begin_cleanup+0x60>
 800d966:	6082      	str	r2, [r0, #8]
 800d968:	2001      	movs	r0, #1
 800d96a:	bd10      	pop	{r4, pc}
 800d96c:	7863      	ldrb	r3, [r4, #1]
 800d96e:	2b4e      	cmp	r3, #78	; 0x4e
 800d970:	d1f7      	bne.n	800d962 <__cxa_begin_cleanup+0x12>
 800d972:	78a3      	ldrb	r3, [r4, #2]
 800d974:	2b55      	cmp	r3, #85	; 0x55
 800d976:	d1f4      	bne.n	800d962 <__cxa_begin_cleanup+0x12>
 800d978:	78e3      	ldrb	r3, [r4, #3]
 800d97a:	2b43      	cmp	r3, #67	; 0x43
 800d97c:	d1f1      	bne.n	800d962 <__cxa_begin_cleanup+0x12>
 800d97e:	7923      	ldrb	r3, [r4, #4]
 800d980:	2b43      	cmp	r3, #67	; 0x43
 800d982:	d1ee      	bne.n	800d962 <__cxa_begin_cleanup+0x12>
 800d984:	7963      	ldrb	r3, [r4, #5]
 800d986:	2b2b      	cmp	r3, #43	; 0x2b
 800d988:	d1eb      	bne.n	800d962 <__cxa_begin_cleanup+0x12>
 800d98a:	79a3      	ldrb	r3, [r4, #6]
 800d98c:	2b2b      	cmp	r3, #43	; 0x2b
 800d98e:	d1e8      	bne.n	800d962 <__cxa_begin_cleanup+0x12>
 800d990:	79e3      	ldrb	r3, [r4, #7]
 800d992:	2b01      	cmp	r3, #1
 800d994:	d8e5      	bhi.n	800d962 <__cxa_begin_cleanup+0x12>
 800d996:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d99a:	3301      	adds	r3, #1
 800d99c:	2b01      	cmp	r3, #1
 800d99e:	f844 3c04 	str.w	r3, [r4, #-4]
 800d9a2:	d1e1      	bne.n	800d968 <__cxa_begin_cleanup+0x18>
 800d9a4:	6883      	ldr	r3, [r0, #8]
 800d9a6:	f844 3c08 	str.w	r3, [r4, #-8]
 800d9aa:	6082      	str	r2, [r0, #8]
 800d9ac:	2001      	movs	r0, #1
 800d9ae:	bd10      	pop	{r4, pc}
 800d9b0:	f7ff fce4 	bl	800d37c <_ZSt9terminatev>

0800d9b4 <__gnu_end_cleanup>:
 800d9b4:	b508      	push	{r3, lr}
 800d9b6:	f000 f961 	bl	800dc7c <__cxa_get_globals>
 800d9ba:	6883      	ldr	r3, [r0, #8]
 800d9bc:	b383      	cbz	r3, 800da20 <__gnu_end_cleanup+0x6c>
 800d9be:	f893 2020 	ldrb.w	r2, [r3, #32]
 800d9c2:	2a47      	cmp	r2, #71	; 0x47
 800d9c4:	d004      	beq.n	800d9d0 <__gnu_end_cleanup+0x1c>
 800d9c6:	2200      	movs	r2, #0
 800d9c8:	6082      	str	r2, [r0, #8]
 800d9ca:	f103 0020 	add.w	r0, r3, #32
 800d9ce:	bd08      	pop	{r3, pc}
 800d9d0:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 800d9d4:	2a4e      	cmp	r2, #78	; 0x4e
 800d9d6:	d1f6      	bne.n	800d9c6 <__gnu_end_cleanup+0x12>
 800d9d8:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 800d9dc:	2a55      	cmp	r2, #85	; 0x55
 800d9de:	d1f2      	bne.n	800d9c6 <__gnu_end_cleanup+0x12>
 800d9e0:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
 800d9e4:	2a43      	cmp	r2, #67	; 0x43
 800d9e6:	d1ee      	bne.n	800d9c6 <__gnu_end_cleanup+0x12>
 800d9e8:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 800d9ec:	2a43      	cmp	r2, #67	; 0x43
 800d9ee:	d1ea      	bne.n	800d9c6 <__gnu_end_cleanup+0x12>
 800d9f0:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 800d9f4:	2a2b      	cmp	r2, #43	; 0x2b
 800d9f6:	d1e6      	bne.n	800d9c6 <__gnu_end_cleanup+0x12>
 800d9f8:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
 800d9fc:	2a2b      	cmp	r2, #43	; 0x2b
 800d9fe:	d1e2      	bne.n	800d9c6 <__gnu_end_cleanup+0x12>
 800da00:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800da04:	2a01      	cmp	r2, #1
 800da06:	d8de      	bhi.n	800d9c6 <__gnu_end_cleanup+0x12>
 800da08:	69da      	ldr	r2, [r3, #28]
 800da0a:	3a01      	subs	r2, #1
 800da0c:	61da      	str	r2, [r3, #28]
 800da0e:	2a00      	cmp	r2, #0
 800da10:	d1db      	bne.n	800d9ca <__gnu_end_cleanup+0x16>
 800da12:	699a      	ldr	r2, [r3, #24]
 800da14:	6082      	str	r2, [r0, #8]
 800da16:	2200      	movs	r2, #0
 800da18:	619a      	str	r2, [r3, #24]
 800da1a:	f103 0020 	add.w	r0, r3, #32
 800da1e:	bd08      	pop	{r3, pc}
 800da20:	f7ff fcac 	bl	800d37c <_ZSt9terminatev>

0800da24 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 800da24:	7803      	ldrb	r3, [r0, #0]
 800da26:	2b47      	cmp	r3, #71	; 0x47
 800da28:	d001      	beq.n	800da2e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800da2a:	2000      	movs	r0, #0
 800da2c:	4770      	bx	lr
 800da2e:	7843      	ldrb	r3, [r0, #1]
 800da30:	2b4e      	cmp	r3, #78	; 0x4e
 800da32:	d1fa      	bne.n	800da2a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800da34:	7883      	ldrb	r3, [r0, #2]
 800da36:	2b55      	cmp	r3, #85	; 0x55
 800da38:	d1f7      	bne.n	800da2a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800da3a:	78c3      	ldrb	r3, [r0, #3]
 800da3c:	2b43      	cmp	r3, #67	; 0x43
 800da3e:	d1f4      	bne.n	800da2a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800da40:	7903      	ldrb	r3, [r0, #4]
 800da42:	2b43      	cmp	r3, #67	; 0x43
 800da44:	d1f1      	bne.n	800da2a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800da46:	7943      	ldrb	r3, [r0, #5]
 800da48:	2b2b      	cmp	r3, #43	; 0x2b
 800da4a:	d1ee      	bne.n	800da2a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800da4c:	7983      	ldrb	r3, [r0, #6]
 800da4e:	2b2b      	cmp	r3, #43	; 0x2b
 800da50:	d1eb      	bne.n	800da2a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800da52:	79c0      	ldrb	r0, [r0, #7]
 800da54:	2801      	cmp	r0, #1
 800da56:	bf8c      	ite	hi
 800da58:	2000      	movhi	r0, #0
 800da5a:	2001      	movls	r0, #1
 800da5c:	4770      	bx	lr
 800da5e:	bf00      	nop

0800da60 <__cxa_call_terminate>:
 800da60:	b510      	push	{r4, lr}
 800da62:	b130      	cbz	r0, 800da72 <__cxa_call_terminate+0x12>
 800da64:	4604      	mov	r4, r0
 800da66:	f000 f883 	bl	800db70 <__cxa_begin_catch>
 800da6a:	4620      	mov	r0, r4
 800da6c:	f7ff ffda 	bl	800da24 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800da70:	b908      	cbnz	r0, 800da76 <__cxa_call_terminate+0x16>
 800da72:	f7ff fc83 	bl	800d37c <_ZSt9terminatev>
 800da76:	f854 0c14 	ldr.w	r0, [r4, #-20]
 800da7a:	f7ff fc6b 	bl	800d354 <_ZN10__cxxabiv111__terminateEPFvvE>
 800da7e:	bf00      	nop

0800da80 <__cxa_call_unexpected>:
 800da80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da84:	ed2d 8b02 	vpush	{d8}
 800da88:	b085      	sub	sp, #20
 800da8a:	4602      	mov	r2, r0
 800da8c:	f7ff ffca 	bl	800da24 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800da90:	b138      	cbz	r0, 800daa2 <__cxa_call_unexpected+0x22>
 800da92:	e952 7406 	ldrd	r7, r4, [r2, #-24]
 800da96:	e9d2 850c 	ldrd	r8, r5, [r2, #48]	; 0x30
 800da9a:	f8d2 a028 	ldr.w	sl, [r2, #40]	; 0x28
 800da9e:	2600      	movs	r6, #0
 800daa0:	e005      	b.n	800daae <__cxa_call_unexpected+0x2e>
 800daa2:	4604      	mov	r4, r0
 800daa4:	4607      	mov	r7, r0
 800daa6:	4605      	mov	r5, r0
 800daa8:	4680      	mov	r8, r0
 800daaa:	4682      	mov	sl, r0
 800daac:	2601      	movs	r6, #1
 800daae:	4610      	mov	r0, r2
 800dab0:	f000 f85e 	bl	800db70 <__cxa_begin_catch>
 800dab4:	b10e      	cbz	r6, 800daba <__cxa_call_unexpected+0x3a>
 800dab6:	f7ff fc6f 	bl	800d398 <_ZSt10unexpectedv>
 800daba:	4638      	mov	r0, r7
 800dabc:	f7ff fc68 	bl	800d390 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800dac0:	f000 f856 	bl	800db70 <__cxa_begin_catch>
 800dac4:	b10e      	cbz	r6, 800daca <__cxa_call_unexpected+0x4a>
 800dac6:	f7ff fc59 	bl	800d37c <_ZSt9terminatev>
 800daca:	f000 f8d3 	bl	800dc74 <__cxa_get_globals_fast>
 800dace:	6807      	ldr	r7, [r0, #0]
 800dad0:	f8df b098 	ldr.w	fp, [pc, #152]	; 800db6c <__cxa_call_unexpected+0xec>
 800dad4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800dad8:	2b01      	cmp	r3, #1
 800dada:	bf0c      	ite	eq
 800dadc:	683b      	ldreq	r3, [r7, #0]
 800dade:	f107 0378 	addne.w	r3, r7, #120	; 0x78
 800dae2:	9302      	str	r3, [sp, #8]
 800dae4:	f028 0303 	bic.w	r3, r8, #3
 800dae8:	9301      	str	r3, [sp, #4]
 800daea:	f107 0320 	add.w	r3, r7, #32
 800daee:	ee08 3a10 	vmov	s16, r3
 800daf2:	f04f 0900 	mov.w	r9, #0
 800daf6:	45ca      	cmp	sl, r9
 800daf8:	dd21      	ble.n	800db3e <__cxa_call_unexpected+0xbe>
 800dafa:	f8d5 8000 	ldr.w	r8, [r5]
 800dafe:	f1b8 0f00 	cmp.w	r8, #0
 800db02:	d000      	beq.n	800db06 <__cxa_call_unexpected+0x86>
 800db04:	44a8      	add	r8, r5
 800db06:	ee18 0a10 	vmov	r0, s16
 800db0a:	ab02      	add	r3, sp, #8
 800db0c:	2200      	movs	r2, #0
 800db0e:	4641      	mov	r1, r8
 800db10:	f7ff febe 	bl	800d890 <__cxa_type_match>
 800db14:	b108      	cbz	r0, 800db1a <__cxa_call_unexpected+0x9a>
 800db16:	f7ff fcc7 	bl	800d4a8 <__cxa_rethrow>
 800db1a:	f8d8 3000 	ldr.w	r3, [r8]
 800db1e:	9003      	str	r0, [sp, #12]
 800db20:	691b      	ldr	r3, [r3, #16]
 800db22:	4640      	mov	r0, r8
 800db24:	461f      	mov	r7, r3
 800db26:	aa03      	add	r2, sp, #12
 800db28:	2301      	movs	r3, #1
 800db2a:	4659      	mov	r1, fp
 800db2c:	47b8      	blx	r7
 800db2e:	9b01      	ldr	r3, [sp, #4]
 800db30:	2800      	cmp	r0, #0
 800db32:	bf18      	it	ne
 800db34:	4606      	movne	r6, r0
 800db36:	f109 0901 	add.w	r9, r9, #1
 800db3a:	441d      	add	r5, r3
 800db3c:	e7db      	b.n	800daf6 <__cxa_call_unexpected+0x76>
 800db3e:	b146      	cbz	r6, 800db52 <__cxa_call_unexpected+0xd2>
 800db40:	2004      	movs	r0, #4
 800db42:	f7ff fbbb 	bl	800d2bc <__cxa_allocate_exception>
 800db46:	4b07      	ldr	r3, [pc, #28]	; (800db64 <__cxa_call_unexpected+0xe4>)
 800db48:	4a07      	ldr	r2, [pc, #28]	; (800db68 <__cxa_call_unexpected+0xe8>)
 800db4a:	4908      	ldr	r1, [pc, #32]	; (800db6c <__cxa_call_unexpected+0xec>)
 800db4c:	6003      	str	r3, [r0, #0]
 800db4e:	f7ff fc8f 	bl	800d470 <__cxa_throw>
 800db52:	4620      	mov	r0, r4
 800db54:	f7ff fbfe 	bl	800d354 <_ZN10__cxxabiv111__terminateEPFvvE>
 800db58:	f000 f848 	bl	800dbec <__cxa_end_catch>
 800db5c:	f000 f846 	bl	800dbec <__cxa_end_catch>
 800db60:	f7ff fe90 	bl	800d884 <__cxa_end_cleanup>
 800db64:	080138e8 	.word	0x080138e8
 800db68:	0800d339 	.word	0x0800d339
 800db6c:	08013864 	.word	0x08013864

0800db70 <__cxa_begin_catch>:
 800db70:	b538      	push	{r3, r4, r5, lr}
 800db72:	4604      	mov	r4, r0
 800db74:	f000 f882 	bl	800dc7c <__cxa_get_globals>
 800db78:	4621      	mov	r1, r4
 800db7a:	6805      	ldr	r5, [r0, #0]
 800db7c:	f811 3920 	ldrb.w	r3, [r1], #-32
 800db80:	2b47      	cmp	r3, #71	; 0x47
 800db82:	d003      	beq.n	800db8c <__cxa_begin_catch+0x1c>
 800db84:	bb85      	cbnz	r5, 800dbe8 <__cxa_begin_catch+0x78>
 800db86:	6001      	str	r1, [r0, #0]
 800db88:	4628      	mov	r0, r5
 800db8a:	bd38      	pop	{r3, r4, r5, pc}
 800db8c:	7863      	ldrb	r3, [r4, #1]
 800db8e:	2b4e      	cmp	r3, #78	; 0x4e
 800db90:	d1f8      	bne.n	800db84 <__cxa_begin_catch+0x14>
 800db92:	78a3      	ldrb	r3, [r4, #2]
 800db94:	2b55      	cmp	r3, #85	; 0x55
 800db96:	d1f5      	bne.n	800db84 <__cxa_begin_catch+0x14>
 800db98:	78e3      	ldrb	r3, [r4, #3]
 800db9a:	2b43      	cmp	r3, #67	; 0x43
 800db9c:	d1f2      	bne.n	800db84 <__cxa_begin_catch+0x14>
 800db9e:	7923      	ldrb	r3, [r4, #4]
 800dba0:	2b43      	cmp	r3, #67	; 0x43
 800dba2:	d1ef      	bne.n	800db84 <__cxa_begin_catch+0x14>
 800dba4:	7963      	ldrb	r3, [r4, #5]
 800dba6:	2b2b      	cmp	r3, #43	; 0x2b
 800dba8:	d1ec      	bne.n	800db84 <__cxa_begin_catch+0x14>
 800dbaa:	79a3      	ldrb	r3, [r4, #6]
 800dbac:	2b2b      	cmp	r3, #43	; 0x2b
 800dbae:	d1e9      	bne.n	800db84 <__cxa_begin_catch+0x14>
 800dbb0:	79e3      	ldrb	r3, [r4, #7]
 800dbb2:	2b01      	cmp	r3, #1
 800dbb4:	d8e6      	bhi.n	800db84 <__cxa_begin_catch+0x14>
 800dbb6:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 800dbba:	2b00      	cmp	r3, #0
 800dbbc:	db11      	blt.n	800dbe2 <__cxa_begin_catch+0x72>
 800dbbe:	3301      	adds	r3, #1
 800dbc0:	6842      	ldr	r2, [r0, #4]
 800dbc2:	f844 3c0c 	str.w	r3, [r4, #-12]
 800dbc6:	3a01      	subs	r2, #1
 800dbc8:	6042      	str	r2, [r0, #4]
 800dbca:	428d      	cmp	r5, r1
 800dbcc:	bf18      	it	ne
 800dbce:	f844 5c10 	strne.w	r5, [r4, #-16]
 800dbd2:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800dbd4:	bf18      	it	ne
 800dbd6:	6001      	strne	r1, [r0, #0]
 800dbd8:	4620      	mov	r0, r4
 800dbda:	f7fa f97b 	bl	8007ed4 <_Unwind_Complete>
 800dbde:	4628      	mov	r0, r5
 800dbe0:	bd38      	pop	{r3, r4, r5, pc}
 800dbe2:	f1c3 0301 	rsb	r3, r3, #1
 800dbe6:	e7eb      	b.n	800dbc0 <__cxa_begin_catch+0x50>
 800dbe8:	f7ff fbc8 	bl	800d37c <_ZSt9terminatev>

0800dbec <__cxa_end_catch>:
 800dbec:	b508      	push	{r3, lr}
 800dbee:	f000 f841 	bl	800dc74 <__cxa_get_globals_fast>
 800dbf2:	4602      	mov	r2, r0
 800dbf4:	6800      	ldr	r0, [r0, #0]
 800dbf6:	b370      	cbz	r0, 800dc56 <__cxa_end_catch+0x6a>
 800dbf8:	f890 1020 	ldrb.w	r1, [r0, #32]
 800dbfc:	2947      	cmp	r1, #71	; 0x47
 800dbfe:	d006      	beq.n	800dc0e <__cxa_end_catch+0x22>
 800dc00:	2100      	movs	r1, #0
 800dc02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dc06:	3020      	adds	r0, #32
 800dc08:	6011      	str	r1, [r2, #0]
 800dc0a:	f7fa b965 	b.w	8007ed8 <_Unwind_DeleteException>
 800dc0e:	f890 1021 	ldrb.w	r1, [r0, #33]	; 0x21
 800dc12:	294e      	cmp	r1, #78	; 0x4e
 800dc14:	d1f4      	bne.n	800dc00 <__cxa_end_catch+0x14>
 800dc16:	f890 1022 	ldrb.w	r1, [r0, #34]	; 0x22
 800dc1a:	2955      	cmp	r1, #85	; 0x55
 800dc1c:	d1f0      	bne.n	800dc00 <__cxa_end_catch+0x14>
 800dc1e:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
 800dc22:	2943      	cmp	r1, #67	; 0x43
 800dc24:	d1ec      	bne.n	800dc00 <__cxa_end_catch+0x14>
 800dc26:	f890 1024 	ldrb.w	r1, [r0, #36]	; 0x24
 800dc2a:	2943      	cmp	r1, #67	; 0x43
 800dc2c:	d1e8      	bne.n	800dc00 <__cxa_end_catch+0x14>
 800dc2e:	f890 1025 	ldrb.w	r1, [r0, #37]	; 0x25
 800dc32:	292b      	cmp	r1, #43	; 0x2b
 800dc34:	d1e4      	bne.n	800dc00 <__cxa_end_catch+0x14>
 800dc36:	f890 1026 	ldrb.w	r1, [r0, #38]	; 0x26
 800dc3a:	292b      	cmp	r1, #43	; 0x2b
 800dc3c:	d1e0      	bne.n	800dc00 <__cxa_end_catch+0x14>
 800dc3e:	f890 1027 	ldrb.w	r1, [r0, #39]	; 0x27
 800dc42:	2901      	cmp	r1, #1
 800dc44:	d8dc      	bhi.n	800dc00 <__cxa_end_catch+0x14>
 800dc46:	6941      	ldr	r1, [r0, #20]
 800dc48:	2900      	cmp	r1, #0
 800dc4a:	db05      	blt.n	800dc58 <__cxa_end_catch+0x6c>
 800dc4c:	3901      	subs	r1, #1
 800dc4e:	d008      	beq.n	800dc62 <__cxa_end_catch+0x76>
 800dc50:	1c4b      	adds	r3, r1, #1
 800dc52:	d00d      	beq.n	800dc70 <__cxa_end_catch+0x84>
 800dc54:	6141      	str	r1, [r0, #20]
 800dc56:	bd08      	pop	{r3, pc}
 800dc58:	3101      	adds	r1, #1
 800dc5a:	d1fb      	bne.n	800dc54 <__cxa_end_catch+0x68>
 800dc5c:	6903      	ldr	r3, [r0, #16]
 800dc5e:	6013      	str	r3, [r2, #0]
 800dc60:	e7f8      	b.n	800dc54 <__cxa_end_catch+0x68>
 800dc62:	6901      	ldr	r1, [r0, #16]
 800dc64:	6011      	str	r1, [r2, #0]
 800dc66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dc6a:	3020      	adds	r0, #32
 800dc6c:	f7fa b934 	b.w	8007ed8 <_Unwind_DeleteException>
 800dc70:	f7ff fb84 	bl	800d37c <_ZSt9terminatev>

0800dc74 <__cxa_get_globals_fast>:
 800dc74:	4800      	ldr	r0, [pc, #0]	; (800dc78 <__cxa_get_globals_fast+0x4>)
 800dc76:	4770      	bx	lr
 800dc78:	20000a4c 	.word	0x20000a4c

0800dc7c <__cxa_get_globals>:
 800dc7c:	4800      	ldr	r0, [pc, #0]	; (800dc80 <__cxa_get_globals+0x4>)
 800dc7e:	4770      	bx	lr
 800dc80:	20000a4c 	.word	0x20000a4c

0800dc84 <_ZL28read_encoded_value_with_basehjPKhPj>:
 800dc84:	2850      	cmp	r0, #80	; 0x50
 800dc86:	d021      	beq.n	800dccc <_ZL28read_encoded_value_with_basehjPKhPj+0x48>
 800dc88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dc8a:	4604      	mov	r4, r0
 800dc8c:	f000 000f 	and.w	r0, r0, #15
 800dc90:	280c      	cmp	r0, #12
 800dc92:	d859      	bhi.n	800dd48 <_ZL28read_encoded_value_with_basehjPKhPj+0xc4>
 800dc94:	e8df f000 	tbb	[pc, r0]
 800dc98:	072a4807 	.word	0x072a4807
 800dc9c:	58585822 	.word	0x58585822
 800dca0:	07262e58 	.word	0x07262e58
 800dca4:	22          	.byte	0x22
 800dca5:	00          	.byte	0x00
 800dca6:	4610      	mov	r0, r2
 800dca8:	f850 cb04 	ldr.w	ip, [r0], #4
 800dcac:	f1bc 0f00 	cmp.w	ip, #0
 800dcb0:	d009      	beq.n	800dcc6 <_ZL28read_encoded_value_with_basehjPKhPj+0x42>
 800dcb2:	f004 0570 	and.w	r5, r4, #112	; 0x70
 800dcb6:	2d10      	cmp	r5, #16
 800dcb8:	bf08      	it	eq
 800dcba:	4611      	moveq	r1, r2
 800dcbc:	448c      	add	ip, r1
 800dcbe:	0622      	lsls	r2, r4, #24
 800dcc0:	bf48      	it	mi
 800dcc2:	f8dc c000 	ldrmi.w	ip, [ip]
 800dcc6:	f8c3 c000 	str.w	ip, [r3]
 800dcca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dccc:	1cd0      	adds	r0, r2, #3
 800dcce:	f020 0003 	bic.w	r0, r0, #3
 800dcd2:	f850 cb04 	ldr.w	ip, [r0], #4
 800dcd6:	f8c3 c000 	str.w	ip, [r3]
 800dcda:	4770      	bx	lr
 800dcdc:	4610      	mov	r0, r2
 800dcde:	f850 cb08 	ldr.w	ip, [r0], #8
 800dce2:	e7e3      	b.n	800dcac <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800dce4:	4610      	mov	r0, r2
 800dce6:	f930 cb02 	ldrsh.w	ip, [r0], #2
 800dcea:	e7df      	b.n	800dcac <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800dcec:	4610      	mov	r0, r2
 800dcee:	f830 cb02 	ldrh.w	ip, [r0], #2
 800dcf2:	e7db      	b.n	800dcac <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800dcf4:	f04f 0c00 	mov.w	ip, #0
 800dcf8:	4666      	mov	r6, ip
 800dcfa:	4610      	mov	r0, r2
 800dcfc:	f810 7b01 	ldrb.w	r7, [r0], #1
 800dd00:	f007 057f 	and.w	r5, r7, #127	; 0x7f
 800dd04:	40b5      	lsls	r5, r6
 800dd06:	ea4c 0c05 	orr.w	ip, ip, r5
 800dd0a:	063d      	lsls	r5, r7, #24
 800dd0c:	f106 0607 	add.w	r6, r6, #7
 800dd10:	d4f4      	bmi.n	800dcfc <_ZL28read_encoded_value_with_basehjPKhPj+0x78>
 800dd12:	2e1f      	cmp	r6, #31
 800dd14:	d8ca      	bhi.n	800dcac <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800dd16:	067d      	lsls	r5, r7, #25
 800dd18:	d5c8      	bpl.n	800dcac <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800dd1a:	f04f 35ff 	mov.w	r5, #4294967295
 800dd1e:	fa05 f606 	lsl.w	r6, r5, r6
 800dd22:	ea4c 0c06 	orr.w	ip, ip, r6
 800dd26:	e7c4      	b.n	800dcb2 <_ZL28read_encoded_value_with_basehjPKhPj+0x2e>
 800dd28:	f04f 0c00 	mov.w	ip, #0
 800dd2c:	4666      	mov	r6, ip
 800dd2e:	4610      	mov	r0, r2
 800dd30:	f810 7b01 	ldrb.w	r7, [r0], #1
 800dd34:	f007 057f 	and.w	r5, r7, #127	; 0x7f
 800dd38:	40b5      	lsls	r5, r6
 800dd3a:	063f      	lsls	r7, r7, #24
 800dd3c:	ea4c 0c05 	orr.w	ip, ip, r5
 800dd40:	f106 0607 	add.w	r6, r6, #7
 800dd44:	d4f4      	bmi.n	800dd30 <_ZL28read_encoded_value_with_basehjPKhPj+0xac>
 800dd46:	e7b1      	b.n	800dcac <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800dd48:	f000 fad0 	bl	800e2ec <abort>

0800dd4c <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 800dd4c:	28ff      	cmp	r0, #255	; 0xff
 800dd4e:	d022      	beq.n	800dd96 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4a>
 800dd50:	b508      	push	{r3, lr}
 800dd52:	f000 0370 	and.w	r3, r0, #112	; 0x70
 800dd56:	2b30      	cmp	r3, #48	; 0x30
 800dd58:	d018      	beq.n	800dd8c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
 800dd5a:	d806      	bhi.n	800dd6a <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x1e>
 800dd5c:	2b20      	cmp	r3, #32
 800dd5e:	d10b      	bne.n	800dd78 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x2c>
 800dd60:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dd64:	4608      	mov	r0, r1
 800dd66:	f005 b922 	b.w	8012fae <_Unwind_GetTextRelBase>
 800dd6a:	2b40      	cmp	r3, #64	; 0x40
 800dd6c:	d10a      	bne.n	800dd84 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x38>
 800dd6e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dd72:	4608      	mov	r0, r1
 800dd74:	f7fa be36 	b.w	80089e4 <_Unwind_GetRegionStart>
 800dd78:	d802      	bhi.n	800dd80 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
 800dd7a:	f010 0f60 	tst.w	r0, #96	; 0x60
 800dd7e:	d003      	beq.n	800dd88 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x3c>
 800dd80:	f000 fab4 	bl	800e2ec <abort>
 800dd84:	2b50      	cmp	r3, #80	; 0x50
 800dd86:	d1fb      	bne.n	800dd80 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
 800dd88:	2000      	movs	r0, #0
 800dd8a:	bd08      	pop	{r3, pc}
 800dd8c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dd90:	4608      	mov	r0, r1
 800dd92:	f005 b909 	b.w	8012fa8 <_Unwind_GetDataRelBase>
 800dd96:	2000      	movs	r0, #0
 800dd98:	4770      	bx	lr
 800dd9a:	bf00      	nop

0800dd9c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 800dd9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd9e:	460c      	mov	r4, r1
 800dda0:	4615      	mov	r5, r2
 800dda2:	4606      	mov	r6, r0
 800dda4:	b108      	cbz	r0, 800ddaa <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xe>
 800dda6:	f7fa fe1d 	bl	80089e4 <_Unwind_GetRegionStart>
 800ddaa:	6028      	str	r0, [r5, #0]
 800ddac:	f814 7b01 	ldrb.w	r7, [r4], #1
 800ddb0:	2fff      	cmp	r7, #255	; 0xff
 800ddb2:	d129      	bne.n	800de08 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x6c>
 800ddb4:	6068      	str	r0, [r5, #4]
 800ddb6:	4620      	mov	r0, r4
 800ddb8:	f810 3b01 	ldrb.w	r3, [r0], #1
 800ddbc:	752b      	strb	r3, [r5, #20]
 800ddbe:	2bff      	cmp	r3, #255	; 0xff
 800ddc0:	d033      	beq.n	800de2a <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x8e>
 800ddc2:	2310      	movs	r3, #16
 800ddc4:	2400      	movs	r4, #0
 800ddc6:	752b      	strb	r3, [r5, #20]
 800ddc8:	4622      	mov	r2, r4
 800ddca:	f810 1b01 	ldrb.w	r1, [r0], #1
 800ddce:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800ddd2:	4093      	lsls	r3, r2
 800ddd4:	0609      	lsls	r1, r1, #24
 800ddd6:	ea44 0403 	orr.w	r4, r4, r3
 800ddda:	f102 0207 	add.w	r2, r2, #7
 800ddde:	d4f4      	bmi.n	800ddca <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2e>
 800dde0:	4404      	add	r4, r0
 800dde2:	60ec      	str	r4, [r5, #12]
 800dde4:	f810 3b01 	ldrb.w	r3, [r0], #1
 800dde8:	756b      	strb	r3, [r5, #21]
 800ddea:	2400      	movs	r4, #0
 800ddec:	4622      	mov	r2, r4
 800ddee:	f810 1b01 	ldrb.w	r1, [r0], #1
 800ddf2:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800ddf6:	4093      	lsls	r3, r2
 800ddf8:	431c      	orrs	r4, r3
 800ddfa:	060b      	lsls	r3, r1, #24
 800ddfc:	f102 0207 	add.w	r2, r2, #7
 800de00:	d4f5      	bmi.n	800ddee <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x52>
 800de02:	4404      	add	r4, r0
 800de04:	612c      	str	r4, [r5, #16]
 800de06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800de08:	4631      	mov	r1, r6
 800de0a:	4638      	mov	r0, r7
 800de0c:	f7ff ff9e 	bl	800dd4c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800de10:	4622      	mov	r2, r4
 800de12:	4601      	mov	r1, r0
 800de14:	1d2b      	adds	r3, r5, #4
 800de16:	4638      	mov	r0, r7
 800de18:	f7ff ff34 	bl	800dc84 <_ZL28read_encoded_value_with_basehjPKhPj>
 800de1c:	4604      	mov	r4, r0
 800de1e:	4620      	mov	r0, r4
 800de20:	f810 3b01 	ldrb.w	r3, [r0], #1
 800de24:	752b      	strb	r3, [r5, #20]
 800de26:	2bff      	cmp	r3, #255	; 0xff
 800de28:	d1cb      	bne.n	800ddc2 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x26>
 800de2a:	2300      	movs	r3, #0
 800de2c:	60eb      	str	r3, [r5, #12]
 800de2e:	e7d9      	b.n	800dde4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x48>

0800de30 <__gxx_personality_v0>:
 800de30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de34:	f000 0403 	and.w	r4, r0, #3
 800de38:	b093      	sub	sp, #76	; 0x4c
 800de3a:	2300      	movs	r3, #0
 800de3c:	2c01      	cmp	r4, #1
 800de3e:	4688      	mov	r8, r1
 800de40:	4617      	mov	r7, r2
 800de42:	9308      	str	r3, [sp, #32]
 800de44:	f000 80a4 	beq.w	800df90 <__gxx_personality_v0+0x160>
 800de48:	2c02      	cmp	r4, #2
 800de4a:	d10a      	bne.n	800de62 <__gxx_personality_v0+0x32>
 800de4c:	4639      	mov	r1, r7
 800de4e:	4640      	mov	r0, r8
 800de50:	f7fa fdb2 	bl	80089b8 <__gnu_unwind_frame>
 800de54:	2800      	cmp	r0, #0
 800de56:	f040 808f 	bne.w	800df78 <__gxx_personality_v0+0x148>
 800de5a:	2008      	movs	r0, #8
 800de5c:	b013      	add	sp, #76	; 0x4c
 800de5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de62:	2c00      	cmp	r4, #0
 800de64:	f040 822e 	bne.w	800e2c4 <__gxx_personality_v0+0x494>
 800de68:	0702      	lsls	r2, r0, #28
 800de6a:	d4ef      	bmi.n	800de4c <__gxx_personality_v0+0x1c>
 800de6c:	2301      	movs	r3, #1
 800de6e:	9302      	str	r3, [sp, #8]
 800de70:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800de74:	2300      	movs	r3, #0
 800de76:	f8cd a000 	str.w	sl, [sp]
 800de7a:	4619      	mov	r1, r3
 800de7c:	220c      	movs	r2, #12
 800de7e:	4638      	mov	r0, r7
 800de80:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800de84:	f7fa f852 	bl	8007f2c <_Unwind_VRS_Set>
 800de88:	4638      	mov	r0, r7
 800de8a:	f7fa fdb1 	bl	80089f0 <_Unwind_GetLanguageSpecificData>
 800de8e:	4683      	mov	fp, r0
 800de90:	2800      	cmp	r0, #0
 800de92:	d0db      	beq.n	800de4c <__gxx_personality_v0+0x1c>
 800de94:	4652      	mov	r2, sl
 800de96:	4601      	mov	r1, r0
 800de98:	4638      	mov	r0, r7
 800de9a:	f7ff ff7f 	bl	800dd9c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800de9e:	4639      	mov	r1, r7
 800dea0:	4605      	mov	r5, r0
 800dea2:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 800dea6:	f7ff ff51 	bl	800dd4c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800deaa:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
 800deae:	2300      	movs	r3, #0
 800deb0:	4604      	mov	r4, r0
 800deb2:	4619      	mov	r1, r3
 800deb4:	220f      	movs	r2, #15
 800deb6:	f8cd 9000 	str.w	r9, [sp]
 800deba:	4638      	mov	r0, r7
 800debc:	940e      	str	r4, [sp, #56]	; 0x38
 800debe:	f7fa f811 	bl	8007ee4 <_Unwind_VRS_Get>
 800dec2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dec4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800dec6:	f023 0301 	bic.w	r3, r3, #1
 800deca:	4295      	cmp	r5, r2
 800decc:	f103 36ff 	add.w	r6, r3, #4294967295
 800ded0:	f080 81ea 	bcs.w	800e2a8 <__gxx_personality_v0+0x478>
 800ded4:	f89d 4045 	ldrb.w	r4, [sp, #69]	; 0x45
 800ded8:	2100      	movs	r1, #0
 800deda:	4620      	mov	r0, r4
 800dedc:	f7ff ff36 	bl	800dd4c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800dee0:	462a      	mov	r2, r5
 800dee2:	4601      	mov	r1, r0
 800dee4:	ab09      	add	r3, sp, #36	; 0x24
 800dee6:	4620      	mov	r0, r4
 800dee8:	f7ff fecc 	bl	800dc84 <_ZL28read_encoded_value_with_basehjPKhPj>
 800deec:	f89d 5045 	ldrb.w	r5, [sp, #69]	; 0x45
 800def0:	4604      	mov	r4, r0
 800def2:	2100      	movs	r1, #0
 800def4:	4628      	mov	r0, r5
 800def6:	f7ff ff29 	bl	800dd4c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800defa:	4622      	mov	r2, r4
 800defc:	4601      	mov	r1, r0
 800defe:	ab0a      	add	r3, sp, #40	; 0x28
 800df00:	4628      	mov	r0, r5
 800df02:	f7ff febf 	bl	800dc84 <_ZL28read_encoded_value_with_basehjPKhPj>
 800df06:	f89d 5045 	ldrb.w	r5, [sp, #69]	; 0x45
 800df0a:	4604      	mov	r4, r0
 800df0c:	2100      	movs	r1, #0
 800df0e:	4628      	mov	r0, r5
 800df10:	f7ff ff1c 	bl	800dd4c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800df14:	4622      	mov	r2, r4
 800df16:	4601      	mov	r1, r0
 800df18:	464b      	mov	r3, r9
 800df1a:	4628      	mov	r0, r5
 800df1c:	f7ff feb2 	bl	800dc84 <_ZL28read_encoded_value_with_basehjPKhPj>
 800df20:	2400      	movs	r4, #0
 800df22:	4605      	mov	r5, r0
 800df24:	4622      	mov	r2, r4
 800df26:	f815 1b01 	ldrb.w	r1, [r5], #1
 800df2a:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800df2e:	4093      	lsls	r3, r2
 800df30:	431c      	orrs	r4, r3
 800df32:	060b      	lsls	r3, r1, #24
 800df34:	f102 0207 	add.w	r2, r2, #7
 800df38:	d4f5      	bmi.n	800df26 <__gxx_personality_v0+0xf6>
 800df3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800df3c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800df3e:	4413      	add	r3, r2
 800df40:	42b3      	cmp	r3, r6
 800df42:	d91d      	bls.n	800df80 <__gxx_personality_v0+0x150>
 800df44:	9b02      	ldr	r3, [sp, #8]
 800df46:	07da      	lsls	r2, r3, #31
 800df48:	d534      	bpl.n	800dfb4 <__gxx_personality_v0+0x184>
 800df4a:	2400      	movs	r4, #0
 800df4c:	9403      	str	r4, [sp, #12]
 800df4e:	2300      	movs	r3, #0
 800df50:	9d08      	ldr	r5, [sp, #32]
 800df52:	f8cd 9000 	str.w	r9, [sp]
 800df56:	4619      	mov	r1, r3
 800df58:	220d      	movs	r2, #13
 800df5a:	4638      	mov	r0, r7
 800df5c:	f7f9 ffc2 	bl	8007ee4 <_Unwind_VRS_Get>
 800df60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800df62:	9a03      	ldr	r2, [sp, #12]
 800df64:	f8c8 b02c 	str.w	fp, [r8, #44]	; 0x2c
 800df68:	e9c8 5409 	strd	r5, r4, [r8, #36]	; 0x24
 800df6c:	f8c8 2030 	str.w	r2, [r8, #48]	; 0x30
 800df70:	f8c8 3020 	str.w	r3, [r8, #32]
 800df74:	2006      	movs	r0, #6
 800df76:	e771      	b.n	800de5c <__gxx_personality_v0+0x2c>
 800df78:	2009      	movs	r0, #9
 800df7a:	b013      	add	sp, #76	; 0x4c
 800df7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800df82:	4413      	add	r3, r2
 800df84:	42b3      	cmp	r3, r6
 800df86:	d870      	bhi.n	800e06a <__gxx_personality_v0+0x23a>
 800df88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800df8a:	42ab      	cmp	r3, r5
 800df8c:	d8a2      	bhi.n	800ded4 <__gxx_personality_v0+0xa4>
 800df8e:	e7d9      	b.n	800df44 <__gxx_personality_v0+0x114>
 800df90:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800df94:	f010 0408 	ands.w	r4, r0, #8
 800df98:	f8cd a000 	str.w	sl, [sp]
 800df9c:	d012      	beq.n	800dfc4 <__gxx_personality_v0+0x194>
 800df9e:	f044 0402 	orr.w	r4, r4, #2
 800dfa2:	4619      	mov	r1, r3
 800dfa4:	220c      	movs	r2, #12
 800dfa6:	4638      	mov	r0, r7
 800dfa8:	9402      	str	r4, [sp, #8]
 800dfaa:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800dfae:	f7f9 ffbd 	bl	8007f2c <_Unwind_VRS_Set>
 800dfb2:	e769      	b.n	800de88 <__gxx_personality_v0+0x58>
 800dfb4:	9b02      	ldr	r3, [sp, #8]
 800dfb6:	071e      	lsls	r6, r3, #28
 800dfb8:	d501      	bpl.n	800dfbe <__gxx_personality_v0+0x18e>
 800dfba:	f7ff f9df 	bl	800d37c <_ZSt9terminatev>
 800dfbe:	4640      	mov	r0, r8
 800dfc0:	f7ff fd4e 	bl	800da60 <__cxa_call_terminate>
 800dfc4:	4623      	mov	r3, r4
 800dfc6:	220d      	movs	r2, #13
 800dfc8:	4621      	mov	r1, r4
 800dfca:	4638      	mov	r0, r7
 800dfcc:	f8d8 5020 	ldr.w	r5, [r8, #32]
 800dfd0:	f7f9 ff88 	bl	8007ee4 <_Unwind_VRS_Get>
 800dfd4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dfd6:	429d      	cmp	r5, r3
 800dfd8:	d002      	beq.n	800dfe0 <__gxx_personality_v0+0x1b0>
 800dfda:	2302      	movs	r3, #2
 800dfdc:	9302      	str	r3, [sp, #8]
 800dfde:	e749      	b.n	800de74 <__gxx_personality_v0+0x44>
 800dfe0:	4623      	mov	r3, r4
 800dfe2:	f8cd a000 	str.w	sl, [sp]
 800dfe6:	4621      	mov	r1, r4
 800dfe8:	220c      	movs	r2, #12
 800dfea:	4638      	mov	r0, r7
 800dfec:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800dff0:	f7f9 ff9c 	bl	8007f2c <_Unwind_VRS_Set>
 800dff4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800dff8:	9303      	str	r3, [sp, #12]
 800dffa:	2b00      	cmp	r3, #0
 800dffc:	d0df      	beq.n	800dfbe <__gxx_personality_v0+0x18e>
 800dffe:	e9d8 4b0a 	ldrd	r4, fp, [r8, #40]	; 0x28
 800e002:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
 800e006:	2c00      	cmp	r4, #0
 800e008:	db45      	blt.n	800e096 <__gxx_personality_v0+0x266>
 800e00a:	2503      	movs	r5, #3
 800e00c:	2300      	movs	r3, #0
 800e00e:	461a      	mov	r2, r3
 800e010:	4619      	mov	r1, r3
 800e012:	f8cd 9000 	str.w	r9, [sp]
 800e016:	4638      	mov	r0, r7
 800e018:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800e01c:	f7f9 ff86 	bl	8007f2c <_Unwind_VRS_Set>
 800e020:	2300      	movs	r3, #0
 800e022:	4619      	mov	r1, r3
 800e024:	2201      	movs	r2, #1
 800e026:	f8cd 9000 	str.w	r9, [sp]
 800e02a:	4638      	mov	r0, r7
 800e02c:	940b      	str	r4, [sp, #44]	; 0x2c
 800e02e:	f7f9 ff7d 	bl	8007f2c <_Unwind_VRS_Set>
 800e032:	2300      	movs	r3, #0
 800e034:	4619      	mov	r1, r3
 800e036:	220f      	movs	r2, #15
 800e038:	f8cd 9000 	str.w	r9, [sp]
 800e03c:	4638      	mov	r0, r7
 800e03e:	f7f9 ff51 	bl	8007ee4 <_Unwind_VRS_Get>
 800e042:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e044:	9a03      	ldr	r2, [sp, #12]
 800e046:	f8cd 9000 	str.w	r9, [sp]
 800e04a:	f003 0401 	and.w	r4, r3, #1
 800e04e:	2300      	movs	r3, #0
 800e050:	4314      	orrs	r4, r2
 800e052:	4638      	mov	r0, r7
 800e054:	4619      	mov	r1, r3
 800e056:	220f      	movs	r2, #15
 800e058:	940b      	str	r4, [sp, #44]	; 0x2c
 800e05a:	f7f9 ff67 	bl	8007f2c <_Unwind_VRS_Set>
 800e05e:	2d02      	cmp	r5, #2
 800e060:	d014      	beq.n	800e08c <__gxx_personality_v0+0x25c>
 800e062:	2007      	movs	r0, #7
 800e064:	b013      	add	sp, #76	; 0x4c
 800e066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e06a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e06c:	2b00      	cmp	r3, #0
 800e06e:	f43f aeed 	beq.w	800de4c <__gxx_personality_v0+0x1c>
 800e072:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e074:	4413      	add	r3, r2
 800e076:	9303      	str	r3, [sp, #12]
 800e078:	bb8c      	cbnz	r4, 800e0de <__gxx_personality_v0+0x2ae>
 800e07a:	2b00      	cmp	r3, #0
 800e07c:	f43f aee6 	beq.w	800de4c <__gxx_personality_v0+0x1c>
 800e080:	9b02      	ldr	r3, [sp, #8]
 800e082:	07d9      	lsls	r1, r3, #31
 800e084:	f53f aee2 	bmi.w	800de4c <__gxx_personality_v0+0x1c>
 800e088:	2502      	movs	r5, #2
 800e08a:	e7bf      	b.n	800e00c <__gxx_personality_v0+0x1dc>
 800e08c:	4640      	mov	r0, r8
 800e08e:	f7ff fc5f 	bl	800d950 <__cxa_begin_cleanup>
 800e092:	2007      	movs	r0, #7
 800e094:	e6e2      	b.n	800de5c <__gxx_personality_v0+0x2c>
 800e096:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
 800e09a:	1b1b      	subs	r3, r3, r4
 800e09c:	461e      	mov	r6, r3
 800e09e:	4652      	mov	r2, sl
 800e0a0:	4659      	mov	r1, fp
 800e0a2:	4638      	mov	r0, r7
 800e0a4:	f7ff fe7a 	bl	800dd9c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800e0a8:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 800e0ac:	4639      	mov	r1, r7
 800e0ae:	f7ff fe4d 	bl	800dd4c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800e0b2:	4605      	mov	r5, r0
 800e0b4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e0b6:	950e      	str	r5, [sp, #56]	; 0x38
 800e0b8:	f850 3026 	ldr.w	r3, [r0, r6, lsl #2]
 800e0bc:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 800e0c0:	b133      	cbz	r3, 800e0d0 <__gxx_personality_v0+0x2a0>
 800e0c2:	4602      	mov	r2, r0
 800e0c4:	2300      	movs	r3, #0
 800e0c6:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800e0ca:	3301      	adds	r3, #1
 800e0cc:	2900      	cmp	r1, #0
 800e0ce:	d1fa      	bne.n	800e0c6 <__gxx_personality_v0+0x296>
 800e0d0:	2204      	movs	r2, #4
 800e0d2:	e9c8 350a 	strd	r3, r5, [r8, #40]	; 0x28
 800e0d6:	e9c8 200c 	strd	r2, r0, [r8, #48]	; 0x30
 800e0da:	2503      	movs	r5, #3
 800e0dc:	e796      	b.n	800e00c <__gxx_personality_v0+0x1dc>
 800e0de:	9e10      	ldr	r6, [sp, #64]	; 0x40
 800e0e0:	9b03      	ldr	r3, [sp, #12]
 800e0e2:	3c01      	subs	r4, #1
 800e0e4:	4426      	add	r6, r4
 800e0e6:	2b00      	cmp	r3, #0
 800e0e8:	f43f aeb0 	beq.w	800de4c <__gxx_personality_v0+0x1c>
 800e0ec:	9b02      	ldr	r3, [sp, #8]
 800e0ee:	2e00      	cmp	r6, #0
 800e0f0:	f000 80df 	beq.w	800e2b2 <__gxx_personality_v0+0x482>
 800e0f4:	f013 0308 	ands.w	r3, r3, #8
 800e0f8:	9304      	str	r3, [sp, #16]
 800e0fa:	f000 80cb 	beq.w	800e294 <__gxx_personality_v0+0x464>
 800e0fe:	2247      	movs	r2, #71	; 0x47
 800e100:	234e      	movs	r3, #78	; 0x4e
 800e102:	f888 2000 	strb.w	r2, [r8]
 800e106:	f888 3001 	strb.w	r3, [r8, #1]
 800e10a:	2255      	movs	r2, #85	; 0x55
 800e10c:	2343      	movs	r3, #67	; 0x43
 800e10e:	f888 2002 	strb.w	r2, [r8, #2]
 800e112:	f888 3003 	strb.w	r3, [r8, #3]
 800e116:	2246      	movs	r2, #70	; 0x46
 800e118:	234f      	movs	r3, #79	; 0x4f
 800e11a:	f888 2004 	strb.w	r2, [r8, #4]
 800e11e:	f888 3005 	strb.w	r3, [r8, #5]
 800e122:	2252      	movs	r2, #82	; 0x52
 800e124:	2300      	movs	r3, #0
 800e126:	f888 2006 	strb.w	r2, [r8, #6]
 800e12a:	f888 3007 	strb.w	r3, [r8, #7]
 800e12e:	2300      	movs	r3, #0
 800e130:	f8cd b018 	str.w	fp, [sp, #24]
 800e134:	9705      	str	r7, [sp, #20]
 800e136:	469b      	mov	fp, r3
 800e138:	f8cd a01c 	str.w	sl, [sp, #28]
 800e13c:	2400      	movs	r4, #0
 800e13e:	4622      	mov	r2, r4
 800e140:	f816 1b01 	ldrb.w	r1, [r6], #1
 800e144:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800e148:	4093      	lsls	r3, r2
 800e14a:	0608      	lsls	r0, r1, #24
 800e14c:	ea44 0403 	orr.w	r4, r4, r3
 800e150:	f102 0207 	add.w	r2, r2, #7
 800e154:	d4f4      	bmi.n	800e140 <__gxx_personality_v0+0x310>
 800e156:	2a1f      	cmp	r2, #31
 800e158:	d805      	bhi.n	800e166 <__gxx_personality_v0+0x336>
 800e15a:	064b      	lsls	r3, r1, #25
 800e15c:	d503      	bpl.n	800e166 <__gxx_personality_v0+0x336>
 800e15e:	2301      	movs	r3, #1
 800e160:	4093      	lsls	r3, r2
 800e162:	425b      	negs	r3, r3
 800e164:	431c      	orrs	r4, r3
 800e166:	2500      	movs	r5, #0
 800e168:	462a      	mov	r2, r5
 800e16a:	4630      	mov	r0, r6
 800e16c:	f810 1b01 	ldrb.w	r1, [r0], #1
 800e170:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800e174:	4093      	lsls	r3, r2
 800e176:	060f      	lsls	r7, r1, #24
 800e178:	ea45 0503 	orr.w	r5, r5, r3
 800e17c:	f102 0207 	add.w	r2, r2, #7
 800e180:	d4f4      	bmi.n	800e16c <__gxx_personality_v0+0x33c>
 800e182:	2a1f      	cmp	r2, #31
 800e184:	d805      	bhi.n	800e192 <__gxx_personality_v0+0x362>
 800e186:	0649      	lsls	r1, r1, #25
 800e188:	d503      	bpl.n	800e192 <__gxx_personality_v0+0x362>
 800e18a:	2301      	movs	r3, #1
 800e18c:	4093      	lsls	r3, r2
 800e18e:	425b      	negs	r3, r3
 800e190:	431d      	orrs	r5, r3
 800e192:	2c00      	cmp	r4, #0
 800e194:	d012      	beq.n	800e1bc <__gxx_personality_v0+0x38c>
 800e196:	dc14      	bgt.n	800e1c2 <__gxx_personality_v0+0x392>
 800e198:	f1b8 0f00 	cmp.w	r8, #0
 800e19c:	d002      	beq.n	800e1a4 <__gxx_personality_v0+0x374>
 800e19e:	9b04      	ldr	r3, [sp, #16]
 800e1a0:	2b00      	cmp	r3, #0
 800e1a2:	d046      	beq.n	800e232 <__gxx_personality_v0+0x402>
 800e1a4:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
 800e1a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e1aa:	ebaa 0a04 	sub.w	sl, sl, r4
 800e1ae:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
 800e1b2:	b33b      	cbz	r3, 800e204 <__gxx_personality_v0+0x3d4>
 800e1b4:	2d00      	cmp	r5, #0
 800e1b6:	d061      	beq.n	800e27c <__gxx_personality_v0+0x44c>
 800e1b8:	442e      	add	r6, r5
 800e1ba:	e7bf      	b.n	800e13c <__gxx_personality_v0+0x30c>
 800e1bc:	f04f 0b01 	mov.w	fp, #1
 800e1c0:	e7f8      	b.n	800e1b4 <__gxx_personality_v0+0x384>
 800e1c2:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 800e1c6:	28ff      	cmp	r0, #255	; 0xff
 800e1c8:	d04c      	beq.n	800e264 <__gxx_personality_v0+0x434>
 800e1ca:	f000 0307 	and.w	r3, r0, #7
 800e1ce:	2b04      	cmp	r3, #4
 800e1d0:	d878      	bhi.n	800e2c4 <__gxx_personality_v0+0x494>
 800e1d2:	e8df f003 	tbb	[pc, r3]
 800e1d6:	7703      	.short	0x7703
 800e1d8:	032b      	.short	0x032b
 800e1da:	28          	.byte	0x28
 800e1db:	00          	.byte	0x00
 800e1dc:	00a2      	lsls	r2, r4, #2
 800e1de:	4252      	negs	r2, r2
 800e1e0:	e9dd 130e 	ldrd	r1, r3, [sp, #56]	; 0x38
 800e1e4:	441a      	add	r2, r3
 800e1e6:	464b      	mov	r3, r9
 800e1e8:	f7ff fd4c 	bl	800dc84 <_ZL28read_encoded_value_with_basehjPKhPj>
 800e1ec:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800e1ee:	b149      	cbz	r1, 800e204 <__gxx_personality_v0+0x3d4>
 800e1f0:	f1b8 0f00 	cmp.w	r8, #0
 800e1f4:	d0de      	beq.n	800e1b4 <__gxx_personality_v0+0x384>
 800e1f6:	ab08      	add	r3, sp, #32
 800e1f8:	2200      	movs	r2, #0
 800e1fa:	4640      	mov	r0, r8
 800e1fc:	f7ff fb48 	bl	800d890 <__cxa_type_match>
 800e200:	2800      	cmp	r0, #0
 800e202:	d0d7      	beq.n	800e1b4 <__gxx_personality_v0+0x384>
 800e204:	9b02      	ldr	r3, [sp, #8]
 800e206:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800e20a:	07db      	lsls	r3, r3, #31
 800e20c:	e9dd 7b05 	ldrd	r7, fp, [sp, #20]
 800e210:	f53f ae9d 	bmi.w	800df4e <__gxx_personality_v0+0x11e>
 800e214:	9b04      	ldr	r3, [sp, #16]
 800e216:	2b00      	cmp	r3, #0
 800e218:	f43f aef5 	beq.w	800e006 <__gxx_personality_v0+0x1d6>
 800e21c:	2c00      	cmp	r4, #0
 800e21e:	f6bf aef4 	bge.w	800e00a <__gxx_personality_v0+0x1da>
 800e222:	f7ff f8b9 	bl	800d398 <_ZSt10unexpectedv>
 800e226:	00e2      	lsls	r2, r4, #3
 800e228:	4252      	negs	r2, r2
 800e22a:	e7d9      	b.n	800e1e0 <__gxx_personality_v0+0x3b0>
 800e22c:	0062      	lsls	r2, r4, #1
 800e22e:	4252      	negs	r2, r2
 800e230:	e7d6      	b.n	800e1e0 <__gxx_personality_v0+0x3b0>
 800e232:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
 800e236:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e238:	9a08      	ldr	r2, [sp, #32]
 800e23a:	920b      	str	r2, [sp, #44]	; 0x2c
 800e23c:	ebaa 0a04 	sub.w	sl, sl, r4
 800e240:	eb03 078a 	add.w	r7, r3, sl, lsl #2
 800e244:	f853 102a 	ldr.w	r1, [r3, sl, lsl #2]
 800e248:	b919      	cbnz	r1, 800e252 <__gxx_personality_v0+0x422>
 800e24a:	e00d      	b.n	800e268 <__gxx_personality_v0+0x438>
 800e24c:	f857 1f04 	ldr.w	r1, [r7, #4]!
 800e250:	b151      	cbz	r1, 800e268 <__gxx_personality_v0+0x438>
 800e252:	4439      	add	r1, r7
 800e254:	464b      	mov	r3, r9
 800e256:	2200      	movs	r2, #0
 800e258:	4640      	mov	r0, r8
 800e25a:	f7ff fb19 	bl	800d890 <__cxa_type_match>
 800e25e:	2800      	cmp	r0, #0
 800e260:	d0f4      	beq.n	800e24c <__gxx_personality_v0+0x41c>
 800e262:	e7a7      	b.n	800e1b4 <__gxx_personality_v0+0x384>
 800e264:	2200      	movs	r2, #0
 800e266:	e7bb      	b.n	800e1e0 <__gxx_personality_v0+0x3b0>
 800e268:	9b02      	ldr	r3, [sp, #8]
 800e26a:	07da      	lsls	r2, r3, #31
 800e26c:	4656      	mov	r6, sl
 800e26e:	e9dd 7b05 	ldrd	r7, fp, [sp, #20]
 800e272:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800e276:	f53f ae6a 	bmi.w	800df4e <__gxx_personality_v0+0x11e>
 800e27a:	e710      	b.n	800e09e <__gxx_personality_v0+0x26e>
 800e27c:	465b      	mov	r3, fp
 800e27e:	9f05      	ldr	r7, [sp, #20]
 800e280:	2b00      	cmp	r3, #0
 800e282:	f43f ade3 	beq.w	800de4c <__gxx_personality_v0+0x1c>
 800e286:	9b02      	ldr	r3, [sp, #8]
 800e288:	07db      	lsls	r3, r3, #31
 800e28a:	f53f addf 	bmi.w	800de4c <__gxx_personality_v0+0x1c>
 800e28e:	2400      	movs	r4, #0
 800e290:	2502      	movs	r5, #2
 800e292:	e6bb      	b.n	800e00c <__gxx_personality_v0+0x1dc>
 800e294:	f898 3007 	ldrb.w	r3, [r8, #7]
 800e298:	2b01      	cmp	r3, #1
 800e29a:	bf0c      	ite	eq
 800e29c:	f858 3c20 	ldreq.w	r3, [r8, #-32]
 800e2a0:	f108 0358 	addne.w	r3, r8, #88	; 0x58
 800e2a4:	9308      	str	r3, [sp, #32]
 800e2a6:	e742      	b.n	800e12e <__gxx_personality_v0+0x2fe>
 800e2a8:	9b02      	ldr	r3, [sp, #8]
 800e2aa:	07d8      	lsls	r0, r3, #31
 800e2ac:	f53f ae4d 	bmi.w	800df4a <__gxx_personality_v0+0x11a>
 800e2b0:	e681      	b.n	800dfb6 <__gxx_personality_v0+0x186>
 800e2b2:	f013 0401 	ands.w	r4, r3, #1
 800e2b6:	f47f adc9 	bne.w	800de4c <__gxx_personality_v0+0x1c>
 800e2ba:	9b02      	ldr	r3, [sp, #8]
 800e2bc:	071d      	lsls	r5, r3, #28
 800e2be:	f53f aee3 	bmi.w	800e088 <__gxx_personality_v0+0x258>
 800e2c2:	e7e4      	b.n	800e28e <__gxx_personality_v0+0x45e>
 800e2c4:	f000 f812 	bl	800e2ec <abort>
 800e2c8:	f7ff fc52 	bl	800db70 <__cxa_begin_catch>
 800e2cc:	e675      	b.n	800dfba <__gxx_personality_v0+0x18a>
 800e2ce:	bf00      	nop

0800e2d0 <__cxa_current_exception_type>:
 800e2d0:	b508      	push	{r3, lr}
 800e2d2:	f7ff fcd3 	bl	800dc7c <__cxa_get_globals>
 800e2d6:	6800      	ldr	r0, [r0, #0]
 800e2d8:	b130      	cbz	r0, 800e2e8 <__cxa_current_exception_type+0x18>
 800e2da:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800e2de:	2b01      	cmp	r3, #1
 800e2e0:	bf04      	itt	eq
 800e2e2:	6800      	ldreq	r0, [r0, #0]
 800e2e4:	3878      	subeq	r0, #120	; 0x78
 800e2e6:	6800      	ldr	r0, [r0, #0]
 800e2e8:	bd08      	pop	{r3, pc}
 800e2ea:	bf00      	nop

0800e2ec <abort>:
 800e2ec:	b508      	push	{r3, lr}
 800e2ee:	2006      	movs	r0, #6
 800e2f0:	f000 fefa 	bl	800f0e8 <raise>
 800e2f4:	2001      	movs	r0, #1
 800e2f6:	f7fa ff2b 	bl	8009150 <_exit>
	...

0800e2fc <__errno>:
 800e2fc:	4b01      	ldr	r3, [pc, #4]	; (800e304 <__errno+0x8>)
 800e2fe:	6818      	ldr	r0, [r3, #0]
 800e300:	4770      	bx	lr
 800e302:	bf00      	nop
 800e304:	20000014 	.word	0x20000014

0800e308 <_fputc_r>:
 800e308:	b570      	push	{r4, r5, r6, lr}
 800e30a:	460e      	mov	r6, r1
 800e30c:	4614      	mov	r4, r2
 800e30e:	4605      	mov	r5, r0
 800e310:	b118      	cbz	r0, 800e31a <_fputc_r+0x12>
 800e312:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800e314:	b90b      	cbnz	r3, 800e31a <_fputc_r+0x12>
 800e316:	f003 f941 	bl	801159c <__sinit>
 800e31a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e31c:	07d8      	lsls	r0, r3, #31
 800e31e:	d405      	bmi.n	800e32c <_fputc_r+0x24>
 800e320:	89a3      	ldrh	r3, [r4, #12]
 800e322:	0599      	lsls	r1, r3, #22
 800e324:	d402      	bmi.n	800e32c <_fputc_r+0x24>
 800e326:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e328:	f000 fa24 	bl	800e774 <__retarget_lock_acquire_recursive>
 800e32c:	4622      	mov	r2, r4
 800e32e:	4628      	mov	r0, r5
 800e330:	4631      	mov	r1, r6
 800e332:	f000 fcbd 	bl	800ecb0 <_putc_r>
 800e336:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e338:	07da      	lsls	r2, r3, #31
 800e33a:	4605      	mov	r5, r0
 800e33c:	d405      	bmi.n	800e34a <_fputc_r+0x42>
 800e33e:	89a3      	ldrh	r3, [r4, #12]
 800e340:	059b      	lsls	r3, r3, #22
 800e342:	d402      	bmi.n	800e34a <_fputc_r+0x42>
 800e344:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e346:	f000 fa16 	bl	800e776 <__retarget_lock_release_recursive>
 800e34a:	4628      	mov	r0, r5
 800e34c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e350 <fputc>:
 800e350:	4b02      	ldr	r3, [pc, #8]	; (800e35c <fputc+0xc>)
 800e352:	460a      	mov	r2, r1
 800e354:	4601      	mov	r1, r0
 800e356:	6818      	ldr	r0, [r3, #0]
 800e358:	f7ff bfd6 	b.w	800e308 <_fputc_r>
 800e35c:	20000014 	.word	0x20000014

0800e360 <_fputs_r>:
 800e360:	b530      	push	{r4, r5, lr}
 800e362:	b087      	sub	sp, #28
 800e364:	4605      	mov	r5, r0
 800e366:	4608      	mov	r0, r1
 800e368:	4614      	mov	r4, r2
 800e36a:	9101      	str	r1, [sp, #4]
 800e36c:	f7f8 fde2 	bl	8006f34 <strlen>
 800e370:	ab01      	add	r3, sp, #4
 800e372:	9303      	str	r3, [sp, #12]
 800e374:	2301      	movs	r3, #1
 800e376:	9005      	str	r0, [sp, #20]
 800e378:	9002      	str	r0, [sp, #8]
 800e37a:	9304      	str	r3, [sp, #16]
 800e37c:	b125      	cbz	r5, 800e388 <_fputs_r+0x28>
 800e37e:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e380:	b913      	cbnz	r3, 800e388 <_fputs_r+0x28>
 800e382:	4628      	mov	r0, r5
 800e384:	f003 f90a 	bl	801159c <__sinit>
 800e388:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e38a:	07db      	lsls	r3, r3, #31
 800e38c:	d405      	bmi.n	800e39a <_fputs_r+0x3a>
 800e38e:	89a3      	ldrh	r3, [r4, #12]
 800e390:	0598      	lsls	r0, r3, #22
 800e392:	d402      	bmi.n	800e39a <_fputs_r+0x3a>
 800e394:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e396:	f000 f9ed 	bl	800e774 <__retarget_lock_acquire_recursive>
 800e39a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e39e:	0499      	lsls	r1, r3, #18
 800e3a0:	d406      	bmi.n	800e3b0 <_fputs_r+0x50>
 800e3a2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800e3a6:	81a3      	strh	r3, [r4, #12]
 800e3a8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e3aa:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800e3ae:	6663      	str	r3, [r4, #100]	; 0x64
 800e3b0:	aa03      	add	r2, sp, #12
 800e3b2:	4628      	mov	r0, r5
 800e3b4:	4621      	mov	r1, r4
 800e3b6:	f000 f815 	bl	800e3e4 <__sfvwrite_r>
 800e3ba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e3bc:	07da      	lsls	r2, r3, #31
 800e3be:	4605      	mov	r5, r0
 800e3c0:	d405      	bmi.n	800e3ce <_fputs_r+0x6e>
 800e3c2:	89a3      	ldrh	r3, [r4, #12]
 800e3c4:	059b      	lsls	r3, r3, #22
 800e3c6:	d402      	bmi.n	800e3ce <_fputs_r+0x6e>
 800e3c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e3ca:	f000 f9d4 	bl	800e776 <__retarget_lock_release_recursive>
 800e3ce:	4628      	mov	r0, r5
 800e3d0:	b007      	add	sp, #28
 800e3d2:	bd30      	pop	{r4, r5, pc}

0800e3d4 <fputs>:
 800e3d4:	4b02      	ldr	r3, [pc, #8]	; (800e3e0 <fputs+0xc>)
 800e3d6:	460a      	mov	r2, r1
 800e3d8:	4601      	mov	r1, r0
 800e3da:	6818      	ldr	r0, [r3, #0]
 800e3dc:	f7ff bfc0 	b.w	800e360 <_fputs_r>
 800e3e0:	20000014 	.word	0x20000014

0800e3e4 <__sfvwrite_r>:
 800e3e4:	6893      	ldr	r3, [r2, #8]
 800e3e6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3ea:	4606      	mov	r6, r0
 800e3ec:	460c      	mov	r4, r1
 800e3ee:	4690      	mov	r8, r2
 800e3f0:	b91b      	cbnz	r3, 800e3fa <__sfvwrite_r+0x16>
 800e3f2:	2000      	movs	r0, #0
 800e3f4:	b003      	add	sp, #12
 800e3f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e3fa:	898b      	ldrh	r3, [r1, #12]
 800e3fc:	0718      	lsls	r0, r3, #28
 800e3fe:	d550      	bpl.n	800e4a2 <__sfvwrite_r+0xbe>
 800e400:	690b      	ldr	r3, [r1, #16]
 800e402:	2b00      	cmp	r3, #0
 800e404:	d04d      	beq.n	800e4a2 <__sfvwrite_r+0xbe>
 800e406:	89a3      	ldrh	r3, [r4, #12]
 800e408:	f8d8 7000 	ldr.w	r7, [r8]
 800e40c:	f013 0902 	ands.w	r9, r3, #2
 800e410:	d16c      	bne.n	800e4ec <__sfvwrite_r+0x108>
 800e412:	f013 0301 	ands.w	r3, r3, #1
 800e416:	f000 809c 	beq.w	800e552 <__sfvwrite_r+0x16e>
 800e41a:	4648      	mov	r0, r9
 800e41c:	46ca      	mov	sl, r9
 800e41e:	46cb      	mov	fp, r9
 800e420:	f1bb 0f00 	cmp.w	fp, #0
 800e424:	f000 8103 	beq.w	800e62e <__sfvwrite_r+0x24a>
 800e428:	b950      	cbnz	r0, 800e440 <__sfvwrite_r+0x5c>
 800e42a:	465a      	mov	r2, fp
 800e42c:	210a      	movs	r1, #10
 800e42e:	4650      	mov	r0, sl
 800e430:	f7f8 fd26 	bl	8006e80 <memchr>
 800e434:	2800      	cmp	r0, #0
 800e436:	f000 80ff 	beq.w	800e638 <__sfvwrite_r+0x254>
 800e43a:	3001      	adds	r0, #1
 800e43c:	eba0 090a 	sub.w	r9, r0, sl
 800e440:	6820      	ldr	r0, [r4, #0]
 800e442:	6921      	ldr	r1, [r4, #16]
 800e444:	6963      	ldr	r3, [r4, #20]
 800e446:	45d9      	cmp	r9, fp
 800e448:	464a      	mov	r2, r9
 800e44a:	bf28      	it	cs
 800e44c:	465a      	movcs	r2, fp
 800e44e:	4288      	cmp	r0, r1
 800e450:	f240 80f5 	bls.w	800e63e <__sfvwrite_r+0x25a>
 800e454:	68a5      	ldr	r5, [r4, #8]
 800e456:	441d      	add	r5, r3
 800e458:	42aa      	cmp	r2, r5
 800e45a:	f340 80f0 	ble.w	800e63e <__sfvwrite_r+0x25a>
 800e45e:	4651      	mov	r1, sl
 800e460:	462a      	mov	r2, r5
 800e462:	f000 fbf7 	bl	800ec54 <memmove>
 800e466:	6823      	ldr	r3, [r4, #0]
 800e468:	442b      	add	r3, r5
 800e46a:	6023      	str	r3, [r4, #0]
 800e46c:	4621      	mov	r1, r4
 800e46e:	4630      	mov	r0, r6
 800e470:	f003 f828 	bl	80114c4 <_fflush_r>
 800e474:	2800      	cmp	r0, #0
 800e476:	d167      	bne.n	800e548 <__sfvwrite_r+0x164>
 800e478:	ebb9 0905 	subs.w	r9, r9, r5
 800e47c:	f040 80f7 	bne.w	800e66e <__sfvwrite_r+0x28a>
 800e480:	4621      	mov	r1, r4
 800e482:	4630      	mov	r0, r6
 800e484:	f003 f81e 	bl	80114c4 <_fflush_r>
 800e488:	2800      	cmp	r0, #0
 800e48a:	d15d      	bne.n	800e548 <__sfvwrite_r+0x164>
 800e48c:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800e490:	44aa      	add	sl, r5
 800e492:	ebab 0b05 	sub.w	fp, fp, r5
 800e496:	1b55      	subs	r5, r2, r5
 800e498:	f8c8 5008 	str.w	r5, [r8, #8]
 800e49c:	2d00      	cmp	r5, #0
 800e49e:	d1bf      	bne.n	800e420 <__sfvwrite_r+0x3c>
 800e4a0:	e7a7      	b.n	800e3f2 <__sfvwrite_r+0xe>
 800e4a2:	4621      	mov	r1, r4
 800e4a4:	4630      	mov	r0, r6
 800e4a6:	f002 f8b7 	bl	8010618 <__swsetup_r>
 800e4aa:	2800      	cmp	r0, #0
 800e4ac:	d0ab      	beq.n	800e406 <__sfvwrite_r+0x22>
 800e4ae:	f04f 30ff 	mov.w	r0, #4294967295
 800e4b2:	e79f      	b.n	800e3f4 <__sfvwrite_r+0x10>
 800e4b4:	e9d7 b900 	ldrd	fp, r9, [r7]
 800e4b8:	3708      	adds	r7, #8
 800e4ba:	f1b9 0f00 	cmp.w	r9, #0
 800e4be:	d0f9      	beq.n	800e4b4 <__sfvwrite_r+0xd0>
 800e4c0:	45d1      	cmp	r9, sl
 800e4c2:	464b      	mov	r3, r9
 800e4c4:	69e1      	ldr	r1, [r4, #28]
 800e4c6:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800e4c8:	bf28      	it	cs
 800e4ca:	4653      	movcs	r3, sl
 800e4cc:	465a      	mov	r2, fp
 800e4ce:	4630      	mov	r0, r6
 800e4d0:	47a8      	blx	r5
 800e4d2:	2800      	cmp	r0, #0
 800e4d4:	dd38      	ble.n	800e548 <__sfvwrite_r+0x164>
 800e4d6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e4da:	4483      	add	fp, r0
 800e4dc:	eba9 0900 	sub.w	r9, r9, r0
 800e4e0:	1a18      	subs	r0, r3, r0
 800e4e2:	f8c8 0008 	str.w	r0, [r8, #8]
 800e4e6:	2800      	cmp	r0, #0
 800e4e8:	d1e7      	bne.n	800e4ba <__sfvwrite_r+0xd6>
 800e4ea:	e782      	b.n	800e3f2 <__sfvwrite_r+0xe>
 800e4ec:	f04f 0b00 	mov.w	fp, #0
 800e4f0:	f8df a180 	ldr.w	sl, [pc, #384]	; 800e674 <__sfvwrite_r+0x290>
 800e4f4:	46d9      	mov	r9, fp
 800e4f6:	e7e0      	b.n	800e4ba <__sfvwrite_r+0xd6>
 800e4f8:	e9d7 9a00 	ldrd	r9, sl, [r7]
 800e4fc:	3708      	adds	r7, #8
 800e4fe:	f1ba 0f00 	cmp.w	sl, #0
 800e502:	d0f9      	beq.n	800e4f8 <__sfvwrite_r+0x114>
 800e504:	89a3      	ldrh	r3, [r4, #12]
 800e506:	68a2      	ldr	r2, [r4, #8]
 800e508:	6820      	ldr	r0, [r4, #0]
 800e50a:	0599      	lsls	r1, r3, #22
 800e50c:	d563      	bpl.n	800e5d6 <__sfvwrite_r+0x1f2>
 800e50e:	4552      	cmp	r2, sl
 800e510:	d836      	bhi.n	800e580 <__sfvwrite_r+0x19c>
 800e512:	f413 6f90 	tst.w	r3, #1152	; 0x480
 800e516:	d033      	beq.n	800e580 <__sfvwrite_r+0x19c>
 800e518:	6921      	ldr	r1, [r4, #16]
 800e51a:	6965      	ldr	r5, [r4, #20]
 800e51c:	eba0 0b01 	sub.w	fp, r0, r1
 800e520:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800e524:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800e528:	f10b 0201 	add.w	r2, fp, #1
 800e52c:	106d      	asrs	r5, r5, #1
 800e52e:	4452      	add	r2, sl
 800e530:	4295      	cmp	r5, r2
 800e532:	bf38      	it	cc
 800e534:	4615      	movcc	r5, r2
 800e536:	055b      	lsls	r3, r3, #21
 800e538:	d53d      	bpl.n	800e5b6 <__sfvwrite_r+0x1d2>
 800e53a:	4629      	mov	r1, r5
 800e53c:	4630      	mov	r0, r6
 800e53e:	f000 f92b 	bl	800e798 <_malloc_r>
 800e542:	b948      	cbnz	r0, 800e558 <__sfvwrite_r+0x174>
 800e544:	230c      	movs	r3, #12
 800e546:	6033      	str	r3, [r6, #0]
 800e548:	89a3      	ldrh	r3, [r4, #12]
 800e54a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e54e:	81a3      	strh	r3, [r4, #12]
 800e550:	e7ad      	b.n	800e4ae <__sfvwrite_r+0xca>
 800e552:	4699      	mov	r9, r3
 800e554:	469a      	mov	sl, r3
 800e556:	e7d2      	b.n	800e4fe <__sfvwrite_r+0x11a>
 800e558:	465a      	mov	r2, fp
 800e55a:	6921      	ldr	r1, [r4, #16]
 800e55c:	9001      	str	r0, [sp, #4]
 800e55e:	f000 fb6b 	bl	800ec38 <memcpy>
 800e562:	89a2      	ldrh	r2, [r4, #12]
 800e564:	9b01      	ldr	r3, [sp, #4]
 800e566:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 800e56a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800e56e:	81a2      	strh	r2, [r4, #12]
 800e570:	6123      	str	r3, [r4, #16]
 800e572:	6165      	str	r5, [r4, #20]
 800e574:	445b      	add	r3, fp
 800e576:	eba5 050b 	sub.w	r5, r5, fp
 800e57a:	6023      	str	r3, [r4, #0]
 800e57c:	4652      	mov	r2, sl
 800e57e:	60a5      	str	r5, [r4, #8]
 800e580:	4552      	cmp	r2, sl
 800e582:	bf28      	it	cs
 800e584:	4652      	movcs	r2, sl
 800e586:	6820      	ldr	r0, [r4, #0]
 800e588:	9201      	str	r2, [sp, #4]
 800e58a:	4649      	mov	r1, r9
 800e58c:	f000 fb62 	bl	800ec54 <memmove>
 800e590:	68a3      	ldr	r3, [r4, #8]
 800e592:	9a01      	ldr	r2, [sp, #4]
 800e594:	1a9b      	subs	r3, r3, r2
 800e596:	60a3      	str	r3, [r4, #8]
 800e598:	6823      	ldr	r3, [r4, #0]
 800e59a:	441a      	add	r2, r3
 800e59c:	4655      	mov	r5, sl
 800e59e:	6022      	str	r2, [r4, #0]
 800e5a0:	f8d8 0008 	ldr.w	r0, [r8, #8]
 800e5a4:	44a9      	add	r9, r5
 800e5a6:	ebaa 0a05 	sub.w	sl, sl, r5
 800e5aa:	1b45      	subs	r5, r0, r5
 800e5ac:	f8c8 5008 	str.w	r5, [r8, #8]
 800e5b0:	2d00      	cmp	r5, #0
 800e5b2:	d1a4      	bne.n	800e4fe <__sfvwrite_r+0x11a>
 800e5b4:	e71d      	b.n	800e3f2 <__sfvwrite_r+0xe>
 800e5b6:	462a      	mov	r2, r5
 800e5b8:	4630      	mov	r0, r6
 800e5ba:	f000 fbb5 	bl	800ed28 <_realloc_r>
 800e5be:	4603      	mov	r3, r0
 800e5c0:	2800      	cmp	r0, #0
 800e5c2:	d1d5      	bne.n	800e570 <__sfvwrite_r+0x18c>
 800e5c4:	6921      	ldr	r1, [r4, #16]
 800e5c6:	4630      	mov	r0, r6
 800e5c8:	f003 f878 	bl	80116bc <_free_r>
 800e5cc:	89a3      	ldrh	r3, [r4, #12]
 800e5ce:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800e5d2:	81a3      	strh	r3, [r4, #12]
 800e5d4:	e7b6      	b.n	800e544 <__sfvwrite_r+0x160>
 800e5d6:	6923      	ldr	r3, [r4, #16]
 800e5d8:	4283      	cmp	r3, r0
 800e5da:	d302      	bcc.n	800e5e2 <__sfvwrite_r+0x1fe>
 800e5dc:	6961      	ldr	r1, [r4, #20]
 800e5de:	4551      	cmp	r1, sl
 800e5e0:	d915      	bls.n	800e60e <__sfvwrite_r+0x22a>
 800e5e2:	4552      	cmp	r2, sl
 800e5e4:	bf28      	it	cs
 800e5e6:	4652      	movcs	r2, sl
 800e5e8:	4649      	mov	r1, r9
 800e5ea:	4615      	mov	r5, r2
 800e5ec:	f000 fb32 	bl	800ec54 <memmove>
 800e5f0:	68a3      	ldr	r3, [r4, #8]
 800e5f2:	6822      	ldr	r2, [r4, #0]
 800e5f4:	1b5b      	subs	r3, r3, r5
 800e5f6:	442a      	add	r2, r5
 800e5f8:	60a3      	str	r3, [r4, #8]
 800e5fa:	6022      	str	r2, [r4, #0]
 800e5fc:	2b00      	cmp	r3, #0
 800e5fe:	d1cf      	bne.n	800e5a0 <__sfvwrite_r+0x1bc>
 800e600:	4621      	mov	r1, r4
 800e602:	4630      	mov	r0, r6
 800e604:	f002 ff5e 	bl	80114c4 <_fflush_r>
 800e608:	2800      	cmp	r0, #0
 800e60a:	d0c9      	beq.n	800e5a0 <__sfvwrite_r+0x1bc>
 800e60c:	e79c      	b.n	800e548 <__sfvwrite_r+0x164>
 800e60e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800e612:	459a      	cmp	sl, r3
 800e614:	bf38      	it	cc
 800e616:	4653      	movcc	r3, sl
 800e618:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800e61a:	fb93 f3f1 	sdiv	r3, r3, r1
 800e61e:	464a      	mov	r2, r9
 800e620:	434b      	muls	r3, r1
 800e622:	4630      	mov	r0, r6
 800e624:	69e1      	ldr	r1, [r4, #28]
 800e626:	47a8      	blx	r5
 800e628:	1e05      	subs	r5, r0, #0
 800e62a:	dcb9      	bgt.n	800e5a0 <__sfvwrite_r+0x1bc>
 800e62c:	e78c      	b.n	800e548 <__sfvwrite_r+0x164>
 800e62e:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800e632:	2000      	movs	r0, #0
 800e634:	3708      	adds	r7, #8
 800e636:	e6f3      	b.n	800e420 <__sfvwrite_r+0x3c>
 800e638:	f10b 0901 	add.w	r9, fp, #1
 800e63c:	e700      	b.n	800e440 <__sfvwrite_r+0x5c>
 800e63e:	4293      	cmp	r3, r2
 800e640:	dc08      	bgt.n	800e654 <__sfvwrite_r+0x270>
 800e642:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800e644:	69e1      	ldr	r1, [r4, #28]
 800e646:	4652      	mov	r2, sl
 800e648:	4630      	mov	r0, r6
 800e64a:	47a8      	blx	r5
 800e64c:	1e05      	subs	r5, r0, #0
 800e64e:	f73f af13 	bgt.w	800e478 <__sfvwrite_r+0x94>
 800e652:	e779      	b.n	800e548 <__sfvwrite_r+0x164>
 800e654:	4651      	mov	r1, sl
 800e656:	9201      	str	r2, [sp, #4]
 800e658:	f000 fafc 	bl	800ec54 <memmove>
 800e65c:	9a01      	ldr	r2, [sp, #4]
 800e65e:	68a3      	ldr	r3, [r4, #8]
 800e660:	1a9b      	subs	r3, r3, r2
 800e662:	60a3      	str	r3, [r4, #8]
 800e664:	6823      	ldr	r3, [r4, #0]
 800e666:	4413      	add	r3, r2
 800e668:	6023      	str	r3, [r4, #0]
 800e66a:	4615      	mov	r5, r2
 800e66c:	e704      	b.n	800e478 <__sfvwrite_r+0x94>
 800e66e:	2001      	movs	r0, #1
 800e670:	e70c      	b.n	800e48c <__sfvwrite_r+0xa8>
 800e672:	bf00      	nop
 800e674:	7ffffc00 	.word	0x7ffffc00

0800e678 <_fwrite_r>:
 800e678:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e67c:	b086      	sub	sp, #24
 800e67e:	fb02 f603 	mul.w	r6, r2, r3
 800e682:	461d      	mov	r5, r3
 800e684:	ab01      	add	r3, sp, #4
 800e686:	9303      	str	r3, [sp, #12]
 800e688:	2301      	movs	r3, #1
 800e68a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800e68c:	9101      	str	r1, [sp, #4]
 800e68e:	4690      	mov	r8, r2
 800e690:	9602      	str	r6, [sp, #8]
 800e692:	9605      	str	r6, [sp, #20]
 800e694:	9304      	str	r3, [sp, #16]
 800e696:	4607      	mov	r7, r0
 800e698:	b118      	cbz	r0, 800e6a2 <_fwrite_r+0x2a>
 800e69a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800e69c:	b90b      	cbnz	r3, 800e6a2 <_fwrite_r+0x2a>
 800e69e:	f002 ff7d 	bl	801159c <__sinit>
 800e6a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e6a4:	07d8      	lsls	r0, r3, #31
 800e6a6:	d405      	bmi.n	800e6b4 <_fwrite_r+0x3c>
 800e6a8:	89a3      	ldrh	r3, [r4, #12]
 800e6aa:	0599      	lsls	r1, r3, #22
 800e6ac:	d402      	bmi.n	800e6b4 <_fwrite_r+0x3c>
 800e6ae:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e6b0:	f000 f860 	bl	800e774 <__retarget_lock_acquire_recursive>
 800e6b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e6b8:	049a      	lsls	r2, r3, #18
 800e6ba:	d406      	bmi.n	800e6ca <_fwrite_r+0x52>
 800e6bc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800e6c0:	81a3      	strh	r3, [r4, #12]
 800e6c2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e6c4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800e6c8:	6663      	str	r3, [r4, #100]	; 0x64
 800e6ca:	aa03      	add	r2, sp, #12
 800e6cc:	4621      	mov	r1, r4
 800e6ce:	4638      	mov	r0, r7
 800e6d0:	f7ff fe88 	bl	800e3e4 <__sfvwrite_r>
 800e6d4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e6d6:	b958      	cbnz	r0, 800e6f0 <_fwrite_r+0x78>
 800e6d8:	07d8      	lsls	r0, r3, #31
 800e6da:	d405      	bmi.n	800e6e8 <_fwrite_r+0x70>
 800e6dc:	89a3      	ldrh	r3, [r4, #12]
 800e6de:	0599      	lsls	r1, r3, #22
 800e6e0:	d402      	bmi.n	800e6e8 <_fwrite_r+0x70>
 800e6e2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e6e4:	f000 f847 	bl	800e776 <__retarget_lock_release_recursive>
 800e6e8:	4628      	mov	r0, r5
 800e6ea:	b006      	add	sp, #24
 800e6ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e6f0:	07da      	lsls	r2, r3, #31
 800e6f2:	d405      	bmi.n	800e700 <_fwrite_r+0x88>
 800e6f4:	89a3      	ldrh	r3, [r4, #12]
 800e6f6:	059b      	lsls	r3, r3, #22
 800e6f8:	d402      	bmi.n	800e700 <_fwrite_r+0x88>
 800e6fa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e6fc:	f000 f83b 	bl	800e776 <__retarget_lock_release_recursive>
 800e700:	9d05      	ldr	r5, [sp, #20]
 800e702:	1b75      	subs	r5, r6, r5
 800e704:	fbb5 f5f8 	udiv	r5, r5, r8
 800e708:	e7ee      	b.n	800e6e8 <_fwrite_r+0x70>
	...

0800e70c <fwrite>:
 800e70c:	b507      	push	{r0, r1, r2, lr}
 800e70e:	9300      	str	r3, [sp, #0]
 800e710:	4613      	mov	r3, r2
 800e712:	460a      	mov	r2, r1
 800e714:	4601      	mov	r1, r0
 800e716:	4803      	ldr	r0, [pc, #12]	; (800e724 <fwrite+0x18>)
 800e718:	6800      	ldr	r0, [r0, #0]
 800e71a:	f7ff ffad 	bl	800e678 <_fwrite_r>
 800e71e:	b003      	add	sp, #12
 800e720:	f85d fb04 	ldr.w	pc, [sp], #4
 800e724:	20000014 	.word	0x20000014

0800e728 <__libc_init_array>:
 800e728:	b570      	push	{r4, r5, r6, lr}
 800e72a:	4d0d      	ldr	r5, [pc, #52]	; (800e760 <__libc_init_array+0x38>)
 800e72c:	4c0d      	ldr	r4, [pc, #52]	; (800e764 <__libc_init_array+0x3c>)
 800e72e:	1b64      	subs	r4, r4, r5
 800e730:	10a4      	asrs	r4, r4, #2
 800e732:	2600      	movs	r6, #0
 800e734:	42a6      	cmp	r6, r4
 800e736:	d109      	bne.n	800e74c <__libc_init_array+0x24>
 800e738:	4d0b      	ldr	r5, [pc, #44]	; (800e768 <__libc_init_array+0x40>)
 800e73a:	4c0c      	ldr	r4, [pc, #48]	; (800e76c <__libc_init_array+0x44>)
 800e73c:	f004 fc3a 	bl	8012fb4 <_init>
 800e740:	1b64      	subs	r4, r4, r5
 800e742:	10a4      	asrs	r4, r4, #2
 800e744:	2600      	movs	r6, #0
 800e746:	42a6      	cmp	r6, r4
 800e748:	d105      	bne.n	800e756 <__libc_init_array+0x2e>
 800e74a:	bd70      	pop	{r4, r5, r6, pc}
 800e74c:	f855 3b04 	ldr.w	r3, [r5], #4
 800e750:	4798      	blx	r3
 800e752:	3601      	adds	r6, #1
 800e754:	e7ee      	b.n	800e734 <__libc_init_array+0xc>
 800e756:	f855 3b04 	ldr.w	r3, [r5], #4
 800e75a:	4798      	blx	r3
 800e75c:	3601      	adds	r6, #1
 800e75e:	e7f2      	b.n	800e746 <__libc_init_array+0x1e>
 800e760:	08014904 	.word	0x08014904
 800e764:	08014904 	.word	0x08014904
 800e768:	08014904 	.word	0x08014904
 800e76c:	08014910 	.word	0x08014910

0800e770 <__retarget_lock_init_recursive>:
 800e770:	4770      	bx	lr

0800e772 <__retarget_lock_close_recursive>:
 800e772:	4770      	bx	lr

0800e774 <__retarget_lock_acquire_recursive>:
 800e774:	4770      	bx	lr

0800e776 <__retarget_lock_release_recursive>:
 800e776:	4770      	bx	lr

0800e778 <malloc>:
 800e778:	4b02      	ldr	r3, [pc, #8]	; (800e784 <malloc+0xc>)
 800e77a:	4601      	mov	r1, r0
 800e77c:	6818      	ldr	r0, [r3, #0]
 800e77e:	f000 b80b 	b.w	800e798 <_malloc_r>
 800e782:	bf00      	nop
 800e784:	20000014 	.word	0x20000014

0800e788 <free>:
 800e788:	4b02      	ldr	r3, [pc, #8]	; (800e794 <free+0xc>)
 800e78a:	4601      	mov	r1, r0
 800e78c:	6818      	ldr	r0, [r3, #0]
 800e78e:	f002 bf95 	b.w	80116bc <_free_r>
 800e792:	bf00      	nop
 800e794:	20000014 	.word	0x20000014

0800e798 <_malloc_r>:
 800e798:	f101 030b 	add.w	r3, r1, #11
 800e79c:	2b16      	cmp	r3, #22
 800e79e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7a2:	4605      	mov	r5, r0
 800e7a4:	d906      	bls.n	800e7b4 <_malloc_r+0x1c>
 800e7a6:	f033 0707 	bics.w	r7, r3, #7
 800e7aa:	d504      	bpl.n	800e7b6 <_malloc_r+0x1e>
 800e7ac:	230c      	movs	r3, #12
 800e7ae:	602b      	str	r3, [r5, #0]
 800e7b0:	2400      	movs	r4, #0
 800e7b2:	e1ae      	b.n	800eb12 <_malloc_r+0x37a>
 800e7b4:	2710      	movs	r7, #16
 800e7b6:	42b9      	cmp	r1, r7
 800e7b8:	d8f8      	bhi.n	800e7ac <_malloc_r+0x14>
 800e7ba:	4628      	mov	r0, r5
 800e7bc:	f000 fa6c 	bl	800ec98 <__malloc_lock>
 800e7c0:	f5b7 7ffc 	cmp.w	r7, #504	; 0x1f8
 800e7c4:	4ec3      	ldr	r6, [pc, #780]	; (800ead4 <_malloc_r+0x33c>)
 800e7c6:	d238      	bcs.n	800e83a <_malloc_r+0xa2>
 800e7c8:	f107 0208 	add.w	r2, r7, #8
 800e7cc:	4432      	add	r2, r6
 800e7ce:	f1a2 0108 	sub.w	r1, r2, #8
 800e7d2:	6854      	ldr	r4, [r2, #4]
 800e7d4:	428c      	cmp	r4, r1
 800e7d6:	ea4f 03d7 	mov.w	r3, r7, lsr #3
 800e7da:	d102      	bne.n	800e7e2 <_malloc_r+0x4a>
 800e7dc:	68d4      	ldr	r4, [r2, #12]
 800e7de:	42a2      	cmp	r2, r4
 800e7e0:	d010      	beq.n	800e804 <_malloc_r+0x6c>
 800e7e2:	6863      	ldr	r3, [r4, #4]
 800e7e4:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 800e7e8:	f023 0303 	bic.w	r3, r3, #3
 800e7ec:	60ca      	str	r2, [r1, #12]
 800e7ee:	4423      	add	r3, r4
 800e7f0:	6091      	str	r1, [r2, #8]
 800e7f2:	685a      	ldr	r2, [r3, #4]
 800e7f4:	f042 0201 	orr.w	r2, r2, #1
 800e7f8:	605a      	str	r2, [r3, #4]
 800e7fa:	4628      	mov	r0, r5
 800e7fc:	f000 fa52 	bl	800eca4 <__malloc_unlock>
 800e800:	3408      	adds	r4, #8
 800e802:	e186      	b.n	800eb12 <_malloc_r+0x37a>
 800e804:	3302      	adds	r3, #2
 800e806:	4ab4      	ldr	r2, [pc, #720]	; (800ead8 <_malloc_r+0x340>)
 800e808:	6934      	ldr	r4, [r6, #16]
 800e80a:	4294      	cmp	r4, r2
 800e80c:	4611      	mov	r1, r2
 800e80e:	d077      	beq.n	800e900 <_malloc_r+0x168>
 800e810:	6860      	ldr	r0, [r4, #4]
 800e812:	f020 0c03 	bic.w	ip, r0, #3
 800e816:	ebac 0007 	sub.w	r0, ip, r7
 800e81a:	280f      	cmp	r0, #15
 800e81c:	dd48      	ble.n	800e8b0 <_malloc_r+0x118>
 800e81e:	19e1      	adds	r1, r4, r7
 800e820:	f040 0301 	orr.w	r3, r0, #1
 800e824:	f047 0701 	orr.w	r7, r7, #1
 800e828:	6067      	str	r7, [r4, #4]
 800e82a:	e9c6 1104 	strd	r1, r1, [r6, #16]
 800e82e:	e9c1 2202 	strd	r2, r2, [r1, #8]
 800e832:	604b      	str	r3, [r1, #4]
 800e834:	f844 000c 	str.w	r0, [r4, ip]
 800e838:	e7df      	b.n	800e7fa <_malloc_r+0x62>
 800e83a:	0a7b      	lsrs	r3, r7, #9
 800e83c:	d02a      	beq.n	800e894 <_malloc_r+0xfc>
 800e83e:	2b04      	cmp	r3, #4
 800e840:	d812      	bhi.n	800e868 <_malloc_r+0xd0>
 800e842:	09bb      	lsrs	r3, r7, #6
 800e844:	3338      	adds	r3, #56	; 0x38
 800e846:	1c5a      	adds	r2, r3, #1
 800e848:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 800e84c:	f1a2 0c08 	sub.w	ip, r2, #8
 800e850:	6854      	ldr	r4, [r2, #4]
 800e852:	4564      	cmp	r4, ip
 800e854:	d006      	beq.n	800e864 <_malloc_r+0xcc>
 800e856:	6862      	ldr	r2, [r4, #4]
 800e858:	f022 0203 	bic.w	r2, r2, #3
 800e85c:	1bd0      	subs	r0, r2, r7
 800e85e:	280f      	cmp	r0, #15
 800e860:	dd1c      	ble.n	800e89c <_malloc_r+0x104>
 800e862:	3b01      	subs	r3, #1
 800e864:	3301      	adds	r3, #1
 800e866:	e7ce      	b.n	800e806 <_malloc_r+0x6e>
 800e868:	2b14      	cmp	r3, #20
 800e86a:	d801      	bhi.n	800e870 <_malloc_r+0xd8>
 800e86c:	335b      	adds	r3, #91	; 0x5b
 800e86e:	e7ea      	b.n	800e846 <_malloc_r+0xae>
 800e870:	2b54      	cmp	r3, #84	; 0x54
 800e872:	d802      	bhi.n	800e87a <_malloc_r+0xe2>
 800e874:	0b3b      	lsrs	r3, r7, #12
 800e876:	336e      	adds	r3, #110	; 0x6e
 800e878:	e7e5      	b.n	800e846 <_malloc_r+0xae>
 800e87a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 800e87e:	d802      	bhi.n	800e886 <_malloc_r+0xee>
 800e880:	0bfb      	lsrs	r3, r7, #15
 800e882:	3377      	adds	r3, #119	; 0x77
 800e884:	e7df      	b.n	800e846 <_malloc_r+0xae>
 800e886:	f240 5254 	movw	r2, #1364	; 0x554
 800e88a:	4293      	cmp	r3, r2
 800e88c:	d804      	bhi.n	800e898 <_malloc_r+0x100>
 800e88e:	0cbb      	lsrs	r3, r7, #18
 800e890:	337c      	adds	r3, #124	; 0x7c
 800e892:	e7d8      	b.n	800e846 <_malloc_r+0xae>
 800e894:	233f      	movs	r3, #63	; 0x3f
 800e896:	e7d6      	b.n	800e846 <_malloc_r+0xae>
 800e898:	237e      	movs	r3, #126	; 0x7e
 800e89a:	e7d4      	b.n	800e846 <_malloc_r+0xae>
 800e89c:	2800      	cmp	r0, #0
 800e89e:	68e1      	ldr	r1, [r4, #12]
 800e8a0:	db04      	blt.n	800e8ac <_malloc_r+0x114>
 800e8a2:	68a3      	ldr	r3, [r4, #8]
 800e8a4:	60d9      	str	r1, [r3, #12]
 800e8a6:	608b      	str	r3, [r1, #8]
 800e8a8:	18a3      	adds	r3, r4, r2
 800e8aa:	e7a2      	b.n	800e7f2 <_malloc_r+0x5a>
 800e8ac:	460c      	mov	r4, r1
 800e8ae:	e7d0      	b.n	800e852 <_malloc_r+0xba>
 800e8b0:	2800      	cmp	r0, #0
 800e8b2:	e9c6 2204 	strd	r2, r2, [r6, #16]
 800e8b6:	db07      	blt.n	800e8c8 <_malloc_r+0x130>
 800e8b8:	44a4      	add	ip, r4
 800e8ba:	f8dc 3004 	ldr.w	r3, [ip, #4]
 800e8be:	f043 0301 	orr.w	r3, r3, #1
 800e8c2:	f8cc 3004 	str.w	r3, [ip, #4]
 800e8c6:	e798      	b.n	800e7fa <_malloc_r+0x62>
 800e8c8:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 800e8cc:	6870      	ldr	r0, [r6, #4]
 800e8ce:	f080 809e 	bcs.w	800ea0e <_malloc_r+0x276>
 800e8d2:	ea4f 02dc 	mov.w	r2, ip, lsr #3
 800e8d6:	ea4f 1e5c 	mov.w	lr, ip, lsr #5
 800e8da:	f04f 0c01 	mov.w	ip, #1
 800e8de:	3201      	adds	r2, #1
 800e8e0:	fa0c fc0e 	lsl.w	ip, ip, lr
 800e8e4:	ea4c 0000 	orr.w	r0, ip, r0
 800e8e8:	6070      	str	r0, [r6, #4]
 800e8ea:	f856 c032 	ldr.w	ip, [r6, r2, lsl #3]
 800e8ee:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
 800e8f2:	3808      	subs	r0, #8
 800e8f4:	e9c4 c002 	strd	ip, r0, [r4, #8]
 800e8f8:	f846 4032 	str.w	r4, [r6, r2, lsl #3]
 800e8fc:	f8cc 400c 	str.w	r4, [ip, #12]
 800e900:	2001      	movs	r0, #1
 800e902:	109a      	asrs	r2, r3, #2
 800e904:	fa00 f202 	lsl.w	r2, r0, r2
 800e908:	6870      	ldr	r0, [r6, #4]
 800e90a:	4290      	cmp	r0, r2
 800e90c:	d326      	bcc.n	800e95c <_malloc_r+0x1c4>
 800e90e:	4210      	tst	r0, r2
 800e910:	d106      	bne.n	800e920 <_malloc_r+0x188>
 800e912:	f023 0303 	bic.w	r3, r3, #3
 800e916:	0052      	lsls	r2, r2, #1
 800e918:	4210      	tst	r0, r2
 800e91a:	f103 0304 	add.w	r3, r3, #4
 800e91e:	d0fa      	beq.n	800e916 <_malloc_r+0x17e>
 800e920:	eb06 08c3 	add.w	r8, r6, r3, lsl #3
 800e924:	46c1      	mov	r9, r8
 800e926:	469e      	mov	lr, r3
 800e928:	f8d9 400c 	ldr.w	r4, [r9, #12]
 800e92c:	454c      	cmp	r4, r9
 800e92e:	f040 80b3 	bne.w	800ea98 <_malloc_r+0x300>
 800e932:	f10e 0e01 	add.w	lr, lr, #1
 800e936:	f01e 0f03 	tst.w	lr, #3
 800e93a:	f109 0908 	add.w	r9, r9, #8
 800e93e:	d1f3      	bne.n	800e928 <_malloc_r+0x190>
 800e940:	0798      	lsls	r0, r3, #30
 800e942:	f040 80ec 	bne.w	800eb1e <_malloc_r+0x386>
 800e946:	6873      	ldr	r3, [r6, #4]
 800e948:	ea23 0302 	bic.w	r3, r3, r2
 800e94c:	6073      	str	r3, [r6, #4]
 800e94e:	6870      	ldr	r0, [r6, #4]
 800e950:	0052      	lsls	r2, r2, #1
 800e952:	4290      	cmp	r0, r2
 800e954:	d302      	bcc.n	800e95c <_malloc_r+0x1c4>
 800e956:	2a00      	cmp	r2, #0
 800e958:	f040 80ee 	bne.w	800eb38 <_malloc_r+0x3a0>
 800e95c:	f8d6 b008 	ldr.w	fp, [r6, #8]
 800e960:	f8db 1004 	ldr.w	r1, [fp, #4]
 800e964:	f021 0903 	bic.w	r9, r1, #3
 800e968:	45b9      	cmp	r9, r7
 800e96a:	d304      	bcc.n	800e976 <_malloc_r+0x1de>
 800e96c:	eba9 0207 	sub.w	r2, r9, r7
 800e970:	2a0f      	cmp	r2, #15
 800e972:	f300 8149 	bgt.w	800ec08 <_malloc_r+0x470>
 800e976:	4a59      	ldr	r2, [pc, #356]	; (800eadc <_malloc_r+0x344>)
 800e978:	6811      	ldr	r1, [r2, #0]
 800e97a:	3110      	adds	r1, #16
 800e97c:	eb0b 0309 	add.w	r3, fp, r9
 800e980:	4439      	add	r1, r7
 800e982:	2008      	movs	r0, #8
 800e984:	9301      	str	r3, [sp, #4]
 800e986:	9100      	str	r1, [sp, #0]
 800e988:	f001 fdde 	bl	8010548 <sysconf>
 800e98c:	4a54      	ldr	r2, [pc, #336]	; (800eae0 <_malloc_r+0x348>)
 800e98e:	e9dd 1300 	ldrd	r1, r3, [sp]
 800e992:	4680      	mov	r8, r0
 800e994:	6810      	ldr	r0, [r2, #0]
 800e996:	3001      	adds	r0, #1
 800e998:	bf1f      	itttt	ne
 800e99a:	f101 31ff 	addne.w	r1, r1, #4294967295
 800e99e:	4441      	addne	r1, r8
 800e9a0:	f1c8 0000 	rsbne	r0, r8, #0
 800e9a4:	4001      	andne	r1, r0
 800e9a6:	4628      	mov	r0, r5
 800e9a8:	e9cd 1300 	strd	r1, r3, [sp]
 800e9ac:	f000 fb62 	bl	800f074 <_sbrk_r>
 800e9b0:	1c42      	adds	r2, r0, #1
 800e9b2:	4604      	mov	r4, r0
 800e9b4:	f000 80fc 	beq.w	800ebb0 <_malloc_r+0x418>
 800e9b8:	9b01      	ldr	r3, [sp, #4]
 800e9ba:	9900      	ldr	r1, [sp, #0]
 800e9bc:	4a48      	ldr	r2, [pc, #288]	; (800eae0 <_malloc_r+0x348>)
 800e9be:	4283      	cmp	r3, r0
 800e9c0:	d902      	bls.n	800e9c8 <_malloc_r+0x230>
 800e9c2:	45b3      	cmp	fp, r6
 800e9c4:	f040 80f4 	bne.w	800ebb0 <_malloc_r+0x418>
 800e9c8:	f8df a120 	ldr.w	sl, [pc, #288]	; 800eaec <_malloc_r+0x354>
 800e9cc:	f8da 0000 	ldr.w	r0, [sl]
 800e9d0:	42a3      	cmp	r3, r4
 800e9d2:	eb00 0e01 	add.w	lr, r0, r1
 800e9d6:	f8ca e000 	str.w	lr, [sl]
 800e9da:	f108 3cff 	add.w	ip, r8, #4294967295
 800e9de:	f040 80ad 	bne.w	800eb3c <_malloc_r+0x3a4>
 800e9e2:	ea13 0f0c 	tst.w	r3, ip
 800e9e6:	f040 80a9 	bne.w	800eb3c <_malloc_r+0x3a4>
 800e9ea:	68b3      	ldr	r3, [r6, #8]
 800e9ec:	4449      	add	r1, r9
 800e9ee:	f041 0101 	orr.w	r1, r1, #1
 800e9f2:	6059      	str	r1, [r3, #4]
 800e9f4:	4a3b      	ldr	r2, [pc, #236]	; (800eae4 <_malloc_r+0x34c>)
 800e9f6:	f8da 3000 	ldr.w	r3, [sl]
 800e9fa:	6811      	ldr	r1, [r2, #0]
 800e9fc:	428b      	cmp	r3, r1
 800e9fe:	bf88      	it	hi
 800ea00:	6013      	strhi	r3, [r2, #0]
 800ea02:	4a39      	ldr	r2, [pc, #228]	; (800eae8 <_malloc_r+0x350>)
 800ea04:	6811      	ldr	r1, [r2, #0]
 800ea06:	428b      	cmp	r3, r1
 800ea08:	bf88      	it	hi
 800ea0a:	6013      	strhi	r3, [r2, #0]
 800ea0c:	e0d0      	b.n	800ebb0 <_malloc_r+0x418>
 800ea0e:	f5bc 6f20 	cmp.w	ip, #2560	; 0xa00
 800ea12:	ea4f 225c 	mov.w	r2, ip, lsr #9
 800ea16:	d218      	bcs.n	800ea4a <_malloc_r+0x2b2>
 800ea18:	ea4f 129c 	mov.w	r2, ip, lsr #6
 800ea1c:	3238      	adds	r2, #56	; 0x38
 800ea1e:	f102 0e01 	add.w	lr, r2, #1
 800ea22:	eb06 08c2 	add.w	r8, r6, r2, lsl #3
 800ea26:	f856 e03e 	ldr.w	lr, [r6, lr, lsl #3]
 800ea2a:	45f0      	cmp	r8, lr
 800ea2c:	d12b      	bne.n	800ea86 <_malloc_r+0x2ee>
 800ea2e:	1092      	asrs	r2, r2, #2
 800ea30:	f04f 0c01 	mov.w	ip, #1
 800ea34:	fa0c f202 	lsl.w	r2, ip, r2
 800ea38:	4310      	orrs	r0, r2
 800ea3a:	6070      	str	r0, [r6, #4]
 800ea3c:	e9c4 e802 	strd	lr, r8, [r4, #8]
 800ea40:	f8c8 4008 	str.w	r4, [r8, #8]
 800ea44:	f8ce 400c 	str.w	r4, [lr, #12]
 800ea48:	e75a      	b.n	800e900 <_malloc_r+0x168>
 800ea4a:	2a14      	cmp	r2, #20
 800ea4c:	d801      	bhi.n	800ea52 <_malloc_r+0x2ba>
 800ea4e:	325b      	adds	r2, #91	; 0x5b
 800ea50:	e7e5      	b.n	800ea1e <_malloc_r+0x286>
 800ea52:	2a54      	cmp	r2, #84	; 0x54
 800ea54:	d803      	bhi.n	800ea5e <_malloc_r+0x2c6>
 800ea56:	ea4f 321c 	mov.w	r2, ip, lsr #12
 800ea5a:	326e      	adds	r2, #110	; 0x6e
 800ea5c:	e7df      	b.n	800ea1e <_malloc_r+0x286>
 800ea5e:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800ea62:	d803      	bhi.n	800ea6c <_malloc_r+0x2d4>
 800ea64:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 800ea68:	3277      	adds	r2, #119	; 0x77
 800ea6a:	e7d8      	b.n	800ea1e <_malloc_r+0x286>
 800ea6c:	f240 5e54 	movw	lr, #1364	; 0x554
 800ea70:	4572      	cmp	r2, lr
 800ea72:	bf9a      	itte	ls
 800ea74:	ea4f 429c 	movls.w	r2, ip, lsr #18
 800ea78:	327c      	addls	r2, #124	; 0x7c
 800ea7a:	227e      	movhi	r2, #126	; 0x7e
 800ea7c:	e7cf      	b.n	800ea1e <_malloc_r+0x286>
 800ea7e:	f8de e008 	ldr.w	lr, [lr, #8]
 800ea82:	45f0      	cmp	r8, lr
 800ea84:	d005      	beq.n	800ea92 <_malloc_r+0x2fa>
 800ea86:	f8de 2004 	ldr.w	r2, [lr, #4]
 800ea8a:	f022 0203 	bic.w	r2, r2, #3
 800ea8e:	4562      	cmp	r2, ip
 800ea90:	d8f5      	bhi.n	800ea7e <_malloc_r+0x2e6>
 800ea92:	f8de 800c 	ldr.w	r8, [lr, #12]
 800ea96:	e7d1      	b.n	800ea3c <_malloc_r+0x2a4>
 800ea98:	6860      	ldr	r0, [r4, #4]
 800ea9a:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 800ea9e:	f020 0003 	bic.w	r0, r0, #3
 800eaa2:	eba0 0a07 	sub.w	sl, r0, r7
 800eaa6:	f1ba 0f0f 	cmp.w	sl, #15
 800eaaa:	dd21      	ble.n	800eaf0 <_malloc_r+0x358>
 800eaac:	68a3      	ldr	r3, [r4, #8]
 800eaae:	19e2      	adds	r2, r4, r7
 800eab0:	f047 0701 	orr.w	r7, r7, #1
 800eab4:	6067      	str	r7, [r4, #4]
 800eab6:	f8c3 c00c 	str.w	ip, [r3, #12]
 800eaba:	f8cc 3008 	str.w	r3, [ip, #8]
 800eabe:	f04a 0301 	orr.w	r3, sl, #1
 800eac2:	e9c6 2204 	strd	r2, r2, [r6, #16]
 800eac6:	e9c2 1102 	strd	r1, r1, [r2, #8]
 800eaca:	6053      	str	r3, [r2, #4]
 800eacc:	f844 a000 	str.w	sl, [r4, r0]
 800ead0:	e693      	b.n	800e7fa <_malloc_r+0x62>
 800ead2:	bf00      	nop
 800ead4:	20000440 	.word	0x20000440
 800ead8:	20000448 	.word	0x20000448
 800eadc:	20000a88 	.word	0x20000a88
 800eae0:	20000848 	.word	0x20000848
 800eae4:	20000a80 	.word	0x20000a80
 800eae8:	20000a84 	.word	0x20000a84
 800eaec:	20000a58 	.word	0x20000a58
 800eaf0:	f1ba 0f00 	cmp.w	sl, #0
 800eaf4:	db11      	blt.n	800eb1a <_malloc_r+0x382>
 800eaf6:	4420      	add	r0, r4
 800eaf8:	6843      	ldr	r3, [r0, #4]
 800eafa:	f043 0301 	orr.w	r3, r3, #1
 800eafe:	6043      	str	r3, [r0, #4]
 800eb00:	f854 3f08 	ldr.w	r3, [r4, #8]!
 800eb04:	4628      	mov	r0, r5
 800eb06:	f8c3 c00c 	str.w	ip, [r3, #12]
 800eb0a:	f8cc 3008 	str.w	r3, [ip, #8]
 800eb0e:	f000 f8c9 	bl	800eca4 <__malloc_unlock>
 800eb12:	4620      	mov	r0, r4
 800eb14:	b003      	add	sp, #12
 800eb16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eb1a:	4664      	mov	r4, ip
 800eb1c:	e706      	b.n	800e92c <_malloc_r+0x194>
 800eb1e:	f858 0908 	ldr.w	r0, [r8], #-8
 800eb22:	4540      	cmp	r0, r8
 800eb24:	f103 33ff 	add.w	r3, r3, #4294967295
 800eb28:	f43f af0a 	beq.w	800e940 <_malloc_r+0x1a8>
 800eb2c:	e70f      	b.n	800e94e <_malloc_r+0x1b6>
 800eb2e:	3304      	adds	r3, #4
 800eb30:	0052      	lsls	r2, r2, #1
 800eb32:	4210      	tst	r0, r2
 800eb34:	d0fb      	beq.n	800eb2e <_malloc_r+0x396>
 800eb36:	e6f3      	b.n	800e920 <_malloc_r+0x188>
 800eb38:	4673      	mov	r3, lr
 800eb3a:	e7fa      	b.n	800eb32 <_malloc_r+0x39a>
 800eb3c:	6810      	ldr	r0, [r2, #0]
 800eb3e:	3001      	adds	r0, #1
 800eb40:	bf1b      	ittet	ne
 800eb42:	1ae3      	subne	r3, r4, r3
 800eb44:	4473      	addne	r3, lr
 800eb46:	6014      	streq	r4, [r2, #0]
 800eb48:	f8ca 3000 	strne.w	r3, [sl]
 800eb4c:	f014 0307 	ands.w	r3, r4, #7
 800eb50:	bf1a      	itte	ne
 800eb52:	f1c3 0008 	rsbne	r0, r3, #8
 800eb56:	1824      	addne	r4, r4, r0
 800eb58:	4618      	moveq	r0, r3
 800eb5a:	1862      	adds	r2, r4, r1
 800eb5c:	ea02 010c 	and.w	r1, r2, ip
 800eb60:	4480      	add	r8, r0
 800eb62:	eba8 0801 	sub.w	r8, r8, r1
 800eb66:	ea08 080c 	and.w	r8, r8, ip
 800eb6a:	4641      	mov	r1, r8
 800eb6c:	4628      	mov	r0, r5
 800eb6e:	9301      	str	r3, [sp, #4]
 800eb70:	9200      	str	r2, [sp, #0]
 800eb72:	f000 fa7f 	bl	800f074 <_sbrk_r>
 800eb76:	1c43      	adds	r3, r0, #1
 800eb78:	e9dd 2300 	ldrd	r2, r3, [sp]
 800eb7c:	d105      	bne.n	800eb8a <_malloc_r+0x3f2>
 800eb7e:	b32b      	cbz	r3, 800ebcc <_malloc_r+0x434>
 800eb80:	f1a3 0008 	sub.w	r0, r3, #8
 800eb84:	4410      	add	r0, r2
 800eb86:	f04f 0800 	mov.w	r8, #0
 800eb8a:	f8da 2000 	ldr.w	r2, [sl]
 800eb8e:	60b4      	str	r4, [r6, #8]
 800eb90:	1b00      	subs	r0, r0, r4
 800eb92:	4440      	add	r0, r8
 800eb94:	4442      	add	r2, r8
 800eb96:	f040 0001 	orr.w	r0, r0, #1
 800eb9a:	45b3      	cmp	fp, r6
 800eb9c:	f8ca 2000 	str.w	r2, [sl]
 800eba0:	6060      	str	r0, [r4, #4]
 800eba2:	f43f af27 	beq.w	800e9f4 <_malloc_r+0x25c>
 800eba6:	f1b9 0f0f 	cmp.w	r9, #15
 800ebaa:	d812      	bhi.n	800ebd2 <_malloc_r+0x43a>
 800ebac:	2301      	movs	r3, #1
 800ebae:	6063      	str	r3, [r4, #4]
 800ebb0:	68b3      	ldr	r3, [r6, #8]
 800ebb2:	685b      	ldr	r3, [r3, #4]
 800ebb4:	f023 0303 	bic.w	r3, r3, #3
 800ebb8:	42bb      	cmp	r3, r7
 800ebba:	eba3 0207 	sub.w	r2, r3, r7
 800ebbe:	d301      	bcc.n	800ebc4 <_malloc_r+0x42c>
 800ebc0:	2a0f      	cmp	r2, #15
 800ebc2:	dc21      	bgt.n	800ec08 <_malloc_r+0x470>
 800ebc4:	4628      	mov	r0, r5
 800ebc6:	f000 f86d 	bl	800eca4 <__malloc_unlock>
 800ebca:	e5f1      	b.n	800e7b0 <_malloc_r+0x18>
 800ebcc:	4610      	mov	r0, r2
 800ebce:	4698      	mov	r8, r3
 800ebd0:	e7db      	b.n	800eb8a <_malloc_r+0x3f2>
 800ebd2:	f8db 3004 	ldr.w	r3, [fp, #4]
 800ebd6:	f1a9 090c 	sub.w	r9, r9, #12
 800ebda:	f029 0907 	bic.w	r9, r9, #7
 800ebde:	f003 0301 	and.w	r3, r3, #1
 800ebe2:	ea43 0309 	orr.w	r3, r3, r9
 800ebe6:	f8cb 3004 	str.w	r3, [fp, #4]
 800ebea:	2205      	movs	r2, #5
 800ebec:	eb0b 0309 	add.w	r3, fp, r9
 800ebf0:	f1b9 0f0f 	cmp.w	r9, #15
 800ebf4:	e9c3 2201 	strd	r2, r2, [r3, #4]
 800ebf8:	f67f aefc 	bls.w	800e9f4 <_malloc_r+0x25c>
 800ebfc:	f10b 0108 	add.w	r1, fp, #8
 800ec00:	4628      	mov	r0, r5
 800ec02:	f002 fd5b 	bl	80116bc <_free_r>
 800ec06:	e6f5      	b.n	800e9f4 <_malloc_r+0x25c>
 800ec08:	68b4      	ldr	r4, [r6, #8]
 800ec0a:	f047 0301 	orr.w	r3, r7, #1
 800ec0e:	4427      	add	r7, r4
 800ec10:	f042 0201 	orr.w	r2, r2, #1
 800ec14:	6063      	str	r3, [r4, #4]
 800ec16:	60b7      	str	r7, [r6, #8]
 800ec18:	607a      	str	r2, [r7, #4]
 800ec1a:	e5ee      	b.n	800e7fa <_malloc_r+0x62>

0800ec1c <memcmp>:
 800ec1c:	b530      	push	{r4, r5, lr}
 800ec1e:	3901      	subs	r1, #1
 800ec20:	2400      	movs	r4, #0
 800ec22:	42a2      	cmp	r2, r4
 800ec24:	d101      	bne.n	800ec2a <memcmp+0xe>
 800ec26:	2000      	movs	r0, #0
 800ec28:	e005      	b.n	800ec36 <memcmp+0x1a>
 800ec2a:	5d03      	ldrb	r3, [r0, r4]
 800ec2c:	3401      	adds	r4, #1
 800ec2e:	5d0d      	ldrb	r5, [r1, r4]
 800ec30:	42ab      	cmp	r3, r5
 800ec32:	d0f6      	beq.n	800ec22 <memcmp+0x6>
 800ec34:	1b58      	subs	r0, r3, r5
 800ec36:	bd30      	pop	{r4, r5, pc}

0800ec38 <memcpy>:
 800ec38:	440a      	add	r2, r1
 800ec3a:	4291      	cmp	r1, r2
 800ec3c:	f100 33ff 	add.w	r3, r0, #4294967295
 800ec40:	d100      	bne.n	800ec44 <memcpy+0xc>
 800ec42:	4770      	bx	lr
 800ec44:	b510      	push	{r4, lr}
 800ec46:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ec4a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800ec4e:	4291      	cmp	r1, r2
 800ec50:	d1f9      	bne.n	800ec46 <memcpy+0xe>
 800ec52:	bd10      	pop	{r4, pc}

0800ec54 <memmove>:
 800ec54:	4288      	cmp	r0, r1
 800ec56:	b510      	push	{r4, lr}
 800ec58:	eb01 0402 	add.w	r4, r1, r2
 800ec5c:	d902      	bls.n	800ec64 <memmove+0x10>
 800ec5e:	4284      	cmp	r4, r0
 800ec60:	4623      	mov	r3, r4
 800ec62:	d807      	bhi.n	800ec74 <memmove+0x20>
 800ec64:	1e43      	subs	r3, r0, #1
 800ec66:	42a1      	cmp	r1, r4
 800ec68:	d008      	beq.n	800ec7c <memmove+0x28>
 800ec6a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800ec6e:	f803 2f01 	strb.w	r2, [r3, #1]!
 800ec72:	e7f8      	b.n	800ec66 <memmove+0x12>
 800ec74:	4402      	add	r2, r0
 800ec76:	4601      	mov	r1, r0
 800ec78:	428a      	cmp	r2, r1
 800ec7a:	d100      	bne.n	800ec7e <memmove+0x2a>
 800ec7c:	bd10      	pop	{r4, pc}
 800ec7e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800ec82:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800ec86:	e7f7      	b.n	800ec78 <memmove+0x24>

0800ec88 <memset>:
 800ec88:	4402      	add	r2, r0
 800ec8a:	4603      	mov	r3, r0
 800ec8c:	4293      	cmp	r3, r2
 800ec8e:	d100      	bne.n	800ec92 <memset+0xa>
 800ec90:	4770      	bx	lr
 800ec92:	f803 1b01 	strb.w	r1, [r3], #1
 800ec96:	e7f9      	b.n	800ec8c <memset+0x4>

0800ec98 <__malloc_lock>:
 800ec98:	4801      	ldr	r0, [pc, #4]	; (800eca0 <__malloc_lock+0x8>)
 800ec9a:	f7ff bd6b 	b.w	800e774 <__retarget_lock_acquire_recursive>
 800ec9e:	bf00      	nop
 800eca0:	20000c88 	.word	0x20000c88

0800eca4 <__malloc_unlock>:
 800eca4:	4801      	ldr	r0, [pc, #4]	; (800ecac <__malloc_unlock+0x8>)
 800eca6:	f7ff bd66 	b.w	800e776 <__retarget_lock_release_recursive>
 800ecaa:	bf00      	nop
 800ecac:	20000c88 	.word	0x20000c88

0800ecb0 <_putc_r>:
 800ecb0:	b570      	push	{r4, r5, r6, lr}
 800ecb2:	460d      	mov	r5, r1
 800ecb4:	4614      	mov	r4, r2
 800ecb6:	4606      	mov	r6, r0
 800ecb8:	b118      	cbz	r0, 800ecc2 <_putc_r+0x12>
 800ecba:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ecbc:	b90b      	cbnz	r3, 800ecc2 <_putc_r+0x12>
 800ecbe:	f002 fc6d 	bl	801159c <__sinit>
 800ecc2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800ecc4:	07d8      	lsls	r0, r3, #31
 800ecc6:	d405      	bmi.n	800ecd4 <_putc_r+0x24>
 800ecc8:	89a3      	ldrh	r3, [r4, #12]
 800ecca:	0599      	lsls	r1, r3, #22
 800eccc:	d402      	bmi.n	800ecd4 <_putc_r+0x24>
 800ecce:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ecd0:	f7ff fd50 	bl	800e774 <__retarget_lock_acquire_recursive>
 800ecd4:	68a3      	ldr	r3, [r4, #8]
 800ecd6:	3b01      	subs	r3, #1
 800ecd8:	2b00      	cmp	r3, #0
 800ecda:	60a3      	str	r3, [r4, #8]
 800ecdc:	da05      	bge.n	800ecea <_putc_r+0x3a>
 800ecde:	69a2      	ldr	r2, [r4, #24]
 800ece0:	4293      	cmp	r3, r2
 800ece2:	db12      	blt.n	800ed0a <_putc_r+0x5a>
 800ece4:	b2eb      	uxtb	r3, r5
 800ece6:	2b0a      	cmp	r3, #10
 800ece8:	d00f      	beq.n	800ed0a <_putc_r+0x5a>
 800ecea:	6823      	ldr	r3, [r4, #0]
 800ecec:	1c5a      	adds	r2, r3, #1
 800ecee:	6022      	str	r2, [r4, #0]
 800ecf0:	701d      	strb	r5, [r3, #0]
 800ecf2:	b2ed      	uxtb	r5, r5
 800ecf4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800ecf6:	07da      	lsls	r2, r3, #31
 800ecf8:	d405      	bmi.n	800ed06 <_putc_r+0x56>
 800ecfa:	89a3      	ldrh	r3, [r4, #12]
 800ecfc:	059b      	lsls	r3, r3, #22
 800ecfe:	d402      	bmi.n	800ed06 <_putc_r+0x56>
 800ed00:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ed02:	f7ff fd38 	bl	800e776 <__retarget_lock_release_recursive>
 800ed06:	4628      	mov	r0, r5
 800ed08:	bd70      	pop	{r4, r5, r6, pc}
 800ed0a:	4629      	mov	r1, r5
 800ed0c:	4622      	mov	r2, r4
 800ed0e:	4630      	mov	r0, r6
 800ed10:	f001 fc27 	bl	8010562 <__swbuf_r>
 800ed14:	4605      	mov	r5, r0
 800ed16:	e7ed      	b.n	800ecf4 <_putc_r+0x44>

0800ed18 <realloc>:
 800ed18:	4b02      	ldr	r3, [pc, #8]	; (800ed24 <realloc+0xc>)
 800ed1a:	460a      	mov	r2, r1
 800ed1c:	4601      	mov	r1, r0
 800ed1e:	6818      	ldr	r0, [r3, #0]
 800ed20:	f000 b802 	b.w	800ed28 <_realloc_r>
 800ed24:	20000014 	.word	0x20000014

0800ed28 <_realloc_r>:
 800ed28:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed2c:	4681      	mov	r9, r0
 800ed2e:	460c      	mov	r4, r1
 800ed30:	b929      	cbnz	r1, 800ed3e <_realloc_r+0x16>
 800ed32:	4611      	mov	r1, r2
 800ed34:	b003      	add	sp, #12
 800ed36:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed3a:	f7ff bd2d 	b.w	800e798 <_malloc_r>
 800ed3e:	9201      	str	r2, [sp, #4]
 800ed40:	f7ff ffaa 	bl	800ec98 <__malloc_lock>
 800ed44:	9a01      	ldr	r2, [sp, #4]
 800ed46:	f102 080b 	add.w	r8, r2, #11
 800ed4a:	f1b8 0f16 	cmp.w	r8, #22
 800ed4e:	d90b      	bls.n	800ed68 <_realloc_r+0x40>
 800ed50:	f038 0807 	bics.w	r8, r8, #7
 800ed54:	d50a      	bpl.n	800ed6c <_realloc_r+0x44>
 800ed56:	230c      	movs	r3, #12
 800ed58:	f8c9 3000 	str.w	r3, [r9]
 800ed5c:	f04f 0b00 	mov.w	fp, #0
 800ed60:	4658      	mov	r0, fp
 800ed62:	b003      	add	sp, #12
 800ed64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed68:	f04f 0810 	mov.w	r8, #16
 800ed6c:	4590      	cmp	r8, r2
 800ed6e:	d3f2      	bcc.n	800ed56 <_realloc_r+0x2e>
 800ed70:	f854 5c04 	ldr.w	r5, [r4, #-4]
 800ed74:	f025 0603 	bic.w	r6, r5, #3
 800ed78:	45b0      	cmp	r8, r6
 800ed7a:	f1a4 0a08 	sub.w	sl, r4, #8
 800ed7e:	f340 8170 	ble.w	800f062 <_realloc_r+0x33a>
 800ed82:	48a9      	ldr	r0, [pc, #676]	; (800f028 <_realloc_r+0x300>)
 800ed84:	9001      	str	r0, [sp, #4]
 800ed86:	f8d0 c008 	ldr.w	ip, [r0, #8]
 800ed8a:	eb0a 0306 	add.w	r3, sl, r6
 800ed8e:	459c      	cmp	ip, r3
 800ed90:	6859      	ldr	r1, [r3, #4]
 800ed92:	d005      	beq.n	800eda0 <_realloc_r+0x78>
 800ed94:	f021 0001 	bic.w	r0, r1, #1
 800ed98:	4418      	add	r0, r3
 800ed9a:	6840      	ldr	r0, [r0, #4]
 800ed9c:	07c7      	lsls	r7, r0, #31
 800ed9e:	d427      	bmi.n	800edf0 <_realloc_r+0xc8>
 800eda0:	f021 0103 	bic.w	r1, r1, #3
 800eda4:	459c      	cmp	ip, r3
 800eda6:	eb06 0701 	add.w	r7, r6, r1
 800edaa:	d119      	bne.n	800ede0 <_realloc_r+0xb8>
 800edac:	f108 0010 	add.w	r0, r8, #16
 800edb0:	42b8      	cmp	r0, r7
 800edb2:	dc1f      	bgt.n	800edf4 <_realloc_r+0xcc>
 800edb4:	eb0a 0308 	add.w	r3, sl, r8
 800edb8:	9a01      	ldr	r2, [sp, #4]
 800edba:	eba7 0708 	sub.w	r7, r7, r8
 800edbe:	f047 0701 	orr.w	r7, r7, #1
 800edc2:	6093      	str	r3, [r2, #8]
 800edc4:	605f      	str	r7, [r3, #4]
 800edc6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800edca:	f003 0301 	and.w	r3, r3, #1
 800edce:	ea43 0308 	orr.w	r3, r3, r8
 800edd2:	f844 3c04 	str.w	r3, [r4, #-4]
 800edd6:	4648      	mov	r0, r9
 800edd8:	f7ff ff64 	bl	800eca4 <__malloc_unlock>
 800eddc:	46a3      	mov	fp, r4
 800edde:	e7bf      	b.n	800ed60 <_realloc_r+0x38>
 800ede0:	45b8      	cmp	r8, r7
 800ede2:	dc07      	bgt.n	800edf4 <_realloc_r+0xcc>
 800ede4:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 800ede8:	60da      	str	r2, [r3, #12]
 800edea:	6093      	str	r3, [r2, #8]
 800edec:	4655      	mov	r5, sl
 800edee:	e07f      	b.n	800eef0 <_realloc_r+0x1c8>
 800edf0:	2100      	movs	r1, #0
 800edf2:	460b      	mov	r3, r1
 800edf4:	07e8      	lsls	r0, r5, #31
 800edf6:	f100 80e5 	bmi.w	800efc4 <_realloc_r+0x29c>
 800edfa:	f854 5c08 	ldr.w	r5, [r4, #-8]
 800edfe:	ebaa 0505 	sub.w	r5, sl, r5
 800ee02:	6868      	ldr	r0, [r5, #4]
 800ee04:	f020 0003 	bic.w	r0, r0, #3
 800ee08:	eb00 0b06 	add.w	fp, r0, r6
 800ee0c:	2b00      	cmp	r3, #0
 800ee0e:	f000 80a5 	beq.w	800ef5c <_realloc_r+0x234>
 800ee12:	459c      	cmp	ip, r3
 800ee14:	eb01 070b 	add.w	r7, r1, fp
 800ee18:	d14a      	bne.n	800eeb0 <_realloc_r+0x188>
 800ee1a:	f108 0310 	add.w	r3, r8, #16
 800ee1e:	42bb      	cmp	r3, r7
 800ee20:	f300 809c 	bgt.w	800ef5c <_realloc_r+0x234>
 800ee24:	46ab      	mov	fp, r5
 800ee26:	68eb      	ldr	r3, [r5, #12]
 800ee28:	f85b 2f08 	ldr.w	r2, [fp, #8]!
 800ee2c:	60d3      	str	r3, [r2, #12]
 800ee2e:	609a      	str	r2, [r3, #8]
 800ee30:	1f32      	subs	r2, r6, #4
 800ee32:	2a24      	cmp	r2, #36	; 0x24
 800ee34:	d837      	bhi.n	800eea6 <_realloc_r+0x17e>
 800ee36:	2a13      	cmp	r2, #19
 800ee38:	d933      	bls.n	800eea2 <_realloc_r+0x17a>
 800ee3a:	6823      	ldr	r3, [r4, #0]
 800ee3c:	60ab      	str	r3, [r5, #8]
 800ee3e:	6863      	ldr	r3, [r4, #4]
 800ee40:	60eb      	str	r3, [r5, #12]
 800ee42:	2a1b      	cmp	r2, #27
 800ee44:	d81b      	bhi.n	800ee7e <_realloc_r+0x156>
 800ee46:	3408      	adds	r4, #8
 800ee48:	f105 0310 	add.w	r3, r5, #16
 800ee4c:	6822      	ldr	r2, [r4, #0]
 800ee4e:	601a      	str	r2, [r3, #0]
 800ee50:	6862      	ldr	r2, [r4, #4]
 800ee52:	605a      	str	r2, [r3, #4]
 800ee54:	68a2      	ldr	r2, [r4, #8]
 800ee56:	609a      	str	r2, [r3, #8]
 800ee58:	eb05 0308 	add.w	r3, r5, r8
 800ee5c:	9a01      	ldr	r2, [sp, #4]
 800ee5e:	eba7 0708 	sub.w	r7, r7, r8
 800ee62:	f047 0701 	orr.w	r7, r7, #1
 800ee66:	6093      	str	r3, [r2, #8]
 800ee68:	605f      	str	r7, [r3, #4]
 800ee6a:	686b      	ldr	r3, [r5, #4]
 800ee6c:	f003 0301 	and.w	r3, r3, #1
 800ee70:	ea43 0308 	orr.w	r3, r3, r8
 800ee74:	606b      	str	r3, [r5, #4]
 800ee76:	4648      	mov	r0, r9
 800ee78:	f7ff ff14 	bl	800eca4 <__malloc_unlock>
 800ee7c:	e770      	b.n	800ed60 <_realloc_r+0x38>
 800ee7e:	68a3      	ldr	r3, [r4, #8]
 800ee80:	612b      	str	r3, [r5, #16]
 800ee82:	68e3      	ldr	r3, [r4, #12]
 800ee84:	616b      	str	r3, [r5, #20]
 800ee86:	2a24      	cmp	r2, #36	; 0x24
 800ee88:	bf01      	itttt	eq
 800ee8a:	6923      	ldreq	r3, [r4, #16]
 800ee8c:	61ab      	streq	r3, [r5, #24]
 800ee8e:	6962      	ldreq	r2, [r4, #20]
 800ee90:	61ea      	streq	r2, [r5, #28]
 800ee92:	bf19      	ittee	ne
 800ee94:	3410      	addne	r4, #16
 800ee96:	f105 0318 	addne.w	r3, r5, #24
 800ee9a:	f105 0320 	addeq.w	r3, r5, #32
 800ee9e:	3418      	addeq	r4, #24
 800eea0:	e7d4      	b.n	800ee4c <_realloc_r+0x124>
 800eea2:	465b      	mov	r3, fp
 800eea4:	e7d2      	b.n	800ee4c <_realloc_r+0x124>
 800eea6:	4621      	mov	r1, r4
 800eea8:	4658      	mov	r0, fp
 800eeaa:	f7ff fed3 	bl	800ec54 <memmove>
 800eeae:	e7d3      	b.n	800ee58 <_realloc_r+0x130>
 800eeb0:	45b8      	cmp	r8, r7
 800eeb2:	dc53      	bgt.n	800ef5c <_realloc_r+0x234>
 800eeb4:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 800eeb8:	4628      	mov	r0, r5
 800eeba:	60da      	str	r2, [r3, #12]
 800eebc:	6093      	str	r3, [r2, #8]
 800eebe:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800eec2:	68eb      	ldr	r3, [r5, #12]
 800eec4:	60d3      	str	r3, [r2, #12]
 800eec6:	609a      	str	r2, [r3, #8]
 800eec8:	1f32      	subs	r2, r6, #4
 800eeca:	2a24      	cmp	r2, #36	; 0x24
 800eecc:	d842      	bhi.n	800ef54 <_realloc_r+0x22c>
 800eece:	2a13      	cmp	r2, #19
 800eed0:	d908      	bls.n	800eee4 <_realloc_r+0x1bc>
 800eed2:	6823      	ldr	r3, [r4, #0]
 800eed4:	60ab      	str	r3, [r5, #8]
 800eed6:	6863      	ldr	r3, [r4, #4]
 800eed8:	60eb      	str	r3, [r5, #12]
 800eeda:	2a1b      	cmp	r2, #27
 800eedc:	d828      	bhi.n	800ef30 <_realloc_r+0x208>
 800eede:	3408      	adds	r4, #8
 800eee0:	f105 0010 	add.w	r0, r5, #16
 800eee4:	6823      	ldr	r3, [r4, #0]
 800eee6:	6003      	str	r3, [r0, #0]
 800eee8:	6863      	ldr	r3, [r4, #4]
 800eeea:	6043      	str	r3, [r0, #4]
 800eeec:	68a3      	ldr	r3, [r4, #8]
 800eeee:	6083      	str	r3, [r0, #8]
 800eef0:	686a      	ldr	r2, [r5, #4]
 800eef2:	eba7 0008 	sub.w	r0, r7, r8
 800eef6:	280f      	cmp	r0, #15
 800eef8:	f002 0201 	and.w	r2, r2, #1
 800eefc:	eb05 0307 	add.w	r3, r5, r7
 800ef00:	f240 80b1 	bls.w	800f066 <_realloc_r+0x33e>
 800ef04:	eb05 0108 	add.w	r1, r5, r8
 800ef08:	ea48 0202 	orr.w	r2, r8, r2
 800ef0c:	f040 0001 	orr.w	r0, r0, #1
 800ef10:	606a      	str	r2, [r5, #4]
 800ef12:	6048      	str	r0, [r1, #4]
 800ef14:	685a      	ldr	r2, [r3, #4]
 800ef16:	f042 0201 	orr.w	r2, r2, #1
 800ef1a:	605a      	str	r2, [r3, #4]
 800ef1c:	3108      	adds	r1, #8
 800ef1e:	4648      	mov	r0, r9
 800ef20:	f002 fbcc 	bl	80116bc <_free_r>
 800ef24:	4648      	mov	r0, r9
 800ef26:	f7ff febd 	bl	800eca4 <__malloc_unlock>
 800ef2a:	f105 0b08 	add.w	fp, r5, #8
 800ef2e:	e717      	b.n	800ed60 <_realloc_r+0x38>
 800ef30:	68a3      	ldr	r3, [r4, #8]
 800ef32:	612b      	str	r3, [r5, #16]
 800ef34:	68e3      	ldr	r3, [r4, #12]
 800ef36:	616b      	str	r3, [r5, #20]
 800ef38:	2a24      	cmp	r2, #36	; 0x24
 800ef3a:	bf01      	itttt	eq
 800ef3c:	6923      	ldreq	r3, [r4, #16]
 800ef3e:	61ab      	streq	r3, [r5, #24]
 800ef40:	6963      	ldreq	r3, [r4, #20]
 800ef42:	61eb      	streq	r3, [r5, #28]
 800ef44:	bf19      	ittee	ne
 800ef46:	3410      	addne	r4, #16
 800ef48:	f105 0018 	addne.w	r0, r5, #24
 800ef4c:	f105 0020 	addeq.w	r0, r5, #32
 800ef50:	3418      	addeq	r4, #24
 800ef52:	e7c7      	b.n	800eee4 <_realloc_r+0x1bc>
 800ef54:	4621      	mov	r1, r4
 800ef56:	f7ff fe7d 	bl	800ec54 <memmove>
 800ef5a:	e7c9      	b.n	800eef0 <_realloc_r+0x1c8>
 800ef5c:	45d8      	cmp	r8, fp
 800ef5e:	dc31      	bgt.n	800efc4 <_realloc_r+0x29c>
 800ef60:	4628      	mov	r0, r5
 800ef62:	68eb      	ldr	r3, [r5, #12]
 800ef64:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800ef68:	60d3      	str	r3, [r2, #12]
 800ef6a:	609a      	str	r2, [r3, #8]
 800ef6c:	1f32      	subs	r2, r6, #4
 800ef6e:	2a24      	cmp	r2, #36	; 0x24
 800ef70:	d824      	bhi.n	800efbc <_realloc_r+0x294>
 800ef72:	2a13      	cmp	r2, #19
 800ef74:	d908      	bls.n	800ef88 <_realloc_r+0x260>
 800ef76:	6823      	ldr	r3, [r4, #0]
 800ef78:	60ab      	str	r3, [r5, #8]
 800ef7a:	6863      	ldr	r3, [r4, #4]
 800ef7c:	60eb      	str	r3, [r5, #12]
 800ef7e:	2a1b      	cmp	r2, #27
 800ef80:	d80a      	bhi.n	800ef98 <_realloc_r+0x270>
 800ef82:	3408      	adds	r4, #8
 800ef84:	f105 0010 	add.w	r0, r5, #16
 800ef88:	6823      	ldr	r3, [r4, #0]
 800ef8a:	6003      	str	r3, [r0, #0]
 800ef8c:	6863      	ldr	r3, [r4, #4]
 800ef8e:	6043      	str	r3, [r0, #4]
 800ef90:	68a3      	ldr	r3, [r4, #8]
 800ef92:	6083      	str	r3, [r0, #8]
 800ef94:	465f      	mov	r7, fp
 800ef96:	e7ab      	b.n	800eef0 <_realloc_r+0x1c8>
 800ef98:	68a3      	ldr	r3, [r4, #8]
 800ef9a:	612b      	str	r3, [r5, #16]
 800ef9c:	68e3      	ldr	r3, [r4, #12]
 800ef9e:	616b      	str	r3, [r5, #20]
 800efa0:	2a24      	cmp	r2, #36	; 0x24
 800efa2:	bf01      	itttt	eq
 800efa4:	6923      	ldreq	r3, [r4, #16]
 800efa6:	61ab      	streq	r3, [r5, #24]
 800efa8:	6963      	ldreq	r3, [r4, #20]
 800efaa:	61eb      	streq	r3, [r5, #28]
 800efac:	bf19      	ittee	ne
 800efae:	3410      	addne	r4, #16
 800efb0:	f105 0018 	addne.w	r0, r5, #24
 800efb4:	f105 0020 	addeq.w	r0, r5, #32
 800efb8:	3418      	addeq	r4, #24
 800efba:	e7e5      	b.n	800ef88 <_realloc_r+0x260>
 800efbc:	4621      	mov	r1, r4
 800efbe:	f7ff fe49 	bl	800ec54 <memmove>
 800efc2:	e7e7      	b.n	800ef94 <_realloc_r+0x26c>
 800efc4:	4611      	mov	r1, r2
 800efc6:	4648      	mov	r0, r9
 800efc8:	f7ff fbe6 	bl	800e798 <_malloc_r>
 800efcc:	4683      	mov	fp, r0
 800efce:	2800      	cmp	r0, #0
 800efd0:	f43f af51 	beq.w	800ee76 <_realloc_r+0x14e>
 800efd4:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800efd8:	f023 0301 	bic.w	r3, r3, #1
 800efdc:	4453      	add	r3, sl
 800efde:	f1a0 0208 	sub.w	r2, r0, #8
 800efe2:	4293      	cmp	r3, r2
 800efe4:	d105      	bne.n	800eff2 <_realloc_r+0x2ca>
 800efe6:	f850 7c04 	ldr.w	r7, [r0, #-4]
 800efea:	f027 0703 	bic.w	r7, r7, #3
 800efee:	4437      	add	r7, r6
 800eff0:	e6fc      	b.n	800edec <_realloc_r+0xc4>
 800eff2:	1f32      	subs	r2, r6, #4
 800eff4:	2a24      	cmp	r2, #36	; 0x24
 800eff6:	d830      	bhi.n	800f05a <_realloc_r+0x332>
 800eff8:	2a13      	cmp	r2, #19
 800effa:	d92b      	bls.n	800f054 <_realloc_r+0x32c>
 800effc:	6823      	ldr	r3, [r4, #0]
 800effe:	6003      	str	r3, [r0, #0]
 800f000:	6863      	ldr	r3, [r4, #4]
 800f002:	6043      	str	r3, [r0, #4]
 800f004:	2a1b      	cmp	r2, #27
 800f006:	d811      	bhi.n	800f02c <_realloc_r+0x304>
 800f008:	f104 0208 	add.w	r2, r4, #8
 800f00c:	f100 0308 	add.w	r3, r0, #8
 800f010:	6811      	ldr	r1, [r2, #0]
 800f012:	6019      	str	r1, [r3, #0]
 800f014:	6851      	ldr	r1, [r2, #4]
 800f016:	6059      	str	r1, [r3, #4]
 800f018:	6892      	ldr	r2, [r2, #8]
 800f01a:	609a      	str	r2, [r3, #8]
 800f01c:	4621      	mov	r1, r4
 800f01e:	4648      	mov	r0, r9
 800f020:	f002 fb4c 	bl	80116bc <_free_r>
 800f024:	e727      	b.n	800ee76 <_realloc_r+0x14e>
 800f026:	bf00      	nop
 800f028:	20000440 	.word	0x20000440
 800f02c:	68a3      	ldr	r3, [r4, #8]
 800f02e:	6083      	str	r3, [r0, #8]
 800f030:	68e3      	ldr	r3, [r4, #12]
 800f032:	60c3      	str	r3, [r0, #12]
 800f034:	2a24      	cmp	r2, #36	; 0x24
 800f036:	bf01      	itttt	eq
 800f038:	6923      	ldreq	r3, [r4, #16]
 800f03a:	6103      	streq	r3, [r0, #16]
 800f03c:	6961      	ldreq	r1, [r4, #20]
 800f03e:	6141      	streq	r1, [r0, #20]
 800f040:	bf19      	ittee	ne
 800f042:	f104 0210 	addne.w	r2, r4, #16
 800f046:	f100 0310 	addne.w	r3, r0, #16
 800f04a:	f104 0218 	addeq.w	r2, r4, #24
 800f04e:	f100 0318 	addeq.w	r3, r0, #24
 800f052:	e7dd      	b.n	800f010 <_realloc_r+0x2e8>
 800f054:	4603      	mov	r3, r0
 800f056:	4622      	mov	r2, r4
 800f058:	e7da      	b.n	800f010 <_realloc_r+0x2e8>
 800f05a:	4621      	mov	r1, r4
 800f05c:	f7ff fdfa 	bl	800ec54 <memmove>
 800f060:	e7dc      	b.n	800f01c <_realloc_r+0x2f4>
 800f062:	4637      	mov	r7, r6
 800f064:	e6c2      	b.n	800edec <_realloc_r+0xc4>
 800f066:	4317      	orrs	r7, r2
 800f068:	606f      	str	r7, [r5, #4]
 800f06a:	685a      	ldr	r2, [r3, #4]
 800f06c:	f042 0201 	orr.w	r2, r2, #1
 800f070:	605a      	str	r2, [r3, #4]
 800f072:	e757      	b.n	800ef24 <_realloc_r+0x1fc>

0800f074 <_sbrk_r>:
 800f074:	b538      	push	{r3, r4, r5, lr}
 800f076:	4d06      	ldr	r5, [pc, #24]	; (800f090 <_sbrk_r+0x1c>)
 800f078:	2300      	movs	r3, #0
 800f07a:	4604      	mov	r4, r0
 800f07c:	4608      	mov	r0, r1
 800f07e:	602b      	str	r3, [r5, #0]
 800f080:	f7fa f8de 	bl	8009240 <_sbrk>
 800f084:	1c43      	adds	r3, r0, #1
 800f086:	d102      	bne.n	800f08e <_sbrk_r+0x1a>
 800f088:	682b      	ldr	r3, [r5, #0]
 800f08a:	b103      	cbz	r3, 800f08e <_sbrk_r+0x1a>
 800f08c:	6023      	str	r3, [r4, #0]
 800f08e:	bd38      	pop	{r3, r4, r5, pc}
 800f090:	20000c90 	.word	0x20000c90

0800f094 <_raise_r>:
 800f094:	291f      	cmp	r1, #31
 800f096:	b538      	push	{r3, r4, r5, lr}
 800f098:	4604      	mov	r4, r0
 800f09a:	460d      	mov	r5, r1
 800f09c:	d904      	bls.n	800f0a8 <_raise_r+0x14>
 800f09e:	2316      	movs	r3, #22
 800f0a0:	6003      	str	r3, [r0, #0]
 800f0a2:	f04f 30ff 	mov.w	r0, #4294967295
 800f0a6:	bd38      	pop	{r3, r4, r5, pc}
 800f0a8:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
 800f0ac:	b112      	cbz	r2, 800f0b4 <_raise_r+0x20>
 800f0ae:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800f0b2:	b94b      	cbnz	r3, 800f0c8 <_raise_r+0x34>
 800f0b4:	4620      	mov	r0, r4
 800f0b6:	f000 f831 	bl	800f11c <_getpid_r>
 800f0ba:	462a      	mov	r2, r5
 800f0bc:	4601      	mov	r1, r0
 800f0be:	4620      	mov	r0, r4
 800f0c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f0c4:	f000 b818 	b.w	800f0f8 <_kill_r>
 800f0c8:	2b01      	cmp	r3, #1
 800f0ca:	d00a      	beq.n	800f0e2 <_raise_r+0x4e>
 800f0cc:	1c59      	adds	r1, r3, #1
 800f0ce:	d103      	bne.n	800f0d8 <_raise_r+0x44>
 800f0d0:	2316      	movs	r3, #22
 800f0d2:	6003      	str	r3, [r0, #0]
 800f0d4:	2001      	movs	r0, #1
 800f0d6:	e7e6      	b.n	800f0a6 <_raise_r+0x12>
 800f0d8:	2400      	movs	r4, #0
 800f0da:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800f0de:	4628      	mov	r0, r5
 800f0e0:	4798      	blx	r3
 800f0e2:	2000      	movs	r0, #0
 800f0e4:	e7df      	b.n	800f0a6 <_raise_r+0x12>
	...

0800f0e8 <raise>:
 800f0e8:	4b02      	ldr	r3, [pc, #8]	; (800f0f4 <raise+0xc>)
 800f0ea:	4601      	mov	r1, r0
 800f0ec:	6818      	ldr	r0, [r3, #0]
 800f0ee:	f7ff bfd1 	b.w	800f094 <_raise_r>
 800f0f2:	bf00      	nop
 800f0f4:	20000014 	.word	0x20000014

0800f0f8 <_kill_r>:
 800f0f8:	b538      	push	{r3, r4, r5, lr}
 800f0fa:	4d07      	ldr	r5, [pc, #28]	; (800f118 <_kill_r+0x20>)
 800f0fc:	2300      	movs	r3, #0
 800f0fe:	4604      	mov	r4, r0
 800f100:	4608      	mov	r0, r1
 800f102:	4611      	mov	r1, r2
 800f104:	602b      	str	r3, [r5, #0]
 800f106:	f7fa f813 	bl	8009130 <_kill>
 800f10a:	1c43      	adds	r3, r0, #1
 800f10c:	d102      	bne.n	800f114 <_kill_r+0x1c>
 800f10e:	682b      	ldr	r3, [r5, #0]
 800f110:	b103      	cbz	r3, 800f114 <_kill_r+0x1c>
 800f112:	6023      	str	r3, [r4, #0]
 800f114:	bd38      	pop	{r3, r4, r5, pc}
 800f116:	bf00      	nop
 800f118:	20000c90 	.word	0x20000c90

0800f11c <_getpid_r>:
 800f11c:	f7fa b800 	b.w	8009120 <_getpid>

0800f120 <sprintf>:
 800f120:	b40e      	push	{r1, r2, r3}
 800f122:	b500      	push	{lr}
 800f124:	b09c      	sub	sp, #112	; 0x70
 800f126:	ab1d      	add	r3, sp, #116	; 0x74
 800f128:	9002      	str	r0, [sp, #8]
 800f12a:	9006      	str	r0, [sp, #24]
 800f12c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800f130:	4809      	ldr	r0, [pc, #36]	; (800f158 <sprintf+0x38>)
 800f132:	9107      	str	r1, [sp, #28]
 800f134:	9104      	str	r1, [sp, #16]
 800f136:	4909      	ldr	r1, [pc, #36]	; (800f15c <sprintf+0x3c>)
 800f138:	f853 2b04 	ldr.w	r2, [r3], #4
 800f13c:	9105      	str	r1, [sp, #20]
 800f13e:	6800      	ldr	r0, [r0, #0]
 800f140:	9301      	str	r3, [sp, #4]
 800f142:	a902      	add	r1, sp, #8
 800f144:	f000 f820 	bl	800f188 <_svfprintf_r>
 800f148:	9b02      	ldr	r3, [sp, #8]
 800f14a:	2200      	movs	r2, #0
 800f14c:	701a      	strb	r2, [r3, #0]
 800f14e:	b01c      	add	sp, #112	; 0x70
 800f150:	f85d eb04 	ldr.w	lr, [sp], #4
 800f154:	b003      	add	sp, #12
 800f156:	4770      	bx	lr
 800f158:	20000014 	.word	0x20000014
 800f15c:	ffff0208 	.word	0xffff0208

0800f160 <strncmp>:
 800f160:	b510      	push	{r4, lr}
 800f162:	b16a      	cbz	r2, 800f180 <strncmp+0x20>
 800f164:	3901      	subs	r1, #1
 800f166:	1884      	adds	r4, r0, r2
 800f168:	f810 3b01 	ldrb.w	r3, [r0], #1
 800f16c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f170:	4293      	cmp	r3, r2
 800f172:	d103      	bne.n	800f17c <strncmp+0x1c>
 800f174:	42a0      	cmp	r0, r4
 800f176:	d001      	beq.n	800f17c <strncmp+0x1c>
 800f178:	2b00      	cmp	r3, #0
 800f17a:	d1f5      	bne.n	800f168 <strncmp+0x8>
 800f17c:	1a98      	subs	r0, r3, r2
 800f17e:	bd10      	pop	{r4, pc}
 800f180:	4610      	mov	r0, r2
 800f182:	e7fc      	b.n	800f17e <strncmp+0x1e>
 800f184:	0000      	movs	r0, r0
	...

0800f188 <_svfprintf_r>:
 800f188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f18c:	ed2d 8b04 	vpush	{d8-d9}
 800f190:	b0cf      	sub	sp, #316	; 0x13c
 800f192:	4689      	mov	r9, r1
 800f194:	4693      	mov	fp, r2
 800f196:	461e      	mov	r6, r3
 800f198:	4682      	mov	sl, r0
 800f19a:	f002 fb6f 	bl	801187c <_localeconv_r>
 800f19e:	6803      	ldr	r3, [r0, #0]
 800f1a0:	9313      	str	r3, [sp, #76]	; 0x4c
 800f1a2:	4618      	mov	r0, r3
 800f1a4:	f7f7 fec6 	bl	8006f34 <strlen>
 800f1a8:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 800f1ac:	900e      	str	r0, [sp, #56]	; 0x38
 800f1ae:	0618      	lsls	r0, r3, #24
 800f1b0:	d51a      	bpl.n	800f1e8 <_svfprintf_r+0x60>
 800f1b2:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800f1b6:	b9bb      	cbnz	r3, 800f1e8 <_svfprintf_r+0x60>
 800f1b8:	2140      	movs	r1, #64	; 0x40
 800f1ba:	4650      	mov	r0, sl
 800f1bc:	f7ff faec 	bl	800e798 <_malloc_r>
 800f1c0:	f8c9 0000 	str.w	r0, [r9]
 800f1c4:	f8c9 0010 	str.w	r0, [r9, #16]
 800f1c8:	b958      	cbnz	r0, 800f1e2 <_svfprintf_r+0x5a>
 800f1ca:	230c      	movs	r3, #12
 800f1cc:	f8ca 3000 	str.w	r3, [sl]
 800f1d0:	f04f 33ff 	mov.w	r3, #4294967295
 800f1d4:	930f      	str	r3, [sp, #60]	; 0x3c
 800f1d6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800f1d8:	b04f      	add	sp, #316	; 0x13c
 800f1da:	ecbd 8b04 	vpop	{d8-d9}
 800f1de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f1e2:	2340      	movs	r3, #64	; 0x40
 800f1e4:	f8c9 3014 	str.w	r3, [r9, #20]
 800f1e8:	ed9f 7b93 	vldr	d7, [pc, #588]	; 800f438 <_svfprintf_r+0x2b0>
 800f1ec:	2500      	movs	r5, #0
 800f1ee:	e9cd 5523 	strd	r5, r5, [sp, #140]	; 0x8c
 800f1f2:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 800f1f6:	e9cd 5515 	strd	r5, r5, [sp, #84]	; 0x54
 800f1fa:	ac25      	add	r4, sp, #148	; 0x94
 800f1fc:	9422      	str	r4, [sp, #136]	; 0x88
 800f1fe:	9505      	str	r5, [sp, #20]
 800f200:	950a      	str	r5, [sp, #40]	; 0x28
 800f202:	9512      	str	r5, [sp, #72]	; 0x48
 800f204:	9514      	str	r5, [sp, #80]	; 0x50
 800f206:	950f      	str	r5, [sp, #60]	; 0x3c
 800f208:	465b      	mov	r3, fp
 800f20a:	461d      	mov	r5, r3
 800f20c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f210:	b10a      	cbz	r2, 800f216 <_svfprintf_r+0x8e>
 800f212:	2a25      	cmp	r2, #37	; 0x25
 800f214:	d1f9      	bne.n	800f20a <_svfprintf_r+0x82>
 800f216:	ebb5 070b 	subs.w	r7, r5, fp
 800f21a:	d00d      	beq.n	800f238 <_svfprintf_r+0xb0>
 800f21c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800f21e:	443b      	add	r3, r7
 800f220:	9324      	str	r3, [sp, #144]	; 0x90
 800f222:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f224:	3301      	adds	r3, #1
 800f226:	2b07      	cmp	r3, #7
 800f228:	e9c4 b700 	strd	fp, r7, [r4]
 800f22c:	9323      	str	r3, [sp, #140]	; 0x8c
 800f22e:	dc79      	bgt.n	800f324 <_svfprintf_r+0x19c>
 800f230:	3408      	adds	r4, #8
 800f232:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f234:	443b      	add	r3, r7
 800f236:	930f      	str	r3, [sp, #60]	; 0x3c
 800f238:	782b      	ldrb	r3, [r5, #0]
 800f23a:	2b00      	cmp	r3, #0
 800f23c:	f001 8140 	beq.w	80104c0 <_svfprintf_r+0x1338>
 800f240:	2300      	movs	r3, #0
 800f242:	f04f 32ff 	mov.w	r2, #4294967295
 800f246:	3501      	adds	r5, #1
 800f248:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800f24c:	9204      	str	r2, [sp, #16]
 800f24e:	9310      	str	r3, [sp, #64]	; 0x40
 800f250:	4698      	mov	r8, r3
 800f252:	270a      	movs	r7, #10
 800f254:	212b      	movs	r1, #43	; 0x2b
 800f256:	462a      	mov	r2, r5
 800f258:	f812 3b01 	ldrb.w	r3, [r2], #1
 800f25c:	9307      	str	r3, [sp, #28]
 800f25e:	920b      	str	r2, [sp, #44]	; 0x2c
 800f260:	9b07      	ldr	r3, [sp, #28]
 800f262:	3b20      	subs	r3, #32
 800f264:	2b5a      	cmp	r3, #90	; 0x5a
 800f266:	f200 85b4 	bhi.w	800fdd2 <_svfprintf_r+0xc4a>
 800f26a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800f26e:	007e      	.short	0x007e
 800f270:	05b205b2 	.word	0x05b205b2
 800f274:	05b20086 	.word	0x05b20086
 800f278:	05b205b2 	.word	0x05b205b2
 800f27c:	05b20065 	.word	0x05b20065
 800f280:	008905b2 	.word	0x008905b2
 800f284:	05b20093 	.word	0x05b20093
 800f288:	00960090 	.word	0x00960090
 800f28c:	00b305b2 	.word	0x00b305b2
 800f290:	00b600b6 	.word	0x00b600b6
 800f294:	00b600b6 	.word	0x00b600b6
 800f298:	00b600b6 	.word	0x00b600b6
 800f29c:	00b600b6 	.word	0x00b600b6
 800f2a0:	05b200b6 	.word	0x05b200b6
 800f2a4:	05b205b2 	.word	0x05b205b2
 800f2a8:	05b205b2 	.word	0x05b205b2
 800f2ac:	05b205b2 	.word	0x05b205b2
 800f2b0:	05b20127 	.word	0x05b20127
 800f2b4:	00fc00e9 	.word	0x00fc00e9
 800f2b8:	01270127 	.word	0x01270127
 800f2bc:	05b20127 	.word	0x05b20127
 800f2c0:	05b205b2 	.word	0x05b205b2
 800f2c4:	00c605b2 	.word	0x00c605b2
 800f2c8:	05b205b2 	.word	0x05b205b2
 800f2cc:	05b20492 	.word	0x05b20492
 800f2d0:	05b205b2 	.word	0x05b205b2
 800f2d4:	05b204d9 	.word	0x05b204d9
 800f2d8:	05b204fa 	.word	0x05b204fa
 800f2dc:	051905b2 	.word	0x051905b2
 800f2e0:	05b205b2 	.word	0x05b205b2
 800f2e4:	05b205b2 	.word	0x05b205b2
 800f2e8:	05b205b2 	.word	0x05b205b2
 800f2ec:	05b205b2 	.word	0x05b205b2
 800f2f0:	05b20127 	.word	0x05b20127
 800f2f4:	00fe00e9 	.word	0x00fe00e9
 800f2f8:	01270127 	.word	0x01270127
 800f2fc:	00c90127 	.word	0x00c90127
 800f300:	00dd00fe 	.word	0x00dd00fe
 800f304:	00d605b2 	.word	0x00d605b2
 800f308:	046f05b2 	.word	0x046f05b2
 800f30c:	04c80494 	.word	0x04c80494
 800f310:	05b200dd 	.word	0x05b200dd
 800f314:	007c04d9 	.word	0x007c04d9
 800f318:	05b204fc 	.word	0x05b204fc
 800f31c:	053605b2 	.word	0x053605b2
 800f320:	007c05b2 	.word	0x007c05b2
 800f324:	aa22      	add	r2, sp, #136	; 0x88
 800f326:	4649      	mov	r1, r9
 800f328:	4650      	mov	r0, sl
 800f32a:	f002 fed5 	bl	80120d8 <__ssprint_r>
 800f32e:	2800      	cmp	r0, #0
 800f330:	f040 8132 	bne.w	800f598 <_svfprintf_r+0x410>
 800f334:	ac25      	add	r4, sp, #148	; 0x94
 800f336:	e77c      	b.n	800f232 <_svfprintf_r+0xaa>
 800f338:	4650      	mov	r0, sl
 800f33a:	f002 fa9f 	bl	801187c <_localeconv_r>
 800f33e:	6843      	ldr	r3, [r0, #4]
 800f340:	9314      	str	r3, [sp, #80]	; 0x50
 800f342:	4618      	mov	r0, r3
 800f344:	f7f7 fdf6 	bl	8006f34 <strlen>
 800f348:	9012      	str	r0, [sp, #72]	; 0x48
 800f34a:	4650      	mov	r0, sl
 800f34c:	f002 fa96 	bl	801187c <_localeconv_r>
 800f350:	6883      	ldr	r3, [r0, #8]
 800f352:	930a      	str	r3, [sp, #40]	; 0x28
 800f354:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f356:	212b      	movs	r1, #43	; 0x2b
 800f358:	b12b      	cbz	r3, 800f366 <_svfprintf_r+0x1de>
 800f35a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f35c:	b11b      	cbz	r3, 800f366 <_svfprintf_r+0x1de>
 800f35e:	781b      	ldrb	r3, [r3, #0]
 800f360:	b10b      	cbz	r3, 800f366 <_svfprintf_r+0x1de>
 800f362:	f448 6880 	orr.w	r8, r8, #1024	; 0x400
 800f366:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800f368:	e775      	b.n	800f256 <_svfprintf_r+0xce>
 800f36a:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
 800f36e:	2b00      	cmp	r3, #0
 800f370:	d1f9      	bne.n	800f366 <_svfprintf_r+0x1de>
 800f372:	2320      	movs	r3, #32
 800f374:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800f378:	e7f5      	b.n	800f366 <_svfprintf_r+0x1de>
 800f37a:	f048 0801 	orr.w	r8, r8, #1
 800f37e:	e7f2      	b.n	800f366 <_svfprintf_r+0x1de>
 800f380:	f856 3b04 	ldr.w	r3, [r6], #4
 800f384:	9310      	str	r3, [sp, #64]	; 0x40
 800f386:	2b00      	cmp	r3, #0
 800f388:	daed      	bge.n	800f366 <_svfprintf_r+0x1de>
 800f38a:	425b      	negs	r3, r3
 800f38c:	9310      	str	r3, [sp, #64]	; 0x40
 800f38e:	f048 0804 	orr.w	r8, r8, #4
 800f392:	e7e8      	b.n	800f366 <_svfprintf_r+0x1de>
 800f394:	f88d 106b 	strb.w	r1, [sp, #107]	; 0x6b
 800f398:	e7e5      	b.n	800f366 <_svfprintf_r+0x1de>
 800f39a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f39c:	f812 3b01 	ldrb.w	r3, [r2], #1
 800f3a0:	9307      	str	r3, [sp, #28]
 800f3a2:	2b2a      	cmp	r3, #42	; 0x2a
 800f3a4:	d113      	bne.n	800f3ce <_svfprintf_r+0x246>
 800f3a6:	f856 0b04 	ldr.w	r0, [r6], #4
 800f3aa:	920b      	str	r2, [sp, #44]	; 0x2c
 800f3ac:	ea40 73e0 	orr.w	r3, r0, r0, asr #31
 800f3b0:	9304      	str	r3, [sp, #16]
 800f3b2:	e7d8      	b.n	800f366 <_svfprintf_r+0x1de>
 800f3b4:	9804      	ldr	r0, [sp, #16]
 800f3b6:	fb07 3300 	mla	r3, r7, r0, r3
 800f3ba:	9304      	str	r3, [sp, #16]
 800f3bc:	f812 3b01 	ldrb.w	r3, [r2], #1
 800f3c0:	9307      	str	r3, [sp, #28]
 800f3c2:	9b07      	ldr	r3, [sp, #28]
 800f3c4:	3b30      	subs	r3, #48	; 0x30
 800f3c6:	2b09      	cmp	r3, #9
 800f3c8:	d9f4      	bls.n	800f3b4 <_svfprintf_r+0x22c>
 800f3ca:	920b      	str	r2, [sp, #44]	; 0x2c
 800f3cc:	e748      	b.n	800f260 <_svfprintf_r+0xd8>
 800f3ce:	2300      	movs	r3, #0
 800f3d0:	9304      	str	r3, [sp, #16]
 800f3d2:	e7f6      	b.n	800f3c2 <_svfprintf_r+0x23a>
 800f3d4:	f048 0880 	orr.w	r8, r8, #128	; 0x80
 800f3d8:	e7c5      	b.n	800f366 <_svfprintf_r+0x1de>
 800f3da:	2300      	movs	r3, #0
 800f3dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f3de:	9310      	str	r3, [sp, #64]	; 0x40
 800f3e0:	9b07      	ldr	r3, [sp, #28]
 800f3e2:	9810      	ldr	r0, [sp, #64]	; 0x40
 800f3e4:	3b30      	subs	r3, #48	; 0x30
 800f3e6:	fb07 3300 	mla	r3, r7, r0, r3
 800f3ea:	9310      	str	r3, [sp, #64]	; 0x40
 800f3ec:	f812 3b01 	ldrb.w	r3, [r2], #1
 800f3f0:	9307      	str	r3, [sp, #28]
 800f3f2:	3b30      	subs	r3, #48	; 0x30
 800f3f4:	2b09      	cmp	r3, #9
 800f3f6:	d9f3      	bls.n	800f3e0 <_svfprintf_r+0x258>
 800f3f8:	e7e7      	b.n	800f3ca <_svfprintf_r+0x242>
 800f3fa:	f048 0808 	orr.w	r8, r8, #8
 800f3fe:	e7b2      	b.n	800f366 <_svfprintf_r+0x1de>
 800f400:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f402:	781b      	ldrb	r3, [r3, #0]
 800f404:	2b68      	cmp	r3, #104	; 0x68
 800f406:	bf01      	itttt	eq
 800f408:	9b0b      	ldreq	r3, [sp, #44]	; 0x2c
 800f40a:	3301      	addeq	r3, #1
 800f40c:	930b      	streq	r3, [sp, #44]	; 0x2c
 800f40e:	f448 7800 	orreq.w	r8, r8, #512	; 0x200
 800f412:	bf18      	it	ne
 800f414:	f048 0840 	orrne.w	r8, r8, #64	; 0x40
 800f418:	e7a5      	b.n	800f366 <_svfprintf_r+0x1de>
 800f41a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f41c:	781b      	ldrb	r3, [r3, #0]
 800f41e:	2b6c      	cmp	r3, #108	; 0x6c
 800f420:	d105      	bne.n	800f42e <_svfprintf_r+0x2a6>
 800f422:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f424:	3301      	adds	r3, #1
 800f426:	930b      	str	r3, [sp, #44]	; 0x2c
 800f428:	f048 0820 	orr.w	r8, r8, #32
 800f42c:	e79b      	b.n	800f366 <_svfprintf_r+0x1de>
 800f42e:	f048 0810 	orr.w	r8, r8, #16
 800f432:	e798      	b.n	800f366 <_svfprintf_r+0x1de>
 800f434:	f3af 8000 	nop.w
	...
 800f440:	4632      	mov	r2, r6
 800f442:	2000      	movs	r0, #0
 800f444:	f852 3b04 	ldr.w	r3, [r2], #4
 800f448:	9206      	str	r2, [sp, #24]
 800f44a:	f88d 30d4 	strb.w	r3, [sp, #212]	; 0xd4
 800f44e:	f88d 006b 	strb.w	r0, [sp, #107]	; 0x6b
 800f452:	2301      	movs	r3, #1
 800f454:	e9cd 0008 	strd	r0, r0, [sp, #32]
 800f458:	9003      	str	r0, [sp, #12]
 800f45a:	9304      	str	r3, [sp, #16]
 800f45c:	4606      	mov	r6, r0
 800f45e:	4605      	mov	r5, r0
 800f460:	f10d 0bd4 	add.w	fp, sp, #212	; 0xd4
 800f464:	e1b8      	b.n	800f7d8 <_svfprintf_r+0x650>
 800f466:	f048 0810 	orr.w	r8, r8, #16
 800f46a:	f018 0f20 	tst.w	r8, #32
 800f46e:	d012      	beq.n	800f496 <_svfprintf_r+0x30e>
 800f470:	3607      	adds	r6, #7
 800f472:	f026 0307 	bic.w	r3, r6, #7
 800f476:	e8f3 6702 	ldrd	r6, r7, [r3], #8
 800f47a:	9306      	str	r3, [sp, #24]
 800f47c:	2e00      	cmp	r6, #0
 800f47e:	f177 0300 	sbcs.w	r3, r7, #0
 800f482:	da06      	bge.n	800f492 <_svfprintf_r+0x30a>
 800f484:	4276      	negs	r6, r6
 800f486:	f04f 032d 	mov.w	r3, #45	; 0x2d
 800f48a:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 800f48e:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800f492:	2301      	movs	r3, #1
 800f494:	e38e      	b.n	800fbb4 <_svfprintf_r+0xa2c>
 800f496:	1d33      	adds	r3, r6, #4
 800f498:	f018 0f10 	tst.w	r8, #16
 800f49c:	9306      	str	r3, [sp, #24]
 800f49e:	d002      	beq.n	800f4a6 <_svfprintf_r+0x31e>
 800f4a0:	6836      	ldr	r6, [r6, #0]
 800f4a2:	17f7      	asrs	r7, r6, #31
 800f4a4:	e7ea      	b.n	800f47c <_svfprintf_r+0x2f4>
 800f4a6:	f018 0f40 	tst.w	r8, #64	; 0x40
 800f4aa:	6836      	ldr	r6, [r6, #0]
 800f4ac:	d001      	beq.n	800f4b2 <_svfprintf_r+0x32a>
 800f4ae:	b236      	sxth	r6, r6
 800f4b0:	e7f7      	b.n	800f4a2 <_svfprintf_r+0x31a>
 800f4b2:	f418 7f00 	tst.w	r8, #512	; 0x200
 800f4b6:	bf18      	it	ne
 800f4b8:	b276      	sxtbne	r6, r6
 800f4ba:	e7f2      	b.n	800f4a2 <_svfprintf_r+0x31a>
 800f4bc:	3607      	adds	r6, #7
 800f4be:	f026 0307 	bic.w	r3, r6, #7
 800f4c2:	ecb3 7b02 	vldmia	r3!, {d7}
 800f4c6:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 800f4ca:	9306      	str	r3, [sp, #24]
 800f4cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f4ce:	ee09 3a10 	vmov	s18, r3
 800f4d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f4d4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800f4d8:	ee09 3a90 	vmov	s19, r3
 800f4dc:	f04f 32ff 	mov.w	r2, #4294967295
 800f4e0:	4b3a      	ldr	r3, [pc, #232]	; (800f5cc <_svfprintf_r+0x444>)
 800f4e2:	ec51 0b19 	vmov	r0, r1, d9
 800f4e6:	f7f8 f983 	bl	80077f0 <__aeabi_dcmpun>
 800f4ea:	bb10      	cbnz	r0, 800f532 <_svfprintf_r+0x3aa>
 800f4ec:	4b37      	ldr	r3, [pc, #220]	; (800f5cc <_svfprintf_r+0x444>)
 800f4ee:	ec51 0b19 	vmov	r0, r1, d9
 800f4f2:	f04f 32ff 	mov.w	r2, #4294967295
 800f4f6:	f7f8 f95d 	bl	80077b4 <__aeabi_dcmple>
 800f4fa:	b9d0      	cbnz	r0, 800f532 <_svfprintf_r+0x3aa>
 800f4fc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800f500:	2200      	movs	r2, #0
 800f502:	2300      	movs	r3, #0
 800f504:	f7f8 f94c 	bl	80077a0 <__aeabi_dcmplt>
 800f508:	b110      	cbz	r0, 800f510 <_svfprintf_r+0x388>
 800f50a:	232d      	movs	r3, #45	; 0x2d
 800f50c:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800f510:	4a2f      	ldr	r2, [pc, #188]	; (800f5d0 <_svfprintf_r+0x448>)
 800f512:	4830      	ldr	r0, [pc, #192]	; (800f5d4 <_svfprintf_r+0x44c>)
 800f514:	9b07      	ldr	r3, [sp, #28]
 800f516:	2100      	movs	r1, #0
 800f518:	2b47      	cmp	r3, #71	; 0x47
 800f51a:	bfd4      	ite	le
 800f51c:	4693      	movle	fp, r2
 800f51e:	4683      	movgt	fp, r0
 800f520:	2303      	movs	r3, #3
 800f522:	e9cd 1303 	strd	r1, r3, [sp, #12]
 800f526:	f028 0880 	bic.w	r8, r8, #128	; 0x80
 800f52a:	2600      	movs	r6, #0
 800f52c:	4633      	mov	r3, r6
 800f52e:	f001 b802 	b.w	8010536 <_svfprintf_r+0x13ae>
 800f532:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800f536:	4610      	mov	r0, r2
 800f538:	4619      	mov	r1, r3
 800f53a:	f7f8 f959 	bl	80077f0 <__aeabi_dcmpun>
 800f53e:	b140      	cbz	r0, 800f552 <_svfprintf_r+0x3ca>
 800f540:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f542:	4a25      	ldr	r2, [pc, #148]	; (800f5d8 <_svfprintf_r+0x450>)
 800f544:	4825      	ldr	r0, [pc, #148]	; (800f5dc <_svfprintf_r+0x454>)
 800f546:	2b00      	cmp	r3, #0
 800f548:	bfbc      	itt	lt
 800f54a:	232d      	movlt	r3, #45	; 0x2d
 800f54c:	f88d 306b 	strblt.w	r3, [sp, #107]	; 0x6b
 800f550:	e7e0      	b.n	800f514 <_svfprintf_r+0x38c>
 800f552:	9b07      	ldr	r3, [sp, #28]
 800f554:	f023 0320 	bic.w	r3, r3, #32
 800f558:	2b41      	cmp	r3, #65	; 0x41
 800f55a:	9308      	str	r3, [sp, #32]
 800f55c:	d125      	bne.n	800f5aa <_svfprintf_r+0x422>
 800f55e:	2330      	movs	r3, #48	; 0x30
 800f560:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
 800f564:	9b07      	ldr	r3, [sp, #28]
 800f566:	2b61      	cmp	r3, #97	; 0x61
 800f568:	bf0c      	ite	eq
 800f56a:	2378      	moveq	r3, #120	; 0x78
 800f56c:	2358      	movne	r3, #88	; 0x58
 800f56e:	f88d 306d 	strb.w	r3, [sp, #109]	; 0x6d
 800f572:	9b04      	ldr	r3, [sp, #16]
 800f574:	2b63      	cmp	r3, #99	; 0x63
 800f576:	f048 0802 	orr.w	r8, r8, #2
 800f57a:	dd31      	ble.n	800f5e0 <_svfprintf_r+0x458>
 800f57c:	1c59      	adds	r1, r3, #1
 800f57e:	4650      	mov	r0, sl
 800f580:	f7ff f90a 	bl	800e798 <_malloc_r>
 800f584:	4683      	mov	fp, r0
 800f586:	2800      	cmp	r0, #0
 800f588:	f040 81fe 	bne.w	800f988 <_svfprintf_r+0x800>
 800f58c:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 800f590:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f594:	f8a9 300c 	strh.w	r3, [r9, #12]
 800f598:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 800f59c:	f013 0f40 	tst.w	r3, #64	; 0x40
 800f5a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f5a2:	bf18      	it	ne
 800f5a4:	f04f 33ff 	movne.w	r3, #4294967295
 800f5a8:	e614      	b.n	800f1d4 <_svfprintf_r+0x4c>
 800f5aa:	9b04      	ldr	r3, [sp, #16]
 800f5ac:	3301      	adds	r3, #1
 800f5ae:	f000 81ed 	beq.w	800f98c <_svfprintf_r+0x804>
 800f5b2:	9b08      	ldr	r3, [sp, #32]
 800f5b4:	2b47      	cmp	r3, #71	; 0x47
 800f5b6:	f040 81ec 	bne.w	800f992 <_svfprintf_r+0x80a>
 800f5ba:	9b04      	ldr	r3, [sp, #16]
 800f5bc:	2b00      	cmp	r3, #0
 800f5be:	f040 81e8 	bne.w	800f992 <_svfprintf_r+0x80a>
 800f5c2:	9303      	str	r3, [sp, #12]
 800f5c4:	2301      	movs	r3, #1
 800f5c6:	9304      	str	r3, [sp, #16]
 800f5c8:	e00d      	b.n	800f5e6 <_svfprintf_r+0x45e>
 800f5ca:	bf00      	nop
 800f5cc:	7fefffff 	.word	0x7fefffff
 800f5d0:	080142ec 	.word	0x080142ec
 800f5d4:	080142f0 	.word	0x080142f0
 800f5d8:	080142f4 	.word	0x080142f4
 800f5dc:	080142f8 	.word	0x080142f8
 800f5e0:	9003      	str	r0, [sp, #12]
 800f5e2:	f10d 0bd4 	add.w	fp, sp, #212	; 0xd4
 800f5e6:	f448 7380 	orr.w	r3, r8, #256	; 0x100
 800f5ea:	9311      	str	r3, [sp, #68]	; 0x44
 800f5ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5ee:	2b00      	cmp	r3, #0
 800f5f0:	f280 81d1 	bge.w	800f996 <_svfprintf_r+0x80e>
 800f5f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f5f6:	ee08 3a10 	vmov	s16, r3
 800f5fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5fc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800f600:	ee08 3a90 	vmov	s17, r3
 800f604:	232d      	movs	r3, #45	; 0x2d
 800f606:	9318      	str	r3, [sp, #96]	; 0x60
 800f608:	9b08      	ldr	r3, [sp, #32]
 800f60a:	2b41      	cmp	r3, #65	; 0x41
 800f60c:	f040 81e1 	bne.w	800f9d2 <_svfprintf_r+0x84a>
 800f610:	eeb0 0a48 	vmov.f32	s0, s16
 800f614:	eef0 0a68 	vmov.f32	s1, s17
 800f618:	a81c      	add	r0, sp, #112	; 0x70
 800f61a:	f002 fccf 	bl	8011fbc <frexp>
 800f61e:	2200      	movs	r2, #0
 800f620:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800f624:	ec51 0b10 	vmov	r0, r1, d0
 800f628:	f7f7 fe48 	bl	80072bc <__aeabi_dmul>
 800f62c:	2200      	movs	r2, #0
 800f62e:	2300      	movs	r3, #0
 800f630:	4606      	mov	r6, r0
 800f632:	460f      	mov	r7, r1
 800f634:	f7f8 f8aa 	bl	800778c <__aeabi_dcmpeq>
 800f638:	b108      	cbz	r0, 800f63e <_svfprintf_r+0x4b6>
 800f63a:	2301      	movs	r3, #1
 800f63c:	931c      	str	r3, [sp, #112]	; 0x70
 800f63e:	4bb4      	ldr	r3, [pc, #720]	; (800f910 <_svfprintf_r+0x788>)
 800f640:	4ab4      	ldr	r2, [pc, #720]	; (800f914 <_svfprintf_r+0x78c>)
 800f642:	9907      	ldr	r1, [sp, #28]
 800f644:	2961      	cmp	r1, #97	; 0x61
 800f646:	bf18      	it	ne
 800f648:	461a      	movne	r2, r3
 800f64a:	9b04      	ldr	r3, [sp, #16]
 800f64c:	9217      	str	r2, [sp, #92]	; 0x5c
 800f64e:	3b01      	subs	r3, #1
 800f650:	9305      	str	r3, [sp, #20]
 800f652:	465d      	mov	r5, fp
 800f654:	4bb0      	ldr	r3, [pc, #704]	; (800f918 <_svfprintf_r+0x790>)
 800f656:	2200      	movs	r2, #0
 800f658:	4630      	mov	r0, r6
 800f65a:	4639      	mov	r1, r7
 800f65c:	f7f7 fe2e 	bl	80072bc <__aeabi_dmul>
 800f660:	460f      	mov	r7, r1
 800f662:	4606      	mov	r6, r0
 800f664:	f7f8 f8da 	bl	800781c <__aeabi_d2iz>
 800f668:	9019      	str	r0, [sp, #100]	; 0x64
 800f66a:	f7f7 fdbd 	bl	80071e8 <__aeabi_i2d>
 800f66e:	4602      	mov	r2, r0
 800f670:	460b      	mov	r3, r1
 800f672:	4630      	mov	r0, r6
 800f674:	4639      	mov	r1, r7
 800f676:	f7f7 fc69 	bl	8006f4c <__aeabi_dsub>
 800f67a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800f67c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800f67e:	5c9b      	ldrb	r3, [r3, r2]
 800f680:	f805 3b01 	strb.w	r3, [r5], #1
 800f684:	9b05      	ldr	r3, [sp, #20]
 800f686:	9309      	str	r3, [sp, #36]	; 0x24
 800f688:	1c5a      	adds	r2, r3, #1
 800f68a:	4606      	mov	r6, r0
 800f68c:	460f      	mov	r7, r1
 800f68e:	d007      	beq.n	800f6a0 <_svfprintf_r+0x518>
 800f690:	3b01      	subs	r3, #1
 800f692:	9305      	str	r3, [sp, #20]
 800f694:	2200      	movs	r2, #0
 800f696:	2300      	movs	r3, #0
 800f698:	f7f8 f878 	bl	800778c <__aeabi_dcmpeq>
 800f69c:	2800      	cmp	r0, #0
 800f69e:	d0d9      	beq.n	800f654 <_svfprintf_r+0x4cc>
 800f6a0:	4b9e      	ldr	r3, [pc, #632]	; (800f91c <_svfprintf_r+0x794>)
 800f6a2:	2200      	movs	r2, #0
 800f6a4:	4630      	mov	r0, r6
 800f6a6:	4639      	mov	r1, r7
 800f6a8:	f7f8 f898 	bl	80077dc <__aeabi_dcmpgt>
 800f6ac:	b960      	cbnz	r0, 800f6c8 <_svfprintf_r+0x540>
 800f6ae:	4b9b      	ldr	r3, [pc, #620]	; (800f91c <_svfprintf_r+0x794>)
 800f6b0:	2200      	movs	r2, #0
 800f6b2:	4630      	mov	r0, r6
 800f6b4:	4639      	mov	r1, r7
 800f6b6:	f7f8 f869 	bl	800778c <__aeabi_dcmpeq>
 800f6ba:	2800      	cmp	r0, #0
 800f6bc:	f000 8184 	beq.w	800f9c8 <_svfprintf_r+0x840>
 800f6c0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f6c2:	07df      	lsls	r7, r3, #31
 800f6c4:	f140 8180 	bpl.w	800f9c8 <_svfprintf_r+0x840>
 800f6c8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800f6ca:	9520      	str	r5, [sp, #128]	; 0x80
 800f6cc:	7bd9      	ldrb	r1, [r3, #15]
 800f6ce:	2030      	movs	r0, #48	; 0x30
 800f6d0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f6d2:	1e53      	subs	r3, r2, #1
 800f6d4:	9320      	str	r3, [sp, #128]	; 0x80
 800f6d6:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 800f6da:	428b      	cmp	r3, r1
 800f6dc:	f000 8163 	beq.w	800f9a6 <_svfprintf_r+0x81e>
 800f6e0:	2b39      	cmp	r3, #57	; 0x39
 800f6e2:	bf0b      	itete	eq
 800f6e4:	9b17      	ldreq	r3, [sp, #92]	; 0x5c
 800f6e6:	3301      	addne	r3, #1
 800f6e8:	7a9b      	ldrbeq	r3, [r3, #10]
 800f6ea:	b2db      	uxtbne	r3, r3
 800f6ec:	f802 3c01 	strb.w	r3, [r2, #-1]
 800f6f0:	eba5 030b 	sub.w	r3, r5, fp
 800f6f4:	9305      	str	r3, [sp, #20]
 800f6f6:	9b08      	ldr	r3, [sp, #32]
 800f6f8:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 800f6fa:	2b47      	cmp	r3, #71	; 0x47
 800f6fc:	f040 81b1 	bne.w	800fa62 <_svfprintf_r+0x8da>
 800f700:	1cee      	adds	r6, r5, #3
 800f702:	db03      	blt.n	800f70c <_svfprintf_r+0x584>
 800f704:	9b04      	ldr	r3, [sp, #16]
 800f706:	42ab      	cmp	r3, r5
 800f708:	f280 81d6 	bge.w	800fab8 <_svfprintf_r+0x930>
 800f70c:	9b07      	ldr	r3, [sp, #28]
 800f70e:	3b02      	subs	r3, #2
 800f710:	9307      	str	r3, [sp, #28]
 800f712:	9907      	ldr	r1, [sp, #28]
 800f714:	f89d 201c 	ldrb.w	r2, [sp, #28]
 800f718:	f021 0120 	bic.w	r1, r1, #32
 800f71c:	2941      	cmp	r1, #65	; 0x41
 800f71e:	bf08      	it	eq
 800f720:	320f      	addeq	r2, #15
 800f722:	f105 33ff 	add.w	r3, r5, #4294967295
 800f726:	bf06      	itte	eq
 800f728:	b2d2      	uxtbeq	r2, r2
 800f72a:	2101      	moveq	r1, #1
 800f72c:	2100      	movne	r1, #0
 800f72e:	2b00      	cmp	r3, #0
 800f730:	931c      	str	r3, [sp, #112]	; 0x70
 800f732:	bfb8      	it	lt
 800f734:	f1c5 0301 	rsblt	r3, r5, #1
 800f738:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
 800f73c:	bfb4      	ite	lt
 800f73e:	222d      	movlt	r2, #45	; 0x2d
 800f740:	222b      	movge	r2, #43	; 0x2b
 800f742:	2b09      	cmp	r3, #9
 800f744:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
 800f748:	f340 81a4 	ble.w	800fa94 <_svfprintf_r+0x90c>
 800f74c:	f10d 0287 	add.w	r2, sp, #135	; 0x87
 800f750:	260a      	movs	r6, #10
 800f752:	4611      	mov	r1, r2
 800f754:	fb93 f5f6 	sdiv	r5, r3, r6
 800f758:	fb06 3015 	mls	r0, r6, r5, r3
 800f75c:	3030      	adds	r0, #48	; 0x30
 800f75e:	f801 0c01 	strb.w	r0, [r1, #-1]
 800f762:	4618      	mov	r0, r3
 800f764:	2863      	cmp	r0, #99	; 0x63
 800f766:	f102 32ff 	add.w	r2, r2, #4294967295
 800f76a:	462b      	mov	r3, r5
 800f76c:	dcf1      	bgt.n	800f752 <_svfprintf_r+0x5ca>
 800f76e:	3330      	adds	r3, #48	; 0x30
 800f770:	1e88      	subs	r0, r1, #2
 800f772:	f802 3c01 	strb.w	r3, [r2, #-1]
 800f776:	f10d 0587 	add.w	r5, sp, #135	; 0x87
 800f77a:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
 800f77e:	4603      	mov	r3, r0
 800f780:	42ab      	cmp	r3, r5
 800f782:	f0c0 8182 	bcc.w	800fa8a <_svfprintf_r+0x902>
 800f786:	f10d 0289 	add.w	r2, sp, #137	; 0x89
 800f78a:	1a52      	subs	r2, r2, r1
 800f78c:	42a8      	cmp	r0, r5
 800f78e:	bf88      	it	hi
 800f790:	2200      	movhi	r2, #0
 800f792:	f10d 037a 	add.w	r3, sp, #122	; 0x7a
 800f796:	441a      	add	r2, r3
 800f798:	ab1e      	add	r3, sp, #120	; 0x78
 800f79a:	1ad3      	subs	r3, r2, r3
 800f79c:	9a05      	ldr	r2, [sp, #20]
 800f79e:	9315      	str	r3, [sp, #84]	; 0x54
 800f7a0:	2a01      	cmp	r2, #1
 800f7a2:	4413      	add	r3, r2
 800f7a4:	9304      	str	r3, [sp, #16]
 800f7a6:	dc02      	bgt.n	800f7ae <_svfprintf_r+0x626>
 800f7a8:	f018 0f01 	tst.w	r8, #1
 800f7ac:	d003      	beq.n	800f7b6 <_svfprintf_r+0x62e>
 800f7ae:	9b04      	ldr	r3, [sp, #16]
 800f7b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800f7b2:	4413      	add	r3, r2
 800f7b4:	9304      	str	r3, [sp, #16]
 800f7b6:	f428 6380 	bic.w	r3, r8, #1024	; 0x400
 800f7ba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800f7be:	9311      	str	r3, [sp, #68]	; 0x44
 800f7c0:	2300      	movs	r3, #0
 800f7c2:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800f7c6:	461d      	mov	r5, r3
 800f7c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800f7ca:	b113      	cbz	r3, 800f7d2 <_svfprintf_r+0x64a>
 800f7cc:	232d      	movs	r3, #45	; 0x2d
 800f7ce:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800f7d2:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 800f7d6:	2600      	movs	r6, #0
 800f7d8:	9b04      	ldr	r3, [sp, #16]
 800f7da:	42b3      	cmp	r3, r6
 800f7dc:	bfb8      	it	lt
 800f7de:	4633      	movlt	r3, r6
 800f7e0:	9311      	str	r3, [sp, #68]	; 0x44
 800f7e2:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
 800f7e6:	b113      	cbz	r3, 800f7ee <_svfprintf_r+0x666>
 800f7e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f7ea:	3301      	adds	r3, #1
 800f7ec:	9311      	str	r3, [sp, #68]	; 0x44
 800f7ee:	f018 0302 	ands.w	r3, r8, #2
 800f7f2:	9317      	str	r3, [sp, #92]	; 0x5c
 800f7f4:	bf1e      	ittt	ne
 800f7f6:	9b11      	ldrne	r3, [sp, #68]	; 0x44
 800f7f8:	3302      	addne	r3, #2
 800f7fa:	9311      	strne	r3, [sp, #68]	; 0x44
 800f7fc:	f018 0384 	ands.w	r3, r8, #132	; 0x84
 800f800:	9318      	str	r3, [sp, #96]	; 0x60
 800f802:	d11f      	bne.n	800f844 <_svfprintf_r+0x6bc>
 800f804:	e9dd 3210 	ldrd	r3, r2, [sp, #64]	; 0x40
 800f808:	1a9f      	subs	r7, r3, r2
 800f80a:	2f00      	cmp	r7, #0
 800f80c:	dd1a      	ble.n	800f844 <_svfprintf_r+0x6bc>
 800f80e:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800f812:	4843      	ldr	r0, [pc, #268]	; (800f920 <_svfprintf_r+0x798>)
 800f814:	6020      	str	r0, [r4, #0]
 800f816:	2f10      	cmp	r7, #16
 800f818:	f103 0301 	add.w	r3, r3, #1
 800f81c:	f104 0108 	add.w	r1, r4, #8
 800f820:	f300 82e6 	bgt.w	800fdf0 <_svfprintf_r+0xc68>
 800f824:	6067      	str	r7, [r4, #4]
 800f826:	2b07      	cmp	r3, #7
 800f828:	4417      	add	r7, r2
 800f82a:	e9cd 3723 	strd	r3, r7, [sp, #140]	; 0x8c
 800f82e:	f340 82f2 	ble.w	800fe16 <_svfprintf_r+0xc8e>
 800f832:	aa22      	add	r2, sp, #136	; 0x88
 800f834:	4649      	mov	r1, r9
 800f836:	4650      	mov	r0, sl
 800f838:	f002 fc4e 	bl	80120d8 <__ssprint_r>
 800f83c:	2800      	cmp	r0, #0
 800f83e:	f040 861d 	bne.w	801047c <_svfprintf_r+0x12f4>
 800f842:	ac25      	add	r4, sp, #148	; 0x94
 800f844:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
 800f848:	b173      	cbz	r3, 800f868 <_svfprintf_r+0x6e0>
 800f84a:	f10d 036b 	add.w	r3, sp, #107	; 0x6b
 800f84e:	6023      	str	r3, [r4, #0]
 800f850:	2301      	movs	r3, #1
 800f852:	6063      	str	r3, [r4, #4]
 800f854:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800f856:	3301      	adds	r3, #1
 800f858:	9324      	str	r3, [sp, #144]	; 0x90
 800f85a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f85c:	3301      	adds	r3, #1
 800f85e:	2b07      	cmp	r3, #7
 800f860:	9323      	str	r3, [sp, #140]	; 0x8c
 800f862:	f300 82da 	bgt.w	800fe1a <_svfprintf_r+0xc92>
 800f866:	3408      	adds	r4, #8
 800f868:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800f86a:	b16b      	cbz	r3, 800f888 <_svfprintf_r+0x700>
 800f86c:	ab1b      	add	r3, sp, #108	; 0x6c
 800f86e:	6023      	str	r3, [r4, #0]
 800f870:	2302      	movs	r3, #2
 800f872:	6063      	str	r3, [r4, #4]
 800f874:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800f876:	3302      	adds	r3, #2
 800f878:	9324      	str	r3, [sp, #144]	; 0x90
 800f87a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f87c:	3301      	adds	r3, #1
 800f87e:	2b07      	cmp	r3, #7
 800f880:	9323      	str	r3, [sp, #140]	; 0x8c
 800f882:	f300 82d4 	bgt.w	800fe2e <_svfprintf_r+0xca6>
 800f886:	3408      	adds	r4, #8
 800f888:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800f88a:	2b80      	cmp	r3, #128	; 0x80
 800f88c:	d11f      	bne.n	800f8ce <_svfprintf_r+0x746>
 800f88e:	e9dd 3210 	ldrd	r3, r2, [sp, #64]	; 0x40
 800f892:	1a9f      	subs	r7, r3, r2
 800f894:	2f00      	cmp	r7, #0
 800f896:	dd1a      	ble.n	800f8ce <_svfprintf_r+0x746>
 800f898:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800f89c:	4821      	ldr	r0, [pc, #132]	; (800f924 <_svfprintf_r+0x79c>)
 800f89e:	6020      	str	r0, [r4, #0]
 800f8a0:	2f10      	cmp	r7, #16
 800f8a2:	f103 0301 	add.w	r3, r3, #1
 800f8a6:	f104 0108 	add.w	r1, r4, #8
 800f8aa:	f300 82ca 	bgt.w	800fe42 <_svfprintf_r+0xcba>
 800f8ae:	6067      	str	r7, [r4, #4]
 800f8b0:	2b07      	cmp	r3, #7
 800f8b2:	4417      	add	r7, r2
 800f8b4:	e9cd 3723 	strd	r3, r7, [sp, #140]	; 0x8c
 800f8b8:	f340 82d6 	ble.w	800fe68 <_svfprintf_r+0xce0>
 800f8bc:	aa22      	add	r2, sp, #136	; 0x88
 800f8be:	4649      	mov	r1, r9
 800f8c0:	4650      	mov	r0, sl
 800f8c2:	f002 fc09 	bl	80120d8 <__ssprint_r>
 800f8c6:	2800      	cmp	r0, #0
 800f8c8:	f040 85d8 	bne.w	801047c <_svfprintf_r+0x12f4>
 800f8cc:	ac25      	add	r4, sp, #148	; 0x94
 800f8ce:	9b04      	ldr	r3, [sp, #16]
 800f8d0:	1af6      	subs	r6, r6, r3
 800f8d2:	2e00      	cmp	r6, #0
 800f8d4:	dd28      	ble.n	800f928 <_svfprintf_r+0x7a0>
 800f8d6:	4f13      	ldr	r7, [pc, #76]	; (800f924 <_svfprintf_r+0x79c>)
 800f8d8:	6027      	str	r7, [r4, #0]
 800f8da:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800f8de:	2e10      	cmp	r6, #16
 800f8e0:	f103 0301 	add.w	r3, r3, #1
 800f8e4:	f104 0108 	add.w	r1, r4, #8
 800f8e8:	f300 82c0 	bgt.w	800fe6c <_svfprintf_r+0xce4>
 800f8ec:	6066      	str	r6, [r4, #4]
 800f8ee:	2b07      	cmp	r3, #7
 800f8f0:	4416      	add	r6, r2
 800f8f2:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 800f8f6:	f340 82cc 	ble.w	800fe92 <_svfprintf_r+0xd0a>
 800f8fa:	aa22      	add	r2, sp, #136	; 0x88
 800f8fc:	4649      	mov	r1, r9
 800f8fe:	4650      	mov	r0, sl
 800f900:	f002 fbea 	bl	80120d8 <__ssprint_r>
 800f904:	2800      	cmp	r0, #0
 800f906:	f040 85b9 	bne.w	801047c <_svfprintf_r+0x12f4>
 800f90a:	ac25      	add	r4, sp, #148	; 0x94
 800f90c:	e00c      	b.n	800f928 <_svfprintf_r+0x7a0>
 800f90e:	bf00      	nop
 800f910:	0801430d 	.word	0x0801430d
 800f914:	080142fc 	.word	0x080142fc
 800f918:	40300000 	.word	0x40300000
 800f91c:	3fe00000 	.word	0x3fe00000
 800f920:	08014320 	.word	0x08014320
 800f924:	08014330 	.word	0x08014330
 800f928:	f418 7f80 	tst.w	r8, #256	; 0x100
 800f92c:	9e24      	ldr	r6, [sp, #144]	; 0x90
 800f92e:	f040 82b7 	bne.w	800fea0 <_svfprintf_r+0xd18>
 800f932:	9b04      	ldr	r3, [sp, #16]
 800f934:	f8c4 b000 	str.w	fp, [r4]
 800f938:	441e      	add	r6, r3
 800f93a:	6063      	str	r3, [r4, #4]
 800f93c:	9624      	str	r6, [sp, #144]	; 0x90
 800f93e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800f940:	3301      	adds	r3, #1
 800f942:	2b07      	cmp	r3, #7
 800f944:	9323      	str	r3, [sp, #140]	; 0x8c
 800f946:	f300 82f0 	bgt.w	800ff2a <_svfprintf_r+0xda2>
 800f94a:	3408      	adds	r4, #8
 800f94c:	f018 0f04 	tst.w	r8, #4
 800f950:	f040 8576 	bne.w	8010440 <_svfprintf_r+0x12b8>
 800f954:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	; 0x3c
 800f958:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f95a:	428a      	cmp	r2, r1
 800f95c:	bfac      	ite	ge
 800f95e:	189b      	addge	r3, r3, r2
 800f960:	185b      	addlt	r3, r3, r1
 800f962:	930f      	str	r3, [sp, #60]	; 0x3c
 800f964:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800f966:	b13b      	cbz	r3, 800f978 <_svfprintf_r+0x7f0>
 800f968:	aa22      	add	r2, sp, #136	; 0x88
 800f96a:	4649      	mov	r1, r9
 800f96c:	4650      	mov	r0, sl
 800f96e:	f002 fbb3 	bl	80120d8 <__ssprint_r>
 800f972:	2800      	cmp	r0, #0
 800f974:	f040 8582 	bne.w	801047c <_svfprintf_r+0x12f4>
 800f978:	2300      	movs	r3, #0
 800f97a:	9323      	str	r3, [sp, #140]	; 0x8c
 800f97c:	9b03      	ldr	r3, [sp, #12]
 800f97e:	2b00      	cmp	r3, #0
 800f980:	f040 8598 	bne.w	80104b4 <_svfprintf_r+0x132c>
 800f984:	ac25      	add	r4, sp, #148	; 0x94
 800f986:	e0ed      	b.n	800fb64 <_svfprintf_r+0x9dc>
 800f988:	9003      	str	r0, [sp, #12]
 800f98a:	e62c      	b.n	800f5e6 <_svfprintf_r+0x45e>
 800f98c:	9003      	str	r0, [sp, #12]
 800f98e:	2306      	movs	r3, #6
 800f990:	e619      	b.n	800f5c6 <_svfprintf_r+0x43e>
 800f992:	9003      	str	r0, [sp, #12]
 800f994:	e627      	b.n	800f5e6 <_svfprintf_r+0x45e>
 800f996:	ed9d 7b0c 	vldr	d7, [sp, #48]	; 0x30
 800f99a:	2300      	movs	r3, #0
 800f99c:	eeb0 8a47 	vmov.f32	s16, s14
 800f9a0:	eef0 8a67 	vmov.f32	s17, s15
 800f9a4:	e62f      	b.n	800f606 <_svfprintf_r+0x47e>
 800f9a6:	f802 0c01 	strb.w	r0, [r2, #-1]
 800f9aa:	e691      	b.n	800f6d0 <_svfprintf_r+0x548>
 800f9ac:	f803 0b01 	strb.w	r0, [r3], #1
 800f9b0:	1aca      	subs	r2, r1, r3
 800f9b2:	2a00      	cmp	r2, #0
 800f9b4:	dafa      	bge.n	800f9ac <_svfprintf_r+0x824>
 800f9b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f9b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f9ba:	3201      	adds	r2, #1
 800f9bc:	f103 0301 	add.w	r3, r3, #1
 800f9c0:	bfb8      	it	lt
 800f9c2:	2300      	movlt	r3, #0
 800f9c4:	441d      	add	r5, r3
 800f9c6:	e693      	b.n	800f6f0 <_svfprintf_r+0x568>
 800f9c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f9ca:	462b      	mov	r3, r5
 800f9cc:	18a9      	adds	r1, r5, r2
 800f9ce:	2030      	movs	r0, #48	; 0x30
 800f9d0:	e7ee      	b.n	800f9b0 <_svfprintf_r+0x828>
 800f9d2:	9b08      	ldr	r3, [sp, #32]
 800f9d4:	2b46      	cmp	r3, #70	; 0x46
 800f9d6:	d005      	beq.n	800f9e4 <_svfprintf_r+0x85c>
 800f9d8:	2b45      	cmp	r3, #69	; 0x45
 800f9da:	d11b      	bne.n	800fa14 <_svfprintf_r+0x88c>
 800f9dc:	9b04      	ldr	r3, [sp, #16]
 800f9de:	1c5d      	adds	r5, r3, #1
 800f9e0:	2102      	movs	r1, #2
 800f9e2:	e001      	b.n	800f9e8 <_svfprintf_r+0x860>
 800f9e4:	9d04      	ldr	r5, [sp, #16]
 800f9e6:	2103      	movs	r1, #3
 800f9e8:	ab20      	add	r3, sp, #128	; 0x80
 800f9ea:	9301      	str	r3, [sp, #4]
 800f9ec:	ab1d      	add	r3, sp, #116	; 0x74
 800f9ee:	9300      	str	r3, [sp, #0]
 800f9f0:	462a      	mov	r2, r5
 800f9f2:	ab1c      	add	r3, sp, #112	; 0x70
 800f9f4:	4650      	mov	r0, sl
 800f9f6:	eeb0 0a48 	vmov.f32	s0, s16
 800f9fa:	eef0 0a68 	vmov.f32	s1, s17
 800f9fe:	f000 feff 	bl	8010800 <_dtoa_r>
 800fa02:	9b08      	ldr	r3, [sp, #32]
 800fa04:	2b47      	cmp	r3, #71	; 0x47
 800fa06:	4683      	mov	fp, r0
 800fa08:	d106      	bne.n	800fa18 <_svfprintf_r+0x890>
 800fa0a:	f018 0f01 	tst.w	r8, #1
 800fa0e:	d103      	bne.n	800fa18 <_svfprintf_r+0x890>
 800fa10:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800fa12:	e66d      	b.n	800f6f0 <_svfprintf_r+0x568>
 800fa14:	9d04      	ldr	r5, [sp, #16]
 800fa16:	e7e3      	b.n	800f9e0 <_svfprintf_r+0x858>
 800fa18:	9b08      	ldr	r3, [sp, #32]
 800fa1a:	2b46      	cmp	r3, #70	; 0x46
 800fa1c:	eb0b 0605 	add.w	r6, fp, r5
 800fa20:	d10f      	bne.n	800fa42 <_svfprintf_r+0x8ba>
 800fa22:	f89b 3000 	ldrb.w	r3, [fp]
 800fa26:	2b30      	cmp	r3, #48	; 0x30
 800fa28:	d109      	bne.n	800fa3e <_svfprintf_r+0x8b6>
 800fa2a:	ec51 0b18 	vmov	r0, r1, d8
 800fa2e:	2200      	movs	r2, #0
 800fa30:	2300      	movs	r3, #0
 800fa32:	f7f7 feab 	bl	800778c <__aeabi_dcmpeq>
 800fa36:	b910      	cbnz	r0, 800fa3e <_svfprintf_r+0x8b6>
 800fa38:	f1c5 0501 	rsb	r5, r5, #1
 800fa3c:	951c      	str	r5, [sp, #112]	; 0x70
 800fa3e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800fa40:	441e      	add	r6, r3
 800fa42:	ec51 0b18 	vmov	r0, r1, d8
 800fa46:	2200      	movs	r2, #0
 800fa48:	2300      	movs	r3, #0
 800fa4a:	f7f7 fe9f 	bl	800778c <__aeabi_dcmpeq>
 800fa4e:	b100      	cbz	r0, 800fa52 <_svfprintf_r+0x8ca>
 800fa50:	9620      	str	r6, [sp, #128]	; 0x80
 800fa52:	2230      	movs	r2, #48	; 0x30
 800fa54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800fa56:	429e      	cmp	r6, r3
 800fa58:	d9da      	bls.n	800fa10 <_svfprintf_r+0x888>
 800fa5a:	1c59      	adds	r1, r3, #1
 800fa5c:	9120      	str	r1, [sp, #128]	; 0x80
 800fa5e:	701a      	strb	r2, [r3, #0]
 800fa60:	e7f8      	b.n	800fa54 <_svfprintf_r+0x8cc>
 800fa62:	9b08      	ldr	r3, [sp, #32]
 800fa64:	2b46      	cmp	r3, #70	; 0x46
 800fa66:	f47f ae54 	bne.w	800f712 <_svfprintf_r+0x58a>
 800fa6a:	9a04      	ldr	r2, [sp, #16]
 800fa6c:	f008 0301 	and.w	r3, r8, #1
 800fa70:	2d00      	cmp	r5, #0
 800fa72:	ea43 0302 	orr.w	r3, r3, r2
 800fa76:	dd1a      	ble.n	800faae <_svfprintf_r+0x926>
 800fa78:	2b00      	cmp	r3, #0
 800fa7a:	d034      	beq.n	800fae6 <_svfprintf_r+0x95e>
 800fa7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fa7e:	18eb      	adds	r3, r5, r3
 800fa80:	441a      	add	r2, r3
 800fa82:	9204      	str	r2, [sp, #16]
 800fa84:	2366      	movs	r3, #102	; 0x66
 800fa86:	9307      	str	r3, [sp, #28]
 800fa88:	e033      	b.n	800faf2 <_svfprintf_r+0x96a>
 800fa8a:	f813 6b01 	ldrb.w	r6, [r3], #1
 800fa8e:	f802 6b01 	strb.w	r6, [r2], #1
 800fa92:	e675      	b.n	800f780 <_svfprintf_r+0x5f8>
 800fa94:	b941      	cbnz	r1, 800faa8 <_svfprintf_r+0x920>
 800fa96:	2230      	movs	r2, #48	; 0x30
 800fa98:	f88d 207a 	strb.w	r2, [sp, #122]	; 0x7a
 800fa9c:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
 800faa0:	3330      	adds	r3, #48	; 0x30
 800faa2:	f802 3b01 	strb.w	r3, [r2], #1
 800faa6:	e677      	b.n	800f798 <_svfprintf_r+0x610>
 800faa8:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
 800faac:	e7f8      	b.n	800faa0 <_svfprintf_r+0x918>
 800faae:	b1e3      	cbz	r3, 800faea <_svfprintf_r+0x962>
 800fab0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fab2:	9a04      	ldr	r2, [sp, #16]
 800fab4:	3301      	adds	r3, #1
 800fab6:	e7e3      	b.n	800fa80 <_svfprintf_r+0x8f8>
 800fab8:	9b05      	ldr	r3, [sp, #20]
 800faba:	429d      	cmp	r5, r3
 800fabc:	db07      	blt.n	800face <_svfprintf_r+0x946>
 800fabe:	f018 0f01 	tst.w	r8, #1
 800fac2:	d02d      	beq.n	800fb20 <_svfprintf_r+0x998>
 800fac4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fac6:	18eb      	adds	r3, r5, r3
 800fac8:	9304      	str	r3, [sp, #16]
 800faca:	2367      	movs	r3, #103	; 0x67
 800facc:	e7db      	b.n	800fa86 <_svfprintf_r+0x8fe>
 800face:	9b05      	ldr	r3, [sp, #20]
 800fad0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800fad2:	2d00      	cmp	r5, #0
 800fad4:	4413      	add	r3, r2
 800fad6:	9304      	str	r3, [sp, #16]
 800fad8:	dcf7      	bgt.n	800faca <_svfprintf_r+0x942>
 800fada:	9a04      	ldr	r2, [sp, #16]
 800fadc:	f1c5 0301 	rsb	r3, r5, #1
 800fae0:	441a      	add	r2, r3
 800fae2:	4613      	mov	r3, r2
 800fae4:	e7f0      	b.n	800fac8 <_svfprintf_r+0x940>
 800fae6:	9504      	str	r5, [sp, #16]
 800fae8:	e7cc      	b.n	800fa84 <_svfprintf_r+0x8fc>
 800faea:	2366      	movs	r3, #102	; 0x66
 800faec:	9307      	str	r3, [sp, #28]
 800faee:	2301      	movs	r3, #1
 800faf0:	9304      	str	r3, [sp, #16]
 800faf2:	f418 6380 	ands.w	r3, r8, #1024	; 0x400
 800faf6:	9309      	str	r3, [sp, #36]	; 0x24
 800faf8:	d025      	beq.n	800fb46 <_svfprintf_r+0x9be>
 800fafa:	2300      	movs	r3, #0
 800fafc:	2d00      	cmp	r5, #0
 800fafe:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800fb02:	f77f ae61 	ble.w	800f7c8 <_svfprintf_r+0x640>
 800fb06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fb08:	781b      	ldrb	r3, [r3, #0]
 800fb0a:	2bff      	cmp	r3, #255	; 0xff
 800fb0c:	d10a      	bne.n	800fb24 <_svfprintf_r+0x99c>
 800fb0e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800fb12:	9904      	ldr	r1, [sp, #16]
 800fb14:	4413      	add	r3, r2
 800fb16:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fb18:	fb02 1303 	mla	r3, r2, r3, r1
 800fb1c:	9304      	str	r3, [sp, #16]
 800fb1e:	e653      	b.n	800f7c8 <_svfprintf_r+0x640>
 800fb20:	9504      	str	r5, [sp, #16]
 800fb22:	e7d2      	b.n	800faca <_svfprintf_r+0x942>
 800fb24:	42ab      	cmp	r3, r5
 800fb26:	daf2      	bge.n	800fb0e <_svfprintf_r+0x986>
 800fb28:	1aed      	subs	r5, r5, r3
 800fb2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fb2c:	785b      	ldrb	r3, [r3, #1]
 800fb2e:	b133      	cbz	r3, 800fb3e <_svfprintf_r+0x9b6>
 800fb30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fb32:	3301      	adds	r3, #1
 800fb34:	9309      	str	r3, [sp, #36]	; 0x24
 800fb36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fb38:	3301      	adds	r3, #1
 800fb3a:	930a      	str	r3, [sp, #40]	; 0x28
 800fb3c:	e7e3      	b.n	800fb06 <_svfprintf_r+0x97e>
 800fb3e:	9b08      	ldr	r3, [sp, #32]
 800fb40:	3301      	adds	r3, #1
 800fb42:	9308      	str	r3, [sp, #32]
 800fb44:	e7df      	b.n	800fb06 <_svfprintf_r+0x97e>
 800fb46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fb48:	9308      	str	r3, [sp, #32]
 800fb4a:	e63d      	b.n	800f7c8 <_svfprintf_r+0x640>
 800fb4c:	4632      	mov	r2, r6
 800fb4e:	f018 0f20 	tst.w	r8, #32
 800fb52:	f852 3b04 	ldr.w	r3, [r2], #4
 800fb56:	9206      	str	r2, [sp, #24]
 800fb58:	d009      	beq.n	800fb6e <_svfprintf_r+0x9e6>
 800fb5a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fb5c:	4610      	mov	r0, r2
 800fb5e:	17d1      	asrs	r1, r2, #31
 800fb60:	e9c3 0100 	strd	r0, r1, [r3]
 800fb64:	9e06      	ldr	r6, [sp, #24]
 800fb66:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 800fb6a:	f7ff bb4d 	b.w	800f208 <_svfprintf_r+0x80>
 800fb6e:	f018 0f10 	tst.w	r8, #16
 800fb72:	d002      	beq.n	800fb7a <_svfprintf_r+0x9f2>
 800fb74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fb76:	601a      	str	r2, [r3, #0]
 800fb78:	e7f4      	b.n	800fb64 <_svfprintf_r+0x9dc>
 800fb7a:	f018 0f40 	tst.w	r8, #64	; 0x40
 800fb7e:	d002      	beq.n	800fb86 <_svfprintf_r+0x9fe>
 800fb80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fb82:	801a      	strh	r2, [r3, #0]
 800fb84:	e7ee      	b.n	800fb64 <_svfprintf_r+0x9dc>
 800fb86:	f418 7f00 	tst.w	r8, #512	; 0x200
 800fb8a:	d0f3      	beq.n	800fb74 <_svfprintf_r+0x9ec>
 800fb8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fb8e:	701a      	strb	r2, [r3, #0]
 800fb90:	e7e8      	b.n	800fb64 <_svfprintf_r+0x9dc>
 800fb92:	f048 0810 	orr.w	r8, r8, #16
 800fb96:	f018 0f20 	tst.w	r8, #32
 800fb9a:	d01e      	beq.n	800fbda <_svfprintf_r+0xa52>
 800fb9c:	3607      	adds	r6, #7
 800fb9e:	f026 0307 	bic.w	r3, r6, #7
 800fba2:	e8f3 6702 	ldrd	r6, r7, [r3], #8
 800fba6:	9306      	str	r3, [sp, #24]
 800fba8:	f428 6880 	bic.w	r8, r8, #1024	; 0x400
 800fbac:	2300      	movs	r3, #0
 800fbae:	2200      	movs	r2, #0
 800fbb0:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
 800fbb4:	9a04      	ldr	r2, [sp, #16]
 800fbb6:	3201      	adds	r2, #1
 800fbb8:	f000 848d 	beq.w	80104d6 <_svfprintf_r+0x134e>
 800fbbc:	f028 0280 	bic.w	r2, r8, #128	; 0x80
 800fbc0:	9203      	str	r2, [sp, #12]
 800fbc2:	ea56 0207 	orrs.w	r2, r6, r7
 800fbc6:	f040 848c 	bne.w	80104e2 <_svfprintf_r+0x135a>
 800fbca:	9a04      	ldr	r2, [sp, #16]
 800fbcc:	2a00      	cmp	r2, #0
 800fbce:	f000 80f5 	beq.w	800fdbc <_svfprintf_r+0xc34>
 800fbd2:	2b01      	cmp	r3, #1
 800fbd4:	f040 8488 	bne.w	80104e8 <_svfprintf_r+0x1360>
 800fbd8:	e097      	b.n	800fd0a <_svfprintf_r+0xb82>
 800fbda:	1d33      	adds	r3, r6, #4
 800fbdc:	f018 0f10 	tst.w	r8, #16
 800fbe0:	9306      	str	r3, [sp, #24]
 800fbe2:	d001      	beq.n	800fbe8 <_svfprintf_r+0xa60>
 800fbe4:	6836      	ldr	r6, [r6, #0]
 800fbe6:	e003      	b.n	800fbf0 <_svfprintf_r+0xa68>
 800fbe8:	f018 0f40 	tst.w	r8, #64	; 0x40
 800fbec:	d002      	beq.n	800fbf4 <_svfprintf_r+0xa6c>
 800fbee:	8836      	ldrh	r6, [r6, #0]
 800fbf0:	2700      	movs	r7, #0
 800fbf2:	e7d9      	b.n	800fba8 <_svfprintf_r+0xa20>
 800fbf4:	f418 7f00 	tst.w	r8, #512	; 0x200
 800fbf8:	d0f4      	beq.n	800fbe4 <_svfprintf_r+0xa5c>
 800fbfa:	7836      	ldrb	r6, [r6, #0]
 800fbfc:	e7f8      	b.n	800fbf0 <_svfprintf_r+0xa68>
 800fbfe:	4633      	mov	r3, r6
 800fc00:	2278      	movs	r2, #120	; 0x78
 800fc02:	f853 6b04 	ldr.w	r6, [r3], #4
 800fc06:	9306      	str	r3, [sp, #24]
 800fc08:	f647 0330 	movw	r3, #30768	; 0x7830
 800fc0c:	f8ad 306c 	strh.w	r3, [sp, #108]	; 0x6c
 800fc10:	4ba1      	ldr	r3, [pc, #644]	; (800fe98 <_svfprintf_r+0xd10>)
 800fc12:	9316      	str	r3, [sp, #88]	; 0x58
 800fc14:	2700      	movs	r7, #0
 800fc16:	f048 0802 	orr.w	r8, r8, #2
 800fc1a:	2302      	movs	r3, #2
 800fc1c:	9207      	str	r2, [sp, #28]
 800fc1e:	e7c6      	b.n	800fbae <_svfprintf_r+0xa26>
 800fc20:	4633      	mov	r3, r6
 800fc22:	2500      	movs	r5, #0
 800fc24:	f853 bb04 	ldr.w	fp, [r3], #4
 800fc28:	9306      	str	r3, [sp, #24]
 800fc2a:	9b04      	ldr	r3, [sp, #16]
 800fc2c:	f88d 506b 	strb.w	r5, [sp, #107]	; 0x6b
 800fc30:	1c59      	adds	r1, r3, #1
 800fc32:	d010      	beq.n	800fc56 <_svfprintf_r+0xace>
 800fc34:	461a      	mov	r2, r3
 800fc36:	4629      	mov	r1, r5
 800fc38:	4658      	mov	r0, fp
 800fc3a:	f7f7 f921 	bl	8006e80 <memchr>
 800fc3e:	9003      	str	r0, [sp, #12]
 800fc40:	2800      	cmp	r0, #0
 800fc42:	f000 80d2 	beq.w	800fdea <_svfprintf_r+0xc62>
 800fc46:	eba0 030b 	sub.w	r3, r0, fp
 800fc4a:	e9cd 5303 	strd	r5, r3, [sp, #12]
 800fc4e:	e9cd 5508 	strd	r5, r5, [sp, #32]
 800fc52:	462e      	mov	r6, r5
 800fc54:	e5c0      	b.n	800f7d8 <_svfprintf_r+0x650>
 800fc56:	4658      	mov	r0, fp
 800fc58:	f7f7 f96c 	bl	8006f34 <strlen>
 800fc5c:	e9cd 5003 	strd	r5, r0, [sp, #12]
 800fc60:	e463      	b.n	800f52a <_svfprintf_r+0x3a2>
 800fc62:	f048 0810 	orr.w	r8, r8, #16
 800fc66:	f018 0f20 	tst.w	r8, #32
 800fc6a:	d007      	beq.n	800fc7c <_svfprintf_r+0xaf4>
 800fc6c:	3607      	adds	r6, #7
 800fc6e:	f026 0307 	bic.w	r3, r6, #7
 800fc72:	e8f3 6702 	ldrd	r6, r7, [r3], #8
 800fc76:	9306      	str	r3, [sp, #24]
 800fc78:	2301      	movs	r3, #1
 800fc7a:	e798      	b.n	800fbae <_svfprintf_r+0xa26>
 800fc7c:	1d33      	adds	r3, r6, #4
 800fc7e:	f018 0f10 	tst.w	r8, #16
 800fc82:	9306      	str	r3, [sp, #24]
 800fc84:	d001      	beq.n	800fc8a <_svfprintf_r+0xb02>
 800fc86:	6836      	ldr	r6, [r6, #0]
 800fc88:	e003      	b.n	800fc92 <_svfprintf_r+0xb0a>
 800fc8a:	f018 0f40 	tst.w	r8, #64	; 0x40
 800fc8e:	d002      	beq.n	800fc96 <_svfprintf_r+0xb0e>
 800fc90:	8836      	ldrh	r6, [r6, #0]
 800fc92:	2700      	movs	r7, #0
 800fc94:	e7f0      	b.n	800fc78 <_svfprintf_r+0xaf0>
 800fc96:	f418 7f00 	tst.w	r8, #512	; 0x200
 800fc9a:	d0f4      	beq.n	800fc86 <_svfprintf_r+0xafe>
 800fc9c:	7836      	ldrb	r6, [r6, #0]
 800fc9e:	e7f8      	b.n	800fc92 <_svfprintf_r+0xb0a>
 800fca0:	4b7e      	ldr	r3, [pc, #504]	; (800fe9c <_svfprintf_r+0xd14>)
 800fca2:	9316      	str	r3, [sp, #88]	; 0x58
 800fca4:	f018 0f20 	tst.w	r8, #32
 800fca8:	d019      	beq.n	800fcde <_svfprintf_r+0xb56>
 800fcaa:	3607      	adds	r6, #7
 800fcac:	f026 0307 	bic.w	r3, r6, #7
 800fcb0:	e8f3 6702 	ldrd	r6, r7, [r3], #8
 800fcb4:	9306      	str	r3, [sp, #24]
 800fcb6:	f018 0f01 	tst.w	r8, #1
 800fcba:	d00a      	beq.n	800fcd2 <_svfprintf_r+0xb4a>
 800fcbc:	ea56 0307 	orrs.w	r3, r6, r7
 800fcc0:	d007      	beq.n	800fcd2 <_svfprintf_r+0xb4a>
 800fcc2:	2330      	movs	r3, #48	; 0x30
 800fcc4:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
 800fcc8:	9b07      	ldr	r3, [sp, #28]
 800fcca:	f88d 306d 	strb.w	r3, [sp, #109]	; 0x6d
 800fcce:	f048 0802 	orr.w	r8, r8, #2
 800fcd2:	f428 6880 	bic.w	r8, r8, #1024	; 0x400
 800fcd6:	2302      	movs	r3, #2
 800fcd8:	e769      	b.n	800fbae <_svfprintf_r+0xa26>
 800fcda:	4b6f      	ldr	r3, [pc, #444]	; (800fe98 <_svfprintf_r+0xd10>)
 800fcdc:	e7e1      	b.n	800fca2 <_svfprintf_r+0xb1a>
 800fcde:	1d33      	adds	r3, r6, #4
 800fce0:	f018 0f10 	tst.w	r8, #16
 800fce4:	9306      	str	r3, [sp, #24]
 800fce6:	d001      	beq.n	800fcec <_svfprintf_r+0xb64>
 800fce8:	6836      	ldr	r6, [r6, #0]
 800fcea:	e003      	b.n	800fcf4 <_svfprintf_r+0xb6c>
 800fcec:	f018 0f40 	tst.w	r8, #64	; 0x40
 800fcf0:	d002      	beq.n	800fcf8 <_svfprintf_r+0xb70>
 800fcf2:	8836      	ldrh	r6, [r6, #0]
 800fcf4:	2700      	movs	r7, #0
 800fcf6:	e7de      	b.n	800fcb6 <_svfprintf_r+0xb2e>
 800fcf8:	f418 7f00 	tst.w	r8, #512	; 0x200
 800fcfc:	d0f4      	beq.n	800fce8 <_svfprintf_r+0xb60>
 800fcfe:	7836      	ldrb	r6, [r6, #0]
 800fd00:	e7f8      	b.n	800fcf4 <_svfprintf_r+0xb6c>
 800fd02:	2f00      	cmp	r7, #0
 800fd04:	bf08      	it	eq
 800fd06:	2e0a      	cmpeq	r6, #10
 800fd08:	d206      	bcs.n	800fd18 <_svfprintf_r+0xb90>
 800fd0a:	3630      	adds	r6, #48	; 0x30
 800fd0c:	f88d 6137 	strb.w	r6, [sp, #311]	; 0x137
 800fd10:	f20d 1b37 	addw	fp, sp, #311	; 0x137
 800fd14:	f000 bc06 	b.w	8010524 <_svfprintf_r+0x139c>
 800fd18:	2300      	movs	r3, #0
 800fd1a:	9305      	str	r3, [sp, #20]
 800fd1c:	9b03      	ldr	r3, [sp, #12]
 800fd1e:	ad4e      	add	r5, sp, #312	; 0x138
 800fd20:	f403 6880 	and.w	r8, r3, #1024	; 0x400
 800fd24:	220a      	movs	r2, #10
 800fd26:	2300      	movs	r3, #0
 800fd28:	4630      	mov	r0, r6
 800fd2a:	4639      	mov	r1, r7
 800fd2c:	f7f7 fd9e 	bl	800786c <__aeabi_uldivmod>
 800fd30:	9b05      	ldr	r3, [sp, #20]
 800fd32:	3230      	adds	r2, #48	; 0x30
 800fd34:	3301      	adds	r3, #1
 800fd36:	f105 3bff 	add.w	fp, r5, #4294967295
 800fd3a:	f805 2c01 	strb.w	r2, [r5, #-1]
 800fd3e:	9305      	str	r3, [sp, #20]
 800fd40:	f1b8 0f00 	cmp.w	r8, #0
 800fd44:	d019      	beq.n	800fd7a <_svfprintf_r+0xbf2>
 800fd46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fd48:	9a05      	ldr	r2, [sp, #20]
 800fd4a:	781b      	ldrb	r3, [r3, #0]
 800fd4c:	429a      	cmp	r2, r3
 800fd4e:	d114      	bne.n	800fd7a <_svfprintf_r+0xbf2>
 800fd50:	2aff      	cmp	r2, #255	; 0xff
 800fd52:	d012      	beq.n	800fd7a <_svfprintf_r+0xbf2>
 800fd54:	2f00      	cmp	r7, #0
 800fd56:	bf08      	it	eq
 800fd58:	2e0a      	cmpeq	r6, #10
 800fd5a:	d30e      	bcc.n	800fd7a <_svfprintf_r+0xbf2>
 800fd5c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fd5e:	9914      	ldr	r1, [sp, #80]	; 0x50
 800fd60:	ebab 0b03 	sub.w	fp, fp, r3
 800fd64:	461a      	mov	r2, r3
 800fd66:	4658      	mov	r0, fp
 800fd68:	f002 f9a3 	bl	80120b2 <strncpy>
 800fd6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fd6e:	785d      	ldrb	r5, [r3, #1]
 800fd70:	b195      	cbz	r5, 800fd98 <_svfprintf_r+0xc10>
 800fd72:	3301      	adds	r3, #1
 800fd74:	930a      	str	r3, [sp, #40]	; 0x28
 800fd76:	2300      	movs	r3, #0
 800fd78:	9305      	str	r3, [sp, #20]
 800fd7a:	220a      	movs	r2, #10
 800fd7c:	2300      	movs	r3, #0
 800fd7e:	4630      	mov	r0, r6
 800fd80:	4639      	mov	r1, r7
 800fd82:	f7f7 fd73 	bl	800786c <__aeabi_uldivmod>
 800fd86:	2f00      	cmp	r7, #0
 800fd88:	bf08      	it	eq
 800fd8a:	2e0a      	cmpeq	r6, #10
 800fd8c:	f0c0 83ca 	bcc.w	8010524 <_svfprintf_r+0x139c>
 800fd90:	4606      	mov	r6, r0
 800fd92:	460f      	mov	r7, r1
 800fd94:	465d      	mov	r5, fp
 800fd96:	e7c5      	b.n	800fd24 <_svfprintf_r+0xb9c>
 800fd98:	9505      	str	r5, [sp, #20]
 800fd9a:	e7ee      	b.n	800fd7a <_svfprintf_r+0xbf2>
 800fd9c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800fd9e:	f006 030f 	and.w	r3, r6, #15
 800fda2:	5cd3      	ldrb	r3, [r2, r3]
 800fda4:	f80b 3d01 	strb.w	r3, [fp, #-1]!
 800fda8:	0933      	lsrs	r3, r6, #4
 800fdaa:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 800fdae:	093a      	lsrs	r2, r7, #4
 800fdb0:	461e      	mov	r6, r3
 800fdb2:	4617      	mov	r7, r2
 800fdb4:	ea56 0307 	orrs.w	r3, r6, r7
 800fdb8:	d1f0      	bne.n	800fd9c <_svfprintf_r+0xc14>
 800fdba:	e3b3      	b.n	8010524 <_svfprintf_r+0x139c>
 800fdbc:	b933      	cbnz	r3, 800fdcc <_svfprintf_r+0xc44>
 800fdbe:	f018 0f01 	tst.w	r8, #1
 800fdc2:	d003      	beq.n	800fdcc <_svfprintf_r+0xc44>
 800fdc4:	2330      	movs	r3, #48	; 0x30
 800fdc6:	f88d 3137 	strb.w	r3, [sp, #311]	; 0x137
 800fdca:	e7a1      	b.n	800fd10 <_svfprintf_r+0xb88>
 800fdcc:	f50d 7b9c 	add.w	fp, sp, #312	; 0x138
 800fdd0:	e3a8      	b.n	8010524 <_svfprintf_r+0x139c>
 800fdd2:	9b07      	ldr	r3, [sp, #28]
 800fdd4:	2b00      	cmp	r3, #0
 800fdd6:	f000 8373 	beq.w	80104c0 <_svfprintf_r+0x1338>
 800fdda:	2000      	movs	r0, #0
 800fddc:	f88d 30d4 	strb.w	r3, [sp, #212]	; 0xd4
 800fde0:	f88d 006b 	strb.w	r0, [sp, #107]	; 0x6b
 800fde4:	9606      	str	r6, [sp, #24]
 800fde6:	f7ff bb34 	b.w	800f452 <_svfprintf_r+0x2ca>
 800fdea:	9e03      	ldr	r6, [sp, #12]
 800fdec:	f7ff bb9e 	b.w	800f52c <_svfprintf_r+0x3a4>
 800fdf0:	2010      	movs	r0, #16
 800fdf2:	4402      	add	r2, r0
 800fdf4:	2b07      	cmp	r3, #7
 800fdf6:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800fdfa:	6060      	str	r0, [r4, #4]
 800fdfc:	dd08      	ble.n	800fe10 <_svfprintf_r+0xc88>
 800fdfe:	aa22      	add	r2, sp, #136	; 0x88
 800fe00:	4649      	mov	r1, r9
 800fe02:	4650      	mov	r0, sl
 800fe04:	f002 f968 	bl	80120d8 <__ssprint_r>
 800fe08:	2800      	cmp	r0, #0
 800fe0a:	f040 8337 	bne.w	801047c <_svfprintf_r+0x12f4>
 800fe0e:	a925      	add	r1, sp, #148	; 0x94
 800fe10:	3f10      	subs	r7, #16
 800fe12:	460c      	mov	r4, r1
 800fe14:	e4fb      	b.n	800f80e <_svfprintf_r+0x686>
 800fe16:	460c      	mov	r4, r1
 800fe18:	e514      	b.n	800f844 <_svfprintf_r+0x6bc>
 800fe1a:	aa22      	add	r2, sp, #136	; 0x88
 800fe1c:	4649      	mov	r1, r9
 800fe1e:	4650      	mov	r0, sl
 800fe20:	f002 f95a 	bl	80120d8 <__ssprint_r>
 800fe24:	2800      	cmp	r0, #0
 800fe26:	f040 8329 	bne.w	801047c <_svfprintf_r+0x12f4>
 800fe2a:	ac25      	add	r4, sp, #148	; 0x94
 800fe2c:	e51c      	b.n	800f868 <_svfprintf_r+0x6e0>
 800fe2e:	aa22      	add	r2, sp, #136	; 0x88
 800fe30:	4649      	mov	r1, r9
 800fe32:	4650      	mov	r0, sl
 800fe34:	f002 f950 	bl	80120d8 <__ssprint_r>
 800fe38:	2800      	cmp	r0, #0
 800fe3a:	f040 831f 	bne.w	801047c <_svfprintf_r+0x12f4>
 800fe3e:	ac25      	add	r4, sp, #148	; 0x94
 800fe40:	e522      	b.n	800f888 <_svfprintf_r+0x700>
 800fe42:	2010      	movs	r0, #16
 800fe44:	4402      	add	r2, r0
 800fe46:	2b07      	cmp	r3, #7
 800fe48:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800fe4c:	6060      	str	r0, [r4, #4]
 800fe4e:	dd08      	ble.n	800fe62 <_svfprintf_r+0xcda>
 800fe50:	aa22      	add	r2, sp, #136	; 0x88
 800fe52:	4649      	mov	r1, r9
 800fe54:	4650      	mov	r0, sl
 800fe56:	f002 f93f 	bl	80120d8 <__ssprint_r>
 800fe5a:	2800      	cmp	r0, #0
 800fe5c:	f040 830e 	bne.w	801047c <_svfprintf_r+0x12f4>
 800fe60:	a925      	add	r1, sp, #148	; 0x94
 800fe62:	3f10      	subs	r7, #16
 800fe64:	460c      	mov	r4, r1
 800fe66:	e517      	b.n	800f898 <_svfprintf_r+0x710>
 800fe68:	460c      	mov	r4, r1
 800fe6a:	e530      	b.n	800f8ce <_svfprintf_r+0x746>
 800fe6c:	2010      	movs	r0, #16
 800fe6e:	4402      	add	r2, r0
 800fe70:	2b07      	cmp	r3, #7
 800fe72:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800fe76:	6060      	str	r0, [r4, #4]
 800fe78:	dd08      	ble.n	800fe8c <_svfprintf_r+0xd04>
 800fe7a:	aa22      	add	r2, sp, #136	; 0x88
 800fe7c:	4649      	mov	r1, r9
 800fe7e:	4650      	mov	r0, sl
 800fe80:	f002 f92a 	bl	80120d8 <__ssprint_r>
 800fe84:	2800      	cmp	r0, #0
 800fe86:	f040 82f9 	bne.w	801047c <_svfprintf_r+0x12f4>
 800fe8a:	a925      	add	r1, sp, #148	; 0x94
 800fe8c:	3e10      	subs	r6, #16
 800fe8e:	460c      	mov	r4, r1
 800fe90:	e522      	b.n	800f8d8 <_svfprintf_r+0x750>
 800fe92:	460c      	mov	r4, r1
 800fe94:	e548      	b.n	800f928 <_svfprintf_r+0x7a0>
 800fe96:	bf00      	nop
 800fe98:	080142fc 	.word	0x080142fc
 800fe9c:	0801430d 	.word	0x0801430d
 800fea0:	9b07      	ldr	r3, [sp, #28]
 800fea2:	2b65      	cmp	r3, #101	; 0x65
 800fea4:	f340 8232 	ble.w	801030c <_svfprintf_r+0x1184>
 800fea8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800feac:	2200      	movs	r2, #0
 800feae:	2300      	movs	r3, #0
 800feb0:	f7f7 fc6c 	bl	800778c <__aeabi_dcmpeq>
 800feb4:	2800      	cmp	r0, #0
 800feb6:	d068      	beq.n	800ff8a <_svfprintf_r+0xe02>
 800feb8:	4b6d      	ldr	r3, [pc, #436]	; (8010070 <_svfprintf_r+0xee8>)
 800feba:	6023      	str	r3, [r4, #0]
 800febc:	2301      	movs	r3, #1
 800febe:	441e      	add	r6, r3
 800fec0:	6063      	str	r3, [r4, #4]
 800fec2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800fec4:	9624      	str	r6, [sp, #144]	; 0x90
 800fec6:	3301      	adds	r3, #1
 800fec8:	2b07      	cmp	r3, #7
 800feca:	9323      	str	r3, [sp, #140]	; 0x8c
 800fecc:	dc37      	bgt.n	800ff3e <_svfprintf_r+0xdb6>
 800fece:	3408      	adds	r4, #8
 800fed0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800fed2:	9a05      	ldr	r2, [sp, #20]
 800fed4:	4293      	cmp	r3, r2
 800fed6:	db03      	blt.n	800fee0 <_svfprintf_r+0xd58>
 800fed8:	f018 0f01 	tst.w	r8, #1
 800fedc:	f43f ad36 	beq.w	800f94c <_svfprintf_r+0x7c4>
 800fee0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800fee2:	6023      	str	r3, [r4, #0]
 800fee4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fee6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800fee8:	6063      	str	r3, [r4, #4]
 800feea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800feec:	4413      	add	r3, r2
 800feee:	9324      	str	r3, [sp, #144]	; 0x90
 800fef0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800fef2:	3301      	adds	r3, #1
 800fef4:	2b07      	cmp	r3, #7
 800fef6:	9323      	str	r3, [sp, #140]	; 0x8c
 800fef8:	dc2b      	bgt.n	800ff52 <_svfprintf_r+0xdca>
 800fefa:	3408      	adds	r4, #8
 800fefc:	9b05      	ldr	r3, [sp, #20]
 800fefe:	1e5d      	subs	r5, r3, #1
 800ff00:	2d00      	cmp	r5, #0
 800ff02:	f77f ad23 	ble.w	800f94c <_svfprintf_r+0x7c4>
 800ff06:	4e5b      	ldr	r6, [pc, #364]	; (8010074 <_svfprintf_r+0xeec>)
 800ff08:	2710      	movs	r7, #16
 800ff0a:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800ff0e:	2d10      	cmp	r5, #16
 800ff10:	f103 0301 	add.w	r3, r3, #1
 800ff14:	f104 0108 	add.w	r1, r4, #8
 800ff18:	6026      	str	r6, [r4, #0]
 800ff1a:	dc24      	bgt.n	800ff66 <_svfprintf_r+0xdde>
 800ff1c:	6065      	str	r5, [r4, #4]
 800ff1e:	2b07      	cmp	r3, #7
 800ff20:	4415      	add	r5, r2
 800ff22:	e9cd 3523 	strd	r3, r5, [sp, #140]	; 0x8c
 800ff26:	f340 8288 	ble.w	801043a <_svfprintf_r+0x12b2>
 800ff2a:	aa22      	add	r2, sp, #136	; 0x88
 800ff2c:	4649      	mov	r1, r9
 800ff2e:	4650      	mov	r0, sl
 800ff30:	f002 f8d2 	bl	80120d8 <__ssprint_r>
 800ff34:	2800      	cmp	r0, #0
 800ff36:	f040 82a1 	bne.w	801047c <_svfprintf_r+0x12f4>
 800ff3a:	ac25      	add	r4, sp, #148	; 0x94
 800ff3c:	e506      	b.n	800f94c <_svfprintf_r+0x7c4>
 800ff3e:	aa22      	add	r2, sp, #136	; 0x88
 800ff40:	4649      	mov	r1, r9
 800ff42:	4650      	mov	r0, sl
 800ff44:	f002 f8c8 	bl	80120d8 <__ssprint_r>
 800ff48:	2800      	cmp	r0, #0
 800ff4a:	f040 8297 	bne.w	801047c <_svfprintf_r+0x12f4>
 800ff4e:	ac25      	add	r4, sp, #148	; 0x94
 800ff50:	e7be      	b.n	800fed0 <_svfprintf_r+0xd48>
 800ff52:	aa22      	add	r2, sp, #136	; 0x88
 800ff54:	4649      	mov	r1, r9
 800ff56:	4650      	mov	r0, sl
 800ff58:	f002 f8be 	bl	80120d8 <__ssprint_r>
 800ff5c:	2800      	cmp	r0, #0
 800ff5e:	f040 828d 	bne.w	801047c <_svfprintf_r+0x12f4>
 800ff62:	ac25      	add	r4, sp, #148	; 0x94
 800ff64:	e7ca      	b.n	800fefc <_svfprintf_r+0xd74>
 800ff66:	3210      	adds	r2, #16
 800ff68:	2b07      	cmp	r3, #7
 800ff6a:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800ff6e:	6067      	str	r7, [r4, #4]
 800ff70:	dd08      	ble.n	800ff84 <_svfprintf_r+0xdfc>
 800ff72:	aa22      	add	r2, sp, #136	; 0x88
 800ff74:	4649      	mov	r1, r9
 800ff76:	4650      	mov	r0, sl
 800ff78:	f002 f8ae 	bl	80120d8 <__ssprint_r>
 800ff7c:	2800      	cmp	r0, #0
 800ff7e:	f040 827d 	bne.w	801047c <_svfprintf_r+0x12f4>
 800ff82:	a925      	add	r1, sp, #148	; 0x94
 800ff84:	3d10      	subs	r5, #16
 800ff86:	460c      	mov	r4, r1
 800ff88:	e7bf      	b.n	800ff0a <_svfprintf_r+0xd82>
 800ff8a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800ff8c:	2b00      	cmp	r3, #0
 800ff8e:	dc73      	bgt.n	8010078 <_svfprintf_r+0xef0>
 800ff90:	4b37      	ldr	r3, [pc, #220]	; (8010070 <_svfprintf_r+0xee8>)
 800ff92:	6023      	str	r3, [r4, #0]
 800ff94:	2301      	movs	r3, #1
 800ff96:	441e      	add	r6, r3
 800ff98:	6063      	str	r3, [r4, #4]
 800ff9a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ff9c:	9624      	str	r6, [sp, #144]	; 0x90
 800ff9e:	3301      	adds	r3, #1
 800ffa0:	2b07      	cmp	r3, #7
 800ffa2:	9323      	str	r3, [sp, #140]	; 0x8c
 800ffa4:	dc3d      	bgt.n	8010022 <_svfprintf_r+0xe9a>
 800ffa6:	3408      	adds	r4, #8
 800ffa8:	9905      	ldr	r1, [sp, #20]
 800ffaa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ffac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800ffae:	430a      	orrs	r2, r1
 800ffb0:	f008 0101 	and.w	r1, r8, #1
 800ffb4:	430a      	orrs	r2, r1
 800ffb6:	f43f acc9 	beq.w	800f94c <_svfprintf_r+0x7c4>
 800ffba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ffbc:	6022      	str	r2, [r4, #0]
 800ffbe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ffc0:	6062      	str	r2, [r4, #4]
 800ffc2:	4413      	add	r3, r2
 800ffc4:	9324      	str	r3, [sp, #144]	; 0x90
 800ffc6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ffc8:	3301      	adds	r3, #1
 800ffca:	2b07      	cmp	r3, #7
 800ffcc:	9323      	str	r3, [sp, #140]	; 0x8c
 800ffce:	dc32      	bgt.n	8010036 <_svfprintf_r+0xeae>
 800ffd0:	3408      	adds	r4, #8
 800ffd2:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 800ffd4:	2d00      	cmp	r5, #0
 800ffd6:	da1b      	bge.n	8010010 <_svfprintf_r+0xe88>
 800ffd8:	4e26      	ldr	r6, [pc, #152]	; (8010074 <_svfprintf_r+0xeec>)
 800ffda:	426d      	negs	r5, r5
 800ffdc:	4623      	mov	r3, r4
 800ffde:	2710      	movs	r7, #16
 800ffe0:	e9dd 2123 	ldrd	r2, r1, [sp, #140]	; 0x8c
 800ffe4:	2d10      	cmp	r5, #16
 800ffe6:	f102 0201 	add.w	r2, r2, #1
 800ffea:	f104 0408 	add.w	r4, r4, #8
 800ffee:	601e      	str	r6, [r3, #0]
 800fff0:	dc2b      	bgt.n	801004a <_svfprintf_r+0xec2>
 800fff2:	605d      	str	r5, [r3, #4]
 800fff4:	2a07      	cmp	r2, #7
 800fff6:	440d      	add	r5, r1
 800fff8:	e9cd 2523 	strd	r2, r5, [sp, #140]	; 0x8c
 800fffc:	dd08      	ble.n	8010010 <_svfprintf_r+0xe88>
 800fffe:	aa22      	add	r2, sp, #136	; 0x88
 8010000:	4649      	mov	r1, r9
 8010002:	4650      	mov	r0, sl
 8010004:	f002 f868 	bl	80120d8 <__ssprint_r>
 8010008:	2800      	cmp	r0, #0
 801000a:	f040 8237 	bne.w	801047c <_svfprintf_r+0x12f4>
 801000e:	ac25      	add	r4, sp, #148	; 0x94
 8010010:	9b05      	ldr	r3, [sp, #20]
 8010012:	9a05      	ldr	r2, [sp, #20]
 8010014:	6063      	str	r3, [r4, #4]
 8010016:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8010018:	f8c4 b000 	str.w	fp, [r4]
 801001c:	4413      	add	r3, r2
 801001e:	9324      	str	r3, [sp, #144]	; 0x90
 8010020:	e48d      	b.n	800f93e <_svfprintf_r+0x7b6>
 8010022:	aa22      	add	r2, sp, #136	; 0x88
 8010024:	4649      	mov	r1, r9
 8010026:	4650      	mov	r0, sl
 8010028:	f002 f856 	bl	80120d8 <__ssprint_r>
 801002c:	2800      	cmp	r0, #0
 801002e:	f040 8225 	bne.w	801047c <_svfprintf_r+0x12f4>
 8010032:	ac25      	add	r4, sp, #148	; 0x94
 8010034:	e7b8      	b.n	800ffa8 <_svfprintf_r+0xe20>
 8010036:	aa22      	add	r2, sp, #136	; 0x88
 8010038:	4649      	mov	r1, r9
 801003a:	4650      	mov	r0, sl
 801003c:	f002 f84c 	bl	80120d8 <__ssprint_r>
 8010040:	2800      	cmp	r0, #0
 8010042:	f040 821b 	bne.w	801047c <_svfprintf_r+0x12f4>
 8010046:	ac25      	add	r4, sp, #148	; 0x94
 8010048:	e7c3      	b.n	800ffd2 <_svfprintf_r+0xe4a>
 801004a:	3110      	adds	r1, #16
 801004c:	2a07      	cmp	r2, #7
 801004e:	e9cd 2123 	strd	r2, r1, [sp, #140]	; 0x8c
 8010052:	605f      	str	r7, [r3, #4]
 8010054:	dd08      	ble.n	8010068 <_svfprintf_r+0xee0>
 8010056:	aa22      	add	r2, sp, #136	; 0x88
 8010058:	4649      	mov	r1, r9
 801005a:	4650      	mov	r0, sl
 801005c:	f002 f83c 	bl	80120d8 <__ssprint_r>
 8010060:	2800      	cmp	r0, #0
 8010062:	f040 820b 	bne.w	801047c <_svfprintf_r+0x12f4>
 8010066:	ac25      	add	r4, sp, #148	; 0x94
 8010068:	3d10      	subs	r5, #16
 801006a:	4623      	mov	r3, r4
 801006c:	e7b8      	b.n	800ffe0 <_svfprintf_r+0xe58>
 801006e:	bf00      	nop
 8010070:	0801431e 	.word	0x0801431e
 8010074:	08014330 	.word	0x08014330
 8010078:	9b05      	ldr	r3, [sp, #20]
 801007a:	42ab      	cmp	r3, r5
 801007c:	bfa8      	it	ge
 801007e:	462b      	movge	r3, r5
 8010080:	2b00      	cmp	r3, #0
 8010082:	461f      	mov	r7, r3
 8010084:	dd0a      	ble.n	801009c <_svfprintf_r+0xf14>
 8010086:	441e      	add	r6, r3
 8010088:	e9c4 b300 	strd	fp, r3, [r4]
 801008c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801008e:	9624      	str	r6, [sp, #144]	; 0x90
 8010090:	3301      	adds	r3, #1
 8010092:	2b07      	cmp	r3, #7
 8010094:	9323      	str	r3, [sp, #140]	; 0x8c
 8010096:	f300 8086 	bgt.w	80101a6 <_svfprintf_r+0x101e>
 801009a:	3408      	adds	r4, #8
 801009c:	2f00      	cmp	r7, #0
 801009e:	bfac      	ite	ge
 80100a0:	1bee      	subge	r6, r5, r7
 80100a2:	462e      	movlt	r6, r5
 80100a4:	2e00      	cmp	r6, #0
 80100a6:	dd19      	ble.n	80100dc <_svfprintf_r+0xf54>
 80100a8:	4f97      	ldr	r7, [pc, #604]	; (8010308 <_svfprintf_r+0x1180>)
 80100aa:	6027      	str	r7, [r4, #0]
 80100ac:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 80100b0:	2e10      	cmp	r6, #16
 80100b2:	f103 0301 	add.w	r3, r3, #1
 80100b6:	f104 0108 	add.w	r1, r4, #8
 80100ba:	dc7e      	bgt.n	80101ba <_svfprintf_r+0x1032>
 80100bc:	6066      	str	r6, [r4, #4]
 80100be:	2b07      	cmp	r3, #7
 80100c0:	4416      	add	r6, r2
 80100c2:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 80100c6:	f340 808b 	ble.w	80101e0 <_svfprintf_r+0x1058>
 80100ca:	aa22      	add	r2, sp, #136	; 0x88
 80100cc:	4649      	mov	r1, r9
 80100ce:	4650      	mov	r0, sl
 80100d0:	f002 f802 	bl	80120d8 <__ssprint_r>
 80100d4:	2800      	cmp	r0, #0
 80100d6:	f040 81d1 	bne.w	801047c <_svfprintf_r+0x12f4>
 80100da:	ac25      	add	r4, sp, #148	; 0x94
 80100dc:	f418 6f80 	tst.w	r8, #1024	; 0x400
 80100e0:	445d      	add	r5, fp
 80100e2:	d00b      	beq.n	80100fc <_svfprintf_r+0xf74>
 80100e4:	4e88      	ldr	r6, [pc, #544]	; (8010308 <_svfprintf_r+0x1180>)
 80100e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80100e8:	2b00      	cmp	r3, #0
 80100ea:	d17b      	bne.n	80101e4 <_svfprintf_r+0x105c>
 80100ec:	9b08      	ldr	r3, [sp, #32]
 80100ee:	2b00      	cmp	r3, #0
 80100f0:	d17b      	bne.n	80101ea <_svfprintf_r+0x1062>
 80100f2:	9b05      	ldr	r3, [sp, #20]
 80100f4:	445b      	add	r3, fp
 80100f6:	429d      	cmp	r5, r3
 80100f8:	bf28      	it	cs
 80100fa:	461d      	movcs	r5, r3
 80100fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80100fe:	9a05      	ldr	r2, [sp, #20]
 8010100:	4293      	cmp	r3, r2
 8010102:	db02      	blt.n	801010a <_svfprintf_r+0xf82>
 8010104:	f018 0f01 	tst.w	r8, #1
 8010108:	d00e      	beq.n	8010128 <_svfprintf_r+0xfa0>
 801010a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801010c:	6023      	str	r3, [r4, #0]
 801010e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010110:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010112:	6063      	str	r3, [r4, #4]
 8010114:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8010116:	4413      	add	r3, r2
 8010118:	9324      	str	r3, [sp, #144]	; 0x90
 801011a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801011c:	3301      	adds	r3, #1
 801011e:	2b07      	cmp	r3, #7
 8010120:	9323      	str	r3, [sp, #140]	; 0x8c
 8010122:	f300 80dd 	bgt.w	80102e0 <_svfprintf_r+0x1158>
 8010126:	3408      	adds	r4, #8
 8010128:	9b05      	ldr	r3, [sp, #20]
 801012a:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 801012c:	eb0b 0203 	add.w	r2, fp, r3
 8010130:	1b9e      	subs	r6, r3, r6
 8010132:	1b52      	subs	r2, r2, r5
 8010134:	4296      	cmp	r6, r2
 8010136:	bfa8      	it	ge
 8010138:	4616      	movge	r6, r2
 801013a:	2e00      	cmp	r6, #0
 801013c:	dd0b      	ble.n	8010156 <_svfprintf_r+0xfce>
 801013e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8010140:	4433      	add	r3, r6
 8010142:	9324      	str	r3, [sp, #144]	; 0x90
 8010144:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8010146:	3301      	adds	r3, #1
 8010148:	2b07      	cmp	r3, #7
 801014a:	e9c4 5600 	strd	r5, r6, [r4]
 801014e:	9323      	str	r3, [sp, #140]	; 0x8c
 8010150:	f300 80d0 	bgt.w	80102f4 <_svfprintf_r+0x116c>
 8010154:	3408      	adds	r4, #8
 8010156:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8010158:	9b05      	ldr	r3, [sp, #20]
 801015a:	2e00      	cmp	r6, #0
 801015c:	eba3 0505 	sub.w	r5, r3, r5
 8010160:	bfa8      	it	ge
 8010162:	1bad      	subge	r5, r5, r6
 8010164:	2d00      	cmp	r5, #0
 8010166:	f77f abf1 	ble.w	800f94c <_svfprintf_r+0x7c4>
 801016a:	4e67      	ldr	r6, [pc, #412]	; (8010308 <_svfprintf_r+0x1180>)
 801016c:	2710      	movs	r7, #16
 801016e:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 8010172:	2d10      	cmp	r5, #16
 8010174:	f103 0301 	add.w	r3, r3, #1
 8010178:	f104 0108 	add.w	r1, r4, #8
 801017c:	6026      	str	r6, [r4, #0]
 801017e:	f77f aecd 	ble.w	800ff1c <_svfprintf_r+0xd94>
 8010182:	3210      	adds	r2, #16
 8010184:	2b07      	cmp	r3, #7
 8010186:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 801018a:	6067      	str	r7, [r4, #4]
 801018c:	dd08      	ble.n	80101a0 <_svfprintf_r+0x1018>
 801018e:	aa22      	add	r2, sp, #136	; 0x88
 8010190:	4649      	mov	r1, r9
 8010192:	4650      	mov	r0, sl
 8010194:	f001 ffa0 	bl	80120d8 <__ssprint_r>
 8010198:	2800      	cmp	r0, #0
 801019a:	f040 816f 	bne.w	801047c <_svfprintf_r+0x12f4>
 801019e:	a925      	add	r1, sp, #148	; 0x94
 80101a0:	3d10      	subs	r5, #16
 80101a2:	460c      	mov	r4, r1
 80101a4:	e7e3      	b.n	801016e <_svfprintf_r+0xfe6>
 80101a6:	aa22      	add	r2, sp, #136	; 0x88
 80101a8:	4649      	mov	r1, r9
 80101aa:	4650      	mov	r0, sl
 80101ac:	f001 ff94 	bl	80120d8 <__ssprint_r>
 80101b0:	2800      	cmp	r0, #0
 80101b2:	f040 8163 	bne.w	801047c <_svfprintf_r+0x12f4>
 80101b6:	ac25      	add	r4, sp, #148	; 0x94
 80101b8:	e770      	b.n	801009c <_svfprintf_r+0xf14>
 80101ba:	2010      	movs	r0, #16
 80101bc:	4402      	add	r2, r0
 80101be:	2b07      	cmp	r3, #7
 80101c0:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 80101c4:	6060      	str	r0, [r4, #4]
 80101c6:	dd08      	ble.n	80101da <_svfprintf_r+0x1052>
 80101c8:	aa22      	add	r2, sp, #136	; 0x88
 80101ca:	4649      	mov	r1, r9
 80101cc:	4650      	mov	r0, sl
 80101ce:	f001 ff83 	bl	80120d8 <__ssprint_r>
 80101d2:	2800      	cmp	r0, #0
 80101d4:	f040 8152 	bne.w	801047c <_svfprintf_r+0x12f4>
 80101d8:	a925      	add	r1, sp, #148	; 0x94
 80101da:	3e10      	subs	r6, #16
 80101dc:	460c      	mov	r4, r1
 80101de:	e764      	b.n	80100aa <_svfprintf_r+0xf22>
 80101e0:	460c      	mov	r4, r1
 80101e2:	e77b      	b.n	80100dc <_svfprintf_r+0xf54>
 80101e4:	9b08      	ldr	r3, [sp, #32]
 80101e6:	2b00      	cmp	r3, #0
 80101e8:	d04a      	beq.n	8010280 <_svfprintf_r+0x10f8>
 80101ea:	9b08      	ldr	r3, [sp, #32]
 80101ec:	3b01      	subs	r3, #1
 80101ee:	9308      	str	r3, [sp, #32]
 80101f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80101f2:	6023      	str	r3, [r4, #0]
 80101f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80101f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80101f8:	6063      	str	r3, [r4, #4]
 80101fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80101fc:	4413      	add	r3, r2
 80101fe:	9324      	str	r3, [sp, #144]	; 0x90
 8010200:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8010202:	3301      	adds	r3, #1
 8010204:	2b07      	cmp	r3, #7
 8010206:	9323      	str	r3, [sp, #140]	; 0x8c
 8010208:	dc41      	bgt.n	801028e <_svfprintf_r+0x1106>
 801020a:	3408      	adds	r4, #8
 801020c:	9b05      	ldr	r3, [sp, #20]
 801020e:	445b      	add	r3, fp
 8010210:	1b5a      	subs	r2, r3, r5
 8010212:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010214:	781b      	ldrb	r3, [r3, #0]
 8010216:	4293      	cmp	r3, r2
 8010218:	bfa8      	it	ge
 801021a:	4613      	movge	r3, r2
 801021c:	2b00      	cmp	r3, #0
 801021e:	461f      	mov	r7, r3
 8010220:	dd0a      	ble.n	8010238 <_svfprintf_r+0x10b0>
 8010222:	e9c4 5300 	strd	r5, r3, [r4]
 8010226:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8010228:	443b      	add	r3, r7
 801022a:	9324      	str	r3, [sp, #144]	; 0x90
 801022c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801022e:	3301      	adds	r3, #1
 8010230:	2b07      	cmp	r3, #7
 8010232:	9323      	str	r3, [sp, #140]	; 0x8c
 8010234:	dc35      	bgt.n	80102a2 <_svfprintf_r+0x111a>
 8010236:	3408      	adds	r4, #8
 8010238:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801023a:	781b      	ldrb	r3, [r3, #0]
 801023c:	2f00      	cmp	r7, #0
 801023e:	bfac      	ite	ge
 8010240:	1bdf      	subge	r7, r3, r7
 8010242:	461f      	movlt	r7, r3
 8010244:	2f00      	cmp	r7, #0
 8010246:	dd17      	ble.n	8010278 <_svfprintf_r+0x10f0>
 8010248:	e9dd 2323 	ldrd	r2, r3, [sp, #140]	; 0x8c
 801024c:	2f10      	cmp	r7, #16
 801024e:	f102 0201 	add.w	r2, r2, #1
 8010252:	f104 0108 	add.w	r1, r4, #8
 8010256:	6026      	str	r6, [r4, #0]
 8010258:	dc2d      	bgt.n	80102b6 <_svfprintf_r+0x112e>
 801025a:	443b      	add	r3, r7
 801025c:	2a07      	cmp	r2, #7
 801025e:	e9cd 2323 	strd	r2, r3, [sp, #140]	; 0x8c
 8010262:	6067      	str	r7, [r4, #4]
 8010264:	dd3a      	ble.n	80102dc <_svfprintf_r+0x1154>
 8010266:	aa22      	add	r2, sp, #136	; 0x88
 8010268:	4649      	mov	r1, r9
 801026a:	4650      	mov	r0, sl
 801026c:	f001 ff34 	bl	80120d8 <__ssprint_r>
 8010270:	2800      	cmp	r0, #0
 8010272:	f040 8103 	bne.w	801047c <_svfprintf_r+0x12f4>
 8010276:	ac25      	add	r4, sp, #148	; 0x94
 8010278:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801027a:	781b      	ldrb	r3, [r3, #0]
 801027c:	441d      	add	r5, r3
 801027e:	e732      	b.n	80100e6 <_svfprintf_r+0xf5e>
 8010280:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010282:	3b01      	subs	r3, #1
 8010284:	930a      	str	r3, [sp, #40]	; 0x28
 8010286:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010288:	3b01      	subs	r3, #1
 801028a:	9309      	str	r3, [sp, #36]	; 0x24
 801028c:	e7b0      	b.n	80101f0 <_svfprintf_r+0x1068>
 801028e:	aa22      	add	r2, sp, #136	; 0x88
 8010290:	4649      	mov	r1, r9
 8010292:	4650      	mov	r0, sl
 8010294:	f001 ff20 	bl	80120d8 <__ssprint_r>
 8010298:	2800      	cmp	r0, #0
 801029a:	f040 80ef 	bne.w	801047c <_svfprintf_r+0x12f4>
 801029e:	ac25      	add	r4, sp, #148	; 0x94
 80102a0:	e7b4      	b.n	801020c <_svfprintf_r+0x1084>
 80102a2:	aa22      	add	r2, sp, #136	; 0x88
 80102a4:	4649      	mov	r1, r9
 80102a6:	4650      	mov	r0, sl
 80102a8:	f001 ff16 	bl	80120d8 <__ssprint_r>
 80102ac:	2800      	cmp	r0, #0
 80102ae:	f040 80e5 	bne.w	801047c <_svfprintf_r+0x12f4>
 80102b2:	ac25      	add	r4, sp, #148	; 0x94
 80102b4:	e7c0      	b.n	8010238 <_svfprintf_r+0x10b0>
 80102b6:	2010      	movs	r0, #16
 80102b8:	4403      	add	r3, r0
 80102ba:	2a07      	cmp	r2, #7
 80102bc:	e9cd 2323 	strd	r2, r3, [sp, #140]	; 0x8c
 80102c0:	6060      	str	r0, [r4, #4]
 80102c2:	dd08      	ble.n	80102d6 <_svfprintf_r+0x114e>
 80102c4:	aa22      	add	r2, sp, #136	; 0x88
 80102c6:	4649      	mov	r1, r9
 80102c8:	4650      	mov	r0, sl
 80102ca:	f001 ff05 	bl	80120d8 <__ssprint_r>
 80102ce:	2800      	cmp	r0, #0
 80102d0:	f040 80d4 	bne.w	801047c <_svfprintf_r+0x12f4>
 80102d4:	a925      	add	r1, sp, #148	; 0x94
 80102d6:	3f10      	subs	r7, #16
 80102d8:	460c      	mov	r4, r1
 80102da:	e7b5      	b.n	8010248 <_svfprintf_r+0x10c0>
 80102dc:	460c      	mov	r4, r1
 80102de:	e7cb      	b.n	8010278 <_svfprintf_r+0x10f0>
 80102e0:	aa22      	add	r2, sp, #136	; 0x88
 80102e2:	4649      	mov	r1, r9
 80102e4:	4650      	mov	r0, sl
 80102e6:	f001 fef7 	bl	80120d8 <__ssprint_r>
 80102ea:	2800      	cmp	r0, #0
 80102ec:	f040 80c6 	bne.w	801047c <_svfprintf_r+0x12f4>
 80102f0:	ac25      	add	r4, sp, #148	; 0x94
 80102f2:	e719      	b.n	8010128 <_svfprintf_r+0xfa0>
 80102f4:	aa22      	add	r2, sp, #136	; 0x88
 80102f6:	4649      	mov	r1, r9
 80102f8:	4650      	mov	r0, sl
 80102fa:	f001 feed 	bl	80120d8 <__ssprint_r>
 80102fe:	2800      	cmp	r0, #0
 8010300:	f040 80bc 	bne.w	801047c <_svfprintf_r+0x12f4>
 8010304:	ac25      	add	r4, sp, #148	; 0x94
 8010306:	e726      	b.n	8010156 <_svfprintf_r+0xfce>
 8010308:	08014330 	.word	0x08014330
 801030c:	9a05      	ldr	r2, [sp, #20]
 801030e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8010310:	2a01      	cmp	r2, #1
 8010312:	f106 0601 	add.w	r6, r6, #1
 8010316:	f103 0301 	add.w	r3, r3, #1
 801031a:	f104 0508 	add.w	r5, r4, #8
 801031e:	dc02      	bgt.n	8010326 <_svfprintf_r+0x119e>
 8010320:	f018 0f01 	tst.w	r8, #1
 8010324:	d07e      	beq.n	8010424 <_svfprintf_r+0x129c>
 8010326:	2201      	movs	r2, #1
 8010328:	2b07      	cmp	r3, #7
 801032a:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 801032e:	f8c4 b000 	str.w	fp, [r4]
 8010332:	6062      	str	r2, [r4, #4]
 8010334:	dd08      	ble.n	8010348 <_svfprintf_r+0x11c0>
 8010336:	aa22      	add	r2, sp, #136	; 0x88
 8010338:	4649      	mov	r1, r9
 801033a:	4650      	mov	r0, sl
 801033c:	f001 fecc 	bl	80120d8 <__ssprint_r>
 8010340:	2800      	cmp	r0, #0
 8010342:	f040 809b 	bne.w	801047c <_svfprintf_r+0x12f4>
 8010346:	ad25      	add	r5, sp, #148	; 0x94
 8010348:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801034a:	602b      	str	r3, [r5, #0]
 801034c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801034e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010350:	606b      	str	r3, [r5, #4]
 8010352:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8010354:	4413      	add	r3, r2
 8010356:	9324      	str	r3, [sp, #144]	; 0x90
 8010358:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801035a:	3301      	adds	r3, #1
 801035c:	2b07      	cmp	r3, #7
 801035e:	9323      	str	r3, [sp, #140]	; 0x8c
 8010360:	dc32      	bgt.n	80103c8 <_svfprintf_r+0x1240>
 8010362:	3508      	adds	r5, #8
 8010364:	9b05      	ldr	r3, [sp, #20]
 8010366:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 801036a:	1e5c      	subs	r4, r3, #1
 801036c:	2200      	movs	r2, #0
 801036e:	2300      	movs	r3, #0
 8010370:	f7f7 fa0c 	bl	800778c <__aeabi_dcmpeq>
 8010374:	2800      	cmp	r0, #0
 8010376:	d130      	bne.n	80103da <_svfprintf_r+0x1252>
 8010378:	9923      	ldr	r1, [sp, #140]	; 0x8c
 801037a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801037c:	9a05      	ldr	r2, [sp, #20]
 801037e:	3101      	adds	r1, #1
 8010380:	3b01      	subs	r3, #1
 8010382:	f10b 0001 	add.w	r0, fp, #1
 8010386:	4413      	add	r3, r2
 8010388:	2907      	cmp	r1, #7
 801038a:	e9c5 0400 	strd	r0, r4, [r5]
 801038e:	e9cd 1323 	strd	r1, r3, [sp, #140]	; 0x8c
 8010392:	dd50      	ble.n	8010436 <_svfprintf_r+0x12ae>
 8010394:	aa22      	add	r2, sp, #136	; 0x88
 8010396:	4649      	mov	r1, r9
 8010398:	4650      	mov	r0, sl
 801039a:	f001 fe9d 	bl	80120d8 <__ssprint_r>
 801039e:	2800      	cmp	r0, #0
 80103a0:	d16c      	bne.n	801047c <_svfprintf_r+0x12f4>
 80103a2:	ad25      	add	r5, sp, #148	; 0x94
 80103a4:	ab1e      	add	r3, sp, #120	; 0x78
 80103a6:	602b      	str	r3, [r5, #0]
 80103a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80103aa:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80103ac:	606b      	str	r3, [r5, #4]
 80103ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80103b0:	4413      	add	r3, r2
 80103b2:	9324      	str	r3, [sp, #144]	; 0x90
 80103b4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80103b6:	3301      	adds	r3, #1
 80103b8:	2b07      	cmp	r3, #7
 80103ba:	9323      	str	r3, [sp, #140]	; 0x8c
 80103bc:	f73f adb5 	bgt.w	800ff2a <_svfprintf_r+0xda2>
 80103c0:	f105 0408 	add.w	r4, r5, #8
 80103c4:	f7ff bac2 	b.w	800f94c <_svfprintf_r+0x7c4>
 80103c8:	aa22      	add	r2, sp, #136	; 0x88
 80103ca:	4649      	mov	r1, r9
 80103cc:	4650      	mov	r0, sl
 80103ce:	f001 fe83 	bl	80120d8 <__ssprint_r>
 80103d2:	2800      	cmp	r0, #0
 80103d4:	d152      	bne.n	801047c <_svfprintf_r+0x12f4>
 80103d6:	ad25      	add	r5, sp, #148	; 0x94
 80103d8:	e7c4      	b.n	8010364 <_svfprintf_r+0x11dc>
 80103da:	2c00      	cmp	r4, #0
 80103dc:	dde2      	ble.n	80103a4 <_svfprintf_r+0x121c>
 80103de:	4e58      	ldr	r6, [pc, #352]	; (8010540 <_svfprintf_r+0x13b8>)
 80103e0:	2710      	movs	r7, #16
 80103e2:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 80103e6:	2c10      	cmp	r4, #16
 80103e8:	f103 0301 	add.w	r3, r3, #1
 80103ec:	f105 0108 	add.w	r1, r5, #8
 80103f0:	602e      	str	r6, [r5, #0]
 80103f2:	dc07      	bgt.n	8010404 <_svfprintf_r+0x127c>
 80103f4:	606c      	str	r4, [r5, #4]
 80103f6:	2b07      	cmp	r3, #7
 80103f8:	4414      	add	r4, r2
 80103fa:	e9cd 3423 	strd	r3, r4, [sp, #140]	; 0x8c
 80103fe:	dcc9      	bgt.n	8010394 <_svfprintf_r+0x120c>
 8010400:	460d      	mov	r5, r1
 8010402:	e7cf      	b.n	80103a4 <_svfprintf_r+0x121c>
 8010404:	3210      	adds	r2, #16
 8010406:	2b07      	cmp	r3, #7
 8010408:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 801040c:	606f      	str	r7, [r5, #4]
 801040e:	dd06      	ble.n	801041e <_svfprintf_r+0x1296>
 8010410:	aa22      	add	r2, sp, #136	; 0x88
 8010412:	4649      	mov	r1, r9
 8010414:	4650      	mov	r0, sl
 8010416:	f001 fe5f 	bl	80120d8 <__ssprint_r>
 801041a:	bb78      	cbnz	r0, 801047c <_svfprintf_r+0x12f4>
 801041c:	a925      	add	r1, sp, #148	; 0x94
 801041e:	3c10      	subs	r4, #16
 8010420:	460d      	mov	r5, r1
 8010422:	e7de      	b.n	80103e2 <_svfprintf_r+0x125a>
 8010424:	2201      	movs	r2, #1
 8010426:	2b07      	cmp	r3, #7
 8010428:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 801042c:	f8c4 b000 	str.w	fp, [r4]
 8010430:	6062      	str	r2, [r4, #4]
 8010432:	ddb7      	ble.n	80103a4 <_svfprintf_r+0x121c>
 8010434:	e7ae      	b.n	8010394 <_svfprintf_r+0x120c>
 8010436:	3508      	adds	r5, #8
 8010438:	e7b4      	b.n	80103a4 <_svfprintf_r+0x121c>
 801043a:	460c      	mov	r4, r1
 801043c:	f7ff ba86 	b.w	800f94c <_svfprintf_r+0x7c4>
 8010440:	e9dd 3210 	ldrd	r3, r2, [sp, #64]	; 0x40
 8010444:	1a9d      	subs	r5, r3, r2
 8010446:	2d00      	cmp	r5, #0
 8010448:	f77f aa84 	ble.w	800f954 <_svfprintf_r+0x7cc>
 801044c:	4e3d      	ldr	r6, [pc, #244]	; (8010544 <_svfprintf_r+0x13bc>)
 801044e:	2710      	movs	r7, #16
 8010450:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 8010454:	2d10      	cmp	r5, #16
 8010456:	f103 0301 	add.w	r3, r3, #1
 801045a:	6026      	str	r6, [r4, #0]
 801045c:	dc18      	bgt.n	8010490 <_svfprintf_r+0x1308>
 801045e:	6065      	str	r5, [r4, #4]
 8010460:	2b07      	cmp	r3, #7
 8010462:	4415      	add	r5, r2
 8010464:	e9cd 3523 	strd	r3, r5, [sp, #140]	; 0x8c
 8010468:	f77f aa74 	ble.w	800f954 <_svfprintf_r+0x7cc>
 801046c:	aa22      	add	r2, sp, #136	; 0x88
 801046e:	4649      	mov	r1, r9
 8010470:	4650      	mov	r0, sl
 8010472:	f001 fe31 	bl	80120d8 <__ssprint_r>
 8010476:	2800      	cmp	r0, #0
 8010478:	f43f aa6c 	beq.w	800f954 <_svfprintf_r+0x7cc>
 801047c:	9b03      	ldr	r3, [sp, #12]
 801047e:	2b00      	cmp	r3, #0
 8010480:	f43f a88a 	beq.w	800f598 <_svfprintf_r+0x410>
 8010484:	4619      	mov	r1, r3
 8010486:	4650      	mov	r0, sl
 8010488:	f001 f918 	bl	80116bc <_free_r>
 801048c:	f7ff b884 	b.w	800f598 <_svfprintf_r+0x410>
 8010490:	3210      	adds	r2, #16
 8010492:	2b07      	cmp	r3, #7
 8010494:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 8010498:	6067      	str	r7, [r4, #4]
 801049a:	dc02      	bgt.n	80104a2 <_svfprintf_r+0x131a>
 801049c:	3408      	adds	r4, #8
 801049e:	3d10      	subs	r5, #16
 80104a0:	e7d6      	b.n	8010450 <_svfprintf_r+0x12c8>
 80104a2:	aa22      	add	r2, sp, #136	; 0x88
 80104a4:	4649      	mov	r1, r9
 80104a6:	4650      	mov	r0, sl
 80104a8:	f001 fe16 	bl	80120d8 <__ssprint_r>
 80104ac:	2800      	cmp	r0, #0
 80104ae:	d1e5      	bne.n	801047c <_svfprintf_r+0x12f4>
 80104b0:	ac25      	add	r4, sp, #148	; 0x94
 80104b2:	e7f4      	b.n	801049e <_svfprintf_r+0x1316>
 80104b4:	9903      	ldr	r1, [sp, #12]
 80104b6:	4650      	mov	r0, sl
 80104b8:	f001 f900 	bl	80116bc <_free_r>
 80104bc:	f7ff ba62 	b.w	800f984 <_svfprintf_r+0x7fc>
 80104c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80104c2:	2b00      	cmp	r3, #0
 80104c4:	f43f a868 	beq.w	800f598 <_svfprintf_r+0x410>
 80104c8:	aa22      	add	r2, sp, #136	; 0x88
 80104ca:	4649      	mov	r1, r9
 80104cc:	4650      	mov	r0, sl
 80104ce:	f001 fe03 	bl	80120d8 <__ssprint_r>
 80104d2:	f7ff b861 	b.w	800f598 <_svfprintf_r+0x410>
 80104d6:	ea56 0207 	orrs.w	r2, r6, r7
 80104da:	f8cd 800c 	str.w	r8, [sp, #12]
 80104de:	f43f ab78 	beq.w	800fbd2 <_svfprintf_r+0xa4a>
 80104e2:	2b01      	cmp	r3, #1
 80104e4:	f43f ac0d 	beq.w	800fd02 <_svfprintf_r+0xb7a>
 80104e8:	2b02      	cmp	r3, #2
 80104ea:	f50d 7b9c 	add.w	fp, sp, #312	; 0x138
 80104ee:	f43f ac55 	beq.w	800fd9c <_svfprintf_r+0xc14>
 80104f2:	08f2      	lsrs	r2, r6, #3
 80104f4:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
 80104f8:	08f8      	lsrs	r0, r7, #3
 80104fa:	f006 0307 	and.w	r3, r6, #7
 80104fe:	4607      	mov	r7, r0
 8010500:	4616      	mov	r6, r2
 8010502:	3330      	adds	r3, #48	; 0x30
 8010504:	ea56 0207 	orrs.w	r2, r6, r7
 8010508:	4659      	mov	r1, fp
 801050a:	f80b 3d01 	strb.w	r3, [fp, #-1]!
 801050e:	d1f0      	bne.n	80104f2 <_svfprintf_r+0x136a>
 8010510:	9a03      	ldr	r2, [sp, #12]
 8010512:	07d2      	lsls	r2, r2, #31
 8010514:	d506      	bpl.n	8010524 <_svfprintf_r+0x139c>
 8010516:	2b30      	cmp	r3, #48	; 0x30
 8010518:	d004      	beq.n	8010524 <_svfprintf_r+0x139c>
 801051a:	2330      	movs	r3, #48	; 0x30
 801051c:	f80b 3c01 	strb.w	r3, [fp, #-1]
 8010520:	f1a1 0b02 	sub.w	fp, r1, #2
 8010524:	ab4e      	add	r3, sp, #312	; 0x138
 8010526:	eba3 030b 	sub.w	r3, r3, fp
 801052a:	9e04      	ldr	r6, [sp, #16]
 801052c:	9304      	str	r3, [sp, #16]
 801052e:	2300      	movs	r3, #0
 8010530:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8010534:	9303      	str	r3, [sp, #12]
 8010536:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801053a:	461d      	mov	r5, r3
 801053c:	f7ff b94c 	b.w	800f7d8 <_svfprintf_r+0x650>
 8010540:	08014330 	.word	0x08014330
 8010544:	08014320 	.word	0x08014320

08010548 <sysconf>:
 8010548:	2808      	cmp	r0, #8
 801054a:	b508      	push	{r3, lr}
 801054c:	d006      	beq.n	801055c <sysconf+0x14>
 801054e:	f7fd fed5 	bl	800e2fc <__errno>
 8010552:	2316      	movs	r3, #22
 8010554:	6003      	str	r3, [r0, #0]
 8010556:	f04f 30ff 	mov.w	r0, #4294967295
 801055a:	bd08      	pop	{r3, pc}
 801055c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8010560:	e7fb      	b.n	801055a <sysconf+0x12>

08010562 <__swbuf_r>:
 8010562:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010564:	460e      	mov	r6, r1
 8010566:	4614      	mov	r4, r2
 8010568:	4605      	mov	r5, r0
 801056a:	b118      	cbz	r0, 8010574 <__swbuf_r+0x12>
 801056c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801056e:	b90b      	cbnz	r3, 8010574 <__swbuf_r+0x12>
 8010570:	f001 f814 	bl	801159c <__sinit>
 8010574:	69a3      	ldr	r3, [r4, #24]
 8010576:	60a3      	str	r3, [r4, #8]
 8010578:	89a3      	ldrh	r3, [r4, #12]
 801057a:	0719      	lsls	r1, r3, #28
 801057c:	d529      	bpl.n	80105d2 <__swbuf_r+0x70>
 801057e:	6923      	ldr	r3, [r4, #16]
 8010580:	b33b      	cbz	r3, 80105d2 <__swbuf_r+0x70>
 8010582:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010586:	b2f6      	uxtb	r6, r6
 8010588:	049a      	lsls	r2, r3, #18
 801058a:	4637      	mov	r7, r6
 801058c:	d52a      	bpl.n	80105e4 <__swbuf_r+0x82>
 801058e:	6823      	ldr	r3, [r4, #0]
 8010590:	6920      	ldr	r0, [r4, #16]
 8010592:	1a18      	subs	r0, r3, r0
 8010594:	6963      	ldr	r3, [r4, #20]
 8010596:	4283      	cmp	r3, r0
 8010598:	dc04      	bgt.n	80105a4 <__swbuf_r+0x42>
 801059a:	4621      	mov	r1, r4
 801059c:	4628      	mov	r0, r5
 801059e:	f000 ff91 	bl	80114c4 <_fflush_r>
 80105a2:	b9e0      	cbnz	r0, 80105de <__swbuf_r+0x7c>
 80105a4:	68a3      	ldr	r3, [r4, #8]
 80105a6:	3b01      	subs	r3, #1
 80105a8:	60a3      	str	r3, [r4, #8]
 80105aa:	6823      	ldr	r3, [r4, #0]
 80105ac:	1c5a      	adds	r2, r3, #1
 80105ae:	6022      	str	r2, [r4, #0]
 80105b0:	701e      	strb	r6, [r3, #0]
 80105b2:	6962      	ldr	r2, [r4, #20]
 80105b4:	1c43      	adds	r3, r0, #1
 80105b6:	429a      	cmp	r2, r3
 80105b8:	d004      	beq.n	80105c4 <__swbuf_r+0x62>
 80105ba:	89a3      	ldrh	r3, [r4, #12]
 80105bc:	07db      	lsls	r3, r3, #31
 80105be:	d506      	bpl.n	80105ce <__swbuf_r+0x6c>
 80105c0:	2e0a      	cmp	r6, #10
 80105c2:	d104      	bne.n	80105ce <__swbuf_r+0x6c>
 80105c4:	4621      	mov	r1, r4
 80105c6:	4628      	mov	r0, r5
 80105c8:	f000 ff7c 	bl	80114c4 <_fflush_r>
 80105cc:	b938      	cbnz	r0, 80105de <__swbuf_r+0x7c>
 80105ce:	4638      	mov	r0, r7
 80105d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80105d2:	4621      	mov	r1, r4
 80105d4:	4628      	mov	r0, r5
 80105d6:	f000 f81f 	bl	8010618 <__swsetup_r>
 80105da:	2800      	cmp	r0, #0
 80105dc:	d0d1      	beq.n	8010582 <__swbuf_r+0x20>
 80105de:	f04f 37ff 	mov.w	r7, #4294967295
 80105e2:	e7f4      	b.n	80105ce <__swbuf_r+0x6c>
 80105e4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80105e8:	81a3      	strh	r3, [r4, #12]
 80105ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80105ec:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80105f0:	6663      	str	r3, [r4, #100]	; 0x64
 80105f2:	e7cc      	b.n	801058e <__swbuf_r+0x2c>

080105f4 <_write_r>:
 80105f4:	b538      	push	{r3, r4, r5, lr}
 80105f6:	4d07      	ldr	r5, [pc, #28]	; (8010614 <_write_r+0x20>)
 80105f8:	4604      	mov	r4, r0
 80105fa:	4608      	mov	r0, r1
 80105fc:	4611      	mov	r1, r2
 80105fe:	2200      	movs	r2, #0
 8010600:	602a      	str	r2, [r5, #0]
 8010602:	461a      	mov	r2, r3
 8010604:	f7f8 fdcb 	bl	800919e <_write>
 8010608:	1c43      	adds	r3, r0, #1
 801060a:	d102      	bne.n	8010612 <_write_r+0x1e>
 801060c:	682b      	ldr	r3, [r5, #0]
 801060e:	b103      	cbz	r3, 8010612 <_write_r+0x1e>
 8010610:	6023      	str	r3, [r4, #0]
 8010612:	bd38      	pop	{r3, r4, r5, pc}
 8010614:	20000c90 	.word	0x20000c90

08010618 <__swsetup_r>:
 8010618:	b538      	push	{r3, r4, r5, lr}
 801061a:	4b2a      	ldr	r3, [pc, #168]	; (80106c4 <__swsetup_r+0xac>)
 801061c:	4605      	mov	r5, r0
 801061e:	6818      	ldr	r0, [r3, #0]
 8010620:	460c      	mov	r4, r1
 8010622:	b118      	cbz	r0, 801062c <__swsetup_r+0x14>
 8010624:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8010626:	b90b      	cbnz	r3, 801062c <__swsetup_r+0x14>
 8010628:	f000 ffb8 	bl	801159c <__sinit>
 801062c:	89a3      	ldrh	r3, [r4, #12]
 801062e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8010632:	0718      	lsls	r0, r3, #28
 8010634:	d422      	bmi.n	801067c <__swsetup_r+0x64>
 8010636:	06d9      	lsls	r1, r3, #27
 8010638:	d407      	bmi.n	801064a <__swsetup_r+0x32>
 801063a:	2309      	movs	r3, #9
 801063c:	602b      	str	r3, [r5, #0]
 801063e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8010642:	81a3      	strh	r3, [r4, #12]
 8010644:	f04f 30ff 	mov.w	r0, #4294967295
 8010648:	e034      	b.n	80106b4 <__swsetup_r+0x9c>
 801064a:	0758      	lsls	r0, r3, #29
 801064c:	d512      	bpl.n	8010674 <__swsetup_r+0x5c>
 801064e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010650:	b141      	cbz	r1, 8010664 <__swsetup_r+0x4c>
 8010652:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8010656:	4299      	cmp	r1, r3
 8010658:	d002      	beq.n	8010660 <__swsetup_r+0x48>
 801065a:	4628      	mov	r0, r5
 801065c:	f001 f82e 	bl	80116bc <_free_r>
 8010660:	2300      	movs	r3, #0
 8010662:	6323      	str	r3, [r4, #48]	; 0x30
 8010664:	89a3      	ldrh	r3, [r4, #12]
 8010666:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801066a:	81a3      	strh	r3, [r4, #12]
 801066c:	2300      	movs	r3, #0
 801066e:	6063      	str	r3, [r4, #4]
 8010670:	6923      	ldr	r3, [r4, #16]
 8010672:	6023      	str	r3, [r4, #0]
 8010674:	89a3      	ldrh	r3, [r4, #12]
 8010676:	f043 0308 	orr.w	r3, r3, #8
 801067a:	81a3      	strh	r3, [r4, #12]
 801067c:	6923      	ldr	r3, [r4, #16]
 801067e:	b94b      	cbnz	r3, 8010694 <__swsetup_r+0x7c>
 8010680:	89a3      	ldrh	r3, [r4, #12]
 8010682:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8010686:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801068a:	d003      	beq.n	8010694 <__swsetup_r+0x7c>
 801068c:	4621      	mov	r1, r4
 801068e:	4628      	mov	r0, r5
 8010690:	f001 f924 	bl	80118dc <__smakebuf_r>
 8010694:	89a0      	ldrh	r0, [r4, #12]
 8010696:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801069a:	f010 0301 	ands.w	r3, r0, #1
 801069e:	d00a      	beq.n	80106b6 <__swsetup_r+0x9e>
 80106a0:	2300      	movs	r3, #0
 80106a2:	60a3      	str	r3, [r4, #8]
 80106a4:	6963      	ldr	r3, [r4, #20]
 80106a6:	425b      	negs	r3, r3
 80106a8:	61a3      	str	r3, [r4, #24]
 80106aa:	6923      	ldr	r3, [r4, #16]
 80106ac:	b943      	cbnz	r3, 80106c0 <__swsetup_r+0xa8>
 80106ae:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80106b2:	d1c4      	bne.n	801063e <__swsetup_r+0x26>
 80106b4:	bd38      	pop	{r3, r4, r5, pc}
 80106b6:	0781      	lsls	r1, r0, #30
 80106b8:	bf58      	it	pl
 80106ba:	6963      	ldrpl	r3, [r4, #20]
 80106bc:	60a3      	str	r3, [r4, #8]
 80106be:	e7f4      	b.n	80106aa <__swsetup_r+0x92>
 80106c0:	2000      	movs	r0, #0
 80106c2:	e7f7      	b.n	80106b4 <__swsetup_r+0x9c>
 80106c4:	20000014 	.word	0x20000014

080106c8 <register_fini>:
 80106c8:	4b02      	ldr	r3, [pc, #8]	; (80106d4 <register_fini+0xc>)
 80106ca:	b113      	cbz	r3, 80106d2 <register_fini+0xa>
 80106cc:	4802      	ldr	r0, [pc, #8]	; (80106d8 <register_fini+0x10>)
 80106ce:	f000 b805 	b.w	80106dc <atexit>
 80106d2:	4770      	bx	lr
 80106d4:	00000000 	.word	0x00000000
 80106d8:	080115ed 	.word	0x080115ed

080106dc <atexit>:
 80106dc:	2300      	movs	r3, #0
 80106de:	4601      	mov	r1, r0
 80106e0:	461a      	mov	r2, r3
 80106e2:	4618      	mov	r0, r3
 80106e4:	f001 bd74 	b.w	80121d0 <__register_exitproc>

080106e8 <quorem>:
 80106e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106ec:	6903      	ldr	r3, [r0, #16]
 80106ee:	690c      	ldr	r4, [r1, #16]
 80106f0:	42a3      	cmp	r3, r4
 80106f2:	4607      	mov	r7, r0
 80106f4:	f2c0 8081 	blt.w	80107fa <quorem+0x112>
 80106f8:	3c01      	subs	r4, #1
 80106fa:	f101 0814 	add.w	r8, r1, #20
 80106fe:	f100 0514 	add.w	r5, r0, #20
 8010702:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8010706:	9301      	str	r3, [sp, #4]
 8010708:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801070c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8010710:	3301      	adds	r3, #1
 8010712:	429a      	cmp	r2, r3
 8010714:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8010718:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 801071c:	fbb2 f6f3 	udiv	r6, r2, r3
 8010720:	d331      	bcc.n	8010786 <quorem+0x9e>
 8010722:	f04f 0e00 	mov.w	lr, #0
 8010726:	4640      	mov	r0, r8
 8010728:	46ac      	mov	ip, r5
 801072a:	46f2      	mov	sl, lr
 801072c:	f850 2b04 	ldr.w	r2, [r0], #4
 8010730:	b293      	uxth	r3, r2
 8010732:	fb06 e303 	mla	r3, r6, r3, lr
 8010736:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 801073a:	b29b      	uxth	r3, r3
 801073c:	ebaa 0303 	sub.w	r3, sl, r3
 8010740:	0c12      	lsrs	r2, r2, #16
 8010742:	f8dc a000 	ldr.w	sl, [ip]
 8010746:	fb06 e202 	mla	r2, r6, r2, lr
 801074a:	fa13 f38a 	uxtah	r3, r3, sl
 801074e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8010752:	fa1f fa82 	uxth.w	sl, r2
 8010756:	f8dc 2000 	ldr.w	r2, [ip]
 801075a:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 801075e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8010762:	b29b      	uxth	r3, r3
 8010764:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010768:	4581      	cmp	r9, r0
 801076a:	f84c 3b04 	str.w	r3, [ip], #4
 801076e:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8010772:	d2db      	bcs.n	801072c <quorem+0x44>
 8010774:	f855 300b 	ldr.w	r3, [r5, fp]
 8010778:	b92b      	cbnz	r3, 8010786 <quorem+0x9e>
 801077a:	9b01      	ldr	r3, [sp, #4]
 801077c:	3b04      	subs	r3, #4
 801077e:	429d      	cmp	r5, r3
 8010780:	461a      	mov	r2, r3
 8010782:	d32e      	bcc.n	80107e2 <quorem+0xfa>
 8010784:	613c      	str	r4, [r7, #16]
 8010786:	4638      	mov	r0, r7
 8010788:	f001 fb18 	bl	8011dbc <__mcmp>
 801078c:	2800      	cmp	r0, #0
 801078e:	db24      	blt.n	80107da <quorem+0xf2>
 8010790:	3601      	adds	r6, #1
 8010792:	4628      	mov	r0, r5
 8010794:	f04f 0c00 	mov.w	ip, #0
 8010798:	f858 2b04 	ldr.w	r2, [r8], #4
 801079c:	f8d0 e000 	ldr.w	lr, [r0]
 80107a0:	b293      	uxth	r3, r2
 80107a2:	ebac 0303 	sub.w	r3, ip, r3
 80107a6:	0c12      	lsrs	r2, r2, #16
 80107a8:	fa13 f38e 	uxtah	r3, r3, lr
 80107ac:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80107b0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80107b4:	b29b      	uxth	r3, r3
 80107b6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80107ba:	45c1      	cmp	r9, r8
 80107bc:	f840 3b04 	str.w	r3, [r0], #4
 80107c0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80107c4:	d2e8      	bcs.n	8010798 <quorem+0xb0>
 80107c6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80107ca:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80107ce:	b922      	cbnz	r2, 80107da <quorem+0xf2>
 80107d0:	3b04      	subs	r3, #4
 80107d2:	429d      	cmp	r5, r3
 80107d4:	461a      	mov	r2, r3
 80107d6:	d30a      	bcc.n	80107ee <quorem+0x106>
 80107d8:	613c      	str	r4, [r7, #16]
 80107da:	4630      	mov	r0, r6
 80107dc:	b003      	add	sp, #12
 80107de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107e2:	6812      	ldr	r2, [r2, #0]
 80107e4:	3b04      	subs	r3, #4
 80107e6:	2a00      	cmp	r2, #0
 80107e8:	d1cc      	bne.n	8010784 <quorem+0x9c>
 80107ea:	3c01      	subs	r4, #1
 80107ec:	e7c7      	b.n	801077e <quorem+0x96>
 80107ee:	6812      	ldr	r2, [r2, #0]
 80107f0:	3b04      	subs	r3, #4
 80107f2:	2a00      	cmp	r2, #0
 80107f4:	d1f0      	bne.n	80107d8 <quorem+0xf0>
 80107f6:	3c01      	subs	r4, #1
 80107f8:	e7eb      	b.n	80107d2 <quorem+0xea>
 80107fa:	2000      	movs	r0, #0
 80107fc:	e7ee      	b.n	80107dc <quorem+0xf4>
	...

08010800 <_dtoa_r>:
 8010800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010804:	ed2d 8b02 	vpush	{d8}
 8010808:	b095      	sub	sp, #84	; 0x54
 801080a:	ec57 6b10 	vmov	r6, r7, d0
 801080e:	9105      	str	r1, [sp, #20]
 8010810:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8010812:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8010814:	9209      	str	r2, [sp, #36]	; 0x24
 8010816:	e9cd 6702 	strd	r6, r7, [sp, #8]
 801081a:	4604      	mov	r4, r0
 801081c:	930f      	str	r3, [sp, #60]	; 0x3c
 801081e:	b141      	cbz	r1, 8010832 <_dtoa_r+0x32>
 8010820:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8010822:	604a      	str	r2, [r1, #4]
 8010824:	2301      	movs	r3, #1
 8010826:	4093      	lsls	r3, r2
 8010828:	608b      	str	r3, [r1, #8]
 801082a:	f001 f8bc 	bl	80119a6 <_Bfree>
 801082e:	2300      	movs	r3, #0
 8010830:	6423      	str	r3, [r4, #64]	; 0x40
 8010832:	1e3b      	subs	r3, r7, #0
 8010834:	bfb9      	ittee	lt
 8010836:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 801083a:	9303      	strlt	r3, [sp, #12]
 801083c:	2300      	movge	r3, #0
 801083e:	602b      	strge	r3, [r5, #0]
 8010840:	f8dd 900c 	ldr.w	r9, [sp, #12]
 8010844:	4ba2      	ldr	r3, [pc, #648]	; (8010ad0 <_dtoa_r+0x2d0>)
 8010846:	bfbc      	itt	lt
 8010848:	2201      	movlt	r2, #1
 801084a:	602a      	strlt	r2, [r5, #0]
 801084c:	ea33 0309 	bics.w	r3, r3, r9
 8010850:	d11b      	bne.n	801088a <_dtoa_r+0x8a>
 8010852:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010854:	f242 730f 	movw	r3, #9999	; 0x270f
 8010858:	6013      	str	r3, [r2, #0]
 801085a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801085e:	4333      	orrs	r3, r6
 8010860:	f000 8578 	beq.w	8011354 <_dtoa_r+0xb54>
 8010864:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8010866:	b90b      	cbnz	r3, 801086c <_dtoa_r+0x6c>
 8010868:	4b9a      	ldr	r3, [pc, #616]	; (8010ad4 <_dtoa_r+0x2d4>)
 801086a:	e024      	b.n	80108b6 <_dtoa_r+0xb6>
 801086c:	4b99      	ldr	r3, [pc, #612]	; (8010ad4 <_dtoa_r+0x2d4>)
 801086e:	9300      	str	r3, [sp, #0]
 8010870:	3303      	adds	r3, #3
 8010872:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8010874:	6013      	str	r3, [r2, #0]
 8010876:	9800      	ldr	r0, [sp, #0]
 8010878:	b015      	add	sp, #84	; 0x54
 801087a:	ecbd 8b02 	vpop	{d8}
 801087e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010882:	4b95      	ldr	r3, [pc, #596]	; (8010ad8 <_dtoa_r+0x2d8>)
 8010884:	9300      	str	r3, [sp, #0]
 8010886:	3308      	adds	r3, #8
 8010888:	e7f3      	b.n	8010872 <_dtoa_r+0x72>
 801088a:	ed9d 7b02 	vldr	d7, [sp, #8]
 801088e:	2200      	movs	r2, #0
 8010890:	ec51 0b17 	vmov	r0, r1, d7
 8010894:	2300      	movs	r3, #0
 8010896:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 801089a:	f7f6 ff77 	bl	800778c <__aeabi_dcmpeq>
 801089e:	4680      	mov	r8, r0
 80108a0:	b158      	cbz	r0, 80108ba <_dtoa_r+0xba>
 80108a2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80108a4:	2301      	movs	r3, #1
 80108a6:	6013      	str	r3, [r2, #0]
 80108a8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80108aa:	2b00      	cmp	r3, #0
 80108ac:	f000 854f 	beq.w	801134e <_dtoa_r+0xb4e>
 80108b0:	488a      	ldr	r0, [pc, #552]	; (8010adc <_dtoa_r+0x2dc>)
 80108b2:	6018      	str	r0, [r3, #0]
 80108b4:	1e43      	subs	r3, r0, #1
 80108b6:	9300      	str	r3, [sp, #0]
 80108b8:	e7dd      	b.n	8010876 <_dtoa_r+0x76>
 80108ba:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 80108be:	aa12      	add	r2, sp, #72	; 0x48
 80108c0:	a913      	add	r1, sp, #76	; 0x4c
 80108c2:	4620      	mov	r0, r4
 80108c4:	f001 fb1e 	bl	8011f04 <__d2b>
 80108c8:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80108cc:	4683      	mov	fp, r0
 80108ce:	2d00      	cmp	r5, #0
 80108d0:	d07c      	beq.n	80109cc <_dtoa_r+0x1cc>
 80108d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80108d4:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80108d8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80108dc:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 80108e0:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 80108e4:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 80108e8:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80108ec:	4b7c      	ldr	r3, [pc, #496]	; (8010ae0 <_dtoa_r+0x2e0>)
 80108ee:	2200      	movs	r2, #0
 80108f0:	4630      	mov	r0, r6
 80108f2:	4639      	mov	r1, r7
 80108f4:	f7f6 fb2a 	bl	8006f4c <__aeabi_dsub>
 80108f8:	a36f      	add	r3, pc, #444	; (adr r3, 8010ab8 <_dtoa_r+0x2b8>)
 80108fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80108fe:	f7f6 fcdd 	bl	80072bc <__aeabi_dmul>
 8010902:	a36f      	add	r3, pc, #444	; (adr r3, 8010ac0 <_dtoa_r+0x2c0>)
 8010904:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010908:	f7f6 fb22 	bl	8006f50 <__adddf3>
 801090c:	4606      	mov	r6, r0
 801090e:	4628      	mov	r0, r5
 8010910:	460f      	mov	r7, r1
 8010912:	f7f6 fc69 	bl	80071e8 <__aeabi_i2d>
 8010916:	a36c      	add	r3, pc, #432	; (adr r3, 8010ac8 <_dtoa_r+0x2c8>)
 8010918:	e9d3 2300 	ldrd	r2, r3, [r3]
 801091c:	f7f6 fcce 	bl	80072bc <__aeabi_dmul>
 8010920:	4602      	mov	r2, r0
 8010922:	460b      	mov	r3, r1
 8010924:	4630      	mov	r0, r6
 8010926:	4639      	mov	r1, r7
 8010928:	f7f6 fb12 	bl	8006f50 <__adddf3>
 801092c:	4606      	mov	r6, r0
 801092e:	460f      	mov	r7, r1
 8010930:	f7f6 ff74 	bl	800781c <__aeabi_d2iz>
 8010934:	2200      	movs	r2, #0
 8010936:	4682      	mov	sl, r0
 8010938:	2300      	movs	r3, #0
 801093a:	4630      	mov	r0, r6
 801093c:	4639      	mov	r1, r7
 801093e:	f7f6 ff2f 	bl	80077a0 <__aeabi_dcmplt>
 8010942:	b148      	cbz	r0, 8010958 <_dtoa_r+0x158>
 8010944:	4650      	mov	r0, sl
 8010946:	f7f6 fc4f 	bl	80071e8 <__aeabi_i2d>
 801094a:	4632      	mov	r2, r6
 801094c:	463b      	mov	r3, r7
 801094e:	f7f6 ff1d 	bl	800778c <__aeabi_dcmpeq>
 8010952:	b908      	cbnz	r0, 8010958 <_dtoa_r+0x158>
 8010954:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010958:	f1ba 0f16 	cmp.w	sl, #22
 801095c:	d854      	bhi.n	8010a08 <_dtoa_r+0x208>
 801095e:	4b61      	ldr	r3, [pc, #388]	; (8010ae4 <_dtoa_r+0x2e4>)
 8010960:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8010964:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010968:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 801096c:	f7f6 ff18 	bl	80077a0 <__aeabi_dcmplt>
 8010970:	2800      	cmp	r0, #0
 8010972:	d04b      	beq.n	8010a0c <_dtoa_r+0x20c>
 8010974:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010978:	2300      	movs	r3, #0
 801097a:	930e      	str	r3, [sp, #56]	; 0x38
 801097c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801097e:	1b5d      	subs	r5, r3, r5
 8010980:	1e6b      	subs	r3, r5, #1
 8010982:	9304      	str	r3, [sp, #16]
 8010984:	bf43      	ittte	mi
 8010986:	2300      	movmi	r3, #0
 8010988:	f1c5 0801 	rsbmi	r8, r5, #1
 801098c:	9304      	strmi	r3, [sp, #16]
 801098e:	f04f 0800 	movpl.w	r8, #0
 8010992:	f1ba 0f00 	cmp.w	sl, #0
 8010996:	db3b      	blt.n	8010a10 <_dtoa_r+0x210>
 8010998:	9b04      	ldr	r3, [sp, #16]
 801099a:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 801099e:	4453      	add	r3, sl
 80109a0:	9304      	str	r3, [sp, #16]
 80109a2:	2300      	movs	r3, #0
 80109a4:	9306      	str	r3, [sp, #24]
 80109a6:	9b05      	ldr	r3, [sp, #20]
 80109a8:	2b09      	cmp	r3, #9
 80109aa:	d86a      	bhi.n	8010a82 <_dtoa_r+0x282>
 80109ac:	2b05      	cmp	r3, #5
 80109ae:	bfc4      	itt	gt
 80109b0:	3b04      	subgt	r3, #4
 80109b2:	9305      	strgt	r3, [sp, #20]
 80109b4:	9b05      	ldr	r3, [sp, #20]
 80109b6:	f1a3 0302 	sub.w	r3, r3, #2
 80109ba:	bfcc      	ite	gt
 80109bc:	2500      	movgt	r5, #0
 80109be:	2501      	movle	r5, #1
 80109c0:	2b03      	cmp	r3, #3
 80109c2:	d86a      	bhi.n	8010a9a <_dtoa_r+0x29a>
 80109c4:	e8df f003 	tbb	[pc, r3]
 80109c8:	5b4d4f2c 	.word	0x5b4d4f2c
 80109cc:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 80109d0:	441d      	add	r5, r3
 80109d2:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80109d6:	2b20      	cmp	r3, #32
 80109d8:	bfc1      	itttt	gt
 80109da:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80109de:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 80109e2:	fa09 f303 	lslgt.w	r3, r9, r3
 80109e6:	fa26 f000 	lsrgt.w	r0, r6, r0
 80109ea:	bfda      	itte	le
 80109ec:	f1c3 0320 	rsble	r3, r3, #32
 80109f0:	fa06 f003 	lslle.w	r0, r6, r3
 80109f4:	4318      	orrgt	r0, r3
 80109f6:	f7f6 fbe7 	bl	80071c8 <__aeabi_ui2d>
 80109fa:	2301      	movs	r3, #1
 80109fc:	4606      	mov	r6, r0
 80109fe:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8010a02:	3d01      	subs	r5, #1
 8010a04:	9310      	str	r3, [sp, #64]	; 0x40
 8010a06:	e771      	b.n	80108ec <_dtoa_r+0xec>
 8010a08:	2301      	movs	r3, #1
 8010a0a:	e7b6      	b.n	801097a <_dtoa_r+0x17a>
 8010a0c:	900e      	str	r0, [sp, #56]	; 0x38
 8010a0e:	e7b5      	b.n	801097c <_dtoa_r+0x17c>
 8010a10:	f1ca 0300 	rsb	r3, sl, #0
 8010a14:	9306      	str	r3, [sp, #24]
 8010a16:	2300      	movs	r3, #0
 8010a18:	eba8 080a 	sub.w	r8, r8, sl
 8010a1c:	930d      	str	r3, [sp, #52]	; 0x34
 8010a1e:	e7c2      	b.n	80109a6 <_dtoa_r+0x1a6>
 8010a20:	2300      	movs	r3, #0
 8010a22:	9308      	str	r3, [sp, #32]
 8010a24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010a26:	2b00      	cmp	r3, #0
 8010a28:	dc3a      	bgt.n	8010aa0 <_dtoa_r+0x2a0>
 8010a2a:	f04f 0901 	mov.w	r9, #1
 8010a2e:	f8cd 9004 	str.w	r9, [sp, #4]
 8010a32:	464b      	mov	r3, r9
 8010a34:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8010a38:	2200      	movs	r2, #0
 8010a3a:	6462      	str	r2, [r4, #68]	; 0x44
 8010a3c:	2204      	movs	r2, #4
 8010a3e:	f102 0014 	add.w	r0, r2, #20
 8010a42:	4298      	cmp	r0, r3
 8010a44:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8010a46:	d931      	bls.n	8010aac <_dtoa_r+0x2ac>
 8010a48:	4620      	mov	r0, r4
 8010a4a:	f000 ff87 	bl	801195c <_Balloc>
 8010a4e:	9000      	str	r0, [sp, #0]
 8010a50:	2800      	cmp	r0, #0
 8010a52:	d14d      	bne.n	8010af0 <_dtoa_r+0x2f0>
 8010a54:	4b24      	ldr	r3, [pc, #144]	; (8010ae8 <_dtoa_r+0x2e8>)
 8010a56:	4602      	mov	r2, r0
 8010a58:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8010a5c:	4823      	ldr	r0, [pc, #140]	; (8010aec <_dtoa_r+0x2ec>)
 8010a5e:	f001 fbf7 	bl	8012250 <__assert_func>
 8010a62:	2301      	movs	r3, #1
 8010a64:	e7dd      	b.n	8010a22 <_dtoa_r+0x222>
 8010a66:	2300      	movs	r3, #0
 8010a68:	9308      	str	r3, [sp, #32]
 8010a6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010a6c:	eb0a 0903 	add.w	r9, sl, r3
 8010a70:	f109 0301 	add.w	r3, r9, #1
 8010a74:	2b01      	cmp	r3, #1
 8010a76:	9301      	str	r3, [sp, #4]
 8010a78:	bfb8      	it	lt
 8010a7a:	2301      	movlt	r3, #1
 8010a7c:	e7dc      	b.n	8010a38 <_dtoa_r+0x238>
 8010a7e:	2301      	movs	r3, #1
 8010a80:	e7f2      	b.n	8010a68 <_dtoa_r+0x268>
 8010a82:	2501      	movs	r5, #1
 8010a84:	2300      	movs	r3, #0
 8010a86:	9305      	str	r3, [sp, #20]
 8010a88:	9508      	str	r5, [sp, #32]
 8010a8a:	f04f 39ff 	mov.w	r9, #4294967295
 8010a8e:	2200      	movs	r2, #0
 8010a90:	f8cd 9004 	str.w	r9, [sp, #4]
 8010a94:	2312      	movs	r3, #18
 8010a96:	9209      	str	r2, [sp, #36]	; 0x24
 8010a98:	e7ce      	b.n	8010a38 <_dtoa_r+0x238>
 8010a9a:	2301      	movs	r3, #1
 8010a9c:	9308      	str	r3, [sp, #32]
 8010a9e:	e7f4      	b.n	8010a8a <_dtoa_r+0x28a>
 8010aa0:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8010aa4:	f8cd 9004 	str.w	r9, [sp, #4]
 8010aa8:	464b      	mov	r3, r9
 8010aaa:	e7c5      	b.n	8010a38 <_dtoa_r+0x238>
 8010aac:	3101      	adds	r1, #1
 8010aae:	6461      	str	r1, [r4, #68]	; 0x44
 8010ab0:	0052      	lsls	r2, r2, #1
 8010ab2:	e7c4      	b.n	8010a3e <_dtoa_r+0x23e>
 8010ab4:	f3af 8000 	nop.w
 8010ab8:	636f4361 	.word	0x636f4361
 8010abc:	3fd287a7 	.word	0x3fd287a7
 8010ac0:	8b60c8b3 	.word	0x8b60c8b3
 8010ac4:	3fc68a28 	.word	0x3fc68a28
 8010ac8:	509f79fb 	.word	0x509f79fb
 8010acc:	3fd34413 	.word	0x3fd34413
 8010ad0:	7ff00000 	.word	0x7ff00000
 8010ad4:	08014340 	.word	0x08014340
 8010ad8:	08014344 	.word	0x08014344
 8010adc:	0801431f 	.word	0x0801431f
 8010ae0:	3ff80000 	.word	0x3ff80000
 8010ae4:	08014448 	.word	0x08014448
 8010ae8:	0801434d 	.word	0x0801434d
 8010aec:	0801435e 	.word	0x0801435e
 8010af0:	9b00      	ldr	r3, [sp, #0]
 8010af2:	6423      	str	r3, [r4, #64]	; 0x40
 8010af4:	9b01      	ldr	r3, [sp, #4]
 8010af6:	2b0e      	cmp	r3, #14
 8010af8:	f200 80ad 	bhi.w	8010c56 <_dtoa_r+0x456>
 8010afc:	2d00      	cmp	r5, #0
 8010afe:	f000 80aa 	beq.w	8010c56 <_dtoa_r+0x456>
 8010b02:	f1ba 0f00 	cmp.w	sl, #0
 8010b06:	dd36      	ble.n	8010b76 <_dtoa_r+0x376>
 8010b08:	4ac2      	ldr	r2, [pc, #776]	; (8010e14 <_dtoa_r+0x614>)
 8010b0a:	f00a 030f 	and.w	r3, sl, #15
 8010b0e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8010b12:	ed93 7b00 	vldr	d7, [r3]
 8010b16:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8010b1a:	ea4f 172a 	mov.w	r7, sl, asr #4
 8010b1e:	eeb0 8a47 	vmov.f32	s16, s14
 8010b22:	eef0 8a67 	vmov.f32	s17, s15
 8010b26:	d016      	beq.n	8010b56 <_dtoa_r+0x356>
 8010b28:	4bbb      	ldr	r3, [pc, #748]	; (8010e18 <_dtoa_r+0x618>)
 8010b2a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8010b2e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8010b32:	f7f6 fced 	bl	8007510 <__aeabi_ddiv>
 8010b36:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010b3a:	f007 070f 	and.w	r7, r7, #15
 8010b3e:	2503      	movs	r5, #3
 8010b40:	4eb5      	ldr	r6, [pc, #724]	; (8010e18 <_dtoa_r+0x618>)
 8010b42:	b957      	cbnz	r7, 8010b5a <_dtoa_r+0x35a>
 8010b44:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8010b48:	ec53 2b18 	vmov	r2, r3, d8
 8010b4c:	f7f6 fce0 	bl	8007510 <__aeabi_ddiv>
 8010b50:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010b54:	e029      	b.n	8010baa <_dtoa_r+0x3aa>
 8010b56:	2502      	movs	r5, #2
 8010b58:	e7f2      	b.n	8010b40 <_dtoa_r+0x340>
 8010b5a:	07f9      	lsls	r1, r7, #31
 8010b5c:	d508      	bpl.n	8010b70 <_dtoa_r+0x370>
 8010b5e:	ec51 0b18 	vmov	r0, r1, d8
 8010b62:	e9d6 2300 	ldrd	r2, r3, [r6]
 8010b66:	f7f6 fba9 	bl	80072bc <__aeabi_dmul>
 8010b6a:	ec41 0b18 	vmov	d8, r0, r1
 8010b6e:	3501      	adds	r5, #1
 8010b70:	107f      	asrs	r7, r7, #1
 8010b72:	3608      	adds	r6, #8
 8010b74:	e7e5      	b.n	8010b42 <_dtoa_r+0x342>
 8010b76:	f000 80a6 	beq.w	8010cc6 <_dtoa_r+0x4c6>
 8010b7a:	f1ca 0600 	rsb	r6, sl, #0
 8010b7e:	4ba5      	ldr	r3, [pc, #660]	; (8010e14 <_dtoa_r+0x614>)
 8010b80:	4fa5      	ldr	r7, [pc, #660]	; (8010e18 <_dtoa_r+0x618>)
 8010b82:	f006 020f 	and.w	r2, r6, #15
 8010b86:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8010b8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010b8e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8010b92:	f7f6 fb93 	bl	80072bc <__aeabi_dmul>
 8010b96:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010b9a:	1136      	asrs	r6, r6, #4
 8010b9c:	2300      	movs	r3, #0
 8010b9e:	2502      	movs	r5, #2
 8010ba0:	2e00      	cmp	r6, #0
 8010ba2:	f040 8085 	bne.w	8010cb0 <_dtoa_r+0x4b0>
 8010ba6:	2b00      	cmp	r3, #0
 8010ba8:	d1d2      	bne.n	8010b50 <_dtoa_r+0x350>
 8010baa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010bac:	2b00      	cmp	r3, #0
 8010bae:	f000 808c 	beq.w	8010cca <_dtoa_r+0x4ca>
 8010bb2:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8010bb6:	4b99      	ldr	r3, [pc, #612]	; (8010e1c <_dtoa_r+0x61c>)
 8010bb8:	2200      	movs	r2, #0
 8010bba:	4630      	mov	r0, r6
 8010bbc:	4639      	mov	r1, r7
 8010bbe:	f7f6 fdef 	bl	80077a0 <__aeabi_dcmplt>
 8010bc2:	2800      	cmp	r0, #0
 8010bc4:	f000 8081 	beq.w	8010cca <_dtoa_r+0x4ca>
 8010bc8:	9b01      	ldr	r3, [sp, #4]
 8010bca:	2b00      	cmp	r3, #0
 8010bcc:	d07d      	beq.n	8010cca <_dtoa_r+0x4ca>
 8010bce:	f1b9 0f00 	cmp.w	r9, #0
 8010bd2:	dd3c      	ble.n	8010c4e <_dtoa_r+0x44e>
 8010bd4:	f10a 33ff 	add.w	r3, sl, #4294967295
 8010bd8:	9307      	str	r3, [sp, #28]
 8010bda:	2200      	movs	r2, #0
 8010bdc:	4b90      	ldr	r3, [pc, #576]	; (8010e20 <_dtoa_r+0x620>)
 8010bde:	4630      	mov	r0, r6
 8010be0:	4639      	mov	r1, r7
 8010be2:	f7f6 fb6b 	bl	80072bc <__aeabi_dmul>
 8010be6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010bea:	3501      	adds	r5, #1
 8010bec:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 8010bf0:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8010bf4:	4628      	mov	r0, r5
 8010bf6:	f7f6 faf7 	bl	80071e8 <__aeabi_i2d>
 8010bfa:	4632      	mov	r2, r6
 8010bfc:	463b      	mov	r3, r7
 8010bfe:	f7f6 fb5d 	bl	80072bc <__aeabi_dmul>
 8010c02:	4b88      	ldr	r3, [pc, #544]	; (8010e24 <_dtoa_r+0x624>)
 8010c04:	2200      	movs	r2, #0
 8010c06:	f7f6 f9a3 	bl	8006f50 <__adddf3>
 8010c0a:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8010c0e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010c12:	9303      	str	r3, [sp, #12]
 8010c14:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010c16:	2b00      	cmp	r3, #0
 8010c18:	d15c      	bne.n	8010cd4 <_dtoa_r+0x4d4>
 8010c1a:	4b83      	ldr	r3, [pc, #524]	; (8010e28 <_dtoa_r+0x628>)
 8010c1c:	2200      	movs	r2, #0
 8010c1e:	4630      	mov	r0, r6
 8010c20:	4639      	mov	r1, r7
 8010c22:	f7f6 f993 	bl	8006f4c <__aeabi_dsub>
 8010c26:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8010c2a:	4606      	mov	r6, r0
 8010c2c:	460f      	mov	r7, r1
 8010c2e:	f7f6 fdd5 	bl	80077dc <__aeabi_dcmpgt>
 8010c32:	2800      	cmp	r0, #0
 8010c34:	f040 8295 	bne.w	8011162 <_dtoa_r+0x962>
 8010c38:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8010c3c:	4630      	mov	r0, r6
 8010c3e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010c42:	4639      	mov	r1, r7
 8010c44:	f7f6 fdac 	bl	80077a0 <__aeabi_dcmplt>
 8010c48:	2800      	cmp	r0, #0
 8010c4a:	f040 8287 	bne.w	801115c <_dtoa_r+0x95c>
 8010c4e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8010c52:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8010c56:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010c58:	2b00      	cmp	r3, #0
 8010c5a:	f2c0 8157 	blt.w	8010f0c <_dtoa_r+0x70c>
 8010c5e:	f1ba 0f0e 	cmp.w	sl, #14
 8010c62:	f300 8153 	bgt.w	8010f0c <_dtoa_r+0x70c>
 8010c66:	4b6b      	ldr	r3, [pc, #428]	; (8010e14 <_dtoa_r+0x614>)
 8010c68:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8010c6c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8010c70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010c72:	2b00      	cmp	r3, #0
 8010c74:	f280 80e2 	bge.w	8010e3c <_dtoa_r+0x63c>
 8010c78:	9b01      	ldr	r3, [sp, #4]
 8010c7a:	2b00      	cmp	r3, #0
 8010c7c:	f300 80de 	bgt.w	8010e3c <_dtoa_r+0x63c>
 8010c80:	f040 826c 	bne.w	801115c <_dtoa_r+0x95c>
 8010c84:	4b68      	ldr	r3, [pc, #416]	; (8010e28 <_dtoa_r+0x628>)
 8010c86:	2200      	movs	r2, #0
 8010c88:	4640      	mov	r0, r8
 8010c8a:	4649      	mov	r1, r9
 8010c8c:	f7f6 fb16 	bl	80072bc <__aeabi_dmul>
 8010c90:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8010c94:	f7f6 fd98 	bl	80077c8 <__aeabi_dcmpge>
 8010c98:	9e01      	ldr	r6, [sp, #4]
 8010c9a:	4637      	mov	r7, r6
 8010c9c:	2800      	cmp	r0, #0
 8010c9e:	f040 8242 	bne.w	8011126 <_dtoa_r+0x926>
 8010ca2:	9d00      	ldr	r5, [sp, #0]
 8010ca4:	2331      	movs	r3, #49	; 0x31
 8010ca6:	f805 3b01 	strb.w	r3, [r5], #1
 8010caa:	f10a 0a01 	add.w	sl, sl, #1
 8010cae:	e23e      	b.n	801112e <_dtoa_r+0x92e>
 8010cb0:	07f2      	lsls	r2, r6, #31
 8010cb2:	d505      	bpl.n	8010cc0 <_dtoa_r+0x4c0>
 8010cb4:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010cb8:	f7f6 fb00 	bl	80072bc <__aeabi_dmul>
 8010cbc:	3501      	adds	r5, #1
 8010cbe:	2301      	movs	r3, #1
 8010cc0:	1076      	asrs	r6, r6, #1
 8010cc2:	3708      	adds	r7, #8
 8010cc4:	e76c      	b.n	8010ba0 <_dtoa_r+0x3a0>
 8010cc6:	2502      	movs	r5, #2
 8010cc8:	e76f      	b.n	8010baa <_dtoa_r+0x3aa>
 8010cca:	9b01      	ldr	r3, [sp, #4]
 8010ccc:	f8cd a01c 	str.w	sl, [sp, #28]
 8010cd0:	930c      	str	r3, [sp, #48]	; 0x30
 8010cd2:	e78d      	b.n	8010bf0 <_dtoa_r+0x3f0>
 8010cd4:	9900      	ldr	r1, [sp, #0]
 8010cd6:	980c      	ldr	r0, [sp, #48]	; 0x30
 8010cd8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010cda:	4b4e      	ldr	r3, [pc, #312]	; (8010e14 <_dtoa_r+0x614>)
 8010cdc:	ed9d 7b02 	vldr	d7, [sp, #8]
 8010ce0:	4401      	add	r1, r0
 8010ce2:	9102      	str	r1, [sp, #8]
 8010ce4:	9908      	ldr	r1, [sp, #32]
 8010ce6:	eeb0 8a47 	vmov.f32	s16, s14
 8010cea:	eef0 8a67 	vmov.f32	s17, s15
 8010cee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8010cf2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8010cf6:	2900      	cmp	r1, #0
 8010cf8:	d045      	beq.n	8010d86 <_dtoa_r+0x586>
 8010cfa:	494c      	ldr	r1, [pc, #304]	; (8010e2c <_dtoa_r+0x62c>)
 8010cfc:	2000      	movs	r0, #0
 8010cfe:	f7f6 fc07 	bl	8007510 <__aeabi_ddiv>
 8010d02:	ec53 2b18 	vmov	r2, r3, d8
 8010d06:	f7f6 f921 	bl	8006f4c <__aeabi_dsub>
 8010d0a:	9d00      	ldr	r5, [sp, #0]
 8010d0c:	ec41 0b18 	vmov	d8, r0, r1
 8010d10:	4639      	mov	r1, r7
 8010d12:	4630      	mov	r0, r6
 8010d14:	f7f6 fd82 	bl	800781c <__aeabi_d2iz>
 8010d18:	900c      	str	r0, [sp, #48]	; 0x30
 8010d1a:	f7f6 fa65 	bl	80071e8 <__aeabi_i2d>
 8010d1e:	4602      	mov	r2, r0
 8010d20:	460b      	mov	r3, r1
 8010d22:	4630      	mov	r0, r6
 8010d24:	4639      	mov	r1, r7
 8010d26:	f7f6 f911 	bl	8006f4c <__aeabi_dsub>
 8010d2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010d2c:	3330      	adds	r3, #48	; 0x30
 8010d2e:	f805 3b01 	strb.w	r3, [r5], #1
 8010d32:	ec53 2b18 	vmov	r2, r3, d8
 8010d36:	4606      	mov	r6, r0
 8010d38:	460f      	mov	r7, r1
 8010d3a:	f7f6 fd31 	bl	80077a0 <__aeabi_dcmplt>
 8010d3e:	2800      	cmp	r0, #0
 8010d40:	d165      	bne.n	8010e0e <_dtoa_r+0x60e>
 8010d42:	4632      	mov	r2, r6
 8010d44:	463b      	mov	r3, r7
 8010d46:	4935      	ldr	r1, [pc, #212]	; (8010e1c <_dtoa_r+0x61c>)
 8010d48:	2000      	movs	r0, #0
 8010d4a:	f7f6 f8ff 	bl	8006f4c <__aeabi_dsub>
 8010d4e:	ec53 2b18 	vmov	r2, r3, d8
 8010d52:	f7f6 fd25 	bl	80077a0 <__aeabi_dcmplt>
 8010d56:	2800      	cmp	r0, #0
 8010d58:	f040 80b8 	bne.w	8010ecc <_dtoa_r+0x6cc>
 8010d5c:	9b02      	ldr	r3, [sp, #8]
 8010d5e:	429d      	cmp	r5, r3
 8010d60:	f43f af75 	beq.w	8010c4e <_dtoa_r+0x44e>
 8010d64:	4b2e      	ldr	r3, [pc, #184]	; (8010e20 <_dtoa_r+0x620>)
 8010d66:	ec51 0b18 	vmov	r0, r1, d8
 8010d6a:	2200      	movs	r2, #0
 8010d6c:	f7f6 faa6 	bl	80072bc <__aeabi_dmul>
 8010d70:	4b2b      	ldr	r3, [pc, #172]	; (8010e20 <_dtoa_r+0x620>)
 8010d72:	ec41 0b18 	vmov	d8, r0, r1
 8010d76:	2200      	movs	r2, #0
 8010d78:	4630      	mov	r0, r6
 8010d7a:	4639      	mov	r1, r7
 8010d7c:	f7f6 fa9e 	bl	80072bc <__aeabi_dmul>
 8010d80:	4606      	mov	r6, r0
 8010d82:	460f      	mov	r7, r1
 8010d84:	e7c4      	b.n	8010d10 <_dtoa_r+0x510>
 8010d86:	ec51 0b17 	vmov	r0, r1, d7
 8010d8a:	f7f6 fa97 	bl	80072bc <__aeabi_dmul>
 8010d8e:	9b02      	ldr	r3, [sp, #8]
 8010d90:	9d00      	ldr	r5, [sp, #0]
 8010d92:	930c      	str	r3, [sp, #48]	; 0x30
 8010d94:	ec41 0b18 	vmov	d8, r0, r1
 8010d98:	4639      	mov	r1, r7
 8010d9a:	4630      	mov	r0, r6
 8010d9c:	f7f6 fd3e 	bl	800781c <__aeabi_d2iz>
 8010da0:	9011      	str	r0, [sp, #68]	; 0x44
 8010da2:	f7f6 fa21 	bl	80071e8 <__aeabi_i2d>
 8010da6:	4602      	mov	r2, r0
 8010da8:	460b      	mov	r3, r1
 8010daa:	4630      	mov	r0, r6
 8010dac:	4639      	mov	r1, r7
 8010dae:	f7f6 f8cd 	bl	8006f4c <__aeabi_dsub>
 8010db2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010db4:	3330      	adds	r3, #48	; 0x30
 8010db6:	f805 3b01 	strb.w	r3, [r5], #1
 8010dba:	9b02      	ldr	r3, [sp, #8]
 8010dbc:	429d      	cmp	r5, r3
 8010dbe:	4606      	mov	r6, r0
 8010dc0:	460f      	mov	r7, r1
 8010dc2:	f04f 0200 	mov.w	r2, #0
 8010dc6:	d133      	bne.n	8010e30 <_dtoa_r+0x630>
 8010dc8:	4b18      	ldr	r3, [pc, #96]	; (8010e2c <_dtoa_r+0x62c>)
 8010dca:	ec51 0b18 	vmov	r0, r1, d8
 8010dce:	f7f6 f8bf 	bl	8006f50 <__adddf3>
 8010dd2:	4602      	mov	r2, r0
 8010dd4:	460b      	mov	r3, r1
 8010dd6:	4630      	mov	r0, r6
 8010dd8:	4639      	mov	r1, r7
 8010dda:	f7f6 fcff 	bl	80077dc <__aeabi_dcmpgt>
 8010dde:	2800      	cmp	r0, #0
 8010de0:	d174      	bne.n	8010ecc <_dtoa_r+0x6cc>
 8010de2:	ec53 2b18 	vmov	r2, r3, d8
 8010de6:	4911      	ldr	r1, [pc, #68]	; (8010e2c <_dtoa_r+0x62c>)
 8010de8:	2000      	movs	r0, #0
 8010dea:	f7f6 f8af 	bl	8006f4c <__aeabi_dsub>
 8010dee:	4602      	mov	r2, r0
 8010df0:	460b      	mov	r3, r1
 8010df2:	4630      	mov	r0, r6
 8010df4:	4639      	mov	r1, r7
 8010df6:	f7f6 fcd3 	bl	80077a0 <__aeabi_dcmplt>
 8010dfa:	2800      	cmp	r0, #0
 8010dfc:	f43f af27 	beq.w	8010c4e <_dtoa_r+0x44e>
 8010e00:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8010e02:	1e6b      	subs	r3, r5, #1
 8010e04:	930c      	str	r3, [sp, #48]	; 0x30
 8010e06:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8010e0a:	2b30      	cmp	r3, #48	; 0x30
 8010e0c:	d0f8      	beq.n	8010e00 <_dtoa_r+0x600>
 8010e0e:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8010e12:	e049      	b.n	8010ea8 <_dtoa_r+0x6a8>
 8010e14:	08014448 	.word	0x08014448
 8010e18:	08014420 	.word	0x08014420
 8010e1c:	3ff00000 	.word	0x3ff00000
 8010e20:	40240000 	.word	0x40240000
 8010e24:	401c0000 	.word	0x401c0000
 8010e28:	40140000 	.word	0x40140000
 8010e2c:	3fe00000 	.word	0x3fe00000
 8010e30:	4baf      	ldr	r3, [pc, #700]	; (80110f0 <_dtoa_r+0x8f0>)
 8010e32:	f7f6 fa43 	bl	80072bc <__aeabi_dmul>
 8010e36:	4606      	mov	r6, r0
 8010e38:	460f      	mov	r7, r1
 8010e3a:	e7ad      	b.n	8010d98 <_dtoa_r+0x598>
 8010e3c:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8010e40:	9d00      	ldr	r5, [sp, #0]
 8010e42:	4642      	mov	r2, r8
 8010e44:	464b      	mov	r3, r9
 8010e46:	4630      	mov	r0, r6
 8010e48:	4639      	mov	r1, r7
 8010e4a:	f7f6 fb61 	bl	8007510 <__aeabi_ddiv>
 8010e4e:	f7f6 fce5 	bl	800781c <__aeabi_d2iz>
 8010e52:	9002      	str	r0, [sp, #8]
 8010e54:	f7f6 f9c8 	bl	80071e8 <__aeabi_i2d>
 8010e58:	4642      	mov	r2, r8
 8010e5a:	464b      	mov	r3, r9
 8010e5c:	f7f6 fa2e 	bl	80072bc <__aeabi_dmul>
 8010e60:	4602      	mov	r2, r0
 8010e62:	460b      	mov	r3, r1
 8010e64:	4630      	mov	r0, r6
 8010e66:	4639      	mov	r1, r7
 8010e68:	f7f6 f870 	bl	8006f4c <__aeabi_dsub>
 8010e6c:	9e02      	ldr	r6, [sp, #8]
 8010e6e:	9f01      	ldr	r7, [sp, #4]
 8010e70:	3630      	adds	r6, #48	; 0x30
 8010e72:	f805 6b01 	strb.w	r6, [r5], #1
 8010e76:	9e00      	ldr	r6, [sp, #0]
 8010e78:	1bae      	subs	r6, r5, r6
 8010e7a:	42b7      	cmp	r7, r6
 8010e7c:	4602      	mov	r2, r0
 8010e7e:	460b      	mov	r3, r1
 8010e80:	d137      	bne.n	8010ef2 <_dtoa_r+0x6f2>
 8010e82:	f7f6 f865 	bl	8006f50 <__adddf3>
 8010e86:	4642      	mov	r2, r8
 8010e88:	464b      	mov	r3, r9
 8010e8a:	4606      	mov	r6, r0
 8010e8c:	460f      	mov	r7, r1
 8010e8e:	f7f6 fca5 	bl	80077dc <__aeabi_dcmpgt>
 8010e92:	b9c8      	cbnz	r0, 8010ec8 <_dtoa_r+0x6c8>
 8010e94:	4642      	mov	r2, r8
 8010e96:	464b      	mov	r3, r9
 8010e98:	4630      	mov	r0, r6
 8010e9a:	4639      	mov	r1, r7
 8010e9c:	f7f6 fc76 	bl	800778c <__aeabi_dcmpeq>
 8010ea0:	b110      	cbz	r0, 8010ea8 <_dtoa_r+0x6a8>
 8010ea2:	9b02      	ldr	r3, [sp, #8]
 8010ea4:	07d9      	lsls	r1, r3, #31
 8010ea6:	d40f      	bmi.n	8010ec8 <_dtoa_r+0x6c8>
 8010ea8:	4620      	mov	r0, r4
 8010eaa:	4659      	mov	r1, fp
 8010eac:	f000 fd7b 	bl	80119a6 <_Bfree>
 8010eb0:	2300      	movs	r3, #0
 8010eb2:	702b      	strb	r3, [r5, #0]
 8010eb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010eb6:	f10a 0001 	add.w	r0, sl, #1
 8010eba:	6018      	str	r0, [r3, #0]
 8010ebc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8010ebe:	2b00      	cmp	r3, #0
 8010ec0:	f43f acd9 	beq.w	8010876 <_dtoa_r+0x76>
 8010ec4:	601d      	str	r5, [r3, #0]
 8010ec6:	e4d6      	b.n	8010876 <_dtoa_r+0x76>
 8010ec8:	f8cd a01c 	str.w	sl, [sp, #28]
 8010ecc:	462b      	mov	r3, r5
 8010ece:	461d      	mov	r5, r3
 8010ed0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8010ed4:	2a39      	cmp	r2, #57	; 0x39
 8010ed6:	d108      	bne.n	8010eea <_dtoa_r+0x6ea>
 8010ed8:	9a00      	ldr	r2, [sp, #0]
 8010eda:	429a      	cmp	r2, r3
 8010edc:	d1f7      	bne.n	8010ece <_dtoa_r+0x6ce>
 8010ede:	9a07      	ldr	r2, [sp, #28]
 8010ee0:	9900      	ldr	r1, [sp, #0]
 8010ee2:	3201      	adds	r2, #1
 8010ee4:	9207      	str	r2, [sp, #28]
 8010ee6:	2230      	movs	r2, #48	; 0x30
 8010ee8:	700a      	strb	r2, [r1, #0]
 8010eea:	781a      	ldrb	r2, [r3, #0]
 8010eec:	3201      	adds	r2, #1
 8010eee:	701a      	strb	r2, [r3, #0]
 8010ef0:	e78d      	b.n	8010e0e <_dtoa_r+0x60e>
 8010ef2:	4b7f      	ldr	r3, [pc, #508]	; (80110f0 <_dtoa_r+0x8f0>)
 8010ef4:	2200      	movs	r2, #0
 8010ef6:	f7f6 f9e1 	bl	80072bc <__aeabi_dmul>
 8010efa:	2200      	movs	r2, #0
 8010efc:	2300      	movs	r3, #0
 8010efe:	4606      	mov	r6, r0
 8010f00:	460f      	mov	r7, r1
 8010f02:	f7f6 fc43 	bl	800778c <__aeabi_dcmpeq>
 8010f06:	2800      	cmp	r0, #0
 8010f08:	d09b      	beq.n	8010e42 <_dtoa_r+0x642>
 8010f0a:	e7cd      	b.n	8010ea8 <_dtoa_r+0x6a8>
 8010f0c:	9a08      	ldr	r2, [sp, #32]
 8010f0e:	2a00      	cmp	r2, #0
 8010f10:	f000 80c4 	beq.w	801109c <_dtoa_r+0x89c>
 8010f14:	9a05      	ldr	r2, [sp, #20]
 8010f16:	2a01      	cmp	r2, #1
 8010f18:	f300 80a8 	bgt.w	801106c <_dtoa_r+0x86c>
 8010f1c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010f1e:	2a00      	cmp	r2, #0
 8010f20:	f000 80a0 	beq.w	8011064 <_dtoa_r+0x864>
 8010f24:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8010f28:	9e06      	ldr	r6, [sp, #24]
 8010f2a:	4645      	mov	r5, r8
 8010f2c:	9a04      	ldr	r2, [sp, #16]
 8010f2e:	2101      	movs	r1, #1
 8010f30:	441a      	add	r2, r3
 8010f32:	4620      	mov	r0, r4
 8010f34:	4498      	add	r8, r3
 8010f36:	9204      	str	r2, [sp, #16]
 8010f38:	f000 fdd8 	bl	8011aec <__i2b>
 8010f3c:	4607      	mov	r7, r0
 8010f3e:	2d00      	cmp	r5, #0
 8010f40:	dd0b      	ble.n	8010f5a <_dtoa_r+0x75a>
 8010f42:	9b04      	ldr	r3, [sp, #16]
 8010f44:	2b00      	cmp	r3, #0
 8010f46:	dd08      	ble.n	8010f5a <_dtoa_r+0x75a>
 8010f48:	42ab      	cmp	r3, r5
 8010f4a:	9a04      	ldr	r2, [sp, #16]
 8010f4c:	bfa8      	it	ge
 8010f4e:	462b      	movge	r3, r5
 8010f50:	eba8 0803 	sub.w	r8, r8, r3
 8010f54:	1aed      	subs	r5, r5, r3
 8010f56:	1ad3      	subs	r3, r2, r3
 8010f58:	9304      	str	r3, [sp, #16]
 8010f5a:	9b06      	ldr	r3, [sp, #24]
 8010f5c:	b1fb      	cbz	r3, 8010f9e <_dtoa_r+0x79e>
 8010f5e:	9b08      	ldr	r3, [sp, #32]
 8010f60:	2b00      	cmp	r3, #0
 8010f62:	f000 809f 	beq.w	80110a4 <_dtoa_r+0x8a4>
 8010f66:	2e00      	cmp	r6, #0
 8010f68:	dd11      	ble.n	8010f8e <_dtoa_r+0x78e>
 8010f6a:	4639      	mov	r1, r7
 8010f6c:	4632      	mov	r2, r6
 8010f6e:	4620      	mov	r0, r4
 8010f70:	f000 fe78 	bl	8011c64 <__pow5mult>
 8010f74:	465a      	mov	r2, fp
 8010f76:	4601      	mov	r1, r0
 8010f78:	4607      	mov	r7, r0
 8010f7a:	4620      	mov	r0, r4
 8010f7c:	f000 fdcc 	bl	8011b18 <__multiply>
 8010f80:	4659      	mov	r1, fp
 8010f82:	9007      	str	r0, [sp, #28]
 8010f84:	4620      	mov	r0, r4
 8010f86:	f000 fd0e 	bl	80119a6 <_Bfree>
 8010f8a:	9b07      	ldr	r3, [sp, #28]
 8010f8c:	469b      	mov	fp, r3
 8010f8e:	9b06      	ldr	r3, [sp, #24]
 8010f90:	1b9a      	subs	r2, r3, r6
 8010f92:	d004      	beq.n	8010f9e <_dtoa_r+0x79e>
 8010f94:	4659      	mov	r1, fp
 8010f96:	4620      	mov	r0, r4
 8010f98:	f000 fe64 	bl	8011c64 <__pow5mult>
 8010f9c:	4683      	mov	fp, r0
 8010f9e:	2101      	movs	r1, #1
 8010fa0:	4620      	mov	r0, r4
 8010fa2:	f000 fda3 	bl	8011aec <__i2b>
 8010fa6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010fa8:	2b00      	cmp	r3, #0
 8010faa:	4606      	mov	r6, r0
 8010fac:	dd7c      	ble.n	80110a8 <_dtoa_r+0x8a8>
 8010fae:	461a      	mov	r2, r3
 8010fb0:	4601      	mov	r1, r0
 8010fb2:	4620      	mov	r0, r4
 8010fb4:	f000 fe56 	bl	8011c64 <__pow5mult>
 8010fb8:	9b05      	ldr	r3, [sp, #20]
 8010fba:	2b01      	cmp	r3, #1
 8010fbc:	4606      	mov	r6, r0
 8010fbe:	dd76      	ble.n	80110ae <_dtoa_r+0x8ae>
 8010fc0:	2300      	movs	r3, #0
 8010fc2:	9306      	str	r3, [sp, #24]
 8010fc4:	6933      	ldr	r3, [r6, #16]
 8010fc6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8010fca:	6918      	ldr	r0, [r3, #16]
 8010fcc:	f000 fd3e 	bl	8011a4c <__hi0bits>
 8010fd0:	f1c0 0020 	rsb	r0, r0, #32
 8010fd4:	9b04      	ldr	r3, [sp, #16]
 8010fd6:	4418      	add	r0, r3
 8010fd8:	f010 001f 	ands.w	r0, r0, #31
 8010fdc:	f000 8086 	beq.w	80110ec <_dtoa_r+0x8ec>
 8010fe0:	f1c0 0320 	rsb	r3, r0, #32
 8010fe4:	2b04      	cmp	r3, #4
 8010fe6:	dd7f      	ble.n	80110e8 <_dtoa_r+0x8e8>
 8010fe8:	f1c0 001c 	rsb	r0, r0, #28
 8010fec:	9b04      	ldr	r3, [sp, #16]
 8010fee:	4403      	add	r3, r0
 8010ff0:	4480      	add	r8, r0
 8010ff2:	4405      	add	r5, r0
 8010ff4:	9304      	str	r3, [sp, #16]
 8010ff6:	f1b8 0f00 	cmp.w	r8, #0
 8010ffa:	dd05      	ble.n	8011008 <_dtoa_r+0x808>
 8010ffc:	4659      	mov	r1, fp
 8010ffe:	4642      	mov	r2, r8
 8011000:	4620      	mov	r0, r4
 8011002:	f000 fe6f 	bl	8011ce4 <__lshift>
 8011006:	4683      	mov	fp, r0
 8011008:	9b04      	ldr	r3, [sp, #16]
 801100a:	2b00      	cmp	r3, #0
 801100c:	dd05      	ble.n	801101a <_dtoa_r+0x81a>
 801100e:	4631      	mov	r1, r6
 8011010:	461a      	mov	r2, r3
 8011012:	4620      	mov	r0, r4
 8011014:	f000 fe66 	bl	8011ce4 <__lshift>
 8011018:	4606      	mov	r6, r0
 801101a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801101c:	2b00      	cmp	r3, #0
 801101e:	d069      	beq.n	80110f4 <_dtoa_r+0x8f4>
 8011020:	4631      	mov	r1, r6
 8011022:	4658      	mov	r0, fp
 8011024:	f000 feca 	bl	8011dbc <__mcmp>
 8011028:	2800      	cmp	r0, #0
 801102a:	da63      	bge.n	80110f4 <_dtoa_r+0x8f4>
 801102c:	2300      	movs	r3, #0
 801102e:	4659      	mov	r1, fp
 8011030:	220a      	movs	r2, #10
 8011032:	4620      	mov	r0, r4
 8011034:	f000 fcc0 	bl	80119b8 <__multadd>
 8011038:	9b08      	ldr	r3, [sp, #32]
 801103a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801103e:	4683      	mov	fp, r0
 8011040:	2b00      	cmp	r3, #0
 8011042:	f000 818e 	beq.w	8011362 <_dtoa_r+0xb62>
 8011046:	4639      	mov	r1, r7
 8011048:	2300      	movs	r3, #0
 801104a:	220a      	movs	r2, #10
 801104c:	4620      	mov	r0, r4
 801104e:	f000 fcb3 	bl	80119b8 <__multadd>
 8011052:	f1b9 0f00 	cmp.w	r9, #0
 8011056:	4607      	mov	r7, r0
 8011058:	f300 808e 	bgt.w	8011178 <_dtoa_r+0x978>
 801105c:	9b05      	ldr	r3, [sp, #20]
 801105e:	2b02      	cmp	r3, #2
 8011060:	dc50      	bgt.n	8011104 <_dtoa_r+0x904>
 8011062:	e089      	b.n	8011178 <_dtoa_r+0x978>
 8011064:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011066:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 801106a:	e75d      	b.n	8010f28 <_dtoa_r+0x728>
 801106c:	9b01      	ldr	r3, [sp, #4]
 801106e:	1e5e      	subs	r6, r3, #1
 8011070:	9b06      	ldr	r3, [sp, #24]
 8011072:	42b3      	cmp	r3, r6
 8011074:	bfbf      	itttt	lt
 8011076:	9b06      	ldrlt	r3, [sp, #24]
 8011078:	9606      	strlt	r6, [sp, #24]
 801107a:	1af2      	sublt	r2, r6, r3
 801107c:	9b0d      	ldrlt	r3, [sp, #52]	; 0x34
 801107e:	bfb6      	itet	lt
 8011080:	189b      	addlt	r3, r3, r2
 8011082:	1b9e      	subge	r6, r3, r6
 8011084:	930d      	strlt	r3, [sp, #52]	; 0x34
 8011086:	9b01      	ldr	r3, [sp, #4]
 8011088:	bfb8      	it	lt
 801108a:	2600      	movlt	r6, #0
 801108c:	2b00      	cmp	r3, #0
 801108e:	bfb5      	itete	lt
 8011090:	eba8 0503 	sublt.w	r5, r8, r3
 8011094:	9b01      	ldrge	r3, [sp, #4]
 8011096:	2300      	movlt	r3, #0
 8011098:	4645      	movge	r5, r8
 801109a:	e747      	b.n	8010f2c <_dtoa_r+0x72c>
 801109c:	9e06      	ldr	r6, [sp, #24]
 801109e:	9f08      	ldr	r7, [sp, #32]
 80110a0:	4645      	mov	r5, r8
 80110a2:	e74c      	b.n	8010f3e <_dtoa_r+0x73e>
 80110a4:	9a06      	ldr	r2, [sp, #24]
 80110a6:	e775      	b.n	8010f94 <_dtoa_r+0x794>
 80110a8:	9b05      	ldr	r3, [sp, #20]
 80110aa:	2b01      	cmp	r3, #1
 80110ac:	dc18      	bgt.n	80110e0 <_dtoa_r+0x8e0>
 80110ae:	9b02      	ldr	r3, [sp, #8]
 80110b0:	b9b3      	cbnz	r3, 80110e0 <_dtoa_r+0x8e0>
 80110b2:	9b03      	ldr	r3, [sp, #12]
 80110b4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80110b8:	b9a3      	cbnz	r3, 80110e4 <_dtoa_r+0x8e4>
 80110ba:	9b03      	ldr	r3, [sp, #12]
 80110bc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80110c0:	0d1b      	lsrs	r3, r3, #20
 80110c2:	051b      	lsls	r3, r3, #20
 80110c4:	b12b      	cbz	r3, 80110d2 <_dtoa_r+0x8d2>
 80110c6:	9b04      	ldr	r3, [sp, #16]
 80110c8:	3301      	adds	r3, #1
 80110ca:	9304      	str	r3, [sp, #16]
 80110cc:	f108 0801 	add.w	r8, r8, #1
 80110d0:	2301      	movs	r3, #1
 80110d2:	9306      	str	r3, [sp, #24]
 80110d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80110d6:	2b00      	cmp	r3, #0
 80110d8:	f47f af74 	bne.w	8010fc4 <_dtoa_r+0x7c4>
 80110dc:	2001      	movs	r0, #1
 80110de:	e779      	b.n	8010fd4 <_dtoa_r+0x7d4>
 80110e0:	2300      	movs	r3, #0
 80110e2:	e7f6      	b.n	80110d2 <_dtoa_r+0x8d2>
 80110e4:	9b02      	ldr	r3, [sp, #8]
 80110e6:	e7f4      	b.n	80110d2 <_dtoa_r+0x8d2>
 80110e8:	d085      	beq.n	8010ff6 <_dtoa_r+0x7f6>
 80110ea:	4618      	mov	r0, r3
 80110ec:	301c      	adds	r0, #28
 80110ee:	e77d      	b.n	8010fec <_dtoa_r+0x7ec>
 80110f0:	40240000 	.word	0x40240000
 80110f4:	9b01      	ldr	r3, [sp, #4]
 80110f6:	2b00      	cmp	r3, #0
 80110f8:	dc38      	bgt.n	801116c <_dtoa_r+0x96c>
 80110fa:	9b05      	ldr	r3, [sp, #20]
 80110fc:	2b02      	cmp	r3, #2
 80110fe:	dd35      	ble.n	801116c <_dtoa_r+0x96c>
 8011100:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8011104:	f1b9 0f00 	cmp.w	r9, #0
 8011108:	d10d      	bne.n	8011126 <_dtoa_r+0x926>
 801110a:	4631      	mov	r1, r6
 801110c:	464b      	mov	r3, r9
 801110e:	2205      	movs	r2, #5
 8011110:	4620      	mov	r0, r4
 8011112:	f000 fc51 	bl	80119b8 <__multadd>
 8011116:	4601      	mov	r1, r0
 8011118:	4606      	mov	r6, r0
 801111a:	4658      	mov	r0, fp
 801111c:	f000 fe4e 	bl	8011dbc <__mcmp>
 8011120:	2800      	cmp	r0, #0
 8011122:	f73f adbe 	bgt.w	8010ca2 <_dtoa_r+0x4a2>
 8011126:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011128:	9d00      	ldr	r5, [sp, #0]
 801112a:	ea6f 0a03 	mvn.w	sl, r3
 801112e:	f04f 0800 	mov.w	r8, #0
 8011132:	4631      	mov	r1, r6
 8011134:	4620      	mov	r0, r4
 8011136:	f000 fc36 	bl	80119a6 <_Bfree>
 801113a:	2f00      	cmp	r7, #0
 801113c:	f43f aeb4 	beq.w	8010ea8 <_dtoa_r+0x6a8>
 8011140:	f1b8 0f00 	cmp.w	r8, #0
 8011144:	d005      	beq.n	8011152 <_dtoa_r+0x952>
 8011146:	45b8      	cmp	r8, r7
 8011148:	d003      	beq.n	8011152 <_dtoa_r+0x952>
 801114a:	4641      	mov	r1, r8
 801114c:	4620      	mov	r0, r4
 801114e:	f000 fc2a 	bl	80119a6 <_Bfree>
 8011152:	4639      	mov	r1, r7
 8011154:	4620      	mov	r0, r4
 8011156:	f000 fc26 	bl	80119a6 <_Bfree>
 801115a:	e6a5      	b.n	8010ea8 <_dtoa_r+0x6a8>
 801115c:	2600      	movs	r6, #0
 801115e:	4637      	mov	r7, r6
 8011160:	e7e1      	b.n	8011126 <_dtoa_r+0x926>
 8011162:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8011164:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8011168:	4637      	mov	r7, r6
 801116a:	e59a      	b.n	8010ca2 <_dtoa_r+0x4a2>
 801116c:	9b08      	ldr	r3, [sp, #32]
 801116e:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8011172:	2b00      	cmp	r3, #0
 8011174:	f000 80fc 	beq.w	8011370 <_dtoa_r+0xb70>
 8011178:	2d00      	cmp	r5, #0
 801117a:	dd05      	ble.n	8011188 <_dtoa_r+0x988>
 801117c:	4639      	mov	r1, r7
 801117e:	462a      	mov	r2, r5
 8011180:	4620      	mov	r0, r4
 8011182:	f000 fdaf 	bl	8011ce4 <__lshift>
 8011186:	4607      	mov	r7, r0
 8011188:	9b06      	ldr	r3, [sp, #24]
 801118a:	2b00      	cmp	r3, #0
 801118c:	d05b      	beq.n	8011246 <_dtoa_r+0xa46>
 801118e:	6879      	ldr	r1, [r7, #4]
 8011190:	4620      	mov	r0, r4
 8011192:	f000 fbe3 	bl	801195c <_Balloc>
 8011196:	4605      	mov	r5, r0
 8011198:	b920      	cbnz	r0, 80111a4 <_dtoa_r+0x9a4>
 801119a:	4b80      	ldr	r3, [pc, #512]	; (801139c <_dtoa_r+0xb9c>)
 801119c:	4602      	mov	r2, r0
 801119e:	f240 21ea 	movw	r1, #746	; 0x2ea
 80111a2:	e45b      	b.n	8010a5c <_dtoa_r+0x25c>
 80111a4:	693a      	ldr	r2, [r7, #16]
 80111a6:	3202      	adds	r2, #2
 80111a8:	0092      	lsls	r2, r2, #2
 80111aa:	f107 010c 	add.w	r1, r7, #12
 80111ae:	300c      	adds	r0, #12
 80111b0:	f7fd fd42 	bl	800ec38 <memcpy>
 80111b4:	2201      	movs	r2, #1
 80111b6:	4629      	mov	r1, r5
 80111b8:	4620      	mov	r0, r4
 80111ba:	f000 fd93 	bl	8011ce4 <__lshift>
 80111be:	9b00      	ldr	r3, [sp, #0]
 80111c0:	3301      	adds	r3, #1
 80111c2:	9301      	str	r3, [sp, #4]
 80111c4:	9b00      	ldr	r3, [sp, #0]
 80111c6:	444b      	add	r3, r9
 80111c8:	9307      	str	r3, [sp, #28]
 80111ca:	9b02      	ldr	r3, [sp, #8]
 80111cc:	f003 0301 	and.w	r3, r3, #1
 80111d0:	46b8      	mov	r8, r7
 80111d2:	9306      	str	r3, [sp, #24]
 80111d4:	4607      	mov	r7, r0
 80111d6:	9b01      	ldr	r3, [sp, #4]
 80111d8:	4631      	mov	r1, r6
 80111da:	3b01      	subs	r3, #1
 80111dc:	4658      	mov	r0, fp
 80111de:	9302      	str	r3, [sp, #8]
 80111e0:	f7ff fa82 	bl	80106e8 <quorem>
 80111e4:	4603      	mov	r3, r0
 80111e6:	3330      	adds	r3, #48	; 0x30
 80111e8:	9004      	str	r0, [sp, #16]
 80111ea:	4641      	mov	r1, r8
 80111ec:	4658      	mov	r0, fp
 80111ee:	9308      	str	r3, [sp, #32]
 80111f0:	f000 fde4 	bl	8011dbc <__mcmp>
 80111f4:	463a      	mov	r2, r7
 80111f6:	4681      	mov	r9, r0
 80111f8:	4631      	mov	r1, r6
 80111fa:	4620      	mov	r0, r4
 80111fc:	f000 fdfa 	bl	8011df4 <__mdiff>
 8011200:	68c2      	ldr	r2, [r0, #12]
 8011202:	9b08      	ldr	r3, [sp, #32]
 8011204:	4605      	mov	r5, r0
 8011206:	bb02      	cbnz	r2, 801124a <_dtoa_r+0xa4a>
 8011208:	4601      	mov	r1, r0
 801120a:	4658      	mov	r0, fp
 801120c:	f000 fdd6 	bl	8011dbc <__mcmp>
 8011210:	9b08      	ldr	r3, [sp, #32]
 8011212:	4602      	mov	r2, r0
 8011214:	4629      	mov	r1, r5
 8011216:	4620      	mov	r0, r4
 8011218:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801121c:	f000 fbc3 	bl	80119a6 <_Bfree>
 8011220:	9b05      	ldr	r3, [sp, #20]
 8011222:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011224:	9d01      	ldr	r5, [sp, #4]
 8011226:	ea43 0102 	orr.w	r1, r3, r2
 801122a:	9b06      	ldr	r3, [sp, #24]
 801122c:	430b      	orrs	r3, r1
 801122e:	9b08      	ldr	r3, [sp, #32]
 8011230:	d10d      	bne.n	801124e <_dtoa_r+0xa4e>
 8011232:	2b39      	cmp	r3, #57	; 0x39
 8011234:	d029      	beq.n	801128a <_dtoa_r+0xa8a>
 8011236:	f1b9 0f00 	cmp.w	r9, #0
 801123a:	dd01      	ble.n	8011240 <_dtoa_r+0xa40>
 801123c:	9b04      	ldr	r3, [sp, #16]
 801123e:	3331      	adds	r3, #49	; 0x31
 8011240:	9a02      	ldr	r2, [sp, #8]
 8011242:	7013      	strb	r3, [r2, #0]
 8011244:	e775      	b.n	8011132 <_dtoa_r+0x932>
 8011246:	4638      	mov	r0, r7
 8011248:	e7b9      	b.n	80111be <_dtoa_r+0x9be>
 801124a:	2201      	movs	r2, #1
 801124c:	e7e2      	b.n	8011214 <_dtoa_r+0xa14>
 801124e:	f1b9 0f00 	cmp.w	r9, #0
 8011252:	db06      	blt.n	8011262 <_dtoa_r+0xa62>
 8011254:	9905      	ldr	r1, [sp, #20]
 8011256:	ea41 0909 	orr.w	r9, r1, r9
 801125a:	9906      	ldr	r1, [sp, #24]
 801125c:	ea59 0101 	orrs.w	r1, r9, r1
 8011260:	d120      	bne.n	80112a4 <_dtoa_r+0xaa4>
 8011262:	2a00      	cmp	r2, #0
 8011264:	ddec      	ble.n	8011240 <_dtoa_r+0xa40>
 8011266:	4659      	mov	r1, fp
 8011268:	2201      	movs	r2, #1
 801126a:	4620      	mov	r0, r4
 801126c:	9301      	str	r3, [sp, #4]
 801126e:	f000 fd39 	bl	8011ce4 <__lshift>
 8011272:	4631      	mov	r1, r6
 8011274:	4683      	mov	fp, r0
 8011276:	f000 fda1 	bl	8011dbc <__mcmp>
 801127a:	2800      	cmp	r0, #0
 801127c:	9b01      	ldr	r3, [sp, #4]
 801127e:	dc02      	bgt.n	8011286 <_dtoa_r+0xa86>
 8011280:	d1de      	bne.n	8011240 <_dtoa_r+0xa40>
 8011282:	07da      	lsls	r2, r3, #31
 8011284:	d5dc      	bpl.n	8011240 <_dtoa_r+0xa40>
 8011286:	2b39      	cmp	r3, #57	; 0x39
 8011288:	d1d8      	bne.n	801123c <_dtoa_r+0xa3c>
 801128a:	9a02      	ldr	r2, [sp, #8]
 801128c:	2339      	movs	r3, #57	; 0x39
 801128e:	7013      	strb	r3, [r2, #0]
 8011290:	462b      	mov	r3, r5
 8011292:	461d      	mov	r5, r3
 8011294:	3b01      	subs	r3, #1
 8011296:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 801129a:	2a39      	cmp	r2, #57	; 0x39
 801129c:	d050      	beq.n	8011340 <_dtoa_r+0xb40>
 801129e:	3201      	adds	r2, #1
 80112a0:	701a      	strb	r2, [r3, #0]
 80112a2:	e746      	b.n	8011132 <_dtoa_r+0x932>
 80112a4:	2a00      	cmp	r2, #0
 80112a6:	dd03      	ble.n	80112b0 <_dtoa_r+0xab0>
 80112a8:	2b39      	cmp	r3, #57	; 0x39
 80112aa:	d0ee      	beq.n	801128a <_dtoa_r+0xa8a>
 80112ac:	3301      	adds	r3, #1
 80112ae:	e7c7      	b.n	8011240 <_dtoa_r+0xa40>
 80112b0:	9a01      	ldr	r2, [sp, #4]
 80112b2:	9907      	ldr	r1, [sp, #28]
 80112b4:	f802 3c01 	strb.w	r3, [r2, #-1]
 80112b8:	428a      	cmp	r2, r1
 80112ba:	d02a      	beq.n	8011312 <_dtoa_r+0xb12>
 80112bc:	4659      	mov	r1, fp
 80112be:	2300      	movs	r3, #0
 80112c0:	220a      	movs	r2, #10
 80112c2:	4620      	mov	r0, r4
 80112c4:	f000 fb78 	bl	80119b8 <__multadd>
 80112c8:	45b8      	cmp	r8, r7
 80112ca:	4683      	mov	fp, r0
 80112cc:	f04f 0300 	mov.w	r3, #0
 80112d0:	f04f 020a 	mov.w	r2, #10
 80112d4:	4641      	mov	r1, r8
 80112d6:	4620      	mov	r0, r4
 80112d8:	d107      	bne.n	80112ea <_dtoa_r+0xaea>
 80112da:	f000 fb6d 	bl	80119b8 <__multadd>
 80112de:	4680      	mov	r8, r0
 80112e0:	4607      	mov	r7, r0
 80112e2:	9b01      	ldr	r3, [sp, #4]
 80112e4:	3301      	adds	r3, #1
 80112e6:	9301      	str	r3, [sp, #4]
 80112e8:	e775      	b.n	80111d6 <_dtoa_r+0x9d6>
 80112ea:	f000 fb65 	bl	80119b8 <__multadd>
 80112ee:	4639      	mov	r1, r7
 80112f0:	4680      	mov	r8, r0
 80112f2:	2300      	movs	r3, #0
 80112f4:	220a      	movs	r2, #10
 80112f6:	4620      	mov	r0, r4
 80112f8:	f000 fb5e 	bl	80119b8 <__multadd>
 80112fc:	4607      	mov	r7, r0
 80112fe:	e7f0      	b.n	80112e2 <_dtoa_r+0xae2>
 8011300:	f1b9 0f00 	cmp.w	r9, #0
 8011304:	9a00      	ldr	r2, [sp, #0]
 8011306:	bfcc      	ite	gt
 8011308:	464d      	movgt	r5, r9
 801130a:	2501      	movle	r5, #1
 801130c:	4415      	add	r5, r2
 801130e:	f04f 0800 	mov.w	r8, #0
 8011312:	4659      	mov	r1, fp
 8011314:	2201      	movs	r2, #1
 8011316:	4620      	mov	r0, r4
 8011318:	9301      	str	r3, [sp, #4]
 801131a:	f000 fce3 	bl	8011ce4 <__lshift>
 801131e:	4631      	mov	r1, r6
 8011320:	4683      	mov	fp, r0
 8011322:	f000 fd4b 	bl	8011dbc <__mcmp>
 8011326:	2800      	cmp	r0, #0
 8011328:	dcb2      	bgt.n	8011290 <_dtoa_r+0xa90>
 801132a:	d102      	bne.n	8011332 <_dtoa_r+0xb32>
 801132c:	9b01      	ldr	r3, [sp, #4]
 801132e:	07db      	lsls	r3, r3, #31
 8011330:	d4ae      	bmi.n	8011290 <_dtoa_r+0xa90>
 8011332:	462b      	mov	r3, r5
 8011334:	461d      	mov	r5, r3
 8011336:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801133a:	2a30      	cmp	r2, #48	; 0x30
 801133c:	d0fa      	beq.n	8011334 <_dtoa_r+0xb34>
 801133e:	e6f8      	b.n	8011132 <_dtoa_r+0x932>
 8011340:	9a00      	ldr	r2, [sp, #0]
 8011342:	429a      	cmp	r2, r3
 8011344:	d1a5      	bne.n	8011292 <_dtoa_r+0xa92>
 8011346:	f10a 0a01 	add.w	sl, sl, #1
 801134a:	2331      	movs	r3, #49	; 0x31
 801134c:	e779      	b.n	8011242 <_dtoa_r+0xa42>
 801134e:	4b14      	ldr	r3, [pc, #80]	; (80113a0 <_dtoa_r+0xba0>)
 8011350:	f7ff bab1 	b.w	80108b6 <_dtoa_r+0xb6>
 8011354:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8011356:	2b00      	cmp	r3, #0
 8011358:	f47f aa93 	bne.w	8010882 <_dtoa_r+0x82>
 801135c:	4b11      	ldr	r3, [pc, #68]	; (80113a4 <_dtoa_r+0xba4>)
 801135e:	f7ff baaa 	b.w	80108b6 <_dtoa_r+0xb6>
 8011362:	f1b9 0f00 	cmp.w	r9, #0
 8011366:	dc03      	bgt.n	8011370 <_dtoa_r+0xb70>
 8011368:	9b05      	ldr	r3, [sp, #20]
 801136a:	2b02      	cmp	r3, #2
 801136c:	f73f aeca 	bgt.w	8011104 <_dtoa_r+0x904>
 8011370:	9d00      	ldr	r5, [sp, #0]
 8011372:	4631      	mov	r1, r6
 8011374:	4658      	mov	r0, fp
 8011376:	f7ff f9b7 	bl	80106e8 <quorem>
 801137a:	f100 0330 	add.w	r3, r0, #48	; 0x30
 801137e:	f805 3b01 	strb.w	r3, [r5], #1
 8011382:	9a00      	ldr	r2, [sp, #0]
 8011384:	1aaa      	subs	r2, r5, r2
 8011386:	4591      	cmp	r9, r2
 8011388:	ddba      	ble.n	8011300 <_dtoa_r+0xb00>
 801138a:	4659      	mov	r1, fp
 801138c:	2300      	movs	r3, #0
 801138e:	220a      	movs	r2, #10
 8011390:	4620      	mov	r0, r4
 8011392:	f000 fb11 	bl	80119b8 <__multadd>
 8011396:	4683      	mov	fp, r0
 8011398:	e7eb      	b.n	8011372 <_dtoa_r+0xb72>
 801139a:	bf00      	nop
 801139c:	0801434d 	.word	0x0801434d
 80113a0:	0801431e 	.word	0x0801431e
 80113a4:	08014344 	.word	0x08014344

080113a8 <__sflush_r>:
 80113a8:	898b      	ldrh	r3, [r1, #12]
 80113aa:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80113ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113b2:	4605      	mov	r5, r0
 80113b4:	0718      	lsls	r0, r3, #28
 80113b6:	460c      	mov	r4, r1
 80113b8:	d45f      	bmi.n	801147a <__sflush_r+0xd2>
 80113ba:	684b      	ldr	r3, [r1, #4]
 80113bc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80113c0:	2b00      	cmp	r3, #0
 80113c2:	818a      	strh	r2, [r1, #12]
 80113c4:	dc05      	bgt.n	80113d2 <__sflush_r+0x2a>
 80113c6:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 80113c8:	2b00      	cmp	r3, #0
 80113ca:	dc02      	bgt.n	80113d2 <__sflush_r+0x2a>
 80113cc:	2000      	movs	r0, #0
 80113ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113d2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80113d4:	2e00      	cmp	r6, #0
 80113d6:	d0f9      	beq.n	80113cc <__sflush_r+0x24>
 80113d8:	2300      	movs	r3, #0
 80113da:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80113de:	682f      	ldr	r7, [r5, #0]
 80113e0:	602b      	str	r3, [r5, #0]
 80113e2:	d036      	beq.n	8011452 <__sflush_r+0xaa>
 80113e4:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80113e6:	89a3      	ldrh	r3, [r4, #12]
 80113e8:	075a      	lsls	r2, r3, #29
 80113ea:	d505      	bpl.n	80113f8 <__sflush_r+0x50>
 80113ec:	6863      	ldr	r3, [r4, #4]
 80113ee:	1ac0      	subs	r0, r0, r3
 80113f0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80113f2:	b10b      	cbz	r3, 80113f8 <__sflush_r+0x50>
 80113f4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80113f6:	1ac0      	subs	r0, r0, r3
 80113f8:	2300      	movs	r3, #0
 80113fa:	4602      	mov	r2, r0
 80113fc:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80113fe:	69e1      	ldr	r1, [r4, #28]
 8011400:	4628      	mov	r0, r5
 8011402:	47b0      	blx	r6
 8011404:	1c43      	adds	r3, r0, #1
 8011406:	89a3      	ldrh	r3, [r4, #12]
 8011408:	d106      	bne.n	8011418 <__sflush_r+0x70>
 801140a:	6829      	ldr	r1, [r5, #0]
 801140c:	291d      	cmp	r1, #29
 801140e:	d830      	bhi.n	8011472 <__sflush_r+0xca>
 8011410:	4a2b      	ldr	r2, [pc, #172]	; (80114c0 <__sflush_r+0x118>)
 8011412:	40ca      	lsrs	r2, r1
 8011414:	07d6      	lsls	r6, r2, #31
 8011416:	d52c      	bpl.n	8011472 <__sflush_r+0xca>
 8011418:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801141c:	b21b      	sxth	r3, r3
 801141e:	2200      	movs	r2, #0
 8011420:	6062      	str	r2, [r4, #4]
 8011422:	04d9      	lsls	r1, r3, #19
 8011424:	6922      	ldr	r2, [r4, #16]
 8011426:	81a3      	strh	r3, [r4, #12]
 8011428:	6022      	str	r2, [r4, #0]
 801142a:	d504      	bpl.n	8011436 <__sflush_r+0x8e>
 801142c:	1c42      	adds	r2, r0, #1
 801142e:	d101      	bne.n	8011434 <__sflush_r+0x8c>
 8011430:	682b      	ldr	r3, [r5, #0]
 8011432:	b903      	cbnz	r3, 8011436 <__sflush_r+0x8e>
 8011434:	6520      	str	r0, [r4, #80]	; 0x50
 8011436:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011438:	602f      	str	r7, [r5, #0]
 801143a:	2900      	cmp	r1, #0
 801143c:	d0c6      	beq.n	80113cc <__sflush_r+0x24>
 801143e:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8011442:	4299      	cmp	r1, r3
 8011444:	d002      	beq.n	801144c <__sflush_r+0xa4>
 8011446:	4628      	mov	r0, r5
 8011448:	f000 f938 	bl	80116bc <_free_r>
 801144c:	2000      	movs	r0, #0
 801144e:	6320      	str	r0, [r4, #48]	; 0x30
 8011450:	e7bd      	b.n	80113ce <__sflush_r+0x26>
 8011452:	69e1      	ldr	r1, [r4, #28]
 8011454:	2301      	movs	r3, #1
 8011456:	4628      	mov	r0, r5
 8011458:	47b0      	blx	r6
 801145a:	1c41      	adds	r1, r0, #1
 801145c:	d1c3      	bne.n	80113e6 <__sflush_r+0x3e>
 801145e:	682b      	ldr	r3, [r5, #0]
 8011460:	2b00      	cmp	r3, #0
 8011462:	d0c0      	beq.n	80113e6 <__sflush_r+0x3e>
 8011464:	2b1d      	cmp	r3, #29
 8011466:	d001      	beq.n	801146c <__sflush_r+0xc4>
 8011468:	2b16      	cmp	r3, #22
 801146a:	d101      	bne.n	8011470 <__sflush_r+0xc8>
 801146c:	602f      	str	r7, [r5, #0]
 801146e:	e7ad      	b.n	80113cc <__sflush_r+0x24>
 8011470:	89a3      	ldrh	r3, [r4, #12]
 8011472:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011476:	81a3      	strh	r3, [r4, #12]
 8011478:	e7a9      	b.n	80113ce <__sflush_r+0x26>
 801147a:	690f      	ldr	r7, [r1, #16]
 801147c:	2f00      	cmp	r7, #0
 801147e:	d0a5      	beq.n	80113cc <__sflush_r+0x24>
 8011480:	079b      	lsls	r3, r3, #30
 8011482:	680e      	ldr	r6, [r1, #0]
 8011484:	bf08      	it	eq
 8011486:	694b      	ldreq	r3, [r1, #20]
 8011488:	600f      	str	r7, [r1, #0]
 801148a:	bf18      	it	ne
 801148c:	2300      	movne	r3, #0
 801148e:	eba6 0807 	sub.w	r8, r6, r7
 8011492:	608b      	str	r3, [r1, #8]
 8011494:	f1b8 0f00 	cmp.w	r8, #0
 8011498:	dd98      	ble.n	80113cc <__sflush_r+0x24>
 801149a:	69e1      	ldr	r1, [r4, #28]
 801149c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 801149e:	4643      	mov	r3, r8
 80114a0:	463a      	mov	r2, r7
 80114a2:	4628      	mov	r0, r5
 80114a4:	47b0      	blx	r6
 80114a6:	2800      	cmp	r0, #0
 80114a8:	dc06      	bgt.n	80114b8 <__sflush_r+0x110>
 80114aa:	89a3      	ldrh	r3, [r4, #12]
 80114ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80114b0:	81a3      	strh	r3, [r4, #12]
 80114b2:	f04f 30ff 	mov.w	r0, #4294967295
 80114b6:	e78a      	b.n	80113ce <__sflush_r+0x26>
 80114b8:	4407      	add	r7, r0
 80114ba:	eba8 0800 	sub.w	r8, r8, r0
 80114be:	e7e9      	b.n	8011494 <__sflush_r+0xec>
 80114c0:	20400001 	.word	0x20400001

080114c4 <_fflush_r>:
 80114c4:	b538      	push	{r3, r4, r5, lr}
 80114c6:	460c      	mov	r4, r1
 80114c8:	4605      	mov	r5, r0
 80114ca:	b118      	cbz	r0, 80114d4 <_fflush_r+0x10>
 80114cc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80114ce:	b90b      	cbnz	r3, 80114d4 <_fflush_r+0x10>
 80114d0:	f000 f864 	bl	801159c <__sinit>
 80114d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80114d8:	b1bb      	cbz	r3, 801150a <_fflush_r+0x46>
 80114da:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80114dc:	07d0      	lsls	r0, r2, #31
 80114de:	d404      	bmi.n	80114ea <_fflush_r+0x26>
 80114e0:	0599      	lsls	r1, r3, #22
 80114e2:	d402      	bmi.n	80114ea <_fflush_r+0x26>
 80114e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80114e6:	f7fd f945 	bl	800e774 <__retarget_lock_acquire_recursive>
 80114ea:	4628      	mov	r0, r5
 80114ec:	4621      	mov	r1, r4
 80114ee:	f7ff ff5b 	bl	80113a8 <__sflush_r>
 80114f2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80114f4:	07da      	lsls	r2, r3, #31
 80114f6:	4605      	mov	r5, r0
 80114f8:	d405      	bmi.n	8011506 <_fflush_r+0x42>
 80114fa:	89a3      	ldrh	r3, [r4, #12]
 80114fc:	059b      	lsls	r3, r3, #22
 80114fe:	d402      	bmi.n	8011506 <_fflush_r+0x42>
 8011500:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011502:	f7fd f938 	bl	800e776 <__retarget_lock_release_recursive>
 8011506:	4628      	mov	r0, r5
 8011508:	bd38      	pop	{r3, r4, r5, pc}
 801150a:	461d      	mov	r5, r3
 801150c:	e7fb      	b.n	8011506 <_fflush_r+0x42>
	...

08011510 <std>:
 8011510:	2300      	movs	r3, #0
 8011512:	b510      	push	{r4, lr}
 8011514:	4604      	mov	r4, r0
 8011516:	e9c0 3300 	strd	r3, r3, [r0]
 801151a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801151e:	6083      	str	r3, [r0, #8]
 8011520:	8181      	strh	r1, [r0, #12]
 8011522:	6643      	str	r3, [r0, #100]	; 0x64
 8011524:	81c2      	strh	r2, [r0, #14]
 8011526:	6183      	str	r3, [r0, #24]
 8011528:	4619      	mov	r1, r3
 801152a:	2208      	movs	r2, #8
 801152c:	305c      	adds	r0, #92	; 0x5c
 801152e:	f7fd fbab 	bl	800ec88 <memset>
 8011532:	4b07      	ldr	r3, [pc, #28]	; (8011550 <std+0x40>)
 8011534:	6223      	str	r3, [r4, #32]
 8011536:	4b07      	ldr	r3, [pc, #28]	; (8011554 <std+0x44>)
 8011538:	6263      	str	r3, [r4, #36]	; 0x24
 801153a:	4b07      	ldr	r3, [pc, #28]	; (8011558 <std+0x48>)
 801153c:	62a3      	str	r3, [r4, #40]	; 0x28
 801153e:	4b07      	ldr	r3, [pc, #28]	; (801155c <std+0x4c>)
 8011540:	61e4      	str	r4, [r4, #28]
 8011542:	62e3      	str	r3, [r4, #44]	; 0x2c
 8011544:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011548:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801154c:	f7fd b910 	b.w	800e770 <__retarget_lock_init_recursive>
 8011550:	0801202d 	.word	0x0801202d
 8011554:	0801204f 	.word	0x0801204f
 8011558:	08012087 	.word	0x08012087
 801155c:	080120ab 	.word	0x080120ab

08011560 <_cleanup_r>:
 8011560:	4901      	ldr	r1, [pc, #4]	; (8011568 <_cleanup_r+0x8>)
 8011562:	f000 b96b 	b.w	801183c <_fwalk_reent>
 8011566:	bf00      	nop
 8011568:	08012309 	.word	0x08012309

0801156c <__sfp_lock_acquire>:
 801156c:	4801      	ldr	r0, [pc, #4]	; (8011574 <__sfp_lock_acquire+0x8>)
 801156e:	f7fd b901 	b.w	800e774 <__retarget_lock_acquire_recursive>
 8011572:	bf00      	nop
 8011574:	20000c8c 	.word	0x20000c8c

08011578 <__sfp_lock_release>:
 8011578:	4801      	ldr	r0, [pc, #4]	; (8011580 <__sfp_lock_release+0x8>)
 801157a:	f7fd b8fc 	b.w	800e776 <__retarget_lock_release_recursive>
 801157e:	bf00      	nop
 8011580:	20000c8c 	.word	0x20000c8c

08011584 <__sinit_lock_acquire>:
 8011584:	4801      	ldr	r0, [pc, #4]	; (801158c <__sinit_lock_acquire+0x8>)
 8011586:	f7fd b8f5 	b.w	800e774 <__retarget_lock_acquire_recursive>
 801158a:	bf00      	nop
 801158c:	20000c87 	.word	0x20000c87

08011590 <__sinit_lock_release>:
 8011590:	4801      	ldr	r0, [pc, #4]	; (8011598 <__sinit_lock_release+0x8>)
 8011592:	f7fd b8f0 	b.w	800e776 <__retarget_lock_release_recursive>
 8011596:	bf00      	nop
 8011598:	20000c87 	.word	0x20000c87

0801159c <__sinit>:
 801159c:	b510      	push	{r4, lr}
 801159e:	4604      	mov	r4, r0
 80115a0:	f7ff fff0 	bl	8011584 <__sinit_lock_acquire>
 80115a4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80115a6:	b11a      	cbz	r2, 80115b0 <__sinit+0x14>
 80115a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80115ac:	f7ff bff0 	b.w	8011590 <__sinit_lock_release>
 80115b0:	4b0d      	ldr	r3, [pc, #52]	; (80115e8 <__sinit+0x4c>)
 80115b2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80115b4:	2303      	movs	r3, #3
 80115b6:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
 80115ba:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
 80115be:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 80115c2:	6860      	ldr	r0, [r4, #4]
 80115c4:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
 80115c8:	2104      	movs	r1, #4
 80115ca:	f7ff ffa1 	bl	8011510 <std>
 80115ce:	68a0      	ldr	r0, [r4, #8]
 80115d0:	2201      	movs	r2, #1
 80115d2:	2109      	movs	r1, #9
 80115d4:	f7ff ff9c 	bl	8011510 <std>
 80115d8:	68e0      	ldr	r0, [r4, #12]
 80115da:	2202      	movs	r2, #2
 80115dc:	2112      	movs	r1, #18
 80115de:	f7ff ff97 	bl	8011510 <std>
 80115e2:	2301      	movs	r3, #1
 80115e4:	63a3      	str	r3, [r4, #56]	; 0x38
 80115e6:	e7df      	b.n	80115a8 <__sinit+0xc>
 80115e8:	08011561 	.word	0x08011561

080115ec <__libc_fini_array>:
 80115ec:	b538      	push	{r3, r4, r5, lr}
 80115ee:	4d07      	ldr	r5, [pc, #28]	; (801160c <__libc_fini_array+0x20>)
 80115f0:	4c07      	ldr	r4, [pc, #28]	; (8011610 <__libc_fini_array+0x24>)
 80115f2:	1b64      	subs	r4, r4, r5
 80115f4:	10a4      	asrs	r4, r4, #2
 80115f6:	b91c      	cbnz	r4, 8011600 <__libc_fini_array+0x14>
 80115f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80115fc:	f001 bce0 	b.w	8012fc0 <_fini>
 8011600:	3c01      	subs	r4, #1
 8011602:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8011606:	4798      	blx	r3
 8011608:	e7f5      	b.n	80115f6 <__libc_fini_array+0xa>
 801160a:	bf00      	nop
 801160c:	08014910 	.word	0x08014910
 8011610:	08014914 	.word	0x08014914

08011614 <_malloc_trim_r>:
 8011614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011618:	4606      	mov	r6, r0
 801161a:	2008      	movs	r0, #8
 801161c:	460c      	mov	r4, r1
 801161e:	f7fe ff93 	bl	8010548 <sysconf>
 8011622:	4f23      	ldr	r7, [pc, #140]	; (80116b0 <_malloc_trim_r+0x9c>)
 8011624:	4680      	mov	r8, r0
 8011626:	4630      	mov	r0, r6
 8011628:	f7fd fb36 	bl	800ec98 <__malloc_lock>
 801162c:	68bb      	ldr	r3, [r7, #8]
 801162e:	685d      	ldr	r5, [r3, #4]
 8011630:	f025 0503 	bic.w	r5, r5, #3
 8011634:	1b2c      	subs	r4, r5, r4
 8011636:	3c11      	subs	r4, #17
 8011638:	4444      	add	r4, r8
 801163a:	fbb4 f4f8 	udiv	r4, r4, r8
 801163e:	3c01      	subs	r4, #1
 8011640:	fb08 f404 	mul.w	r4, r8, r4
 8011644:	45a0      	cmp	r8, r4
 8011646:	dd05      	ble.n	8011654 <_malloc_trim_r+0x40>
 8011648:	4630      	mov	r0, r6
 801164a:	f7fd fb2b 	bl	800eca4 <__malloc_unlock>
 801164e:	2000      	movs	r0, #0
 8011650:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011654:	2100      	movs	r1, #0
 8011656:	4630      	mov	r0, r6
 8011658:	f7fd fd0c 	bl	800f074 <_sbrk_r>
 801165c:	68bb      	ldr	r3, [r7, #8]
 801165e:	442b      	add	r3, r5
 8011660:	4298      	cmp	r0, r3
 8011662:	d1f1      	bne.n	8011648 <_malloc_trim_r+0x34>
 8011664:	4261      	negs	r1, r4
 8011666:	4630      	mov	r0, r6
 8011668:	f7fd fd04 	bl	800f074 <_sbrk_r>
 801166c:	3001      	adds	r0, #1
 801166e:	d110      	bne.n	8011692 <_malloc_trim_r+0x7e>
 8011670:	2100      	movs	r1, #0
 8011672:	4630      	mov	r0, r6
 8011674:	f7fd fcfe 	bl	800f074 <_sbrk_r>
 8011678:	68ba      	ldr	r2, [r7, #8]
 801167a:	1a83      	subs	r3, r0, r2
 801167c:	2b0f      	cmp	r3, #15
 801167e:	dde3      	ble.n	8011648 <_malloc_trim_r+0x34>
 8011680:	490c      	ldr	r1, [pc, #48]	; (80116b4 <_malloc_trim_r+0xa0>)
 8011682:	6809      	ldr	r1, [r1, #0]
 8011684:	1a40      	subs	r0, r0, r1
 8011686:	490c      	ldr	r1, [pc, #48]	; (80116b8 <_malloc_trim_r+0xa4>)
 8011688:	f043 0301 	orr.w	r3, r3, #1
 801168c:	6008      	str	r0, [r1, #0]
 801168e:	6053      	str	r3, [r2, #4]
 8011690:	e7da      	b.n	8011648 <_malloc_trim_r+0x34>
 8011692:	68bb      	ldr	r3, [r7, #8]
 8011694:	4a08      	ldr	r2, [pc, #32]	; (80116b8 <_malloc_trim_r+0xa4>)
 8011696:	1b2d      	subs	r5, r5, r4
 8011698:	f045 0501 	orr.w	r5, r5, #1
 801169c:	605d      	str	r5, [r3, #4]
 801169e:	6813      	ldr	r3, [r2, #0]
 80116a0:	4630      	mov	r0, r6
 80116a2:	1b1c      	subs	r4, r3, r4
 80116a4:	6014      	str	r4, [r2, #0]
 80116a6:	f7fd fafd 	bl	800eca4 <__malloc_unlock>
 80116aa:	2001      	movs	r0, #1
 80116ac:	e7d0      	b.n	8011650 <_malloc_trim_r+0x3c>
 80116ae:	bf00      	nop
 80116b0:	20000440 	.word	0x20000440
 80116b4:	20000848 	.word	0x20000848
 80116b8:	20000a58 	.word	0x20000a58

080116bc <_free_r>:
 80116bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80116be:	4605      	mov	r5, r0
 80116c0:	460f      	mov	r7, r1
 80116c2:	2900      	cmp	r1, #0
 80116c4:	f000 80b1 	beq.w	801182a <_free_r+0x16e>
 80116c8:	f7fd fae6 	bl	800ec98 <__malloc_lock>
 80116cc:	f857 2c04 	ldr.w	r2, [r7, #-4]
 80116d0:	4856      	ldr	r0, [pc, #344]	; (801182c <_free_r+0x170>)
 80116d2:	f022 0401 	bic.w	r4, r2, #1
 80116d6:	f1a7 0308 	sub.w	r3, r7, #8
 80116da:	eb03 0c04 	add.w	ip, r3, r4
 80116de:	6881      	ldr	r1, [r0, #8]
 80116e0:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80116e4:	4561      	cmp	r1, ip
 80116e6:	f026 0603 	bic.w	r6, r6, #3
 80116ea:	f002 0201 	and.w	r2, r2, #1
 80116ee:	d11b      	bne.n	8011728 <_free_r+0x6c>
 80116f0:	4434      	add	r4, r6
 80116f2:	b93a      	cbnz	r2, 8011704 <_free_r+0x48>
 80116f4:	f857 2c08 	ldr.w	r2, [r7, #-8]
 80116f8:	1a9b      	subs	r3, r3, r2
 80116fa:	4414      	add	r4, r2
 80116fc:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 8011700:	60ca      	str	r2, [r1, #12]
 8011702:	6091      	str	r1, [r2, #8]
 8011704:	f044 0201 	orr.w	r2, r4, #1
 8011708:	605a      	str	r2, [r3, #4]
 801170a:	6083      	str	r3, [r0, #8]
 801170c:	4b48      	ldr	r3, [pc, #288]	; (8011830 <_free_r+0x174>)
 801170e:	681b      	ldr	r3, [r3, #0]
 8011710:	42a3      	cmp	r3, r4
 8011712:	d804      	bhi.n	801171e <_free_r+0x62>
 8011714:	4b47      	ldr	r3, [pc, #284]	; (8011834 <_free_r+0x178>)
 8011716:	4628      	mov	r0, r5
 8011718:	6819      	ldr	r1, [r3, #0]
 801171a:	f7ff ff7b 	bl	8011614 <_malloc_trim_r>
 801171e:	4628      	mov	r0, r5
 8011720:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8011724:	f7fd babe 	b.w	800eca4 <__malloc_unlock>
 8011728:	f8cc 6004 	str.w	r6, [ip, #4]
 801172c:	2a00      	cmp	r2, #0
 801172e:	d138      	bne.n	80117a2 <_free_r+0xe6>
 8011730:	f857 1c08 	ldr.w	r1, [r7, #-8]
 8011734:	1a5b      	subs	r3, r3, r1
 8011736:	440c      	add	r4, r1
 8011738:	6899      	ldr	r1, [r3, #8]
 801173a:	f100 0708 	add.w	r7, r0, #8
 801173e:	42b9      	cmp	r1, r7
 8011740:	d031      	beq.n	80117a6 <_free_r+0xea>
 8011742:	68df      	ldr	r7, [r3, #12]
 8011744:	60cf      	str	r7, [r1, #12]
 8011746:	60b9      	str	r1, [r7, #8]
 8011748:	eb0c 0106 	add.w	r1, ip, r6
 801174c:	6849      	ldr	r1, [r1, #4]
 801174e:	07c9      	lsls	r1, r1, #31
 8011750:	d40b      	bmi.n	801176a <_free_r+0xae>
 8011752:	f8dc 1008 	ldr.w	r1, [ip, #8]
 8011756:	4434      	add	r4, r6
 8011758:	bb3a      	cbnz	r2, 80117aa <_free_r+0xee>
 801175a:	4e37      	ldr	r6, [pc, #220]	; (8011838 <_free_r+0x17c>)
 801175c:	42b1      	cmp	r1, r6
 801175e:	d124      	bne.n	80117aa <_free_r+0xee>
 8011760:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8011764:	e9c3 1102 	strd	r1, r1, [r3, #8]
 8011768:	2201      	movs	r2, #1
 801176a:	f044 0101 	orr.w	r1, r4, #1
 801176e:	6059      	str	r1, [r3, #4]
 8011770:	511c      	str	r4, [r3, r4]
 8011772:	2a00      	cmp	r2, #0
 8011774:	d1d3      	bne.n	801171e <_free_r+0x62>
 8011776:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 801177a:	d21b      	bcs.n	80117b4 <_free_r+0xf8>
 801177c:	0961      	lsrs	r1, r4, #5
 801177e:	08e2      	lsrs	r2, r4, #3
 8011780:	2401      	movs	r4, #1
 8011782:	408c      	lsls	r4, r1
 8011784:	6841      	ldr	r1, [r0, #4]
 8011786:	3201      	adds	r2, #1
 8011788:	430c      	orrs	r4, r1
 801178a:	6044      	str	r4, [r0, #4]
 801178c:	eb00 01c2 	add.w	r1, r0, r2, lsl #3
 8011790:	f850 4032 	ldr.w	r4, [r0, r2, lsl #3]
 8011794:	3908      	subs	r1, #8
 8011796:	e9c3 4102 	strd	r4, r1, [r3, #8]
 801179a:	f840 3032 	str.w	r3, [r0, r2, lsl #3]
 801179e:	60e3      	str	r3, [r4, #12]
 80117a0:	e7bd      	b.n	801171e <_free_r+0x62>
 80117a2:	2200      	movs	r2, #0
 80117a4:	e7d0      	b.n	8011748 <_free_r+0x8c>
 80117a6:	2201      	movs	r2, #1
 80117a8:	e7ce      	b.n	8011748 <_free_r+0x8c>
 80117aa:	f8dc 600c 	ldr.w	r6, [ip, #12]
 80117ae:	60ce      	str	r6, [r1, #12]
 80117b0:	60b1      	str	r1, [r6, #8]
 80117b2:	e7da      	b.n	801176a <_free_r+0xae>
 80117b4:	f5b4 6f20 	cmp.w	r4, #2560	; 0xa00
 80117b8:	ea4f 2254 	mov.w	r2, r4, lsr #9
 80117bc:	d214      	bcs.n	80117e8 <_free_r+0x12c>
 80117be:	09a2      	lsrs	r2, r4, #6
 80117c0:	3238      	adds	r2, #56	; 0x38
 80117c2:	1c51      	adds	r1, r2, #1
 80117c4:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 80117c8:	f850 1031 	ldr.w	r1, [r0, r1, lsl #3]
 80117cc:	428e      	cmp	r6, r1
 80117ce:	d125      	bne.n	801181c <_free_r+0x160>
 80117d0:	2401      	movs	r4, #1
 80117d2:	1092      	asrs	r2, r2, #2
 80117d4:	fa04 f202 	lsl.w	r2, r4, r2
 80117d8:	6844      	ldr	r4, [r0, #4]
 80117da:	4322      	orrs	r2, r4
 80117dc:	6042      	str	r2, [r0, #4]
 80117de:	e9c3 1602 	strd	r1, r6, [r3, #8]
 80117e2:	60b3      	str	r3, [r6, #8]
 80117e4:	60cb      	str	r3, [r1, #12]
 80117e6:	e79a      	b.n	801171e <_free_r+0x62>
 80117e8:	2a14      	cmp	r2, #20
 80117ea:	d801      	bhi.n	80117f0 <_free_r+0x134>
 80117ec:	325b      	adds	r2, #91	; 0x5b
 80117ee:	e7e8      	b.n	80117c2 <_free_r+0x106>
 80117f0:	2a54      	cmp	r2, #84	; 0x54
 80117f2:	d802      	bhi.n	80117fa <_free_r+0x13e>
 80117f4:	0b22      	lsrs	r2, r4, #12
 80117f6:	326e      	adds	r2, #110	; 0x6e
 80117f8:	e7e3      	b.n	80117c2 <_free_r+0x106>
 80117fa:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 80117fe:	d802      	bhi.n	8011806 <_free_r+0x14a>
 8011800:	0be2      	lsrs	r2, r4, #15
 8011802:	3277      	adds	r2, #119	; 0x77
 8011804:	e7dd      	b.n	80117c2 <_free_r+0x106>
 8011806:	f240 5154 	movw	r1, #1364	; 0x554
 801180a:	428a      	cmp	r2, r1
 801180c:	bf9a      	itte	ls
 801180e:	0ca2      	lsrls	r2, r4, #18
 8011810:	327c      	addls	r2, #124	; 0x7c
 8011812:	227e      	movhi	r2, #126	; 0x7e
 8011814:	e7d5      	b.n	80117c2 <_free_r+0x106>
 8011816:	6889      	ldr	r1, [r1, #8]
 8011818:	428e      	cmp	r6, r1
 801181a:	d004      	beq.n	8011826 <_free_r+0x16a>
 801181c:	684a      	ldr	r2, [r1, #4]
 801181e:	f022 0203 	bic.w	r2, r2, #3
 8011822:	42a2      	cmp	r2, r4
 8011824:	d8f7      	bhi.n	8011816 <_free_r+0x15a>
 8011826:	68ce      	ldr	r6, [r1, #12]
 8011828:	e7d9      	b.n	80117de <_free_r+0x122>
 801182a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801182c:	20000440 	.word	0x20000440
 8011830:	2000084c 	.word	0x2000084c
 8011834:	20000a88 	.word	0x20000a88
 8011838:	20000448 	.word	0x20000448

0801183c <_fwalk_reent>:
 801183c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011840:	4606      	mov	r6, r0
 8011842:	4688      	mov	r8, r1
 8011844:	f500 7438 	add.w	r4, r0, #736	; 0x2e0
 8011848:	2700      	movs	r7, #0
 801184a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801184e:	f1b9 0901 	subs.w	r9, r9, #1
 8011852:	d505      	bpl.n	8011860 <_fwalk_reent+0x24>
 8011854:	6824      	ldr	r4, [r4, #0]
 8011856:	2c00      	cmp	r4, #0
 8011858:	d1f7      	bne.n	801184a <_fwalk_reent+0xe>
 801185a:	4638      	mov	r0, r7
 801185c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011860:	89ab      	ldrh	r3, [r5, #12]
 8011862:	2b01      	cmp	r3, #1
 8011864:	d907      	bls.n	8011876 <_fwalk_reent+0x3a>
 8011866:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801186a:	3301      	adds	r3, #1
 801186c:	d003      	beq.n	8011876 <_fwalk_reent+0x3a>
 801186e:	4629      	mov	r1, r5
 8011870:	4630      	mov	r0, r6
 8011872:	47c0      	blx	r8
 8011874:	4307      	orrs	r7, r0
 8011876:	3568      	adds	r5, #104	; 0x68
 8011878:	e7e9      	b.n	801184e <_fwalk_reent+0x12>
	...

0801187c <_localeconv_r>:
 801187c:	4800      	ldr	r0, [pc, #0]	; (8011880 <_localeconv_r+0x4>)
 801187e:	4770      	bx	lr
 8011880:	20000944 	.word	0x20000944

08011884 <__swhatbuf_r>:
 8011884:	b570      	push	{r4, r5, r6, lr}
 8011886:	460e      	mov	r6, r1
 8011888:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801188c:	2900      	cmp	r1, #0
 801188e:	b096      	sub	sp, #88	; 0x58
 8011890:	4614      	mov	r4, r2
 8011892:	461d      	mov	r5, r3
 8011894:	da09      	bge.n	80118aa <__swhatbuf_r+0x26>
 8011896:	89b3      	ldrh	r3, [r6, #12]
 8011898:	2200      	movs	r2, #0
 801189a:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 801189e:	602a      	str	r2, [r5, #0]
 80118a0:	d116      	bne.n	80118d0 <__swhatbuf_r+0x4c>
 80118a2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80118a6:	6023      	str	r3, [r4, #0]
 80118a8:	e015      	b.n	80118d6 <__swhatbuf_r+0x52>
 80118aa:	466a      	mov	r2, sp
 80118ac:	f000 fd96 	bl	80123dc <_fstat_r>
 80118b0:	2800      	cmp	r0, #0
 80118b2:	dbf0      	blt.n	8011896 <__swhatbuf_r+0x12>
 80118b4:	9a01      	ldr	r2, [sp, #4]
 80118b6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80118ba:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80118be:	425a      	negs	r2, r3
 80118c0:	415a      	adcs	r2, r3
 80118c2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80118c6:	602a      	str	r2, [r5, #0]
 80118c8:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80118cc:	6023      	str	r3, [r4, #0]
 80118ce:	e002      	b.n	80118d6 <__swhatbuf_r+0x52>
 80118d0:	2340      	movs	r3, #64	; 0x40
 80118d2:	6023      	str	r3, [r4, #0]
 80118d4:	4610      	mov	r0, r2
 80118d6:	b016      	add	sp, #88	; 0x58
 80118d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080118dc <__smakebuf_r>:
 80118dc:	898b      	ldrh	r3, [r1, #12]
 80118de:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80118e0:	079d      	lsls	r5, r3, #30
 80118e2:	4606      	mov	r6, r0
 80118e4:	460c      	mov	r4, r1
 80118e6:	d507      	bpl.n	80118f8 <__smakebuf_r+0x1c>
 80118e8:	f104 0343 	add.w	r3, r4, #67	; 0x43
 80118ec:	6023      	str	r3, [r4, #0]
 80118ee:	6123      	str	r3, [r4, #16]
 80118f0:	2301      	movs	r3, #1
 80118f2:	6163      	str	r3, [r4, #20]
 80118f4:	b002      	add	sp, #8
 80118f6:	bd70      	pop	{r4, r5, r6, pc}
 80118f8:	ab01      	add	r3, sp, #4
 80118fa:	466a      	mov	r2, sp
 80118fc:	f7ff ffc2 	bl	8011884 <__swhatbuf_r>
 8011900:	9900      	ldr	r1, [sp, #0]
 8011902:	4605      	mov	r5, r0
 8011904:	4630      	mov	r0, r6
 8011906:	f7fc ff47 	bl	800e798 <_malloc_r>
 801190a:	b948      	cbnz	r0, 8011920 <__smakebuf_r+0x44>
 801190c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011910:	059a      	lsls	r2, r3, #22
 8011912:	d4ef      	bmi.n	80118f4 <__smakebuf_r+0x18>
 8011914:	f023 0303 	bic.w	r3, r3, #3
 8011918:	f043 0302 	orr.w	r3, r3, #2
 801191c:	81a3      	strh	r3, [r4, #12]
 801191e:	e7e3      	b.n	80118e8 <__smakebuf_r+0xc>
 8011920:	4b0d      	ldr	r3, [pc, #52]	; (8011958 <__smakebuf_r+0x7c>)
 8011922:	63f3      	str	r3, [r6, #60]	; 0x3c
 8011924:	89a3      	ldrh	r3, [r4, #12]
 8011926:	6020      	str	r0, [r4, #0]
 8011928:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801192c:	81a3      	strh	r3, [r4, #12]
 801192e:	9b00      	ldr	r3, [sp, #0]
 8011930:	6163      	str	r3, [r4, #20]
 8011932:	9b01      	ldr	r3, [sp, #4]
 8011934:	6120      	str	r0, [r4, #16]
 8011936:	b15b      	cbz	r3, 8011950 <__smakebuf_r+0x74>
 8011938:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801193c:	4630      	mov	r0, r6
 801193e:	f000 fd5f 	bl	8012400 <_isatty_r>
 8011942:	b128      	cbz	r0, 8011950 <__smakebuf_r+0x74>
 8011944:	89a3      	ldrh	r3, [r4, #12]
 8011946:	f023 0303 	bic.w	r3, r3, #3
 801194a:	f043 0301 	orr.w	r3, r3, #1
 801194e:	81a3      	strh	r3, [r4, #12]
 8011950:	89a0      	ldrh	r0, [r4, #12]
 8011952:	4305      	orrs	r5, r0
 8011954:	81a5      	strh	r5, [r4, #12]
 8011956:	e7cd      	b.n	80118f4 <__smakebuf_r+0x18>
 8011958:	08011561 	.word	0x08011561

0801195c <_Balloc>:
 801195c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 801195e:	b570      	push	{r4, r5, r6, lr}
 8011960:	4605      	mov	r5, r0
 8011962:	460c      	mov	r4, r1
 8011964:	b17b      	cbz	r3, 8011986 <_Balloc+0x2a>
 8011966:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8011968:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801196c:	b9a0      	cbnz	r0, 8011998 <_Balloc+0x3c>
 801196e:	2101      	movs	r1, #1
 8011970:	fa01 f604 	lsl.w	r6, r1, r4
 8011974:	1d72      	adds	r2, r6, #5
 8011976:	0092      	lsls	r2, r2, #2
 8011978:	4628      	mov	r0, r5
 801197a:	f000 fc87 	bl	801228c <_calloc_r>
 801197e:	b148      	cbz	r0, 8011994 <_Balloc+0x38>
 8011980:	e9c0 4601 	strd	r4, r6, [r0, #4]
 8011984:	e00b      	b.n	801199e <_Balloc+0x42>
 8011986:	2221      	movs	r2, #33	; 0x21
 8011988:	2104      	movs	r1, #4
 801198a:	f000 fc7f 	bl	801228c <_calloc_r>
 801198e:	64e8      	str	r0, [r5, #76]	; 0x4c
 8011990:	2800      	cmp	r0, #0
 8011992:	d1e8      	bne.n	8011966 <_Balloc+0xa>
 8011994:	2000      	movs	r0, #0
 8011996:	bd70      	pop	{r4, r5, r6, pc}
 8011998:	6802      	ldr	r2, [r0, #0]
 801199a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 801199e:	2300      	movs	r3, #0
 80119a0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80119a4:	e7f7      	b.n	8011996 <_Balloc+0x3a>

080119a6 <_Bfree>:
 80119a6:	b131      	cbz	r1, 80119b6 <_Bfree+0x10>
 80119a8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80119aa:	684a      	ldr	r2, [r1, #4]
 80119ac:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80119b0:	6008      	str	r0, [r1, #0]
 80119b2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80119b6:	4770      	bx	lr

080119b8 <__multadd>:
 80119b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119bc:	690e      	ldr	r6, [r1, #16]
 80119be:	4607      	mov	r7, r0
 80119c0:	4698      	mov	r8, r3
 80119c2:	460c      	mov	r4, r1
 80119c4:	f101 0014 	add.w	r0, r1, #20
 80119c8:	2300      	movs	r3, #0
 80119ca:	6805      	ldr	r5, [r0, #0]
 80119cc:	b2a9      	uxth	r1, r5
 80119ce:	fb02 8101 	mla	r1, r2, r1, r8
 80119d2:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 80119d6:	0c2d      	lsrs	r5, r5, #16
 80119d8:	fb02 c505 	mla	r5, r2, r5, ip
 80119dc:	b289      	uxth	r1, r1
 80119de:	3301      	adds	r3, #1
 80119e0:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 80119e4:	429e      	cmp	r6, r3
 80119e6:	f840 1b04 	str.w	r1, [r0], #4
 80119ea:	ea4f 4815 	mov.w	r8, r5, lsr #16
 80119ee:	dcec      	bgt.n	80119ca <__multadd+0x12>
 80119f0:	f1b8 0f00 	cmp.w	r8, #0
 80119f4:	d022      	beq.n	8011a3c <__multadd+0x84>
 80119f6:	68a3      	ldr	r3, [r4, #8]
 80119f8:	42b3      	cmp	r3, r6
 80119fa:	dc19      	bgt.n	8011a30 <__multadd+0x78>
 80119fc:	6861      	ldr	r1, [r4, #4]
 80119fe:	4638      	mov	r0, r7
 8011a00:	3101      	adds	r1, #1
 8011a02:	f7ff ffab 	bl	801195c <_Balloc>
 8011a06:	4605      	mov	r5, r0
 8011a08:	b928      	cbnz	r0, 8011a16 <__multadd+0x5e>
 8011a0a:	4602      	mov	r2, r0
 8011a0c:	4b0d      	ldr	r3, [pc, #52]	; (8011a44 <__multadd+0x8c>)
 8011a0e:	480e      	ldr	r0, [pc, #56]	; (8011a48 <__multadd+0x90>)
 8011a10:	21b5      	movs	r1, #181	; 0xb5
 8011a12:	f000 fc1d 	bl	8012250 <__assert_func>
 8011a16:	6922      	ldr	r2, [r4, #16]
 8011a18:	3202      	adds	r2, #2
 8011a1a:	f104 010c 	add.w	r1, r4, #12
 8011a1e:	0092      	lsls	r2, r2, #2
 8011a20:	300c      	adds	r0, #12
 8011a22:	f7fd f909 	bl	800ec38 <memcpy>
 8011a26:	4621      	mov	r1, r4
 8011a28:	4638      	mov	r0, r7
 8011a2a:	f7ff ffbc 	bl	80119a6 <_Bfree>
 8011a2e:	462c      	mov	r4, r5
 8011a30:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8011a34:	3601      	adds	r6, #1
 8011a36:	f8c3 8014 	str.w	r8, [r3, #20]
 8011a3a:	6126      	str	r6, [r4, #16]
 8011a3c:	4620      	mov	r0, r4
 8011a3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a42:	bf00      	nop
 8011a44:	0801434d 	.word	0x0801434d
 8011a48:	080143bd 	.word	0x080143bd

08011a4c <__hi0bits>:
 8011a4c:	0c03      	lsrs	r3, r0, #16
 8011a4e:	041b      	lsls	r3, r3, #16
 8011a50:	b9d3      	cbnz	r3, 8011a88 <__hi0bits+0x3c>
 8011a52:	0400      	lsls	r0, r0, #16
 8011a54:	2310      	movs	r3, #16
 8011a56:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8011a5a:	bf04      	itt	eq
 8011a5c:	0200      	lsleq	r0, r0, #8
 8011a5e:	3308      	addeq	r3, #8
 8011a60:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8011a64:	bf04      	itt	eq
 8011a66:	0100      	lsleq	r0, r0, #4
 8011a68:	3304      	addeq	r3, #4
 8011a6a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8011a6e:	bf04      	itt	eq
 8011a70:	0080      	lsleq	r0, r0, #2
 8011a72:	3302      	addeq	r3, #2
 8011a74:	2800      	cmp	r0, #0
 8011a76:	db05      	blt.n	8011a84 <__hi0bits+0x38>
 8011a78:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8011a7c:	f103 0301 	add.w	r3, r3, #1
 8011a80:	bf08      	it	eq
 8011a82:	2320      	moveq	r3, #32
 8011a84:	4618      	mov	r0, r3
 8011a86:	4770      	bx	lr
 8011a88:	2300      	movs	r3, #0
 8011a8a:	e7e4      	b.n	8011a56 <__hi0bits+0xa>

08011a8c <__lo0bits>:
 8011a8c:	6803      	ldr	r3, [r0, #0]
 8011a8e:	f013 0207 	ands.w	r2, r3, #7
 8011a92:	4601      	mov	r1, r0
 8011a94:	d00b      	beq.n	8011aae <__lo0bits+0x22>
 8011a96:	07da      	lsls	r2, r3, #31
 8011a98:	d424      	bmi.n	8011ae4 <__lo0bits+0x58>
 8011a9a:	0798      	lsls	r0, r3, #30
 8011a9c:	bf49      	itett	mi
 8011a9e:	085b      	lsrmi	r3, r3, #1
 8011aa0:	089b      	lsrpl	r3, r3, #2
 8011aa2:	2001      	movmi	r0, #1
 8011aa4:	600b      	strmi	r3, [r1, #0]
 8011aa6:	bf5c      	itt	pl
 8011aa8:	600b      	strpl	r3, [r1, #0]
 8011aaa:	2002      	movpl	r0, #2
 8011aac:	4770      	bx	lr
 8011aae:	b298      	uxth	r0, r3
 8011ab0:	b9b0      	cbnz	r0, 8011ae0 <__lo0bits+0x54>
 8011ab2:	0c1b      	lsrs	r3, r3, #16
 8011ab4:	2010      	movs	r0, #16
 8011ab6:	f013 0fff 	tst.w	r3, #255	; 0xff
 8011aba:	bf04      	itt	eq
 8011abc:	0a1b      	lsreq	r3, r3, #8
 8011abe:	3008      	addeq	r0, #8
 8011ac0:	071a      	lsls	r2, r3, #28
 8011ac2:	bf04      	itt	eq
 8011ac4:	091b      	lsreq	r3, r3, #4
 8011ac6:	3004      	addeq	r0, #4
 8011ac8:	079a      	lsls	r2, r3, #30
 8011aca:	bf04      	itt	eq
 8011acc:	089b      	lsreq	r3, r3, #2
 8011ace:	3002      	addeq	r0, #2
 8011ad0:	07da      	lsls	r2, r3, #31
 8011ad2:	d403      	bmi.n	8011adc <__lo0bits+0x50>
 8011ad4:	085b      	lsrs	r3, r3, #1
 8011ad6:	f100 0001 	add.w	r0, r0, #1
 8011ada:	d005      	beq.n	8011ae8 <__lo0bits+0x5c>
 8011adc:	600b      	str	r3, [r1, #0]
 8011ade:	4770      	bx	lr
 8011ae0:	4610      	mov	r0, r2
 8011ae2:	e7e8      	b.n	8011ab6 <__lo0bits+0x2a>
 8011ae4:	2000      	movs	r0, #0
 8011ae6:	4770      	bx	lr
 8011ae8:	2020      	movs	r0, #32
 8011aea:	4770      	bx	lr

08011aec <__i2b>:
 8011aec:	b510      	push	{r4, lr}
 8011aee:	460c      	mov	r4, r1
 8011af0:	2101      	movs	r1, #1
 8011af2:	f7ff ff33 	bl	801195c <_Balloc>
 8011af6:	4602      	mov	r2, r0
 8011af8:	b928      	cbnz	r0, 8011b06 <__i2b+0x1a>
 8011afa:	4b05      	ldr	r3, [pc, #20]	; (8011b10 <__i2b+0x24>)
 8011afc:	4805      	ldr	r0, [pc, #20]	; (8011b14 <__i2b+0x28>)
 8011afe:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8011b02:	f000 fba5 	bl	8012250 <__assert_func>
 8011b06:	2301      	movs	r3, #1
 8011b08:	6144      	str	r4, [r0, #20]
 8011b0a:	6103      	str	r3, [r0, #16]
 8011b0c:	bd10      	pop	{r4, pc}
 8011b0e:	bf00      	nop
 8011b10:	0801434d 	.word	0x0801434d
 8011b14:	080143bd 	.word	0x080143bd

08011b18 <__multiply>:
 8011b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b1c:	4614      	mov	r4, r2
 8011b1e:	690a      	ldr	r2, [r1, #16]
 8011b20:	6923      	ldr	r3, [r4, #16]
 8011b22:	429a      	cmp	r2, r3
 8011b24:	bfb8      	it	lt
 8011b26:	460b      	movlt	r3, r1
 8011b28:	460d      	mov	r5, r1
 8011b2a:	bfbc      	itt	lt
 8011b2c:	4625      	movlt	r5, r4
 8011b2e:	461c      	movlt	r4, r3
 8011b30:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8011b34:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8011b38:	68ab      	ldr	r3, [r5, #8]
 8011b3a:	6869      	ldr	r1, [r5, #4]
 8011b3c:	eb0a 0709 	add.w	r7, sl, r9
 8011b40:	42bb      	cmp	r3, r7
 8011b42:	b085      	sub	sp, #20
 8011b44:	bfb8      	it	lt
 8011b46:	3101      	addlt	r1, #1
 8011b48:	f7ff ff08 	bl	801195c <_Balloc>
 8011b4c:	b930      	cbnz	r0, 8011b5c <__multiply+0x44>
 8011b4e:	4602      	mov	r2, r0
 8011b50:	4b42      	ldr	r3, [pc, #264]	; (8011c5c <__multiply+0x144>)
 8011b52:	4843      	ldr	r0, [pc, #268]	; (8011c60 <__multiply+0x148>)
 8011b54:	f240 115d 	movw	r1, #349	; 0x15d
 8011b58:	f000 fb7a 	bl	8012250 <__assert_func>
 8011b5c:	f100 0614 	add.w	r6, r0, #20
 8011b60:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8011b64:	4633      	mov	r3, r6
 8011b66:	2200      	movs	r2, #0
 8011b68:	4543      	cmp	r3, r8
 8011b6a:	d31e      	bcc.n	8011baa <__multiply+0x92>
 8011b6c:	f105 0c14 	add.w	ip, r5, #20
 8011b70:	f104 0314 	add.w	r3, r4, #20
 8011b74:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8011b78:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8011b7c:	9202      	str	r2, [sp, #8]
 8011b7e:	ebac 0205 	sub.w	r2, ip, r5
 8011b82:	3a15      	subs	r2, #21
 8011b84:	f022 0203 	bic.w	r2, r2, #3
 8011b88:	3204      	adds	r2, #4
 8011b8a:	f105 0115 	add.w	r1, r5, #21
 8011b8e:	458c      	cmp	ip, r1
 8011b90:	bf38      	it	cc
 8011b92:	2204      	movcc	r2, #4
 8011b94:	9201      	str	r2, [sp, #4]
 8011b96:	9a02      	ldr	r2, [sp, #8]
 8011b98:	9303      	str	r3, [sp, #12]
 8011b9a:	429a      	cmp	r2, r3
 8011b9c:	d808      	bhi.n	8011bb0 <__multiply+0x98>
 8011b9e:	2f00      	cmp	r7, #0
 8011ba0:	dc55      	bgt.n	8011c4e <__multiply+0x136>
 8011ba2:	6107      	str	r7, [r0, #16]
 8011ba4:	b005      	add	sp, #20
 8011ba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011baa:	f843 2b04 	str.w	r2, [r3], #4
 8011bae:	e7db      	b.n	8011b68 <__multiply+0x50>
 8011bb0:	f8b3 a000 	ldrh.w	sl, [r3]
 8011bb4:	f1ba 0f00 	cmp.w	sl, #0
 8011bb8:	d020      	beq.n	8011bfc <__multiply+0xe4>
 8011bba:	f105 0e14 	add.w	lr, r5, #20
 8011bbe:	46b1      	mov	r9, r6
 8011bc0:	2200      	movs	r2, #0
 8011bc2:	f85e 4b04 	ldr.w	r4, [lr], #4
 8011bc6:	f8d9 b000 	ldr.w	fp, [r9]
 8011bca:	b2a1      	uxth	r1, r4
 8011bcc:	fa1f fb8b 	uxth.w	fp, fp
 8011bd0:	fb0a b101 	mla	r1, sl, r1, fp
 8011bd4:	4411      	add	r1, r2
 8011bd6:	f8d9 2000 	ldr.w	r2, [r9]
 8011bda:	0c24      	lsrs	r4, r4, #16
 8011bdc:	0c12      	lsrs	r2, r2, #16
 8011bde:	fb0a 2404 	mla	r4, sl, r4, r2
 8011be2:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8011be6:	b289      	uxth	r1, r1
 8011be8:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8011bec:	45f4      	cmp	ip, lr
 8011bee:	f849 1b04 	str.w	r1, [r9], #4
 8011bf2:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8011bf6:	d8e4      	bhi.n	8011bc2 <__multiply+0xaa>
 8011bf8:	9901      	ldr	r1, [sp, #4]
 8011bfa:	5072      	str	r2, [r6, r1]
 8011bfc:	9a03      	ldr	r2, [sp, #12]
 8011bfe:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8011c02:	3304      	adds	r3, #4
 8011c04:	f1b9 0f00 	cmp.w	r9, #0
 8011c08:	d01f      	beq.n	8011c4a <__multiply+0x132>
 8011c0a:	6834      	ldr	r4, [r6, #0]
 8011c0c:	f105 0114 	add.w	r1, r5, #20
 8011c10:	46b6      	mov	lr, r6
 8011c12:	f04f 0a00 	mov.w	sl, #0
 8011c16:	880a      	ldrh	r2, [r1, #0]
 8011c18:	f8be b002 	ldrh.w	fp, [lr, #2]
 8011c1c:	fb09 b202 	mla	r2, r9, r2, fp
 8011c20:	4492      	add	sl, r2
 8011c22:	b2a4      	uxth	r4, r4
 8011c24:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8011c28:	f84e 4b04 	str.w	r4, [lr], #4
 8011c2c:	f851 4b04 	ldr.w	r4, [r1], #4
 8011c30:	f8be 2000 	ldrh.w	r2, [lr]
 8011c34:	0c24      	lsrs	r4, r4, #16
 8011c36:	fb09 2404 	mla	r4, r9, r4, r2
 8011c3a:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8011c3e:	458c      	cmp	ip, r1
 8011c40:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8011c44:	d8e7      	bhi.n	8011c16 <__multiply+0xfe>
 8011c46:	9a01      	ldr	r2, [sp, #4]
 8011c48:	50b4      	str	r4, [r6, r2]
 8011c4a:	3604      	adds	r6, #4
 8011c4c:	e7a3      	b.n	8011b96 <__multiply+0x7e>
 8011c4e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8011c52:	2b00      	cmp	r3, #0
 8011c54:	d1a5      	bne.n	8011ba2 <__multiply+0x8a>
 8011c56:	3f01      	subs	r7, #1
 8011c58:	e7a1      	b.n	8011b9e <__multiply+0x86>
 8011c5a:	bf00      	nop
 8011c5c:	0801434d 	.word	0x0801434d
 8011c60:	080143bd 	.word	0x080143bd

08011c64 <__pow5mult>:
 8011c64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011c68:	4615      	mov	r5, r2
 8011c6a:	f012 0203 	ands.w	r2, r2, #3
 8011c6e:	4606      	mov	r6, r0
 8011c70:	460f      	mov	r7, r1
 8011c72:	d007      	beq.n	8011c84 <__pow5mult+0x20>
 8011c74:	4c1a      	ldr	r4, [pc, #104]	; (8011ce0 <__pow5mult+0x7c>)
 8011c76:	3a01      	subs	r2, #1
 8011c78:	2300      	movs	r3, #0
 8011c7a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8011c7e:	f7ff fe9b 	bl	80119b8 <__multadd>
 8011c82:	4607      	mov	r7, r0
 8011c84:	10ad      	asrs	r5, r5, #2
 8011c86:	d027      	beq.n	8011cd8 <__pow5mult+0x74>
 8011c88:	6cb4      	ldr	r4, [r6, #72]	; 0x48
 8011c8a:	b944      	cbnz	r4, 8011c9e <__pow5mult+0x3a>
 8011c8c:	f240 2171 	movw	r1, #625	; 0x271
 8011c90:	4630      	mov	r0, r6
 8011c92:	f7ff ff2b 	bl	8011aec <__i2b>
 8011c96:	2300      	movs	r3, #0
 8011c98:	64b0      	str	r0, [r6, #72]	; 0x48
 8011c9a:	4604      	mov	r4, r0
 8011c9c:	6003      	str	r3, [r0, #0]
 8011c9e:	f04f 0900 	mov.w	r9, #0
 8011ca2:	07eb      	lsls	r3, r5, #31
 8011ca4:	d50a      	bpl.n	8011cbc <__pow5mult+0x58>
 8011ca6:	4639      	mov	r1, r7
 8011ca8:	4622      	mov	r2, r4
 8011caa:	4630      	mov	r0, r6
 8011cac:	f7ff ff34 	bl	8011b18 <__multiply>
 8011cb0:	4639      	mov	r1, r7
 8011cb2:	4680      	mov	r8, r0
 8011cb4:	4630      	mov	r0, r6
 8011cb6:	f7ff fe76 	bl	80119a6 <_Bfree>
 8011cba:	4647      	mov	r7, r8
 8011cbc:	106d      	asrs	r5, r5, #1
 8011cbe:	d00b      	beq.n	8011cd8 <__pow5mult+0x74>
 8011cc0:	6820      	ldr	r0, [r4, #0]
 8011cc2:	b938      	cbnz	r0, 8011cd4 <__pow5mult+0x70>
 8011cc4:	4622      	mov	r2, r4
 8011cc6:	4621      	mov	r1, r4
 8011cc8:	4630      	mov	r0, r6
 8011cca:	f7ff ff25 	bl	8011b18 <__multiply>
 8011cce:	6020      	str	r0, [r4, #0]
 8011cd0:	f8c0 9000 	str.w	r9, [r0]
 8011cd4:	4604      	mov	r4, r0
 8011cd6:	e7e4      	b.n	8011ca2 <__pow5mult+0x3e>
 8011cd8:	4638      	mov	r0, r7
 8011cda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011cde:	bf00      	nop
 8011ce0:	08014510 	.word	0x08014510

08011ce4 <__lshift>:
 8011ce4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011ce8:	460c      	mov	r4, r1
 8011cea:	6849      	ldr	r1, [r1, #4]
 8011cec:	6923      	ldr	r3, [r4, #16]
 8011cee:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8011cf2:	68a3      	ldr	r3, [r4, #8]
 8011cf4:	4607      	mov	r7, r0
 8011cf6:	4691      	mov	r9, r2
 8011cf8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8011cfc:	f108 0601 	add.w	r6, r8, #1
 8011d00:	42b3      	cmp	r3, r6
 8011d02:	db0b      	blt.n	8011d1c <__lshift+0x38>
 8011d04:	4638      	mov	r0, r7
 8011d06:	f7ff fe29 	bl	801195c <_Balloc>
 8011d0a:	4605      	mov	r5, r0
 8011d0c:	b948      	cbnz	r0, 8011d22 <__lshift+0x3e>
 8011d0e:	4602      	mov	r2, r0
 8011d10:	4b28      	ldr	r3, [pc, #160]	; (8011db4 <__lshift+0xd0>)
 8011d12:	4829      	ldr	r0, [pc, #164]	; (8011db8 <__lshift+0xd4>)
 8011d14:	f240 11d9 	movw	r1, #473	; 0x1d9
 8011d18:	f000 fa9a 	bl	8012250 <__assert_func>
 8011d1c:	3101      	adds	r1, #1
 8011d1e:	005b      	lsls	r3, r3, #1
 8011d20:	e7ee      	b.n	8011d00 <__lshift+0x1c>
 8011d22:	2300      	movs	r3, #0
 8011d24:	f100 0114 	add.w	r1, r0, #20
 8011d28:	f100 0210 	add.w	r2, r0, #16
 8011d2c:	4618      	mov	r0, r3
 8011d2e:	4553      	cmp	r3, sl
 8011d30:	db33      	blt.n	8011d9a <__lshift+0xb6>
 8011d32:	6920      	ldr	r0, [r4, #16]
 8011d34:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8011d38:	f104 0314 	add.w	r3, r4, #20
 8011d3c:	f019 091f 	ands.w	r9, r9, #31
 8011d40:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8011d44:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8011d48:	d02b      	beq.n	8011da2 <__lshift+0xbe>
 8011d4a:	f1c9 0e20 	rsb	lr, r9, #32
 8011d4e:	468a      	mov	sl, r1
 8011d50:	2200      	movs	r2, #0
 8011d52:	6818      	ldr	r0, [r3, #0]
 8011d54:	fa00 f009 	lsl.w	r0, r0, r9
 8011d58:	4302      	orrs	r2, r0
 8011d5a:	f84a 2b04 	str.w	r2, [sl], #4
 8011d5e:	f853 2b04 	ldr.w	r2, [r3], #4
 8011d62:	459c      	cmp	ip, r3
 8011d64:	fa22 f20e 	lsr.w	r2, r2, lr
 8011d68:	d8f3      	bhi.n	8011d52 <__lshift+0x6e>
 8011d6a:	ebac 0304 	sub.w	r3, ip, r4
 8011d6e:	3b15      	subs	r3, #21
 8011d70:	f023 0303 	bic.w	r3, r3, #3
 8011d74:	3304      	adds	r3, #4
 8011d76:	f104 0015 	add.w	r0, r4, #21
 8011d7a:	4584      	cmp	ip, r0
 8011d7c:	bf38      	it	cc
 8011d7e:	2304      	movcc	r3, #4
 8011d80:	50ca      	str	r2, [r1, r3]
 8011d82:	b10a      	cbz	r2, 8011d88 <__lshift+0xa4>
 8011d84:	f108 0602 	add.w	r6, r8, #2
 8011d88:	3e01      	subs	r6, #1
 8011d8a:	4638      	mov	r0, r7
 8011d8c:	612e      	str	r6, [r5, #16]
 8011d8e:	4621      	mov	r1, r4
 8011d90:	f7ff fe09 	bl	80119a6 <_Bfree>
 8011d94:	4628      	mov	r0, r5
 8011d96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011d9a:	f842 0f04 	str.w	r0, [r2, #4]!
 8011d9e:	3301      	adds	r3, #1
 8011da0:	e7c5      	b.n	8011d2e <__lshift+0x4a>
 8011da2:	3904      	subs	r1, #4
 8011da4:	f853 2b04 	ldr.w	r2, [r3], #4
 8011da8:	f841 2f04 	str.w	r2, [r1, #4]!
 8011dac:	459c      	cmp	ip, r3
 8011dae:	d8f9      	bhi.n	8011da4 <__lshift+0xc0>
 8011db0:	e7ea      	b.n	8011d88 <__lshift+0xa4>
 8011db2:	bf00      	nop
 8011db4:	0801434d 	.word	0x0801434d
 8011db8:	080143bd 	.word	0x080143bd

08011dbc <__mcmp>:
 8011dbc:	b530      	push	{r4, r5, lr}
 8011dbe:	6902      	ldr	r2, [r0, #16]
 8011dc0:	690c      	ldr	r4, [r1, #16]
 8011dc2:	1b12      	subs	r2, r2, r4
 8011dc4:	d10e      	bne.n	8011de4 <__mcmp+0x28>
 8011dc6:	f100 0314 	add.w	r3, r0, #20
 8011dca:	3114      	adds	r1, #20
 8011dcc:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8011dd0:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8011dd4:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8011dd8:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8011ddc:	42a5      	cmp	r5, r4
 8011dde:	d003      	beq.n	8011de8 <__mcmp+0x2c>
 8011de0:	d305      	bcc.n	8011dee <__mcmp+0x32>
 8011de2:	2201      	movs	r2, #1
 8011de4:	4610      	mov	r0, r2
 8011de6:	bd30      	pop	{r4, r5, pc}
 8011de8:	4283      	cmp	r3, r0
 8011dea:	d3f3      	bcc.n	8011dd4 <__mcmp+0x18>
 8011dec:	e7fa      	b.n	8011de4 <__mcmp+0x28>
 8011dee:	f04f 32ff 	mov.w	r2, #4294967295
 8011df2:	e7f7      	b.n	8011de4 <__mcmp+0x28>

08011df4 <__mdiff>:
 8011df4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011df8:	460c      	mov	r4, r1
 8011dfa:	4606      	mov	r6, r0
 8011dfc:	4611      	mov	r1, r2
 8011dfe:	4620      	mov	r0, r4
 8011e00:	4617      	mov	r7, r2
 8011e02:	f7ff ffdb 	bl	8011dbc <__mcmp>
 8011e06:	1e05      	subs	r5, r0, #0
 8011e08:	d110      	bne.n	8011e2c <__mdiff+0x38>
 8011e0a:	4629      	mov	r1, r5
 8011e0c:	4630      	mov	r0, r6
 8011e0e:	f7ff fda5 	bl	801195c <_Balloc>
 8011e12:	b930      	cbnz	r0, 8011e22 <__mdiff+0x2e>
 8011e14:	4b39      	ldr	r3, [pc, #228]	; (8011efc <__mdiff+0x108>)
 8011e16:	4602      	mov	r2, r0
 8011e18:	f240 2132 	movw	r1, #562	; 0x232
 8011e1c:	4838      	ldr	r0, [pc, #224]	; (8011f00 <__mdiff+0x10c>)
 8011e1e:	f000 fa17 	bl	8012250 <__assert_func>
 8011e22:	2301      	movs	r3, #1
 8011e24:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8011e28:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e2c:	bfa4      	itt	ge
 8011e2e:	463b      	movge	r3, r7
 8011e30:	4627      	movge	r7, r4
 8011e32:	4630      	mov	r0, r6
 8011e34:	6879      	ldr	r1, [r7, #4]
 8011e36:	bfa6      	itte	ge
 8011e38:	461c      	movge	r4, r3
 8011e3a:	2500      	movge	r5, #0
 8011e3c:	2501      	movlt	r5, #1
 8011e3e:	f7ff fd8d 	bl	801195c <_Balloc>
 8011e42:	b920      	cbnz	r0, 8011e4e <__mdiff+0x5a>
 8011e44:	4b2d      	ldr	r3, [pc, #180]	; (8011efc <__mdiff+0x108>)
 8011e46:	4602      	mov	r2, r0
 8011e48:	f44f 7110 	mov.w	r1, #576	; 0x240
 8011e4c:	e7e6      	b.n	8011e1c <__mdiff+0x28>
 8011e4e:	693e      	ldr	r6, [r7, #16]
 8011e50:	60c5      	str	r5, [r0, #12]
 8011e52:	6925      	ldr	r5, [r4, #16]
 8011e54:	f107 0114 	add.w	r1, r7, #20
 8011e58:	f104 0914 	add.w	r9, r4, #20
 8011e5c:	f100 0e14 	add.w	lr, r0, #20
 8011e60:	f107 0210 	add.w	r2, r7, #16
 8011e64:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 8011e68:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 8011e6c:	46f2      	mov	sl, lr
 8011e6e:	2700      	movs	r7, #0
 8011e70:	f859 3b04 	ldr.w	r3, [r9], #4
 8011e74:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8011e78:	fa1f f883 	uxth.w	r8, r3
 8011e7c:	fa17 f78b 	uxtah	r7, r7, fp
 8011e80:	0c1b      	lsrs	r3, r3, #16
 8011e82:	eba7 0808 	sub.w	r8, r7, r8
 8011e86:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8011e8a:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8011e8e:	fa1f f888 	uxth.w	r8, r8
 8011e92:	141f      	asrs	r7, r3, #16
 8011e94:	454d      	cmp	r5, r9
 8011e96:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8011e9a:	f84a 3b04 	str.w	r3, [sl], #4
 8011e9e:	d8e7      	bhi.n	8011e70 <__mdiff+0x7c>
 8011ea0:	1b2b      	subs	r3, r5, r4
 8011ea2:	3b15      	subs	r3, #21
 8011ea4:	f023 0303 	bic.w	r3, r3, #3
 8011ea8:	3304      	adds	r3, #4
 8011eaa:	3415      	adds	r4, #21
 8011eac:	42a5      	cmp	r5, r4
 8011eae:	bf38      	it	cc
 8011eb0:	2304      	movcc	r3, #4
 8011eb2:	4419      	add	r1, r3
 8011eb4:	4473      	add	r3, lr
 8011eb6:	469e      	mov	lr, r3
 8011eb8:	460d      	mov	r5, r1
 8011eba:	4565      	cmp	r5, ip
 8011ebc:	d30e      	bcc.n	8011edc <__mdiff+0xe8>
 8011ebe:	f10c 0203 	add.w	r2, ip, #3
 8011ec2:	1a52      	subs	r2, r2, r1
 8011ec4:	f022 0203 	bic.w	r2, r2, #3
 8011ec8:	3903      	subs	r1, #3
 8011eca:	458c      	cmp	ip, r1
 8011ecc:	bf38      	it	cc
 8011ece:	2200      	movcc	r2, #0
 8011ed0:	441a      	add	r2, r3
 8011ed2:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8011ed6:	b17b      	cbz	r3, 8011ef8 <__mdiff+0x104>
 8011ed8:	6106      	str	r6, [r0, #16]
 8011eda:	e7a5      	b.n	8011e28 <__mdiff+0x34>
 8011edc:	f855 8b04 	ldr.w	r8, [r5], #4
 8011ee0:	fa17 f488 	uxtah	r4, r7, r8
 8011ee4:	1422      	asrs	r2, r4, #16
 8011ee6:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 8011eea:	b2a4      	uxth	r4, r4
 8011eec:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8011ef0:	f84e 4b04 	str.w	r4, [lr], #4
 8011ef4:	1417      	asrs	r7, r2, #16
 8011ef6:	e7e0      	b.n	8011eba <__mdiff+0xc6>
 8011ef8:	3e01      	subs	r6, #1
 8011efa:	e7ea      	b.n	8011ed2 <__mdiff+0xde>
 8011efc:	0801434d 	.word	0x0801434d
 8011f00:	080143bd 	.word	0x080143bd

08011f04 <__d2b>:
 8011f04:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011f08:	4689      	mov	r9, r1
 8011f0a:	2101      	movs	r1, #1
 8011f0c:	ec57 6b10 	vmov	r6, r7, d0
 8011f10:	4690      	mov	r8, r2
 8011f12:	f7ff fd23 	bl	801195c <_Balloc>
 8011f16:	4604      	mov	r4, r0
 8011f18:	b930      	cbnz	r0, 8011f28 <__d2b+0x24>
 8011f1a:	4602      	mov	r2, r0
 8011f1c:	4b25      	ldr	r3, [pc, #148]	; (8011fb4 <__d2b+0xb0>)
 8011f1e:	4826      	ldr	r0, [pc, #152]	; (8011fb8 <__d2b+0xb4>)
 8011f20:	f240 310a 	movw	r1, #778	; 0x30a
 8011f24:	f000 f994 	bl	8012250 <__assert_func>
 8011f28:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8011f2c:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8011f30:	bb35      	cbnz	r5, 8011f80 <__d2b+0x7c>
 8011f32:	2e00      	cmp	r6, #0
 8011f34:	9301      	str	r3, [sp, #4]
 8011f36:	d028      	beq.n	8011f8a <__d2b+0x86>
 8011f38:	4668      	mov	r0, sp
 8011f3a:	9600      	str	r6, [sp, #0]
 8011f3c:	f7ff fda6 	bl	8011a8c <__lo0bits>
 8011f40:	9900      	ldr	r1, [sp, #0]
 8011f42:	b300      	cbz	r0, 8011f86 <__d2b+0x82>
 8011f44:	9a01      	ldr	r2, [sp, #4]
 8011f46:	f1c0 0320 	rsb	r3, r0, #32
 8011f4a:	fa02 f303 	lsl.w	r3, r2, r3
 8011f4e:	430b      	orrs	r3, r1
 8011f50:	40c2      	lsrs	r2, r0
 8011f52:	6163      	str	r3, [r4, #20]
 8011f54:	9201      	str	r2, [sp, #4]
 8011f56:	9b01      	ldr	r3, [sp, #4]
 8011f58:	61a3      	str	r3, [r4, #24]
 8011f5a:	2b00      	cmp	r3, #0
 8011f5c:	bf14      	ite	ne
 8011f5e:	2202      	movne	r2, #2
 8011f60:	2201      	moveq	r2, #1
 8011f62:	6122      	str	r2, [r4, #16]
 8011f64:	b1d5      	cbz	r5, 8011f9c <__d2b+0x98>
 8011f66:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8011f6a:	4405      	add	r5, r0
 8011f6c:	f8c9 5000 	str.w	r5, [r9]
 8011f70:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8011f74:	f8c8 0000 	str.w	r0, [r8]
 8011f78:	4620      	mov	r0, r4
 8011f7a:	b003      	add	sp, #12
 8011f7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011f80:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8011f84:	e7d5      	b.n	8011f32 <__d2b+0x2e>
 8011f86:	6161      	str	r1, [r4, #20]
 8011f88:	e7e5      	b.n	8011f56 <__d2b+0x52>
 8011f8a:	a801      	add	r0, sp, #4
 8011f8c:	f7ff fd7e 	bl	8011a8c <__lo0bits>
 8011f90:	9b01      	ldr	r3, [sp, #4]
 8011f92:	6163      	str	r3, [r4, #20]
 8011f94:	2201      	movs	r2, #1
 8011f96:	6122      	str	r2, [r4, #16]
 8011f98:	3020      	adds	r0, #32
 8011f9a:	e7e3      	b.n	8011f64 <__d2b+0x60>
 8011f9c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8011fa0:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8011fa4:	f8c9 0000 	str.w	r0, [r9]
 8011fa8:	6918      	ldr	r0, [r3, #16]
 8011faa:	f7ff fd4f 	bl	8011a4c <__hi0bits>
 8011fae:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8011fb2:	e7df      	b.n	8011f74 <__d2b+0x70>
 8011fb4:	0801434d 	.word	0x0801434d
 8011fb8:	080143bd 	.word	0x080143bd

08011fbc <frexp>:
 8011fbc:	b570      	push	{r4, r5, r6, lr}
 8011fbe:	2100      	movs	r1, #0
 8011fc0:	ec55 4b10 	vmov	r4, r5, d0
 8011fc4:	6001      	str	r1, [r0, #0]
 8011fc6:	4916      	ldr	r1, [pc, #88]	; (8012020 <frexp+0x64>)
 8011fc8:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
 8011fcc:	428a      	cmp	r2, r1
 8011fce:	4606      	mov	r6, r0
 8011fd0:	462b      	mov	r3, r5
 8011fd2:	dc22      	bgt.n	801201a <frexp+0x5e>
 8011fd4:	ee10 1a10 	vmov	r1, s0
 8011fd8:	4311      	orrs	r1, r2
 8011fda:	d01e      	beq.n	801201a <frexp+0x5e>
 8011fdc:	4911      	ldr	r1, [pc, #68]	; (8012024 <frexp+0x68>)
 8011fde:	4029      	ands	r1, r5
 8011fe0:	b969      	cbnz	r1, 8011ffe <frexp+0x42>
 8011fe2:	4b11      	ldr	r3, [pc, #68]	; (8012028 <frexp+0x6c>)
 8011fe4:	2200      	movs	r2, #0
 8011fe6:	ee10 0a10 	vmov	r0, s0
 8011fea:	4629      	mov	r1, r5
 8011fec:	f7f5 f966 	bl	80072bc <__aeabi_dmul>
 8011ff0:	460b      	mov	r3, r1
 8011ff2:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 8011ff6:	f06f 0135 	mvn.w	r1, #53	; 0x35
 8011ffa:	4604      	mov	r4, r0
 8011ffc:	6031      	str	r1, [r6, #0]
 8011ffe:	6831      	ldr	r1, [r6, #0]
 8012000:	1512      	asrs	r2, r2, #20
 8012002:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8012006:	f2a2 32fe 	subw	r2, r2, #1022	; 0x3fe
 801200a:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 801200e:	440a      	add	r2, r1
 8012010:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
 8012014:	6032      	str	r2, [r6, #0]
 8012016:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
 801201a:	ec45 4b10 	vmov	d0, r4, r5
 801201e:	bd70      	pop	{r4, r5, r6, pc}
 8012020:	7fefffff 	.word	0x7fefffff
 8012024:	7ff00000 	.word	0x7ff00000
 8012028:	43500000 	.word	0x43500000

0801202c <__sread>:
 801202c:	b510      	push	{r4, lr}
 801202e:	460c      	mov	r4, r1
 8012030:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8012034:	f000 fa1e 	bl	8012474 <_read_r>
 8012038:	2800      	cmp	r0, #0
 801203a:	bfab      	itete	ge
 801203c:	6d23      	ldrge	r3, [r4, #80]	; 0x50
 801203e:	89a3      	ldrhlt	r3, [r4, #12]
 8012040:	181b      	addge	r3, r3, r0
 8012042:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8012046:	bfac      	ite	ge
 8012048:	6523      	strge	r3, [r4, #80]	; 0x50
 801204a:	81a3      	strhlt	r3, [r4, #12]
 801204c:	bd10      	pop	{r4, pc}

0801204e <__swrite>:
 801204e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012052:	461f      	mov	r7, r3
 8012054:	898b      	ldrh	r3, [r1, #12]
 8012056:	05db      	lsls	r3, r3, #23
 8012058:	4605      	mov	r5, r0
 801205a:	460c      	mov	r4, r1
 801205c:	4616      	mov	r6, r2
 801205e:	d505      	bpl.n	801206c <__swrite+0x1e>
 8012060:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8012064:	2302      	movs	r3, #2
 8012066:	2200      	movs	r2, #0
 8012068:	f000 f9e0 	bl	801242c <_lseek_r>
 801206c:	89a3      	ldrh	r3, [r4, #12]
 801206e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8012072:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8012076:	81a3      	strh	r3, [r4, #12]
 8012078:	4632      	mov	r2, r6
 801207a:	463b      	mov	r3, r7
 801207c:	4628      	mov	r0, r5
 801207e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012082:	f7fe bab7 	b.w	80105f4 <_write_r>

08012086 <__sseek>:
 8012086:	b510      	push	{r4, lr}
 8012088:	460c      	mov	r4, r1
 801208a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801208e:	f000 f9cd 	bl	801242c <_lseek_r>
 8012092:	1c43      	adds	r3, r0, #1
 8012094:	89a3      	ldrh	r3, [r4, #12]
 8012096:	bf15      	itete	ne
 8012098:	6520      	strne	r0, [r4, #80]	; 0x50
 801209a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801209e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80120a2:	81a3      	strheq	r3, [r4, #12]
 80120a4:	bf18      	it	ne
 80120a6:	81a3      	strhne	r3, [r4, #12]
 80120a8:	bd10      	pop	{r4, pc}

080120aa <__sclose>:
 80120aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80120ae:	f000 b91b 	b.w	80122e8 <_close_r>

080120b2 <strncpy>:
 80120b2:	b510      	push	{r4, lr}
 80120b4:	3901      	subs	r1, #1
 80120b6:	4603      	mov	r3, r0
 80120b8:	b132      	cbz	r2, 80120c8 <strncpy+0x16>
 80120ba:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80120be:	f803 4b01 	strb.w	r4, [r3], #1
 80120c2:	3a01      	subs	r2, #1
 80120c4:	2c00      	cmp	r4, #0
 80120c6:	d1f7      	bne.n	80120b8 <strncpy+0x6>
 80120c8:	441a      	add	r2, r3
 80120ca:	2100      	movs	r1, #0
 80120cc:	4293      	cmp	r3, r2
 80120ce:	d100      	bne.n	80120d2 <strncpy+0x20>
 80120d0:	bd10      	pop	{r4, pc}
 80120d2:	f803 1b01 	strb.w	r1, [r3], #1
 80120d6:	e7f9      	b.n	80120cc <strncpy+0x1a>

080120d8 <__ssprint_r>:
 80120d8:	6893      	ldr	r3, [r2, #8]
 80120da:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120de:	4680      	mov	r8, r0
 80120e0:	460c      	mov	r4, r1
 80120e2:	4617      	mov	r7, r2
 80120e4:	2b00      	cmp	r3, #0
 80120e6:	d061      	beq.n	80121ac <__ssprint_r+0xd4>
 80120e8:	2300      	movs	r3, #0
 80120ea:	f8d2 a000 	ldr.w	sl, [r2]
 80120ee:	9301      	str	r3, [sp, #4]
 80120f0:	469b      	mov	fp, r3
 80120f2:	f1bb 0f00 	cmp.w	fp, #0
 80120f6:	d02b      	beq.n	8012150 <__ssprint_r+0x78>
 80120f8:	68a6      	ldr	r6, [r4, #8]
 80120fa:	45b3      	cmp	fp, r6
 80120fc:	d342      	bcc.n	8012184 <__ssprint_r+0xac>
 80120fe:	89a2      	ldrh	r2, [r4, #12]
 8012100:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8012104:	d03e      	beq.n	8012184 <__ssprint_r+0xac>
 8012106:	6825      	ldr	r5, [r4, #0]
 8012108:	6921      	ldr	r1, [r4, #16]
 801210a:	eba5 0901 	sub.w	r9, r5, r1
 801210e:	6965      	ldr	r5, [r4, #20]
 8012110:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8012114:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8012118:	f109 0001 	add.w	r0, r9, #1
 801211c:	106d      	asrs	r5, r5, #1
 801211e:	4458      	add	r0, fp
 8012120:	4285      	cmp	r5, r0
 8012122:	bf38      	it	cc
 8012124:	4605      	movcc	r5, r0
 8012126:	0553      	lsls	r3, r2, #21
 8012128:	d545      	bpl.n	80121b6 <__ssprint_r+0xde>
 801212a:	4629      	mov	r1, r5
 801212c:	4640      	mov	r0, r8
 801212e:	f7fc fb33 	bl	800e798 <_malloc_r>
 8012132:	4606      	mov	r6, r0
 8012134:	b9a0      	cbnz	r0, 8012160 <__ssprint_r+0x88>
 8012136:	230c      	movs	r3, #12
 8012138:	f8c8 3000 	str.w	r3, [r8]
 801213c:	89a3      	ldrh	r3, [r4, #12]
 801213e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8012142:	81a3      	strh	r3, [r4, #12]
 8012144:	2300      	movs	r3, #0
 8012146:	e9c7 3301 	strd	r3, r3, [r7, #4]
 801214a:	f04f 30ff 	mov.w	r0, #4294967295
 801214e:	e02f      	b.n	80121b0 <__ssprint_r+0xd8>
 8012150:	f8da 3000 	ldr.w	r3, [sl]
 8012154:	f8da b004 	ldr.w	fp, [sl, #4]
 8012158:	9301      	str	r3, [sp, #4]
 801215a:	f10a 0a08 	add.w	sl, sl, #8
 801215e:	e7c8      	b.n	80120f2 <__ssprint_r+0x1a>
 8012160:	464a      	mov	r2, r9
 8012162:	6921      	ldr	r1, [r4, #16]
 8012164:	f7fc fd68 	bl	800ec38 <memcpy>
 8012168:	89a2      	ldrh	r2, [r4, #12]
 801216a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 801216e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8012172:	81a2      	strh	r2, [r4, #12]
 8012174:	6126      	str	r6, [r4, #16]
 8012176:	6165      	str	r5, [r4, #20]
 8012178:	444e      	add	r6, r9
 801217a:	eba5 0509 	sub.w	r5, r5, r9
 801217e:	6026      	str	r6, [r4, #0]
 8012180:	60a5      	str	r5, [r4, #8]
 8012182:	465e      	mov	r6, fp
 8012184:	455e      	cmp	r6, fp
 8012186:	bf28      	it	cs
 8012188:	465e      	movcs	r6, fp
 801218a:	4632      	mov	r2, r6
 801218c:	9901      	ldr	r1, [sp, #4]
 801218e:	6820      	ldr	r0, [r4, #0]
 8012190:	f7fc fd60 	bl	800ec54 <memmove>
 8012194:	68a2      	ldr	r2, [r4, #8]
 8012196:	1b92      	subs	r2, r2, r6
 8012198:	60a2      	str	r2, [r4, #8]
 801219a:	6822      	ldr	r2, [r4, #0]
 801219c:	4432      	add	r2, r6
 801219e:	6022      	str	r2, [r4, #0]
 80121a0:	68ba      	ldr	r2, [r7, #8]
 80121a2:	eba2 030b 	sub.w	r3, r2, fp
 80121a6:	60bb      	str	r3, [r7, #8]
 80121a8:	2b00      	cmp	r3, #0
 80121aa:	d1d1      	bne.n	8012150 <__ssprint_r+0x78>
 80121ac:	2000      	movs	r0, #0
 80121ae:	6078      	str	r0, [r7, #4]
 80121b0:	b003      	add	sp, #12
 80121b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80121b6:	462a      	mov	r2, r5
 80121b8:	4640      	mov	r0, r8
 80121ba:	f7fc fdb5 	bl	800ed28 <_realloc_r>
 80121be:	4606      	mov	r6, r0
 80121c0:	2800      	cmp	r0, #0
 80121c2:	d1d7      	bne.n	8012174 <__ssprint_r+0x9c>
 80121c4:	6921      	ldr	r1, [r4, #16]
 80121c6:	4640      	mov	r0, r8
 80121c8:	f7ff fa78 	bl	80116bc <_free_r>
 80121cc:	e7b3      	b.n	8012136 <__ssprint_r+0x5e>
	...

080121d0 <__register_exitproc>:
 80121d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80121d4:	4d1c      	ldr	r5, [pc, #112]	; (8012248 <__register_exitproc+0x78>)
 80121d6:	4606      	mov	r6, r0
 80121d8:	6828      	ldr	r0, [r5, #0]
 80121da:	4698      	mov	r8, r3
 80121dc:	460f      	mov	r7, r1
 80121de:	4691      	mov	r9, r2
 80121e0:	f7fc fac8 	bl	800e774 <__retarget_lock_acquire_recursive>
 80121e4:	4b19      	ldr	r3, [pc, #100]	; (801224c <__register_exitproc+0x7c>)
 80121e6:	681b      	ldr	r3, [r3, #0]
 80121e8:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 80121ec:	4628      	mov	r0, r5
 80121ee:	b91c      	cbnz	r4, 80121f8 <__register_exitproc+0x28>
 80121f0:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 80121f4:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 80121f8:	6865      	ldr	r5, [r4, #4]
 80121fa:	6800      	ldr	r0, [r0, #0]
 80121fc:	2d1f      	cmp	r5, #31
 80121fe:	dd05      	ble.n	801220c <__register_exitproc+0x3c>
 8012200:	f7fc fab9 	bl	800e776 <__retarget_lock_release_recursive>
 8012204:	f04f 30ff 	mov.w	r0, #4294967295
 8012208:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801220c:	b19e      	cbz	r6, 8012236 <__register_exitproc+0x66>
 801220e:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 8012212:	2201      	movs	r2, #1
 8012214:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 8012218:	f8d4 3188 	ldr.w	r3, [r4, #392]	; 0x188
 801221c:	40aa      	lsls	r2, r5
 801221e:	4313      	orrs	r3, r2
 8012220:	2e02      	cmp	r6, #2
 8012222:	f8c4 3188 	str.w	r3, [r4, #392]	; 0x188
 8012226:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 801222a:	bf02      	ittt	eq
 801222c:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 8012230:	431a      	orreq	r2, r3
 8012232:	f8c4 218c 	streq.w	r2, [r4, #396]	; 0x18c
 8012236:	1c6b      	adds	r3, r5, #1
 8012238:	3502      	adds	r5, #2
 801223a:	6063      	str	r3, [r4, #4]
 801223c:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 8012240:	f7fc fa99 	bl	800e776 <__retarget_lock_release_recursive>
 8012244:	2000      	movs	r0, #0
 8012246:	e7df      	b.n	8012208 <__register_exitproc+0x38>
 8012248:	20000850 	.word	0x20000850
 801224c:	080142e8 	.word	0x080142e8

08012250 <__assert_func>:
 8012250:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012252:	4614      	mov	r4, r2
 8012254:	461a      	mov	r2, r3
 8012256:	4b09      	ldr	r3, [pc, #36]	; (801227c <__assert_func+0x2c>)
 8012258:	681b      	ldr	r3, [r3, #0]
 801225a:	4605      	mov	r5, r0
 801225c:	68d8      	ldr	r0, [r3, #12]
 801225e:	b14c      	cbz	r4, 8012274 <__assert_func+0x24>
 8012260:	4b07      	ldr	r3, [pc, #28]	; (8012280 <__assert_func+0x30>)
 8012262:	9100      	str	r1, [sp, #0]
 8012264:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012268:	4906      	ldr	r1, [pc, #24]	; (8012284 <__assert_func+0x34>)
 801226a:	462b      	mov	r3, r5
 801226c:	f000 f8a4 	bl	80123b8 <fiprintf>
 8012270:	f7fc f83c 	bl	800e2ec <abort>
 8012274:	4b04      	ldr	r3, [pc, #16]	; (8012288 <__assert_func+0x38>)
 8012276:	461c      	mov	r4, r3
 8012278:	e7f3      	b.n	8012262 <__assert_func+0x12>
 801227a:	bf00      	nop
 801227c:	20000014 	.word	0x20000014
 8012280:	0801451c 	.word	0x0801451c
 8012284:	08014529 	.word	0x08014529
 8012288:	08014557 	.word	0x08014557

0801228c <_calloc_r>:
 801228c:	b510      	push	{r4, lr}
 801228e:	4351      	muls	r1, r2
 8012290:	f7fc fa82 	bl	800e798 <_malloc_r>
 8012294:	4604      	mov	r4, r0
 8012296:	b198      	cbz	r0, 80122c0 <_calloc_r+0x34>
 8012298:	f850 2c04 	ldr.w	r2, [r0, #-4]
 801229c:	f022 0203 	bic.w	r2, r2, #3
 80122a0:	3a04      	subs	r2, #4
 80122a2:	2a24      	cmp	r2, #36	; 0x24
 80122a4:	d81b      	bhi.n	80122de <_calloc_r+0x52>
 80122a6:	2a13      	cmp	r2, #19
 80122a8:	d917      	bls.n	80122da <_calloc_r+0x4e>
 80122aa:	2100      	movs	r1, #0
 80122ac:	2a1b      	cmp	r2, #27
 80122ae:	e9c0 1100 	strd	r1, r1, [r0]
 80122b2:	d807      	bhi.n	80122c4 <_calloc_r+0x38>
 80122b4:	f100 0308 	add.w	r3, r0, #8
 80122b8:	2200      	movs	r2, #0
 80122ba:	e9c3 2200 	strd	r2, r2, [r3]
 80122be:	609a      	str	r2, [r3, #8]
 80122c0:	4620      	mov	r0, r4
 80122c2:	bd10      	pop	{r4, pc}
 80122c4:	2a24      	cmp	r2, #36	; 0x24
 80122c6:	e9c0 1102 	strd	r1, r1, [r0, #8]
 80122ca:	bf11      	iteee	ne
 80122cc:	f100 0310 	addne.w	r3, r0, #16
 80122d0:	6101      	streq	r1, [r0, #16]
 80122d2:	f100 0318 	addeq.w	r3, r0, #24
 80122d6:	6141      	streq	r1, [r0, #20]
 80122d8:	e7ee      	b.n	80122b8 <_calloc_r+0x2c>
 80122da:	4603      	mov	r3, r0
 80122dc:	e7ec      	b.n	80122b8 <_calloc_r+0x2c>
 80122de:	2100      	movs	r1, #0
 80122e0:	f7fc fcd2 	bl	800ec88 <memset>
 80122e4:	e7ec      	b.n	80122c0 <_calloc_r+0x34>
	...

080122e8 <_close_r>:
 80122e8:	b538      	push	{r3, r4, r5, lr}
 80122ea:	4d06      	ldr	r5, [pc, #24]	; (8012304 <_close_r+0x1c>)
 80122ec:	2300      	movs	r3, #0
 80122ee:	4604      	mov	r4, r0
 80122f0:	4608      	mov	r0, r1
 80122f2:	602b      	str	r3, [r5, #0]
 80122f4:	f7f6 ff6f 	bl	80091d6 <_close>
 80122f8:	1c43      	adds	r3, r0, #1
 80122fa:	d102      	bne.n	8012302 <_close_r+0x1a>
 80122fc:	682b      	ldr	r3, [r5, #0]
 80122fe:	b103      	cbz	r3, 8012302 <_close_r+0x1a>
 8012300:	6023      	str	r3, [r4, #0]
 8012302:	bd38      	pop	{r3, r4, r5, pc}
 8012304:	20000c90 	.word	0x20000c90

08012308 <_fclose_r>:
 8012308:	b570      	push	{r4, r5, r6, lr}
 801230a:	4606      	mov	r6, r0
 801230c:	460c      	mov	r4, r1
 801230e:	b911      	cbnz	r1, 8012316 <_fclose_r+0xe>
 8012310:	2500      	movs	r5, #0
 8012312:	4628      	mov	r0, r5
 8012314:	bd70      	pop	{r4, r5, r6, pc}
 8012316:	b118      	cbz	r0, 8012320 <_fclose_r+0x18>
 8012318:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801231a:	b90b      	cbnz	r3, 8012320 <_fclose_r+0x18>
 801231c:	f7ff f93e 	bl	801159c <__sinit>
 8012320:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8012322:	07d8      	lsls	r0, r3, #31
 8012324:	d405      	bmi.n	8012332 <_fclose_r+0x2a>
 8012326:	89a3      	ldrh	r3, [r4, #12]
 8012328:	0599      	lsls	r1, r3, #22
 801232a:	d402      	bmi.n	8012332 <_fclose_r+0x2a>
 801232c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801232e:	f7fc fa21 	bl	800e774 <__retarget_lock_acquire_recursive>
 8012332:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8012336:	b93b      	cbnz	r3, 8012348 <_fclose_r+0x40>
 8012338:	6e65      	ldr	r5, [r4, #100]	; 0x64
 801233a:	f015 0501 	ands.w	r5, r5, #1
 801233e:	d1e7      	bne.n	8012310 <_fclose_r+0x8>
 8012340:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8012342:	f7fc fa18 	bl	800e776 <__retarget_lock_release_recursive>
 8012346:	e7e4      	b.n	8012312 <_fclose_r+0xa>
 8012348:	4621      	mov	r1, r4
 801234a:	4630      	mov	r0, r6
 801234c:	f7ff f82c 	bl	80113a8 <__sflush_r>
 8012350:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012352:	4605      	mov	r5, r0
 8012354:	b133      	cbz	r3, 8012364 <_fclose_r+0x5c>
 8012356:	69e1      	ldr	r1, [r4, #28]
 8012358:	4630      	mov	r0, r6
 801235a:	4798      	blx	r3
 801235c:	2800      	cmp	r0, #0
 801235e:	bfb8      	it	lt
 8012360:	f04f 35ff 	movlt.w	r5, #4294967295
 8012364:	89a3      	ldrh	r3, [r4, #12]
 8012366:	061a      	lsls	r2, r3, #24
 8012368:	d503      	bpl.n	8012372 <_fclose_r+0x6a>
 801236a:	6921      	ldr	r1, [r4, #16]
 801236c:	4630      	mov	r0, r6
 801236e:	f7ff f9a5 	bl	80116bc <_free_r>
 8012372:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012374:	b141      	cbz	r1, 8012388 <_fclose_r+0x80>
 8012376:	f104 0340 	add.w	r3, r4, #64	; 0x40
 801237a:	4299      	cmp	r1, r3
 801237c:	d002      	beq.n	8012384 <_fclose_r+0x7c>
 801237e:	4630      	mov	r0, r6
 8012380:	f7ff f99c 	bl	80116bc <_free_r>
 8012384:	2300      	movs	r3, #0
 8012386:	6323      	str	r3, [r4, #48]	; 0x30
 8012388:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801238a:	b121      	cbz	r1, 8012396 <_fclose_r+0x8e>
 801238c:	4630      	mov	r0, r6
 801238e:	f7ff f995 	bl	80116bc <_free_r>
 8012392:	2300      	movs	r3, #0
 8012394:	6463      	str	r3, [r4, #68]	; 0x44
 8012396:	f7ff f8e9 	bl	801156c <__sfp_lock_acquire>
 801239a:	2300      	movs	r3, #0
 801239c:	81a3      	strh	r3, [r4, #12]
 801239e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80123a0:	07db      	lsls	r3, r3, #31
 80123a2:	d402      	bmi.n	80123aa <_fclose_r+0xa2>
 80123a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80123a6:	f7fc f9e6 	bl	800e776 <__retarget_lock_release_recursive>
 80123aa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80123ac:	f7fc f9e1 	bl	800e772 <__retarget_lock_close_recursive>
 80123b0:	f7ff f8e2 	bl	8011578 <__sfp_lock_release>
 80123b4:	e7ad      	b.n	8012312 <_fclose_r+0xa>
	...

080123b8 <fiprintf>:
 80123b8:	b40e      	push	{r1, r2, r3}
 80123ba:	b503      	push	{r0, r1, lr}
 80123bc:	4601      	mov	r1, r0
 80123be:	ab03      	add	r3, sp, #12
 80123c0:	4805      	ldr	r0, [pc, #20]	; (80123d8 <fiprintf+0x20>)
 80123c2:	f853 2b04 	ldr.w	r2, [r3], #4
 80123c6:	6800      	ldr	r0, [r0, #0]
 80123c8:	9301      	str	r3, [sp, #4]
 80123ca:	f000 f897 	bl	80124fc <_vfiprintf_r>
 80123ce:	b002      	add	sp, #8
 80123d0:	f85d eb04 	ldr.w	lr, [sp], #4
 80123d4:	b003      	add	sp, #12
 80123d6:	4770      	bx	lr
 80123d8:	20000014 	.word	0x20000014

080123dc <_fstat_r>:
 80123dc:	b538      	push	{r3, r4, r5, lr}
 80123de:	4d07      	ldr	r5, [pc, #28]	; (80123fc <_fstat_r+0x20>)
 80123e0:	2300      	movs	r3, #0
 80123e2:	4604      	mov	r4, r0
 80123e4:	4608      	mov	r0, r1
 80123e6:	4611      	mov	r1, r2
 80123e8:	602b      	str	r3, [r5, #0]
 80123ea:	f7f6 ff00 	bl	80091ee <_fstat>
 80123ee:	1c43      	adds	r3, r0, #1
 80123f0:	d102      	bne.n	80123f8 <_fstat_r+0x1c>
 80123f2:	682b      	ldr	r3, [r5, #0]
 80123f4:	b103      	cbz	r3, 80123f8 <_fstat_r+0x1c>
 80123f6:	6023      	str	r3, [r4, #0]
 80123f8:	bd38      	pop	{r3, r4, r5, pc}
 80123fa:	bf00      	nop
 80123fc:	20000c90 	.word	0x20000c90

08012400 <_isatty_r>:
 8012400:	b538      	push	{r3, r4, r5, lr}
 8012402:	4d06      	ldr	r5, [pc, #24]	; (801241c <_isatty_r+0x1c>)
 8012404:	2300      	movs	r3, #0
 8012406:	4604      	mov	r4, r0
 8012408:	4608      	mov	r0, r1
 801240a:	602b      	str	r3, [r5, #0]
 801240c:	f7f6 feff 	bl	800920e <_isatty>
 8012410:	1c43      	adds	r3, r0, #1
 8012412:	d102      	bne.n	801241a <_isatty_r+0x1a>
 8012414:	682b      	ldr	r3, [r5, #0]
 8012416:	b103      	cbz	r3, 801241a <_isatty_r+0x1a>
 8012418:	6023      	str	r3, [r4, #0]
 801241a:	bd38      	pop	{r3, r4, r5, pc}
 801241c:	20000c90 	.word	0x20000c90

08012420 <__locale_mb_cur_max>:
 8012420:	4b01      	ldr	r3, [pc, #4]	; (8012428 <__locale_mb_cur_max+0x8>)
 8012422:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
 8012426:	4770      	bx	lr
 8012428:	20000854 	.word	0x20000854

0801242c <_lseek_r>:
 801242c:	b538      	push	{r3, r4, r5, lr}
 801242e:	4d07      	ldr	r5, [pc, #28]	; (801244c <_lseek_r+0x20>)
 8012430:	4604      	mov	r4, r0
 8012432:	4608      	mov	r0, r1
 8012434:	4611      	mov	r1, r2
 8012436:	2200      	movs	r2, #0
 8012438:	602a      	str	r2, [r5, #0]
 801243a:	461a      	mov	r2, r3
 801243c:	f7f6 fef2 	bl	8009224 <_lseek>
 8012440:	1c43      	adds	r3, r0, #1
 8012442:	d102      	bne.n	801244a <_lseek_r+0x1e>
 8012444:	682b      	ldr	r3, [r5, #0]
 8012446:	b103      	cbz	r3, 801244a <_lseek_r+0x1e>
 8012448:	6023      	str	r3, [r4, #0]
 801244a:	bd38      	pop	{r3, r4, r5, pc}
 801244c:	20000c90 	.word	0x20000c90

08012450 <__ascii_mbtowc>:
 8012450:	b082      	sub	sp, #8
 8012452:	b901      	cbnz	r1, 8012456 <__ascii_mbtowc+0x6>
 8012454:	a901      	add	r1, sp, #4
 8012456:	b142      	cbz	r2, 801246a <__ascii_mbtowc+0x1a>
 8012458:	b14b      	cbz	r3, 801246e <__ascii_mbtowc+0x1e>
 801245a:	7813      	ldrb	r3, [r2, #0]
 801245c:	600b      	str	r3, [r1, #0]
 801245e:	7812      	ldrb	r2, [r2, #0]
 8012460:	1e10      	subs	r0, r2, #0
 8012462:	bf18      	it	ne
 8012464:	2001      	movne	r0, #1
 8012466:	b002      	add	sp, #8
 8012468:	4770      	bx	lr
 801246a:	4610      	mov	r0, r2
 801246c:	e7fb      	b.n	8012466 <__ascii_mbtowc+0x16>
 801246e:	f06f 0001 	mvn.w	r0, #1
 8012472:	e7f8      	b.n	8012466 <__ascii_mbtowc+0x16>

08012474 <_read_r>:
 8012474:	b538      	push	{r3, r4, r5, lr}
 8012476:	4d07      	ldr	r5, [pc, #28]	; (8012494 <_read_r+0x20>)
 8012478:	4604      	mov	r4, r0
 801247a:	4608      	mov	r0, r1
 801247c:	4611      	mov	r1, r2
 801247e:	2200      	movs	r2, #0
 8012480:	602a      	str	r2, [r5, #0]
 8012482:	461a      	mov	r2, r3
 8012484:	f7f6 fe6e 	bl	8009164 <_read>
 8012488:	1c43      	adds	r3, r0, #1
 801248a:	d102      	bne.n	8012492 <_read_r+0x1e>
 801248c:	682b      	ldr	r3, [r5, #0]
 801248e:	b103      	cbz	r3, 8012492 <_read_r+0x1e>
 8012490:	6023      	str	r3, [r4, #0]
 8012492:	bd38      	pop	{r3, r4, r5, pc}
 8012494:	20000c90 	.word	0x20000c90

08012498 <__sprint_r>:
 8012498:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801249c:	6893      	ldr	r3, [r2, #8]
 801249e:	4680      	mov	r8, r0
 80124a0:	460f      	mov	r7, r1
 80124a2:	4614      	mov	r4, r2
 80124a4:	b91b      	cbnz	r3, 80124ae <__sprint_r+0x16>
 80124a6:	6053      	str	r3, [r2, #4]
 80124a8:	4618      	mov	r0, r3
 80124aa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124ae:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 80124b0:	049d      	lsls	r5, r3, #18
 80124b2:	d520      	bpl.n	80124f6 <__sprint_r+0x5e>
 80124b4:	6815      	ldr	r5, [r2, #0]
 80124b6:	3508      	adds	r5, #8
 80124b8:	e955 b602 	ldrd	fp, r6, [r5, #-8]
 80124bc:	f04f 0900 	mov.w	r9, #0
 80124c0:	ea4f 0a96 	mov.w	sl, r6, lsr #2
 80124c4:	45ca      	cmp	sl, r9
 80124c6:	dc0b      	bgt.n	80124e0 <__sprint_r+0x48>
 80124c8:	68a3      	ldr	r3, [r4, #8]
 80124ca:	f026 0003 	bic.w	r0, r6, #3
 80124ce:	1a18      	subs	r0, r3, r0
 80124d0:	60a0      	str	r0, [r4, #8]
 80124d2:	3508      	adds	r5, #8
 80124d4:	2800      	cmp	r0, #0
 80124d6:	d1ef      	bne.n	80124b8 <__sprint_r+0x20>
 80124d8:	2300      	movs	r3, #0
 80124da:	e9c4 3301 	strd	r3, r3, [r4, #4]
 80124de:	e7e4      	b.n	80124aa <__sprint_r+0x12>
 80124e0:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 80124e4:	463a      	mov	r2, r7
 80124e6:	4640      	mov	r0, r8
 80124e8:	f000 fd1e 	bl	8012f28 <_fputwc_r>
 80124ec:	1c43      	adds	r3, r0, #1
 80124ee:	d0f3      	beq.n	80124d8 <__sprint_r+0x40>
 80124f0:	f109 0901 	add.w	r9, r9, #1
 80124f4:	e7e6      	b.n	80124c4 <__sprint_r+0x2c>
 80124f6:	f7fb ff75 	bl	800e3e4 <__sfvwrite_r>
 80124fa:	e7ed      	b.n	80124d8 <__sprint_r+0x40>

080124fc <_vfiprintf_r>:
 80124fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012500:	ed2d 8b02 	vpush	{d8}
 8012504:	b0b9      	sub	sp, #228	; 0xe4
 8012506:	460f      	mov	r7, r1
 8012508:	9201      	str	r2, [sp, #4]
 801250a:	461d      	mov	r5, r3
 801250c:	461c      	mov	r4, r3
 801250e:	4681      	mov	r9, r0
 8012510:	b118      	cbz	r0, 801251a <_vfiprintf_r+0x1e>
 8012512:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012514:	b90b      	cbnz	r3, 801251a <_vfiprintf_r+0x1e>
 8012516:	f7ff f841 	bl	801159c <__sinit>
 801251a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801251c:	07d8      	lsls	r0, r3, #31
 801251e:	d405      	bmi.n	801252c <_vfiprintf_r+0x30>
 8012520:	89bb      	ldrh	r3, [r7, #12]
 8012522:	0599      	lsls	r1, r3, #22
 8012524:	d402      	bmi.n	801252c <_vfiprintf_r+0x30>
 8012526:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8012528:	f7fc f924 	bl	800e774 <__retarget_lock_acquire_recursive>
 801252c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8012530:	049a      	lsls	r2, r3, #18
 8012532:	d406      	bmi.n	8012542 <_vfiprintf_r+0x46>
 8012534:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8012538:	81bb      	strh	r3, [r7, #12]
 801253a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801253c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8012540:	667b      	str	r3, [r7, #100]	; 0x64
 8012542:	89bb      	ldrh	r3, [r7, #12]
 8012544:	071e      	lsls	r6, r3, #28
 8012546:	d501      	bpl.n	801254c <_vfiprintf_r+0x50>
 8012548:	693b      	ldr	r3, [r7, #16]
 801254a:	b9bb      	cbnz	r3, 801257c <_vfiprintf_r+0x80>
 801254c:	4639      	mov	r1, r7
 801254e:	4648      	mov	r0, r9
 8012550:	f7fe f862 	bl	8010618 <__swsetup_r>
 8012554:	b190      	cbz	r0, 801257c <_vfiprintf_r+0x80>
 8012556:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8012558:	07d8      	lsls	r0, r3, #31
 801255a:	d508      	bpl.n	801256e <_vfiprintf_r+0x72>
 801255c:	f04f 33ff 	mov.w	r3, #4294967295
 8012560:	9302      	str	r3, [sp, #8]
 8012562:	9802      	ldr	r0, [sp, #8]
 8012564:	b039      	add	sp, #228	; 0xe4
 8012566:	ecbd 8b02 	vpop	{d8}
 801256a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801256e:	89bb      	ldrh	r3, [r7, #12]
 8012570:	0599      	lsls	r1, r3, #22
 8012572:	d4f3      	bmi.n	801255c <_vfiprintf_r+0x60>
 8012574:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8012576:	f7fc f8fe 	bl	800e776 <__retarget_lock_release_recursive>
 801257a:	e7ef      	b.n	801255c <_vfiprintf_r+0x60>
 801257c:	89bb      	ldrh	r3, [r7, #12]
 801257e:	f003 021a 	and.w	r2, r3, #26
 8012582:	2a0a      	cmp	r2, #10
 8012584:	d113      	bne.n	80125ae <_vfiprintf_r+0xb2>
 8012586:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 801258a:	2a00      	cmp	r2, #0
 801258c:	db0f      	blt.n	80125ae <_vfiprintf_r+0xb2>
 801258e:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8012590:	07d2      	lsls	r2, r2, #31
 8012592:	d404      	bmi.n	801259e <_vfiprintf_r+0xa2>
 8012594:	059e      	lsls	r6, r3, #22
 8012596:	d402      	bmi.n	801259e <_vfiprintf_r+0xa2>
 8012598:	6db8      	ldr	r0, [r7, #88]	; 0x58
 801259a:	f7fc f8ec 	bl	800e776 <__retarget_lock_release_recursive>
 801259e:	9a01      	ldr	r2, [sp, #4]
 80125a0:	462b      	mov	r3, r5
 80125a2:	4639      	mov	r1, r7
 80125a4:	4648      	mov	r0, r9
 80125a6:	f000 fc31 	bl	8012e0c <__sbprintf>
 80125aa:	9002      	str	r0, [sp, #8]
 80125ac:	e7d9      	b.n	8012562 <_vfiprintf_r+0x66>
 80125ae:	2300      	movs	r3, #0
 80125b0:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 80125b4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80125b8:	ae0f      	add	r6, sp, #60	; 0x3c
 80125ba:	ee08 3a10 	vmov	s16, r3
 80125be:	960c      	str	r6, [sp, #48]	; 0x30
 80125c0:	9307      	str	r3, [sp, #28]
 80125c2:	9302      	str	r3, [sp, #8]
 80125c4:	9b01      	ldr	r3, [sp, #4]
 80125c6:	461d      	mov	r5, r3
 80125c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80125cc:	b10a      	cbz	r2, 80125d2 <_vfiprintf_r+0xd6>
 80125ce:	2a25      	cmp	r2, #37	; 0x25
 80125d0:	d1f9      	bne.n	80125c6 <_vfiprintf_r+0xca>
 80125d2:	9b01      	ldr	r3, [sp, #4]
 80125d4:	ebb5 0803 	subs.w	r8, r5, r3
 80125d8:	d00d      	beq.n	80125f6 <_vfiprintf_r+0xfa>
 80125da:	e9c6 3800 	strd	r3, r8, [r6]
 80125de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80125e0:	4443      	add	r3, r8
 80125e2:	930e      	str	r3, [sp, #56]	; 0x38
 80125e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80125e6:	3301      	adds	r3, #1
 80125e8:	2b07      	cmp	r3, #7
 80125ea:	930d      	str	r3, [sp, #52]	; 0x34
 80125ec:	dc75      	bgt.n	80126da <_vfiprintf_r+0x1de>
 80125ee:	3608      	adds	r6, #8
 80125f0:	9b02      	ldr	r3, [sp, #8]
 80125f2:	4443      	add	r3, r8
 80125f4:	9302      	str	r3, [sp, #8]
 80125f6:	782b      	ldrb	r3, [r5, #0]
 80125f8:	2b00      	cmp	r3, #0
 80125fa:	f000 83c8 	beq.w	8012d8e <_vfiprintf_r+0x892>
 80125fe:	2300      	movs	r3, #0
 8012600:	f04f 31ff 	mov.w	r1, #4294967295
 8012604:	1c6a      	adds	r2, r5, #1
 8012606:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801260a:	9100      	str	r1, [sp, #0]
 801260c:	9303      	str	r3, [sp, #12]
 801260e:	469a      	mov	sl, r3
 8012610:	f812 3b01 	ldrb.w	r3, [r2], #1
 8012614:	9201      	str	r2, [sp, #4]
 8012616:	f1a3 0220 	sub.w	r2, r3, #32
 801261a:	2a5a      	cmp	r2, #90	; 0x5a
 801261c:	f200 8310 	bhi.w	8012c40 <_vfiprintf_r+0x744>
 8012620:	e8df f012 	tbh	[pc, r2, lsl #1]
 8012624:	030e0099 	.word	0x030e0099
 8012628:	00a1030e 	.word	0x00a1030e
 801262c:	030e030e 	.word	0x030e030e
 8012630:	0080030e 	.word	0x0080030e
 8012634:	030e030e 	.word	0x030e030e
 8012638:	00ae00a4 	.word	0x00ae00a4
 801263c:	00ab030e 	.word	0x00ab030e
 8012640:	030e00b0 	.word	0x030e00b0
 8012644:	00ce00cb 	.word	0x00ce00cb
 8012648:	00ce00ce 	.word	0x00ce00ce
 801264c:	00ce00ce 	.word	0x00ce00ce
 8012650:	00ce00ce 	.word	0x00ce00ce
 8012654:	00ce00ce 	.word	0x00ce00ce
 8012658:	030e030e 	.word	0x030e030e
 801265c:	030e030e 	.word	0x030e030e
 8012660:	030e030e 	.word	0x030e030e
 8012664:	030e030e 	.word	0x030e030e
 8012668:	00f8030e 	.word	0x00f8030e
 801266c:	030e0106 	.word	0x030e0106
 8012670:	030e030e 	.word	0x030e030e
 8012674:	030e030e 	.word	0x030e030e
 8012678:	030e030e 	.word	0x030e030e
 801267c:	030e030e 	.word	0x030e030e
 8012680:	014d030e 	.word	0x014d030e
 8012684:	030e030e 	.word	0x030e030e
 8012688:	0192030e 	.word	0x0192030e
 801268c:	0270030e 	.word	0x0270030e
 8012690:	030e030e 	.word	0x030e030e
 8012694:	030e028e 	.word	0x030e028e
 8012698:	030e030e 	.word	0x030e030e
 801269c:	030e030e 	.word	0x030e030e
 80126a0:	030e030e 	.word	0x030e030e
 80126a4:	030e030e 	.word	0x030e030e
 80126a8:	00f8030e 	.word	0x00f8030e
 80126ac:	030e0108 	.word	0x030e0108
 80126b0:	030e030e 	.word	0x030e030e
 80126b4:	010800de 	.word	0x010800de
 80126b8:	030e00f2 	.word	0x030e00f2
 80126bc:	030e00eb 	.word	0x030e00eb
 80126c0:	014f0130 	.word	0x014f0130
 80126c4:	00f20182 	.word	0x00f20182
 80126c8:	0192030e 	.word	0x0192030e
 80126cc:	02720097 	.word	0x02720097
 80126d0:	030e030e 	.word	0x030e030e
 80126d4:	030e0065 	.word	0x030e0065
 80126d8:	0097      	.short	0x0097
 80126da:	aa0c      	add	r2, sp, #48	; 0x30
 80126dc:	4639      	mov	r1, r7
 80126de:	4648      	mov	r0, r9
 80126e0:	f7ff feda 	bl	8012498 <__sprint_r>
 80126e4:	2800      	cmp	r0, #0
 80126e6:	f040 8331 	bne.w	8012d4c <_vfiprintf_r+0x850>
 80126ea:	ae0f      	add	r6, sp, #60	; 0x3c
 80126ec:	e780      	b.n	80125f0 <_vfiprintf_r+0xf4>
 80126ee:	4a95      	ldr	r2, [pc, #596]	; (8012944 <_vfiprintf_r+0x448>)
 80126f0:	9205      	str	r2, [sp, #20]
 80126f2:	f01a 0f20 	tst.w	sl, #32
 80126f6:	f000 8225 	beq.w	8012b44 <_vfiprintf_r+0x648>
 80126fa:	3407      	adds	r4, #7
 80126fc:	f024 0b07 	bic.w	fp, r4, #7
 8012700:	e8fb 4502 	ldrd	r4, r5, [fp], #8
 8012704:	f01a 0f01 	tst.w	sl, #1
 8012708:	d009      	beq.n	801271e <_vfiprintf_r+0x222>
 801270a:	ea54 0205 	orrs.w	r2, r4, r5
 801270e:	bf1f      	itttt	ne
 8012710:	2230      	movne	r2, #48	; 0x30
 8012712:	f88d 202c 	strbne.w	r2, [sp, #44]	; 0x2c
 8012716:	f88d 302d 	strbne.w	r3, [sp, #45]	; 0x2d
 801271a:	f04a 0a02 	orrne.w	sl, sl, #2
 801271e:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 8012722:	e10d      	b.n	8012940 <_vfiprintf_r+0x444>
 8012724:	4648      	mov	r0, r9
 8012726:	f7ff f8a9 	bl	801187c <_localeconv_r>
 801272a:	6843      	ldr	r3, [r0, #4]
 801272c:	4618      	mov	r0, r3
 801272e:	ee08 3a10 	vmov	s16, r3
 8012732:	f7f4 fbff 	bl	8006f34 <strlen>
 8012736:	9007      	str	r0, [sp, #28]
 8012738:	4648      	mov	r0, r9
 801273a:	f7ff f89f 	bl	801187c <_localeconv_r>
 801273e:	6883      	ldr	r3, [r0, #8]
 8012740:	9306      	str	r3, [sp, #24]
 8012742:	9b07      	ldr	r3, [sp, #28]
 8012744:	b12b      	cbz	r3, 8012752 <_vfiprintf_r+0x256>
 8012746:	9b06      	ldr	r3, [sp, #24]
 8012748:	b11b      	cbz	r3, 8012752 <_vfiprintf_r+0x256>
 801274a:	781b      	ldrb	r3, [r3, #0]
 801274c:	b10b      	cbz	r3, 8012752 <_vfiprintf_r+0x256>
 801274e:	f44a 6a80 	orr.w	sl, sl, #1024	; 0x400
 8012752:	9a01      	ldr	r2, [sp, #4]
 8012754:	e75c      	b.n	8012610 <_vfiprintf_r+0x114>
 8012756:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 801275a:	2b00      	cmp	r3, #0
 801275c:	d1f9      	bne.n	8012752 <_vfiprintf_r+0x256>
 801275e:	2320      	movs	r3, #32
 8012760:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012764:	e7f5      	b.n	8012752 <_vfiprintf_r+0x256>
 8012766:	f04a 0a01 	orr.w	sl, sl, #1
 801276a:	e7f2      	b.n	8012752 <_vfiprintf_r+0x256>
 801276c:	f854 3b04 	ldr.w	r3, [r4], #4
 8012770:	9303      	str	r3, [sp, #12]
 8012772:	2b00      	cmp	r3, #0
 8012774:	daed      	bge.n	8012752 <_vfiprintf_r+0x256>
 8012776:	425b      	negs	r3, r3
 8012778:	9303      	str	r3, [sp, #12]
 801277a:	f04a 0a04 	orr.w	sl, sl, #4
 801277e:	e7e8      	b.n	8012752 <_vfiprintf_r+0x256>
 8012780:	232b      	movs	r3, #43	; 0x2b
 8012782:	e7ed      	b.n	8012760 <_vfiprintf_r+0x264>
 8012784:	9a01      	ldr	r2, [sp, #4]
 8012786:	f812 3b01 	ldrb.w	r3, [r2], #1
 801278a:	2b2a      	cmp	r3, #42	; 0x2a
 801278c:	d112      	bne.n	80127b4 <_vfiprintf_r+0x2b8>
 801278e:	f854 0b04 	ldr.w	r0, [r4], #4
 8012792:	ea40 73e0 	orr.w	r3, r0, r0, asr #31
 8012796:	e9cd 3200 	strd	r3, r2, [sp]
 801279a:	e7da      	b.n	8012752 <_vfiprintf_r+0x256>
 801279c:	9b00      	ldr	r3, [sp, #0]
 801279e:	200a      	movs	r0, #10
 80127a0:	fb00 1303 	mla	r3, r0, r3, r1
 80127a4:	9300      	str	r3, [sp, #0]
 80127a6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80127aa:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80127ae:	2909      	cmp	r1, #9
 80127b0:	d9f4      	bls.n	801279c <_vfiprintf_r+0x2a0>
 80127b2:	e72f      	b.n	8012614 <_vfiprintf_r+0x118>
 80127b4:	2100      	movs	r1, #0
 80127b6:	9100      	str	r1, [sp, #0]
 80127b8:	e7f7      	b.n	80127aa <_vfiprintf_r+0x2ae>
 80127ba:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
 80127be:	e7c8      	b.n	8012752 <_vfiprintf_r+0x256>
 80127c0:	2100      	movs	r1, #0
 80127c2:	9a01      	ldr	r2, [sp, #4]
 80127c4:	9103      	str	r1, [sp, #12]
 80127c6:	9903      	ldr	r1, [sp, #12]
 80127c8:	3b30      	subs	r3, #48	; 0x30
 80127ca:	200a      	movs	r0, #10
 80127cc:	fb00 3301 	mla	r3, r0, r1, r3
 80127d0:	9303      	str	r3, [sp, #12]
 80127d2:	f812 3b01 	ldrb.w	r3, [r2], #1
 80127d6:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80127da:	2909      	cmp	r1, #9
 80127dc:	d9f3      	bls.n	80127c6 <_vfiprintf_r+0x2ca>
 80127de:	e719      	b.n	8012614 <_vfiprintf_r+0x118>
 80127e0:	9b01      	ldr	r3, [sp, #4]
 80127e2:	781b      	ldrb	r3, [r3, #0]
 80127e4:	2b68      	cmp	r3, #104	; 0x68
 80127e6:	bf01      	itttt	eq
 80127e8:	9b01      	ldreq	r3, [sp, #4]
 80127ea:	3301      	addeq	r3, #1
 80127ec:	9301      	streq	r3, [sp, #4]
 80127ee:	f44a 7a00 	orreq.w	sl, sl, #512	; 0x200
 80127f2:	bf18      	it	ne
 80127f4:	f04a 0a40 	orrne.w	sl, sl, #64	; 0x40
 80127f8:	e7ab      	b.n	8012752 <_vfiprintf_r+0x256>
 80127fa:	9b01      	ldr	r3, [sp, #4]
 80127fc:	781b      	ldrb	r3, [r3, #0]
 80127fe:	2b6c      	cmp	r3, #108	; 0x6c
 8012800:	d105      	bne.n	801280e <_vfiprintf_r+0x312>
 8012802:	9b01      	ldr	r3, [sp, #4]
 8012804:	3301      	adds	r3, #1
 8012806:	9301      	str	r3, [sp, #4]
 8012808:	f04a 0a20 	orr.w	sl, sl, #32
 801280c:	e7a1      	b.n	8012752 <_vfiprintf_r+0x256>
 801280e:	f04a 0a10 	orr.w	sl, sl, #16
 8012812:	e79e      	b.n	8012752 <_vfiprintf_r+0x256>
 8012814:	46a3      	mov	fp, r4
 8012816:	2100      	movs	r1, #0
 8012818:	f85b 3b04 	ldr.w	r3, [fp], #4
 801281c:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 8012820:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 8012824:	2301      	movs	r3, #1
 8012826:	9300      	str	r3, [sp, #0]
 8012828:	460d      	mov	r5, r1
 801282a:	f10d 087c 	add.w	r8, sp, #124	; 0x7c
 801282e:	e0a0      	b.n	8012972 <_vfiprintf_r+0x476>
 8012830:	f04a 0a10 	orr.w	sl, sl, #16
 8012834:	f01a 0f20 	tst.w	sl, #32
 8012838:	d011      	beq.n	801285e <_vfiprintf_r+0x362>
 801283a:	3407      	adds	r4, #7
 801283c:	f024 0b07 	bic.w	fp, r4, #7
 8012840:	e8fb 4502 	ldrd	r4, r5, [fp], #8
 8012844:	2c00      	cmp	r4, #0
 8012846:	f175 0300 	sbcs.w	r3, r5, #0
 801284a:	da06      	bge.n	801285a <_vfiprintf_r+0x35e>
 801284c:	4264      	negs	r4, r4
 801284e:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8012852:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 8012856:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801285a:	2301      	movs	r3, #1
 801285c:	e03f      	b.n	80128de <_vfiprintf_r+0x3e2>
 801285e:	f01a 0f10 	tst.w	sl, #16
 8012862:	f104 0b04 	add.w	fp, r4, #4
 8012866:	d002      	beq.n	801286e <_vfiprintf_r+0x372>
 8012868:	6824      	ldr	r4, [r4, #0]
 801286a:	17e5      	asrs	r5, r4, #31
 801286c:	e7ea      	b.n	8012844 <_vfiprintf_r+0x348>
 801286e:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8012872:	6824      	ldr	r4, [r4, #0]
 8012874:	d001      	beq.n	801287a <_vfiprintf_r+0x37e>
 8012876:	b224      	sxth	r4, r4
 8012878:	e7f7      	b.n	801286a <_vfiprintf_r+0x36e>
 801287a:	f41a 7f00 	tst.w	sl, #512	; 0x200
 801287e:	bf18      	it	ne
 8012880:	b264      	sxtbne	r4, r4
 8012882:	e7f2      	b.n	801286a <_vfiprintf_r+0x36e>
 8012884:	f01a 0f20 	tst.w	sl, #32
 8012888:	f854 3b04 	ldr.w	r3, [r4], #4
 801288c:	d005      	beq.n	801289a <_vfiprintf_r+0x39e>
 801288e:	9a02      	ldr	r2, [sp, #8]
 8012890:	4610      	mov	r0, r2
 8012892:	17d1      	asrs	r1, r2, #31
 8012894:	e9c3 0100 	strd	r0, r1, [r3]
 8012898:	e694      	b.n	80125c4 <_vfiprintf_r+0xc8>
 801289a:	f01a 0f10 	tst.w	sl, #16
 801289e:	d002      	beq.n	80128a6 <_vfiprintf_r+0x3aa>
 80128a0:	9a02      	ldr	r2, [sp, #8]
 80128a2:	601a      	str	r2, [r3, #0]
 80128a4:	e68e      	b.n	80125c4 <_vfiprintf_r+0xc8>
 80128a6:	f01a 0f40 	tst.w	sl, #64	; 0x40
 80128aa:	d002      	beq.n	80128b2 <_vfiprintf_r+0x3b6>
 80128ac:	9a02      	ldr	r2, [sp, #8]
 80128ae:	801a      	strh	r2, [r3, #0]
 80128b0:	e688      	b.n	80125c4 <_vfiprintf_r+0xc8>
 80128b2:	f41a 7f00 	tst.w	sl, #512	; 0x200
 80128b6:	d0f3      	beq.n	80128a0 <_vfiprintf_r+0x3a4>
 80128b8:	9a02      	ldr	r2, [sp, #8]
 80128ba:	701a      	strb	r2, [r3, #0]
 80128bc:	e682      	b.n	80125c4 <_vfiprintf_r+0xc8>
 80128be:	f04a 0a10 	orr.w	sl, sl, #16
 80128c2:	f01a 0f20 	tst.w	sl, #32
 80128c6:	d01d      	beq.n	8012904 <_vfiprintf_r+0x408>
 80128c8:	3407      	adds	r4, #7
 80128ca:	f024 0b07 	bic.w	fp, r4, #7
 80128ce:	e8fb 4502 	ldrd	r4, r5, [fp], #8
 80128d2:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 80128d6:	2300      	movs	r3, #0
 80128d8:	2200      	movs	r2, #0
 80128da:	f88d 202b 	strb.w	r2, [sp, #43]	; 0x2b
 80128de:	9a00      	ldr	r2, [sp, #0]
 80128e0:	3201      	adds	r2, #1
 80128e2:	f000 8261 	beq.w	8012da8 <_vfiprintf_r+0x8ac>
 80128e6:	f02a 0280 	bic.w	r2, sl, #128	; 0x80
 80128ea:	9204      	str	r2, [sp, #16]
 80128ec:	ea54 0205 	orrs.w	r2, r4, r5
 80128f0:	f040 8260 	bne.w	8012db4 <_vfiprintf_r+0x8b8>
 80128f4:	9a00      	ldr	r2, [sp, #0]
 80128f6:	2a00      	cmp	r2, #0
 80128f8:	f000 8197 	beq.w	8012c2a <_vfiprintf_r+0x72e>
 80128fc:	2b01      	cmp	r3, #1
 80128fe:	f040 825c 	bne.w	8012dba <_vfiprintf_r+0x8be>
 8012902:	e135      	b.n	8012b70 <_vfiprintf_r+0x674>
 8012904:	f01a 0f10 	tst.w	sl, #16
 8012908:	f104 0b04 	add.w	fp, r4, #4
 801290c:	d001      	beq.n	8012912 <_vfiprintf_r+0x416>
 801290e:	6824      	ldr	r4, [r4, #0]
 8012910:	e003      	b.n	801291a <_vfiprintf_r+0x41e>
 8012912:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8012916:	d002      	beq.n	801291e <_vfiprintf_r+0x422>
 8012918:	8824      	ldrh	r4, [r4, #0]
 801291a:	2500      	movs	r5, #0
 801291c:	e7d9      	b.n	80128d2 <_vfiprintf_r+0x3d6>
 801291e:	f41a 7f00 	tst.w	sl, #512	; 0x200
 8012922:	d0f4      	beq.n	801290e <_vfiprintf_r+0x412>
 8012924:	7824      	ldrb	r4, [r4, #0]
 8012926:	e7f8      	b.n	801291a <_vfiprintf_r+0x41e>
 8012928:	46a3      	mov	fp, r4
 801292a:	f647 0330 	movw	r3, #30768	; 0x7830
 801292e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8012932:	f85b 4b04 	ldr.w	r4, [fp], #4
 8012936:	4b03      	ldr	r3, [pc, #12]	; (8012944 <_vfiprintf_r+0x448>)
 8012938:	9305      	str	r3, [sp, #20]
 801293a:	2500      	movs	r5, #0
 801293c:	f04a 0a02 	orr.w	sl, sl, #2
 8012940:	2302      	movs	r3, #2
 8012942:	e7c9      	b.n	80128d8 <_vfiprintf_r+0x3dc>
 8012944:	080142fc 	.word	0x080142fc
 8012948:	9b00      	ldr	r3, [sp, #0]
 801294a:	46a3      	mov	fp, r4
 801294c:	2500      	movs	r5, #0
 801294e:	1c5c      	adds	r4, r3, #1
 8012950:	f85b 8b04 	ldr.w	r8, [fp], #4
 8012954:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012958:	f000 80cf 	beq.w	8012afa <_vfiprintf_r+0x5fe>
 801295c:	461a      	mov	r2, r3
 801295e:	4629      	mov	r1, r5
 8012960:	4640      	mov	r0, r8
 8012962:	f7f4 fa8d 	bl	8006e80 <memchr>
 8012966:	2800      	cmp	r0, #0
 8012968:	f000 8174 	beq.w	8012c54 <_vfiprintf_r+0x758>
 801296c:	eba0 0308 	sub.w	r3, r0, r8
 8012970:	9300      	str	r3, [sp, #0]
 8012972:	9b00      	ldr	r3, [sp, #0]
 8012974:	42ab      	cmp	r3, r5
 8012976:	bfb8      	it	lt
 8012978:	462b      	movlt	r3, r5
 801297a:	9304      	str	r3, [sp, #16]
 801297c:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 8012980:	b113      	cbz	r3, 8012988 <_vfiprintf_r+0x48c>
 8012982:	9b04      	ldr	r3, [sp, #16]
 8012984:	3301      	adds	r3, #1
 8012986:	9304      	str	r3, [sp, #16]
 8012988:	f01a 0302 	ands.w	r3, sl, #2
 801298c:	9308      	str	r3, [sp, #32]
 801298e:	bf1e      	ittt	ne
 8012990:	9b04      	ldrne	r3, [sp, #16]
 8012992:	3302      	addne	r3, #2
 8012994:	9304      	strne	r3, [sp, #16]
 8012996:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
 801299a:	9309      	str	r3, [sp, #36]	; 0x24
 801299c:	d11f      	bne.n	80129de <_vfiprintf_r+0x4e2>
 801299e:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 80129a2:	1a9c      	subs	r4, r3, r2
 80129a4:	2c00      	cmp	r4, #0
 80129a6:	dd1a      	ble.n	80129de <_vfiprintf_r+0x4e2>
 80129a8:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 80129ac:	48b9      	ldr	r0, [pc, #740]	; (8012c94 <_vfiprintf_r+0x798>)
 80129ae:	6030      	str	r0, [r6, #0]
 80129b0:	2c10      	cmp	r4, #16
 80129b2:	f103 0301 	add.w	r3, r3, #1
 80129b6:	f106 0108 	add.w	r1, r6, #8
 80129ba:	f300 814d 	bgt.w	8012c58 <_vfiprintf_r+0x75c>
 80129be:	6074      	str	r4, [r6, #4]
 80129c0:	2b07      	cmp	r3, #7
 80129c2:	4414      	add	r4, r2
 80129c4:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
 80129c8:	f340 8158 	ble.w	8012c7c <_vfiprintf_r+0x780>
 80129cc:	aa0c      	add	r2, sp, #48	; 0x30
 80129ce:	4639      	mov	r1, r7
 80129d0:	4648      	mov	r0, r9
 80129d2:	f7ff fd61 	bl	8012498 <__sprint_r>
 80129d6:	2800      	cmp	r0, #0
 80129d8:	f040 81b8 	bne.w	8012d4c <_vfiprintf_r+0x850>
 80129dc:	ae0f      	add	r6, sp, #60	; 0x3c
 80129de:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 80129e2:	b173      	cbz	r3, 8012a02 <_vfiprintf_r+0x506>
 80129e4:	f10d 022b 	add.w	r2, sp, #43	; 0x2b
 80129e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80129ea:	6032      	str	r2, [r6, #0]
 80129ec:	2201      	movs	r2, #1
 80129ee:	6072      	str	r2, [r6, #4]
 80129f0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80129f2:	3301      	adds	r3, #1
 80129f4:	3201      	adds	r2, #1
 80129f6:	2b07      	cmp	r3, #7
 80129f8:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 80129fc:	f300 8140 	bgt.w	8012c80 <_vfiprintf_r+0x784>
 8012a00:	3608      	adds	r6, #8
 8012a02:	9b08      	ldr	r3, [sp, #32]
 8012a04:	b16b      	cbz	r3, 8012a22 <_vfiprintf_r+0x526>
 8012a06:	aa0b      	add	r2, sp, #44	; 0x2c
 8012a08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012a0a:	6032      	str	r2, [r6, #0]
 8012a0c:	2202      	movs	r2, #2
 8012a0e:	6072      	str	r2, [r6, #4]
 8012a10:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012a12:	3301      	adds	r3, #1
 8012a14:	3202      	adds	r2, #2
 8012a16:	2b07      	cmp	r3, #7
 8012a18:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 8012a1c:	f300 8140 	bgt.w	8012ca0 <_vfiprintf_r+0x7a4>
 8012a20:	3608      	adds	r6, #8
 8012a22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012a24:	2b80      	cmp	r3, #128	; 0x80
 8012a26:	d11f      	bne.n	8012a68 <_vfiprintf_r+0x56c>
 8012a28:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 8012a2c:	1a9c      	subs	r4, r3, r2
 8012a2e:	2c00      	cmp	r4, #0
 8012a30:	dd1a      	ble.n	8012a68 <_vfiprintf_r+0x56c>
 8012a32:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8012a36:	4898      	ldr	r0, [pc, #608]	; (8012c98 <_vfiprintf_r+0x79c>)
 8012a38:	6030      	str	r0, [r6, #0]
 8012a3a:	2c10      	cmp	r4, #16
 8012a3c:	f103 0301 	add.w	r3, r3, #1
 8012a40:	f106 0108 	add.w	r1, r6, #8
 8012a44:	f300 8135 	bgt.w	8012cb2 <_vfiprintf_r+0x7b6>
 8012a48:	6074      	str	r4, [r6, #4]
 8012a4a:	2b07      	cmp	r3, #7
 8012a4c:	4414      	add	r4, r2
 8012a4e:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
 8012a52:	f340 8140 	ble.w	8012cd6 <_vfiprintf_r+0x7da>
 8012a56:	aa0c      	add	r2, sp, #48	; 0x30
 8012a58:	4639      	mov	r1, r7
 8012a5a:	4648      	mov	r0, r9
 8012a5c:	f7ff fd1c 	bl	8012498 <__sprint_r>
 8012a60:	2800      	cmp	r0, #0
 8012a62:	f040 8173 	bne.w	8012d4c <_vfiprintf_r+0x850>
 8012a66:	ae0f      	add	r6, sp, #60	; 0x3c
 8012a68:	9b00      	ldr	r3, [sp, #0]
 8012a6a:	1aec      	subs	r4, r5, r3
 8012a6c:	2c00      	cmp	r4, #0
 8012a6e:	dd1a      	ble.n	8012aa6 <_vfiprintf_r+0x5aa>
 8012a70:	4d89      	ldr	r5, [pc, #548]	; (8012c98 <_vfiprintf_r+0x79c>)
 8012a72:	6035      	str	r5, [r6, #0]
 8012a74:	e9dd 310d 	ldrd	r3, r1, [sp, #52]	; 0x34
 8012a78:	2c10      	cmp	r4, #16
 8012a7a:	f103 0301 	add.w	r3, r3, #1
 8012a7e:	f106 0208 	add.w	r2, r6, #8
 8012a82:	f300 812a 	bgt.w	8012cda <_vfiprintf_r+0x7de>
 8012a86:	6074      	str	r4, [r6, #4]
 8012a88:	2b07      	cmp	r3, #7
 8012a8a:	440c      	add	r4, r1
 8012a8c:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
 8012a90:	f340 8134 	ble.w	8012cfc <_vfiprintf_r+0x800>
 8012a94:	aa0c      	add	r2, sp, #48	; 0x30
 8012a96:	4639      	mov	r1, r7
 8012a98:	4648      	mov	r0, r9
 8012a9a:	f7ff fcfd 	bl	8012498 <__sprint_r>
 8012a9e:	2800      	cmp	r0, #0
 8012aa0:	f040 8154 	bne.w	8012d4c <_vfiprintf_r+0x850>
 8012aa4:	ae0f      	add	r6, sp, #60	; 0x3c
 8012aa6:	9b00      	ldr	r3, [sp, #0]
 8012aa8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012aaa:	6073      	str	r3, [r6, #4]
 8012aac:	4418      	add	r0, r3
 8012aae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012ab0:	f8c6 8000 	str.w	r8, [r6]
 8012ab4:	3301      	adds	r3, #1
 8012ab6:	2b07      	cmp	r3, #7
 8012ab8:	900e      	str	r0, [sp, #56]	; 0x38
 8012aba:	930d      	str	r3, [sp, #52]	; 0x34
 8012abc:	f300 8120 	bgt.w	8012d00 <_vfiprintf_r+0x804>
 8012ac0:	f106 0308 	add.w	r3, r6, #8
 8012ac4:	f01a 0f04 	tst.w	sl, #4
 8012ac8:	f040 8122 	bne.w	8012d10 <_vfiprintf_r+0x814>
 8012acc:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8012ad0:	9904      	ldr	r1, [sp, #16]
 8012ad2:	428a      	cmp	r2, r1
 8012ad4:	bfac      	ite	ge
 8012ad6:	189b      	addge	r3, r3, r2
 8012ad8:	185b      	addlt	r3, r3, r1
 8012ada:	9302      	str	r3, [sp, #8]
 8012adc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ade:	b13b      	cbz	r3, 8012af0 <_vfiprintf_r+0x5f4>
 8012ae0:	aa0c      	add	r2, sp, #48	; 0x30
 8012ae2:	4639      	mov	r1, r7
 8012ae4:	4648      	mov	r0, r9
 8012ae6:	f7ff fcd7 	bl	8012498 <__sprint_r>
 8012aea:	2800      	cmp	r0, #0
 8012aec:	f040 812e 	bne.w	8012d4c <_vfiprintf_r+0x850>
 8012af0:	2300      	movs	r3, #0
 8012af2:	930d      	str	r3, [sp, #52]	; 0x34
 8012af4:	465c      	mov	r4, fp
 8012af6:	ae0f      	add	r6, sp, #60	; 0x3c
 8012af8:	e564      	b.n	80125c4 <_vfiprintf_r+0xc8>
 8012afa:	4640      	mov	r0, r8
 8012afc:	f7f4 fa1a 	bl	8006f34 <strlen>
 8012b00:	9000      	str	r0, [sp, #0]
 8012b02:	e736      	b.n	8012972 <_vfiprintf_r+0x476>
 8012b04:	f04a 0a10 	orr.w	sl, sl, #16
 8012b08:	f01a 0f20 	tst.w	sl, #32
 8012b0c:	d006      	beq.n	8012b1c <_vfiprintf_r+0x620>
 8012b0e:	3407      	adds	r4, #7
 8012b10:	f024 0b07 	bic.w	fp, r4, #7
 8012b14:	e8fb 4502 	ldrd	r4, r5, [fp], #8
 8012b18:	2301      	movs	r3, #1
 8012b1a:	e6dd      	b.n	80128d8 <_vfiprintf_r+0x3dc>
 8012b1c:	f01a 0f10 	tst.w	sl, #16
 8012b20:	f104 0b04 	add.w	fp, r4, #4
 8012b24:	d001      	beq.n	8012b2a <_vfiprintf_r+0x62e>
 8012b26:	6824      	ldr	r4, [r4, #0]
 8012b28:	e003      	b.n	8012b32 <_vfiprintf_r+0x636>
 8012b2a:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8012b2e:	d002      	beq.n	8012b36 <_vfiprintf_r+0x63a>
 8012b30:	8824      	ldrh	r4, [r4, #0]
 8012b32:	2500      	movs	r5, #0
 8012b34:	e7f0      	b.n	8012b18 <_vfiprintf_r+0x61c>
 8012b36:	f41a 7f00 	tst.w	sl, #512	; 0x200
 8012b3a:	d0f4      	beq.n	8012b26 <_vfiprintf_r+0x62a>
 8012b3c:	7824      	ldrb	r4, [r4, #0]
 8012b3e:	e7f8      	b.n	8012b32 <_vfiprintf_r+0x636>
 8012b40:	4a56      	ldr	r2, [pc, #344]	; (8012c9c <_vfiprintf_r+0x7a0>)
 8012b42:	e5d5      	b.n	80126f0 <_vfiprintf_r+0x1f4>
 8012b44:	f01a 0f10 	tst.w	sl, #16
 8012b48:	f104 0b04 	add.w	fp, r4, #4
 8012b4c:	d001      	beq.n	8012b52 <_vfiprintf_r+0x656>
 8012b4e:	6824      	ldr	r4, [r4, #0]
 8012b50:	e003      	b.n	8012b5a <_vfiprintf_r+0x65e>
 8012b52:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8012b56:	d002      	beq.n	8012b5e <_vfiprintf_r+0x662>
 8012b58:	8824      	ldrh	r4, [r4, #0]
 8012b5a:	2500      	movs	r5, #0
 8012b5c:	e5d2      	b.n	8012704 <_vfiprintf_r+0x208>
 8012b5e:	f41a 7f00 	tst.w	sl, #512	; 0x200
 8012b62:	d0f4      	beq.n	8012b4e <_vfiprintf_r+0x652>
 8012b64:	7824      	ldrb	r4, [r4, #0]
 8012b66:	e7f8      	b.n	8012b5a <_vfiprintf_r+0x65e>
 8012b68:	2d00      	cmp	r5, #0
 8012b6a:	bf08      	it	eq
 8012b6c:	2c0a      	cmpeq	r4, #10
 8012b6e:	d205      	bcs.n	8012b7c <_vfiprintf_r+0x680>
 8012b70:	3430      	adds	r4, #48	; 0x30
 8012b72:	f88d 40df 	strb.w	r4, [sp, #223]	; 0xdf
 8012b76:	f10d 08df 	add.w	r8, sp, #223	; 0xdf
 8012b7a:	e13c      	b.n	8012df6 <_vfiprintf_r+0x8fa>
 8012b7c:	ab38      	add	r3, sp, #224	; 0xe0
 8012b7e:	9308      	str	r3, [sp, #32]
 8012b80:	9b04      	ldr	r3, [sp, #16]
 8012b82:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8012b86:	f04f 0a00 	mov.w	sl, #0
 8012b8a:	9309      	str	r3, [sp, #36]	; 0x24
 8012b8c:	9b08      	ldr	r3, [sp, #32]
 8012b8e:	220a      	movs	r2, #10
 8012b90:	f103 38ff 	add.w	r8, r3, #4294967295
 8012b94:	4620      	mov	r0, r4
 8012b96:	2300      	movs	r3, #0
 8012b98:	4629      	mov	r1, r5
 8012b9a:	f7f4 fe67 	bl	800786c <__aeabi_uldivmod>
 8012b9e:	9b08      	ldr	r3, [sp, #32]
 8012ba0:	3230      	adds	r2, #48	; 0x30
 8012ba2:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012ba6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012ba8:	f10a 0a01 	add.w	sl, sl, #1
 8012bac:	b1db      	cbz	r3, 8012be6 <_vfiprintf_r+0x6ea>
 8012bae:	9b06      	ldr	r3, [sp, #24]
 8012bb0:	781b      	ldrb	r3, [r3, #0]
 8012bb2:	4553      	cmp	r3, sl
 8012bb4:	d117      	bne.n	8012be6 <_vfiprintf_r+0x6ea>
 8012bb6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012bba:	d014      	beq.n	8012be6 <_vfiprintf_r+0x6ea>
 8012bbc:	2d00      	cmp	r5, #0
 8012bbe:	bf08      	it	eq
 8012bc0:	2c0a      	cmpeq	r4, #10
 8012bc2:	d310      	bcc.n	8012be6 <_vfiprintf_r+0x6ea>
 8012bc4:	9b07      	ldr	r3, [sp, #28]
 8012bc6:	eba8 0803 	sub.w	r8, r8, r3
 8012bca:	461a      	mov	r2, r3
 8012bcc:	ee18 1a10 	vmov	r1, s16
 8012bd0:	4640      	mov	r0, r8
 8012bd2:	f7ff fa6e 	bl	80120b2 <strncpy>
 8012bd6:	9b06      	ldr	r3, [sp, #24]
 8012bd8:	785b      	ldrb	r3, [r3, #1]
 8012bda:	b1a3      	cbz	r3, 8012c06 <_vfiprintf_r+0x70a>
 8012bdc:	9b06      	ldr	r3, [sp, #24]
 8012bde:	3301      	adds	r3, #1
 8012be0:	9306      	str	r3, [sp, #24]
 8012be2:	f04f 0a00 	mov.w	sl, #0
 8012be6:	220a      	movs	r2, #10
 8012be8:	2300      	movs	r3, #0
 8012bea:	4620      	mov	r0, r4
 8012bec:	4629      	mov	r1, r5
 8012bee:	f7f4 fe3d 	bl	800786c <__aeabi_uldivmod>
 8012bf2:	2d00      	cmp	r5, #0
 8012bf4:	bf08      	it	eq
 8012bf6:	2c0a      	cmpeq	r4, #10
 8012bf8:	f0c0 80fd 	bcc.w	8012df6 <_vfiprintf_r+0x8fa>
 8012bfc:	4604      	mov	r4, r0
 8012bfe:	460d      	mov	r5, r1
 8012c00:	f8cd 8020 	str.w	r8, [sp, #32]
 8012c04:	e7c2      	b.n	8012b8c <_vfiprintf_r+0x690>
 8012c06:	469a      	mov	sl, r3
 8012c08:	e7ed      	b.n	8012be6 <_vfiprintf_r+0x6ea>
 8012c0a:	9a05      	ldr	r2, [sp, #20]
 8012c0c:	f004 030f 	and.w	r3, r4, #15
 8012c10:	5cd3      	ldrb	r3, [r2, r3]
 8012c12:	f808 3d01 	strb.w	r3, [r8, #-1]!
 8012c16:	0923      	lsrs	r3, r4, #4
 8012c18:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
 8012c1c:	092a      	lsrs	r2, r5, #4
 8012c1e:	461c      	mov	r4, r3
 8012c20:	4615      	mov	r5, r2
 8012c22:	ea54 0305 	orrs.w	r3, r4, r5
 8012c26:	d1f0      	bne.n	8012c0a <_vfiprintf_r+0x70e>
 8012c28:	e0e5      	b.n	8012df6 <_vfiprintf_r+0x8fa>
 8012c2a:	b933      	cbnz	r3, 8012c3a <_vfiprintf_r+0x73e>
 8012c2c:	f01a 0f01 	tst.w	sl, #1
 8012c30:	d003      	beq.n	8012c3a <_vfiprintf_r+0x73e>
 8012c32:	2330      	movs	r3, #48	; 0x30
 8012c34:	f88d 30df 	strb.w	r3, [sp, #223]	; 0xdf
 8012c38:	e79d      	b.n	8012b76 <_vfiprintf_r+0x67a>
 8012c3a:	f10d 08e0 	add.w	r8, sp, #224	; 0xe0
 8012c3e:	e0da      	b.n	8012df6 <_vfiprintf_r+0x8fa>
 8012c40:	2b00      	cmp	r3, #0
 8012c42:	f000 80a4 	beq.w	8012d8e <_vfiprintf_r+0x892>
 8012c46:	2100      	movs	r1, #0
 8012c48:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 8012c4c:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 8012c50:	46a3      	mov	fp, r4
 8012c52:	e5e7      	b.n	8012824 <_vfiprintf_r+0x328>
 8012c54:	4605      	mov	r5, r0
 8012c56:	e68c      	b.n	8012972 <_vfiprintf_r+0x476>
 8012c58:	2010      	movs	r0, #16
 8012c5a:	4402      	add	r2, r0
 8012c5c:	2b07      	cmp	r3, #7
 8012c5e:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 8012c62:	6070      	str	r0, [r6, #4]
 8012c64:	dd07      	ble.n	8012c76 <_vfiprintf_r+0x77a>
 8012c66:	aa0c      	add	r2, sp, #48	; 0x30
 8012c68:	4639      	mov	r1, r7
 8012c6a:	4648      	mov	r0, r9
 8012c6c:	f7ff fc14 	bl	8012498 <__sprint_r>
 8012c70:	2800      	cmp	r0, #0
 8012c72:	d16b      	bne.n	8012d4c <_vfiprintf_r+0x850>
 8012c74:	a90f      	add	r1, sp, #60	; 0x3c
 8012c76:	3c10      	subs	r4, #16
 8012c78:	460e      	mov	r6, r1
 8012c7a:	e695      	b.n	80129a8 <_vfiprintf_r+0x4ac>
 8012c7c:	460e      	mov	r6, r1
 8012c7e:	e6ae      	b.n	80129de <_vfiprintf_r+0x4e2>
 8012c80:	aa0c      	add	r2, sp, #48	; 0x30
 8012c82:	4639      	mov	r1, r7
 8012c84:	4648      	mov	r0, r9
 8012c86:	f7ff fc07 	bl	8012498 <__sprint_r>
 8012c8a:	2800      	cmp	r0, #0
 8012c8c:	d15e      	bne.n	8012d4c <_vfiprintf_r+0x850>
 8012c8e:	ae0f      	add	r6, sp, #60	; 0x3c
 8012c90:	e6b7      	b.n	8012a02 <_vfiprintf_r+0x506>
 8012c92:	bf00      	nop
 8012c94:	08014562 	.word	0x08014562
 8012c98:	08014572 	.word	0x08014572
 8012c9c:	0801430d 	.word	0x0801430d
 8012ca0:	aa0c      	add	r2, sp, #48	; 0x30
 8012ca2:	4639      	mov	r1, r7
 8012ca4:	4648      	mov	r0, r9
 8012ca6:	f7ff fbf7 	bl	8012498 <__sprint_r>
 8012caa:	2800      	cmp	r0, #0
 8012cac:	d14e      	bne.n	8012d4c <_vfiprintf_r+0x850>
 8012cae:	ae0f      	add	r6, sp, #60	; 0x3c
 8012cb0:	e6b7      	b.n	8012a22 <_vfiprintf_r+0x526>
 8012cb2:	2010      	movs	r0, #16
 8012cb4:	4402      	add	r2, r0
 8012cb6:	2b07      	cmp	r3, #7
 8012cb8:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 8012cbc:	6070      	str	r0, [r6, #4]
 8012cbe:	dd07      	ble.n	8012cd0 <_vfiprintf_r+0x7d4>
 8012cc0:	aa0c      	add	r2, sp, #48	; 0x30
 8012cc2:	4639      	mov	r1, r7
 8012cc4:	4648      	mov	r0, r9
 8012cc6:	f7ff fbe7 	bl	8012498 <__sprint_r>
 8012cca:	2800      	cmp	r0, #0
 8012ccc:	d13e      	bne.n	8012d4c <_vfiprintf_r+0x850>
 8012cce:	a90f      	add	r1, sp, #60	; 0x3c
 8012cd0:	3c10      	subs	r4, #16
 8012cd2:	460e      	mov	r6, r1
 8012cd4:	e6ad      	b.n	8012a32 <_vfiprintf_r+0x536>
 8012cd6:	460e      	mov	r6, r1
 8012cd8:	e6c6      	b.n	8012a68 <_vfiprintf_r+0x56c>
 8012cda:	2010      	movs	r0, #16
 8012cdc:	4401      	add	r1, r0
 8012cde:	2b07      	cmp	r3, #7
 8012ce0:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 8012ce4:	6070      	str	r0, [r6, #4]
 8012ce6:	dd06      	ble.n	8012cf6 <_vfiprintf_r+0x7fa>
 8012ce8:	aa0c      	add	r2, sp, #48	; 0x30
 8012cea:	4639      	mov	r1, r7
 8012cec:	4648      	mov	r0, r9
 8012cee:	f7ff fbd3 	bl	8012498 <__sprint_r>
 8012cf2:	bb58      	cbnz	r0, 8012d4c <_vfiprintf_r+0x850>
 8012cf4:	aa0f      	add	r2, sp, #60	; 0x3c
 8012cf6:	3c10      	subs	r4, #16
 8012cf8:	4616      	mov	r6, r2
 8012cfa:	e6ba      	b.n	8012a72 <_vfiprintf_r+0x576>
 8012cfc:	4616      	mov	r6, r2
 8012cfe:	e6d2      	b.n	8012aa6 <_vfiprintf_r+0x5aa>
 8012d00:	aa0c      	add	r2, sp, #48	; 0x30
 8012d02:	4639      	mov	r1, r7
 8012d04:	4648      	mov	r0, r9
 8012d06:	f7ff fbc7 	bl	8012498 <__sprint_r>
 8012d0a:	b9f8      	cbnz	r0, 8012d4c <_vfiprintf_r+0x850>
 8012d0c:	ab0f      	add	r3, sp, #60	; 0x3c
 8012d0e:	e6d9      	b.n	8012ac4 <_vfiprintf_r+0x5c8>
 8012d10:	e9dd 2103 	ldrd	r2, r1, [sp, #12]
 8012d14:	1a54      	subs	r4, r2, r1
 8012d16:	2c00      	cmp	r4, #0
 8012d18:	f77f aed8 	ble.w	8012acc <_vfiprintf_r+0x5d0>
 8012d1c:	4d3a      	ldr	r5, [pc, #232]	; (8012e08 <_vfiprintf_r+0x90c>)
 8012d1e:	2610      	movs	r6, #16
 8012d20:	e9dd 210d 	ldrd	r2, r1, [sp, #52]	; 0x34
 8012d24:	2c10      	cmp	r4, #16
 8012d26:	f102 0201 	add.w	r2, r2, #1
 8012d2a:	601d      	str	r5, [r3, #0]
 8012d2c:	dc1d      	bgt.n	8012d6a <_vfiprintf_r+0x86e>
 8012d2e:	605c      	str	r4, [r3, #4]
 8012d30:	2a07      	cmp	r2, #7
 8012d32:	440c      	add	r4, r1
 8012d34:	e9cd 240d 	strd	r2, r4, [sp, #52]	; 0x34
 8012d38:	f77f aec8 	ble.w	8012acc <_vfiprintf_r+0x5d0>
 8012d3c:	aa0c      	add	r2, sp, #48	; 0x30
 8012d3e:	4639      	mov	r1, r7
 8012d40:	4648      	mov	r0, r9
 8012d42:	f7ff fba9 	bl	8012498 <__sprint_r>
 8012d46:	2800      	cmp	r0, #0
 8012d48:	f43f aec0 	beq.w	8012acc <_vfiprintf_r+0x5d0>
 8012d4c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8012d4e:	07d9      	lsls	r1, r3, #31
 8012d50:	d405      	bmi.n	8012d5e <_vfiprintf_r+0x862>
 8012d52:	89bb      	ldrh	r3, [r7, #12]
 8012d54:	059a      	lsls	r2, r3, #22
 8012d56:	d402      	bmi.n	8012d5e <_vfiprintf_r+0x862>
 8012d58:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8012d5a:	f7fb fd0c 	bl	800e776 <__retarget_lock_release_recursive>
 8012d5e:	89bb      	ldrh	r3, [r7, #12]
 8012d60:	065b      	lsls	r3, r3, #25
 8012d62:	f57f abfe 	bpl.w	8012562 <_vfiprintf_r+0x66>
 8012d66:	f7ff bbf9 	b.w	801255c <_vfiprintf_r+0x60>
 8012d6a:	3110      	adds	r1, #16
 8012d6c:	2a07      	cmp	r2, #7
 8012d6e:	e9cd 210d 	strd	r2, r1, [sp, #52]	; 0x34
 8012d72:	605e      	str	r6, [r3, #4]
 8012d74:	dc02      	bgt.n	8012d7c <_vfiprintf_r+0x880>
 8012d76:	3308      	adds	r3, #8
 8012d78:	3c10      	subs	r4, #16
 8012d7a:	e7d1      	b.n	8012d20 <_vfiprintf_r+0x824>
 8012d7c:	aa0c      	add	r2, sp, #48	; 0x30
 8012d7e:	4639      	mov	r1, r7
 8012d80:	4648      	mov	r0, r9
 8012d82:	f7ff fb89 	bl	8012498 <__sprint_r>
 8012d86:	2800      	cmp	r0, #0
 8012d88:	d1e0      	bne.n	8012d4c <_vfiprintf_r+0x850>
 8012d8a:	ab0f      	add	r3, sp, #60	; 0x3c
 8012d8c:	e7f4      	b.n	8012d78 <_vfiprintf_r+0x87c>
 8012d8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012d90:	b913      	cbnz	r3, 8012d98 <_vfiprintf_r+0x89c>
 8012d92:	2300      	movs	r3, #0
 8012d94:	930d      	str	r3, [sp, #52]	; 0x34
 8012d96:	e7d9      	b.n	8012d4c <_vfiprintf_r+0x850>
 8012d98:	aa0c      	add	r2, sp, #48	; 0x30
 8012d9a:	4639      	mov	r1, r7
 8012d9c:	4648      	mov	r0, r9
 8012d9e:	f7ff fb7b 	bl	8012498 <__sprint_r>
 8012da2:	2800      	cmp	r0, #0
 8012da4:	d0f5      	beq.n	8012d92 <_vfiprintf_r+0x896>
 8012da6:	e7d1      	b.n	8012d4c <_vfiprintf_r+0x850>
 8012da8:	ea54 0205 	orrs.w	r2, r4, r5
 8012dac:	f8cd a010 	str.w	sl, [sp, #16]
 8012db0:	f43f ada4 	beq.w	80128fc <_vfiprintf_r+0x400>
 8012db4:	2b01      	cmp	r3, #1
 8012db6:	f43f aed7 	beq.w	8012b68 <_vfiprintf_r+0x66c>
 8012dba:	2b02      	cmp	r3, #2
 8012dbc:	f10d 08e0 	add.w	r8, sp, #224	; 0xe0
 8012dc0:	f43f af23 	beq.w	8012c0a <_vfiprintf_r+0x70e>
 8012dc4:	08e2      	lsrs	r2, r4, #3
 8012dc6:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
 8012dca:	08e8      	lsrs	r0, r5, #3
 8012dcc:	f004 0307 	and.w	r3, r4, #7
 8012dd0:	4605      	mov	r5, r0
 8012dd2:	4614      	mov	r4, r2
 8012dd4:	3330      	adds	r3, #48	; 0x30
 8012dd6:	ea54 0205 	orrs.w	r2, r4, r5
 8012dda:	4641      	mov	r1, r8
 8012ddc:	f808 3d01 	strb.w	r3, [r8, #-1]!
 8012de0:	d1f0      	bne.n	8012dc4 <_vfiprintf_r+0x8c8>
 8012de2:	9a04      	ldr	r2, [sp, #16]
 8012de4:	07d0      	lsls	r0, r2, #31
 8012de6:	d506      	bpl.n	8012df6 <_vfiprintf_r+0x8fa>
 8012de8:	2b30      	cmp	r3, #48	; 0x30
 8012dea:	d004      	beq.n	8012df6 <_vfiprintf_r+0x8fa>
 8012dec:	2330      	movs	r3, #48	; 0x30
 8012dee:	f808 3c01 	strb.w	r3, [r8, #-1]
 8012df2:	f1a1 0802 	sub.w	r8, r1, #2
 8012df6:	ab38      	add	r3, sp, #224	; 0xe0
 8012df8:	eba3 0308 	sub.w	r3, r3, r8
 8012dfc:	9d00      	ldr	r5, [sp, #0]
 8012dfe:	f8dd a010 	ldr.w	sl, [sp, #16]
 8012e02:	9300      	str	r3, [sp, #0]
 8012e04:	e5b5      	b.n	8012972 <_vfiprintf_r+0x476>
 8012e06:	bf00      	nop
 8012e08:	08014562 	.word	0x08014562

08012e0c <__sbprintf>:
 8012e0c:	b570      	push	{r4, r5, r6, lr}
 8012e0e:	460c      	mov	r4, r1
 8012e10:	8989      	ldrh	r1, [r1, #12]
 8012e12:	f5ad 6d8e 	sub.w	sp, sp, #1136	; 0x470
 8012e16:	f021 0102 	bic.w	r1, r1, #2
 8012e1a:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012e1e:	6e61      	ldr	r1, [r4, #100]	; 0x64
 8012e20:	911b      	str	r1, [sp, #108]	; 0x6c
 8012e22:	89e1      	ldrh	r1, [r4, #14]
 8012e24:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012e28:	69e1      	ldr	r1, [r4, #28]
 8012e2a:	9109      	str	r1, [sp, #36]	; 0x24
 8012e2c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8012e2e:	910b      	str	r1, [sp, #44]	; 0x2c
 8012e30:	a91c      	add	r1, sp, #112	; 0x70
 8012e32:	9102      	str	r1, [sp, #8]
 8012e34:	9106      	str	r1, [sp, #24]
 8012e36:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012e3a:	4606      	mov	r6, r0
 8012e3c:	9104      	str	r1, [sp, #16]
 8012e3e:	9107      	str	r1, [sp, #28]
 8012e40:	a818      	add	r0, sp, #96	; 0x60
 8012e42:	2100      	movs	r1, #0
 8012e44:	e9cd 3200 	strd	r3, r2, [sp]
 8012e48:	9108      	str	r1, [sp, #32]
 8012e4a:	f7fb fc91 	bl	800e770 <__retarget_lock_init_recursive>
 8012e4e:	e9dd 3200 	ldrd	r3, r2, [sp]
 8012e52:	a902      	add	r1, sp, #8
 8012e54:	4630      	mov	r0, r6
 8012e56:	f7ff fb51 	bl	80124fc <_vfiprintf_r>
 8012e5a:	1e05      	subs	r5, r0, #0
 8012e5c:	db07      	blt.n	8012e6e <__sbprintf+0x62>
 8012e5e:	a902      	add	r1, sp, #8
 8012e60:	4630      	mov	r0, r6
 8012e62:	f7fe fb2f 	bl	80114c4 <_fflush_r>
 8012e66:	2800      	cmp	r0, #0
 8012e68:	bf18      	it	ne
 8012e6a:	f04f 35ff 	movne.w	r5, #4294967295
 8012e6e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012e72:	9818      	ldr	r0, [sp, #96]	; 0x60
 8012e74:	065b      	lsls	r3, r3, #25
 8012e76:	bf42      	ittt	mi
 8012e78:	89a3      	ldrhmi	r3, [r4, #12]
 8012e7a:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 8012e7e:	81a3      	strhmi	r3, [r4, #12]
 8012e80:	f7fb fc77 	bl	800e772 <__retarget_lock_close_recursive>
 8012e84:	4628      	mov	r0, r5
 8012e86:	f50d 6d8e 	add.w	sp, sp, #1136	; 0x470
 8012e8a:	bd70      	pop	{r4, r5, r6, pc}

08012e8c <__ascii_wctomb>:
 8012e8c:	b149      	cbz	r1, 8012ea2 <__ascii_wctomb+0x16>
 8012e8e:	2aff      	cmp	r2, #255	; 0xff
 8012e90:	bf85      	ittet	hi
 8012e92:	238a      	movhi	r3, #138	; 0x8a
 8012e94:	6003      	strhi	r3, [r0, #0]
 8012e96:	700a      	strbls	r2, [r1, #0]
 8012e98:	f04f 30ff 	movhi.w	r0, #4294967295
 8012e9c:	bf98      	it	ls
 8012e9e:	2001      	movls	r0, #1
 8012ea0:	4770      	bx	lr
 8012ea2:	4608      	mov	r0, r1
 8012ea4:	4770      	bx	lr

08012ea6 <__fputwc>:
 8012ea6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012eaa:	4680      	mov	r8, r0
 8012eac:	460e      	mov	r6, r1
 8012eae:	4615      	mov	r5, r2
 8012eb0:	f7ff fab6 	bl	8012420 <__locale_mb_cur_max>
 8012eb4:	2801      	cmp	r0, #1
 8012eb6:	d11c      	bne.n	8012ef2 <__fputwc+0x4c>
 8012eb8:	1e73      	subs	r3, r6, #1
 8012eba:	2bfe      	cmp	r3, #254	; 0xfe
 8012ebc:	d819      	bhi.n	8012ef2 <__fputwc+0x4c>
 8012ebe:	f88d 6004 	strb.w	r6, [sp, #4]
 8012ec2:	4604      	mov	r4, r0
 8012ec4:	2700      	movs	r7, #0
 8012ec6:	f10d 0904 	add.w	r9, sp, #4
 8012eca:	42a7      	cmp	r7, r4
 8012ecc:	d020      	beq.n	8012f10 <__fputwc+0x6a>
 8012ece:	68ab      	ldr	r3, [r5, #8]
 8012ed0:	f817 1009 	ldrb.w	r1, [r7, r9]
 8012ed4:	3b01      	subs	r3, #1
 8012ed6:	2b00      	cmp	r3, #0
 8012ed8:	60ab      	str	r3, [r5, #8]
 8012eda:	da04      	bge.n	8012ee6 <__fputwc+0x40>
 8012edc:	69aa      	ldr	r2, [r5, #24]
 8012ede:	4293      	cmp	r3, r2
 8012ee0:	db1a      	blt.n	8012f18 <__fputwc+0x72>
 8012ee2:	290a      	cmp	r1, #10
 8012ee4:	d018      	beq.n	8012f18 <__fputwc+0x72>
 8012ee6:	682b      	ldr	r3, [r5, #0]
 8012ee8:	1c5a      	adds	r2, r3, #1
 8012eea:	602a      	str	r2, [r5, #0]
 8012eec:	7019      	strb	r1, [r3, #0]
 8012eee:	3701      	adds	r7, #1
 8012ef0:	e7eb      	b.n	8012eca <__fputwc+0x24>
 8012ef2:	4632      	mov	r2, r6
 8012ef4:	f105 035c 	add.w	r3, r5, #92	; 0x5c
 8012ef8:	a901      	add	r1, sp, #4
 8012efa:	4640      	mov	r0, r8
 8012efc:	f000 f83e 	bl	8012f7c <_wcrtomb_r>
 8012f00:	1c42      	adds	r2, r0, #1
 8012f02:	4604      	mov	r4, r0
 8012f04:	d1de      	bne.n	8012ec4 <__fputwc+0x1e>
 8012f06:	89ab      	ldrh	r3, [r5, #12]
 8012f08:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8012f0c:	81ab      	strh	r3, [r5, #12]
 8012f0e:	4606      	mov	r6, r0
 8012f10:	4630      	mov	r0, r6
 8012f12:	b003      	add	sp, #12
 8012f14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f18:	462a      	mov	r2, r5
 8012f1a:	4640      	mov	r0, r8
 8012f1c:	f7fd fb21 	bl	8010562 <__swbuf_r>
 8012f20:	1c43      	adds	r3, r0, #1
 8012f22:	d1e4      	bne.n	8012eee <__fputwc+0x48>
 8012f24:	4606      	mov	r6, r0
 8012f26:	e7f3      	b.n	8012f10 <__fputwc+0x6a>

08012f28 <_fputwc_r>:
 8012f28:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8012f2a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012f2c:	4614      	mov	r4, r2
 8012f2e:	07da      	lsls	r2, r3, #31
 8012f30:	4605      	mov	r5, r0
 8012f32:	d407      	bmi.n	8012f44 <_fputwc_r+0x1c>
 8012f34:	89a3      	ldrh	r3, [r4, #12]
 8012f36:	059b      	lsls	r3, r3, #22
 8012f38:	d404      	bmi.n	8012f44 <_fputwc_r+0x1c>
 8012f3a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8012f3c:	9101      	str	r1, [sp, #4]
 8012f3e:	f7fb fc19 	bl	800e774 <__retarget_lock_acquire_recursive>
 8012f42:	9901      	ldr	r1, [sp, #4]
 8012f44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8012f48:	0498      	lsls	r0, r3, #18
 8012f4a:	d406      	bmi.n	8012f5a <_fputwc_r+0x32>
 8012f4c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8012f50:	81a3      	strh	r3, [r4, #12]
 8012f52:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8012f54:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8012f58:	6663      	str	r3, [r4, #100]	; 0x64
 8012f5a:	4622      	mov	r2, r4
 8012f5c:	4628      	mov	r0, r5
 8012f5e:	f7ff ffa2 	bl	8012ea6 <__fputwc>
 8012f62:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8012f64:	07da      	lsls	r2, r3, #31
 8012f66:	4605      	mov	r5, r0
 8012f68:	d405      	bmi.n	8012f76 <_fputwc_r+0x4e>
 8012f6a:	89a3      	ldrh	r3, [r4, #12]
 8012f6c:	059b      	lsls	r3, r3, #22
 8012f6e:	d402      	bmi.n	8012f76 <_fputwc_r+0x4e>
 8012f70:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8012f72:	f7fb fc00 	bl	800e776 <__retarget_lock_release_recursive>
 8012f76:	4628      	mov	r0, r5
 8012f78:	b003      	add	sp, #12
 8012f7a:	bd30      	pop	{r4, r5, pc}

08012f7c <_wcrtomb_r>:
 8012f7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f7e:	4c09      	ldr	r4, [pc, #36]	; (8012fa4 <_wcrtomb_r+0x28>)
 8012f80:	b085      	sub	sp, #20
 8012f82:	f8d4 70e0 	ldr.w	r7, [r4, #224]	; 0xe0
 8012f86:	4605      	mov	r5, r0
 8012f88:	461e      	mov	r6, r3
 8012f8a:	b909      	cbnz	r1, 8012f90 <_wcrtomb_r+0x14>
 8012f8c:	460a      	mov	r2, r1
 8012f8e:	a901      	add	r1, sp, #4
 8012f90:	47b8      	blx	r7
 8012f92:	1c43      	adds	r3, r0, #1
 8012f94:	bf01      	itttt	eq
 8012f96:	2300      	moveq	r3, #0
 8012f98:	6033      	streq	r3, [r6, #0]
 8012f9a:	238a      	moveq	r3, #138	; 0x8a
 8012f9c:	602b      	streq	r3, [r5, #0]
 8012f9e:	b005      	add	sp, #20
 8012fa0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012fa2:	bf00      	nop
 8012fa4:	20000854 	.word	0x20000854

08012fa8 <_Unwind_GetDataRelBase>:
 8012fa8:	b508      	push	{r3, lr}
 8012faa:	f7fb f99f 	bl	800e2ec <abort>

08012fae <_Unwind_GetTextRelBase>:
 8012fae:	b508      	push	{r3, lr}
 8012fb0:	f7ff fffa 	bl	8012fa8 <_Unwind_GetDataRelBase>

08012fb4 <_init>:
 8012fb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012fb6:	bf00      	nop
 8012fb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8012fba:	bc08      	pop	{r3}
 8012fbc:	469e      	mov	lr, r3
 8012fbe:	4770      	bx	lr

08012fc0 <_fini>:
 8012fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012fc2:	bf00      	nop
 8012fc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8012fc6:	bc08      	pop	{r3}
 8012fc8:	469e      	mov	lr, r3
 8012fca:	4770      	bx	lr
